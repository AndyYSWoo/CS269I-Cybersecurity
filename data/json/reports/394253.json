{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-11-19T22:55:14.272Z", 
    "voters": [
        "bl4de", 
        "kapytein", 
        "s_p_q_r", 
        "eveeez", 
        "an0nym0us", 
        "mygf", 
        "cyberunit", 
        "mobius07", 
        "apapedulimu", 
        "japz", 
        "and 10 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 394253, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-11-19T21:40:43.549Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Validation bypass for queries generated for PostgreSQL", 
    "is_member_of_team?": null, 
    "vote_count": 20, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "https://github.com/rails/rails", 
        "max_severity": "critical", 
        "databaseId": 160, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-12-19T21:40:43.614Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-08-14T05:21:27.425Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-14T05:21:27.425Z", 
            "actor": {
                "username": "matthewd", 
                "url": "/matthewd", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/011/558/d862d7949c3dc3b3706c36aa54878aed925f2006_medium.jpg?1409960100"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "Hi, and thanks for the report!\n\nI think this is actually an issue in the underlying `pg` library we use to escape those strings, so I've invited Lars, its main developer, to collaborate on this report.\n\nLars, it seems that some libpq calls, like https://github.com/ged/ruby-pg/blob/884eb9c848ba8990b6ccf1d9fbe57f6a69ae0cc2/ext/pg_connection.c#L1599-L1600 and similar, need to use StringValueCStr (or explicitly check for nulls) before passing the value along, _even though_ they're also passing a length: https://www.postgresql.org/docs/current/static/libpq-exec.html#LIBPQ-PQESCAPESTRINGCONN clarifies that the length is treated as a `strncpy`-style maximum only, and null bytes will still cause silent truncation.", 
            "markdown_message": "<p>Hi, and thanks for the report!</p>\n\n<p>I think this is actually an issue in the underlying <code>pg</code> library we use to escape those strings, so I&#39;ve invited Lars, its main developer, to collaborate on this report.</p>\n\n<p>Lars, it seems that some libpq calls, like <a title=\"https://github.com/ged/ruby-pg/blob/884eb9c848ba8990b6ccf1d9fbe57f6a69ae0cc2/ext/pg_connection.c#L1599-L1600\" href=\"/redirect?signature=a1c52818cae60c45049326506ffb0020a7a153a0&amp;url=https%3A%2F%2Fgithub.com%2Fged%2Fruby-pg%2Fblob%2F884eb9c848ba8990b6ccf1d9fbe57f6a69ae0cc2%2Fext%2Fpg_connection.c%23L1599-L1600\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/ged/ruby-pg/blob/884eb9c848ba8990b6ccf1d9fbe57f6a69ae0cc2/ext/pg_connection.c#L1599-L1600</span><i class=\"icon-external-link\"></i></a> and similar, need to use StringValueCStr (or explicitly check for nulls) before passing the value along, <u>even though</u> they&#39;re also passing a length: <a title=\"https://www.postgresql.org/docs/current/static/libpq-exec.html#LIBPQ-PQESCAPESTRINGCONN\" href=\"/redirect?signature=7e3a1c62eb8c0b5f22a820d364096a0e36c3065a&amp;url=https%3A%2F%2Fwww.postgresql.org%2Fdocs%2Fcurrent%2Fstatic%2Flibpq-exec.html%23LIBPQ-PQESCAPESTRINGCONN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.postgresql.org/docs/current/static/libpq-exec.html#LIBPQ-PQESCAPESTRINGCONN</span><i class=\"icon-external-link\"></i></a> clarifies that the length is treated as a <code>strncpy</code>-style maximum only, and null bytes will still cause silent truncation.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3190451, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-14T07:26:39.708Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-14T07:26:39.708Z", 
            "actor": {
                "username": "larskanis", 
                "url": "/larskanis", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 3190700, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-14T19:41:22.802Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-14T19:41:22.802Z", 
            "actor": {
                "username": "larskanis", 
                "url": "/larskanis", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "That's true, there are some methods in pg, which truncate strings at the first zero byte. So far I kept this for backward compatibility, but already changed exec_params to use StringValueCStr years ago. Insofar I agree that the remaining methods should follow. I'll fix this in the next days and add it to pg-1.1.0.", 
            "markdown_message": "<p>That&#39;s true, there are some methods in pg, which truncate strings at the first zero byte. So far I kept this for backward compatibility, but already changed exec_params to use StringValueCStr years ago. Insofar I agree that the remaining methods should follow. I&#39;ll fix this in the next days and add it to pg-1.1.0.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3196068, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-17T22:55:55.447Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-17T22:55:55.447Z", 
            "actor": {
                "username": "larskanis", 
                "url": "/larskanis", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "I did the changes in question here: https://github.com/ged/ruby-pg/compare/master...larskanis:reject_zero_bytes\nTests pass [on travis CI](https://travis-ci.org/larskanis/ruby-pg) and  [on Appveyor](https://ci.appveyor.com/project/larskanis/ruby-pg-xa3f5).\n@matthewd Could you please invite ged ( ged@FaerieMUD.org ) as well, so that it's easier to discuss things together?", 
            "markdown_message": "<p>I did the changes in question here: <a title=\"https://github.com/ged/ruby-pg/compare/master...larskanis:reject_zero_bytes\" href=\"/redirect?signature=f3e4e5f99ad7f0c3eb7818041d92da6e7411796d&amp;url=https%3A%2F%2Fgithub.com%2Fged%2Fruby-pg%2Fcompare%2Fmaster...larskanis%3Areject_zero_bytes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/ged/ruby-pg/compare/master...larskanis:reject_zero_bytes</span><i class=\"icon-external-link\"></i></a><br>\nTests pass <a href=\"/redirect?signature=ffde6ea4182fc9eb677241001008fdd0852dd226&amp;url=https%3A%2F%2Ftravis-ci.org%2Flarskanis%2Fruby-pg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>on travis CI</span><i class=\"icon-external-link\"></i></a> and  <a href=\"/redirect?signature=2845dd2d2ef7b22a7ee2db4c4f65e9aac7e17c99&amp;url=https%3A%2F%2Fci.appveyor.com%2Fproject%2Flarskanis%2Fruby-pg-xa3f5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>on Appveyor</span><i class=\"icon-external-link\"></i></a>.<br>\n<a href=\"/matthewd\">@matthewd</a> Could you please invite ged ( <a title=\"ged@FaerieMUD.org\" href=\"mailto:ged@FaerieMUD.org\" rel=\"nofollow noopener noreferrer\">ged@FaerieMUD.org</a> ) as well, so that it&#39;s easier to discuss things together?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3212513, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-18T19:54:38.892Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-18T19:54:38.892Z", 
            "actor": {
                "username": "ged", 
                "url": "/ged", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/332/121/04d3906c5be5eec53cab6c4f6b5abfe9fd0ebc22_medium.jpg?1534561405"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 3214524, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-27T14:50:11.946Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-27T14:50:11.946Z", 
            "actor": {
                "username": "larskanis", 
                "url": "/larskanis", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "pg-1.1.0 is out and it fixes this vulnerability. Zero bytes in quoted strings, command string or params consistently raise a `ArgumentError (string contains null byte)` now.", 
            "markdown_message": "<p>pg-1.1.0 is out and it fixes this vulnerability. Zero bytes in quoted strings, command string or params consistently raise a <code>ArgumentError (string contains null byte)</code> now.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3253047, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-01T13:44:35.987Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-01T13:44:35.987Z", 
            "actor": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/811/1a5943ddb871d159207f0ffd6f90e60b39052622_medium.gif?1483198486"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "I confirmed that an error occurred in version 1.1.2.\n\n```ruby\n$ bundle exec rails console\nLoading development environment (Rails 5.2.1)\nirb(main):001:0> ActiveRecord::Base.sanitize_sql_array(['SELECT * from articles WHERE title = ?', \"abc\\0suffix\"])\nTraceback (most recent call last):\n        1: from (irb):1\nArgumentError (string contains null byte)\n```\n\nWill this report be disclosed?", 
            "markdown_message": "<p>I confirmed that an error occurred in version 1.1.2.</p>\n<pre class=\"highlight ruby\"><code><span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">sanitize_sql_array</span><span class=\"p\">([</span><span class=\"s1\">&#39;SELECT * from articles WHERE title = ?&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;abc</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">])</span>\n<span class=\"no\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n        <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"n\">from</span> <span class=\"p\">(</span><span class=\"n\">irb</span><span class=\"p\">):</span><span class=\"mi\">1</span>\n<span class=\"no\">ArgumentError</span> <span class=\"p\">(</span><span class=\"n\">string</span> <span class=\"n\">contains</span> <span class=\"n\">null</span> <span class=\"n\">byte</span><span class=\"p\">)</span>\n</code></pre>\n<p>Will this report be disclosed?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3279179, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-03T17:49:15.827Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-03T17:49:15.827Z", 
            "actor": {
                "username": "ged", 
                "url": "/ged", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/332/121/04d3906c5be5eec53cab6c4f6b5abfe9fd0ebc22_medium.jpg?1534561405"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "I don't feel like I can make that call while it's under Ruby on Rails. I think we should disclose it for `pg`, however.", 
            "markdown_message": "<p>I don&#39;t feel like I can make that call while it&#39;s under Ruby on Rails. I think we should disclose it for <code>pg</code>, however.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3286291, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-27T18:07:13.169Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-27T18:07:13.169Z", 
            "actor": {
                "username": "rafaelfranca", 
                "url": "/rafaelfranca", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/004/981/281bfa78e7ec84f83ee4efe2cf53f744cf07b8c0_medium.jpg?1397516124"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "Yes. We should proceed and disclose it under pg. If you need we can request the CVE assignment here but I think it would be better if the pg team write the advisory.", 
            "markdown_message": "<p>Yes. We should proceed and disclose it under pg. If you need we can request the CVE assignment here but I think it would be better if the pg team write the advisory.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3398192, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-03T22:49:30.548Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-03T22:49:30.548Z", 
            "actor": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/811/1a5943ddb871d159207f0ffd6f90e60b39052622_medium.gif?1483198486"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "OK. I will wait for information to be released.", 
            "markdown_message": "<p>OK. I will wait for information to be released.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3431623, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q"
            }, 
            "created_at": "2018-11-19T21:38:02.188Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-19T21:38:02.188Z", 
            "actor": {
                "username": "rafaelfranca", 
                "url": "/rafaelfranca", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/004/981/281bfa78e7ec84f83ee4efe2cf53f744cf07b8c0_medium.jpg?1397516124"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "I'm closing this report since the issue is already fixed. I'm also going to ask the disclosure of the report to public so we can disclosure the information.", 
            "markdown_message": "<p>I&#39;m closing this report since the issue is already fixed. I&#39;m also going to ask the disclosure of the report to public so we can disclosure the information.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 3681506, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2018-11-19T21:40:35.644Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-19T21:40:35.644Z", 
            "actor": {
                "url": "/rails", 
                "profile": {
                    "name": "Ruby on Rails"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/022/1b2dab688cae8b769493f39137f09274a6b5f156_medium.png?1383736680"
                }
            }, 
            "team_handle": "rails", 
            "bonus_amount": "0.0", 
            "bounty_amount": "1500.0", 
            "collaborator": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 3681518, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-19T21:40:43.569Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-19T21:40:43.569Z", 
            "actor": {
                "username": "rafaelfranca", 
                "url": "/rafaelfranca", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/004/981/281bfa78e7ec84f83ee4efe2cf53f744cf07b8c0_medium.jpg?1397516124"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3681519, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-19T22:55:14.297Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-19T22:55:14.297Z", 
            "actor": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/811/1a5943ddb871d159207f0ffd6f90e60b39052622_medium.gif?1483198486"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3681807, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-19T22:55:14.342Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-19T22:55:14.342Z", 
            "actor": {
                "username": "ooooooo_q", 
                "url": "/ooooooo_q", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/811/1a5943ddb871d159207f0ffd6f90e60b39052622_medium.gif?1483198486"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rails", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3681808, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": false, 
    "reporter": {
        "username": "ooooooo_q", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ooooooo_q", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/012/811/4750549d5cb18969e653be70580d0b54a3f51795_small.gif?1483198486"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": 1121191.642669467, 
    "disclosed_at": "2018-11-19T22:55:14.323Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/394253", 
    "created_at": "2018-08-13T14:44:39.511Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>When using DB for PostgreSQL, I discovered that if a parameter of a query contains null character, there is a pattern in which subsequent strings are lost.</p>\n\n<h3 id=\"how-to-reproduce\">how to reproduce</h3>\n\n<h4 id=\"prepare-the-environment\">Prepare the environment</h4>\n<pre class=\"highlight plaintext\"><code>$ rails new postgresql_rails -TB --database=postgresql\n$ cd postgresql_rails\n\n$ bundle exec ruby -v\n&gt; ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin16]\n$ bundle exec rails --version\n&gt; Rails 5.2.1\n\n$ bundle install\n</code></pre>\n<p>Prepare models and schemas.</p>\n<pre class=\"highlight plaintext\"><code>$ bundle exec rails generate model Article title:string text:text\n$ bundle exec rails db:create\n$ bundle exec rails db:migrate\n</code></pre>\n<p>Save test data.</p>\n<pre class=\"highlight ruby\"><code><span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"ss\">title: </span><span class=\"s1\">&#39;test title&#39;</span><span class=\"p\">,</span> <span class=\"ss\">text: </span><span class=\"s1\">&#39;dummy&#39;</span><span class=\"p\">)</span>\n   <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"k\">BEGIN</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Create</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">INSERT</span> <span class=\"no\">INTO</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"p\">(</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;created_at&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;updated_at&quot;</span><span class=\"p\">)</span> <span class=\"no\">VALUES</span> <span class=\"p\">(</span><span class=\"vg\">$1</span><span class=\"p\">,</span> <span class=\"vg\">$2</span><span class=\"p\">,</span> <span class=\"vg\">$3</span><span class=\"p\">,</span> <span class=\"vg\">$4</span><span class=\"p\">)</span> <span class=\"no\">RETURNING</span> <span class=\"s2\">&quot;id&quot;</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dummy&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;created_at&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2018-08-13 13:31:37.689587&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;updated_at&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2018-08-13 13:31:37.689587&quot;</span><span class=\"p\">]]</span>\n   <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">COMMIT</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;</span>\n</code></pre>\n<h4 id=\"confirm-query\">Confirm query</h4>\n<pre class=\"highlight ruby\"><code> <span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Case A</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"ss\">title: </span><span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"s2\">&quot;articles&quot;</span><span class=\"o\">.</span><span class=\"s2\">&quot;title&quot;</span> <span class=\"o\">=</span> <span class=\"vg\">$1</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$2</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveRecord::Relation [#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;]&gt;</span>\n\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">002</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"ss\">title: </span><span class=\"s2\">&quot;test title</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"s2\">&quot;articles&quot;</span><span class=\"o\">.</span><span class=\"s2\">&quot;title&quot;</span> <span class=\"o\">=</span> <span class=\"vg\">$1</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$2</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title</span><span class=\"se\">\\u</span><span class=\"s2\">0000suffix&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"no\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"no\">ArgumentError</span> <span class=\"p\">(</span><span class=\"n\">string</span> <span class=\"n\">contains</span> <span class=\"n\">null</span> <span class=\"n\">byte</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Case B</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">003</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">find_by_title</span><span class=\"p\">(</span><span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"s2\">&quot;articles&quot;</span><span class=\"o\">.</span><span class=\"s2\">&quot;title&quot;</span> <span class=\"o\">=</span> <span class=\"vg\">$1</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$2</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;</span>\n\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">004</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">find_by_title</span><span class=\"p\">(</span><span class=\"s2\">&quot;test title</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"s2\">&quot;articles&quot;</span><span class=\"o\">.</span><span class=\"s2\">&quot;title&quot;</span> <span class=\"o\">=</span> <span class=\"vg\">$1</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$2</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title</span><span class=\"se\">\\u</span><span class=\"s2\">0000suffix&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n<span class=\"no\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n        <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"n\">from</span> <span class=\"p\">(</span><span class=\"n\">irb</span><span class=\"p\">):</span><span class=\"mi\">4</span>\n<span class=\"no\">ArgumentError</span> <span class=\"p\">(</span><span class=\"n\">string</span> <span class=\"n\">contains</span> <span class=\"n\">null</span> <span class=\"n\">byte</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Case C</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">005</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"s2\">&quot;title = ?&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test title&#39;</span><span class=\"p\">)</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$1</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveRecord::Relation [#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;]&gt;</span>\n\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">006</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"s2\">&quot;title = ?&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test title</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">)</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test title&#39;</span><span class=\"p\">)</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$1</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveRecord::Relation [#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;]&gt;</span>\n\n\n<span class=\"c1\"># Case D</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">007</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"s2\">&quot;title = :title&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"ss\">title: </span><span class=\"s2\">&quot;test title&quot;</span><span class=\"p\">})</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test title&#39;</span><span class=\"p\">)</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$1</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveRecord::Relation [#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;]&gt;</span>\n\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">00</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"s2\">&quot;title = :title&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"ss\">title: </span><span class=\"s2\">&quot;test title</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">})</span>\n  <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test title&#39;</span><span class=\"p\">)</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$1</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n<span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveRecord::Relation [#&lt;Article id: 1, title: &quot;test title&quot;, text: &quot;dummy&quot;, created_at: &quot;2018-08-13 13:31:37&quot;, updated_at: &quot;2018-08-13 13:31:37&quot;&gt;]&gt;</span>\n</code></pre>\n<p>In Case A and Case B, an error has occurred when null characters are included.<br>\nOn the other hand, in Case C and Case D, SQL is generated in such a way that the character string after the null character (<code>\\0suffix</code>) is ignored.</p>\n\n<h3 id=\"sanitize_sql_array\">sanitize_sql_array</h3>\n\n<p>For comparison, list the results of <code>sanitize_sql_array</code> for each DB.</p>\n\n<h4 id=\"postgresql\">PostgreSQL</h4>\n<pre class=\"highlight ruby\"><code><span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"ss\">:sanitize_sql_array</span><span class=\"p\">,[</span><span class=\"s1\">&#39;SELECT * from articles WHERE title = ?&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;abc</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">])</span>\n<span class=\"o\">=&gt;</span> <span class=\"s2\">&quot;SELECT * from articles WHERE title = &#39;abc&#39;&quot;</span>\n</code></pre>\n<h4 id=\"mysql\">MySQL</h4>\n<pre class=\"highlight ruby\"><code><span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"ss\">:sanitize_sql_array</span><span class=\"p\">,[</span><span class=\"s1\">&#39;SELECT * from articles WHERE title = ?&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;abc</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">])</span>\n   <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">.</span><span class=\"mi\">9</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SET</span> <span class=\"no\">NAMES</span> <span class=\"n\">utf8</span><span class=\"p\">,</span>  <span class=\"vc\">@@SESSION</span><span class=\"p\">.</span><span class=\"nf\">sql_mode</span> <span class=\"o\">=</span> <span class=\"no\">CONCAT</span><span class=\"p\">(</span><span class=\"no\">CONCAT</span><span class=\"p\">(</span><span class=\"vc\">@@sql_mode</span><span class=\"p\">,</span> <span class=\"s1\">&#39;,STRICT_ALL_TABLES&#39;</span><span class=\"p\">),</span> <span class=\"s1\">&#39;,NO_AUTO_VALUE_ON_ZERO&#39;</span><span class=\"p\">),</span>  <span class=\"vc\">@@SESSION</span><span class=\"p\">.</span><span class=\"nf\">sql_auto_is_null</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"vc\">@@SESSION</span><span class=\"p\">.</span><span class=\"nf\">wait_timeout</span> <span class=\"o\">=</span> <span class=\"mi\">2147483</span>\n<span class=\"o\">=&gt;</span> <span class=\"s2\">&quot;SELECT * from articles WHERE title = &#39;abc</span><span class=\"se\">\\\\</span><span class=\"s2\">0suffix&#39;&quot;</span>\n</code></pre>\n<h4 id=\"sqlite3\">SQLite3</h4>\n<pre class=\"highlight ruby\"><code><span class=\"err\">$</span> <span class=\"n\">bundle</span> <span class=\"nb\">exec</span> <span class=\"n\">rails</span> <span class=\"n\">console</span>\n<span class=\"no\">Running</span> <span class=\"n\">via</span> <span class=\"no\">Spring</span> <span class=\"n\">preloader</span> <span class=\"k\">in</span> <span class=\"n\">process</span> <span class=\"mi\">55281</span>\n<span class=\"no\">Loading</span> <span class=\"n\">development</span> <span class=\"n\">environment</span> <span class=\"p\">(</span><span class=\"no\">Rails</span> <span class=\"mi\">5</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"ss\">:sanitize_sql_array</span><span class=\"p\">,[</span><span class=\"s1\">&#39;SELECT * from articles WHERE title = ?&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;abc</span><span class=\"se\">\\0</span><span class=\"s2\">suffix&quot;</span><span class=\"p\">])</span>\n<span class=\"o\">=&gt;</span> <span class=\"s2\">&quot;SELECT * from articles WHERE title = &#39;abc</span><span class=\"se\">\\u</span><span class=\"s2\">0000suffix&#39;&quot;</span>\n</code></pre>\n<h2 id=\"impact\">Impact</h2>\n\n<p>In this problem, SQL injection can not be done, but bypass is possible when ruby side is performing blacklist and suffix validation (extension checking etc.).</p>\n\n<h4 id=\"sample-code\">sample code</h4>\n<pre class=\"highlight ruby\"><code><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;test</span><span class=\"se\">\\0</span><span class=\"s2\">dummy&quot;</span>\n<span class=\"n\">title</span> <span class=\"o\">!=</span> <span class=\"s1\">&#39;test&#39;</span> <span class=\"p\">?</span>  <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"s2\">&quot;title = ?&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"kp\">nil</span>\n<span class=\"o\">&gt;</span> <span class=\"no\">Article</span> <span class=\"no\">Load</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">.</span><span class=\"mi\">9</span><span class=\"n\">ms</span><span class=\"p\">)</span>  <span class=\"no\">SELECT</span>  <span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">.</span><span class=\"nf\">*</span> <span class=\"no\">FROM</span> <span class=\"s2\">&quot;articles&quot;</span> <span class=\"no\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test&#39;</span><span class=\"p\">)</span> <span class=\"no\">LIMIT</span> <span class=\"vg\">$1</span>  <span class=\"p\">[[</span><span class=\"s2\">&quot;LIMIT&quot;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]]</span>\n</code></pre>", 
    "vulnerability_information": "When using DB for PostgreSQL, I discovered that if a parameter of a query contains null character, there is a pattern in which subsequent strings are lost.\n\n\n### how to reproduce\n\n#### Prepare the environment\n\n\n```\n$ rails new postgresql_rails -TB --database=postgresql\n$ cd postgresql_rails\n\n$ bundle exec ruby -v\n> ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin16]\n$ bundle exec rails --version\n> Rails 5.2.1\n\n$ bundle install\n```\n\nPrepare models and schemas.\n\n```\n$ bundle exec rails generate model Article title:string text:text\n$ bundle exec rails db:create\n$ bundle exec rails db:migrate\n```\n\nSave test data.\n\n```ruby\n$ bundle exec rails console\nLoading development environment (Rails 5.2.1)\nirb(main):001:0> Article.create(title: 'test title', text: 'dummy')\n   (0.1ms)  BEGIN\n  Article Create (3.7ms)  INSERT INTO \"articles\" (\"title\", \"text\", \"created_at\", \"updated_at\") VALUES ($1, $2, $3, $4) RETURNING \"id\"  [[\"title\", \"test title\"], [\"text\", \"dummy\"], [\"created_at\", \"2018-08-13 13:31:37.689587\"], [\"updated_at\", \"2018-08-13 13:31:37.689587\"]]\n   (1.3ms)  COMMIT\n=> #<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">\n```\n\n\n\n#### Confirm query\n\n```ruby\n $ bundle exec rails console\nLoading development environment (Rails 5.2.1)\n\n# Case A\nirb(main):001:0> Article.where(title: \"test title\")\n  Article Load (0.3ms)  SELECT  \"articles\".* FROM \"articles\" WHERE \"articles\".\"title\" = $1 LIMIT $2  [[\"title\", \"test title\"], [\"LIMIT\", 11]]\n=> #<ActiveRecord::Relation [#<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">]>\n\nirb(main):002:0> Article.where(title: \"test title\\0suffix\")\n  Article Load (0.3ms)  SELECT  \"articles\".* FROM \"articles\" WHERE \"articles\".\"title\" = $1 LIMIT $2  [[\"title\", \"test title\\u0000suffix\"], [\"LIMIT\", 11]]\nTraceback (most recent call last):\nArgumentError (string contains null byte)\n\n\n# Case B\nirb(main):003:0> Article.find_by_title(\"test title\")\n  Article Load (0.4ms)  SELECT  \"articles\".* FROM \"articles\" WHERE \"articles\".\"title\" = $1 LIMIT $2  [[\"title\", \"test title\"], [\"LIMIT\", 1]]\n=> #<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">\n\nirb(main):004:0> Article.find_by_title(\"test title\\0suffix\")\n  Article Load (0.5ms)  SELECT  \"articles\".* FROM \"articles\" WHERE \"articles\".\"title\" = $1 LIMIT $2  [[\"title\", \"test title\\u0000suffix\"], [\"LIMIT\", 1]]\nTraceback (most recent call last):\n        1: from (irb):4\nArgumentError (string contains null byte)\n\n\n# Case C\nirb(main):005:0> Article.where(\"title = ?\", \"test title\")\n  Article Load (0.4ms)  SELECT  \"articles\".* FROM \"articles\" WHERE (title = 'test title') LIMIT $1  [[\"LIMIT\", 11]]\n=> #<ActiveRecord::Relation [#<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">]>\n\nirb(main):006:0> Article.where(\"title = ?\", \"test title\\0suffix\")\n  Article Load (0.4ms)  SELECT  \"articles\".* FROM \"articles\" WHERE (title = 'test title') LIMIT $1  [[\"LIMIT\", 11]]\n=> #<ActiveRecord::Relation [#<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">]>\n\n\n# Case D\nirb(main):007:0> Article.where(\"title = :title\", {title: \"test title\"})\n  Article Load (0.4ms)  SELECT  \"articles\".* FROM \"articles\" WHERE (title = 'test title') LIMIT $1  [[\"LIMIT\", 11]]\n=> #<ActiveRecord::Relation [#<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">]>\n\nirb(main):008:0> Article.where(\"title = :title\", {title: \"test title\\0suffix\"})\n  Article Load (0.4ms)  SELECT  \"articles\".* FROM \"articles\" WHERE (title = 'test title') LIMIT $1  [[\"LIMIT\", 11]]\n=> #<ActiveRecord::Relation [#<Article id: 1, title: \"test title\", text: \"dummy\", created_at: \"2018-08-13 13:31:37\", updated_at: \"2018-08-13 13:31:37\">]>\n```\n\nIn Case A and Case B, an error has occurred when null characters are included.\nOn the other hand, in Case C and Case D, SQL is generated in such a way that the character string after the null character (`\\0suffix`) is ignored.\n\n### sanitize_sql_array\n\nFor comparison, list the results of `sanitize_sql_array` for each DB.\n\n#### PostgreSQL\n\n```ruby\n$ bundle exec rails console\nLoading development environment (Rails 5.2.1)\nirb(main):001:0> ActiveRecord::Base.send(:sanitize_sql_array,['SELECT * from articles WHERE title = ?', \"abc\\0suffix\"])\n=> \"SELECT * from articles WHERE title = 'abc'\"\n```\n\n#### MySQL\n\n```ruby\n$ bundle exec rails console\nLoading development environment (Rails 5.2.1)\nirb(main):001:0> ActiveRecord::Base.send(:sanitize_sql_array,['SELECT * from articles WHERE title = ?', \"abc\\0suffix\"])\n   (0.9ms)  SET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483\n=> \"SELECT * from articles WHERE title = 'abc\\\\0suffix'\"\n```\n\n#### SQLite3\n\n```ruby\n$ bundle exec rails console\nRunning via Spring preloader in process 55281\nLoading development environment (Rails 5.2.1)\nirb(main):001:0> ActiveRecord::Base.send(:sanitize_sql_array,['SELECT * from articles WHERE title = ?', \"abc\\0suffix\"])\n=> \"SELECT * from articles WHERE title = 'abc\\u0000suffix'\"\n```\n\n## Impact\n\nIn this problem, SQL injection can not be done, but bypass is possible when ruby side is performing blacklist and suffix validation (extension checking etc.).\n\n#### sample code\n\n```ruby\ntitle = \"test\\0dummy\"\ntitle != 'test' ?  Article.where(\"title = ?\", title) : nil\n> Article Load (1.9ms)  SELECT  \"articles\".* FROM \"articles\" WHERE (title = 'test') LIMIT $1  [[\"LIMIT\", 11]]\n```", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://rubyonrails.org/security", 
            "about": "Web development that doesn't hurt.", 
            "twitter_handle": null, 
            "name": "Ruby on Rails"
        }, 
        "handle": "rails", 
        "url": "https://hackerone.com/rails", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/022/2883e997d5f9ddf2f1c31365d74abe52fc54c9c9_small.png?1383736680", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/022/1b2dab688cae8b769493f39137f09274a6b5f156_medium.png?1383736680"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 22, 
        "default_currency": "usd"
    }, 
    "is_published": false
}