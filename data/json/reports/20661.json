{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2014-07-22T23:24:49.859Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 20661, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "oauth redirect uri validation bug leads to open redirect and account compromise", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-08-21T23:24:50.259Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-07-18T21:52:15.962Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-18T21:52:15.962Z", 
            "actor": {
                "username": "naissa", 
                "url": "/naissa", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "Hi,\n\nThanks for the report. At the moment, this is intentional behavior as we did not want to break any existing integrations when we fixed a more problematic open redirect issue. We intend to add additional controls in the future so that stricter checking can be performed, but need to do so gradually so that we can give sufficient time to make the necessary changes to those that integrated our API.\n\nBest,\nWeina", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Thanks for the report. At the moment, this is intentional behavior as we did not want to break any existing integrations when we fixed a more problematic open redirect issue. We intend to add additional controls in the future so that stricter checking can be performed, but need to do so gradually so that we can give sufficient time to make the necessary changes to those that integrated our API.</p>\n\n<p>Best,<br>\nWeina</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 91702, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-22T23:24:49.875Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T23:24:49.875Z", 
            "actor": {
                "username": "mrrm", 
                "url": "/mrrm", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/007/145/108f6dc37d32ebd72050137a1ff3f646e9411740_medium.png?1405681602"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 94039, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-08-21T23:25:02.800Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-08-21T23:25:02.800Z", 
            "actor": {
                "url": "/wepay", 
                "profile": {
                    "name": "WePay"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/110/f24dd424036c7229191ef9f6dc63e2e3773e1288_medium.png?1512426859"
                }
            }, 
            "team_handle": "wepay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 113602, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "mrrm", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/mrrm", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/007/145/e46598d12ab7b16dfd1efcea13e67079d2ddce95_small.png?1405681602"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 53, 
        "name": "Open Redirect"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -135473933.32592404, 
    "disclosed_at": "2014-08-21T23:25:02.264Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/20661", 
    "created_at": "2014-07-18T21:46:18.561Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>according to:<br>\n<a title=\"https://stage.wepay.com/developer/reference/oauth2\" href=\"/redirect?signature=53f8423e8805edfd79bef46da65b8892a6e01f3c&amp;url=https%3A%2F%2Fstage.wepay.com%2Fdeveloper%2Freference%2Foauth2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://stage.wepay.com/developer/reference/oauth2</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>&quot;redirect_uri - The uri the user will be redirected to after authorization. Must have the same domain as the application.&quot;</p>\n\n<p>your current validation of this domain value is not sufficient.</p>\n\n<p>i setup my app with a website url of <a title=\"http://test1.appspot.com/\" href=\"/redirect?signature=a09a721d27ba4e7033400eed4aa9d4a01d71a7bf&amp;url=http%3A%2F%2Ftest1.appspot.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://test1.appspot.com/</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>then i requested the url:<br>\n<a title=\"https://stage.wepay.com/v2/oauth2/authorize?client_id=101168&amp;redirect_uri=http://nfchunt.appspot.com/&amp;scope=manage_accounts,collect_payments,view_user,send_money,preapprove_payments,manage_subscriptions\" href=\"/redirect?signature=13575658c4ba8562a606bd2569675ee42af2196a&amp;url=https%3A%2F%2Fstage.wepay.com%2Fv2%2Foauth2%2Fauthorize%3Fclient_id%3D101168%26redirect_uri%3Dhttp%3A%2F%2Fnfchunt.appspot.com%2F%26scope%3Dmanage_accounts%2Ccollect_payments%2Cview_user%2Csend_money%2Cpreapprove_payments%2Cmanage_subscriptions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://stage.wepay.com/v2/oauth2/authorize?client_id=101168&amp;redirect_uri=http://nfchunt.appspot.com/&amp;scope=manage_accounts,collect_payments,view_user,send_money,preapprove_payments,manage_subscriptions</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>when i submitted the authorization, the authorization code was sent to an entirely separate application.<br>\nthe response location header was:<br>\n<a title=\"http://nfchunt.appspot.com/?code=1163ec6819f56b4c7ba9d3644b143db1ddf4dc2caf866e2163\" href=\"/redirect?signature=901feffa92524e58ed53fc378fca22fc941114ed&amp;url=http%3A%2F%2Fnfchunt.appspot.com%2F%3Fcode%3D1163ec6819f56b4c7ba9d3644b143db1ddf4dc2caf866e2163\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://nfchunt.appspot.com/?code=1163ec6819f56b4c7ba9d3644b143db1ddf4dc2caf866e2163</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>this means that wepay.com is not currently safe to be used by any google app engine appplication using the appspot.com domain.<br>\nthis likely affects other shared platform as a service hosting services.</p>\n\n<p>the severity of this issue is high. it means that an attacker can craft an authorization url for another application. when the user grants that authorization, wepay gives the user&#39;s authorization code to the attacking application. the attacking application can then trade the code for an access token and act on the user&#39;s protected resources at wepay. game over.</p>\n", 
    "vulnerability_information": "according to:\r\nhttps://stage.wepay.com/developer/reference/oauth2\r\n\r\n\"redirect_uri - The uri the user will be redirected to after authorization. Must have the same domain as the application.\"\r\n\r\nyour current validation of this domain value is not sufficient.\r\n\r\ni setup my app with a website url of http://test1.appspot.com/\r\n\r\nthen i requested the url:\r\nhttps://stage.wepay.com/v2/oauth2/authorize?client_id=101168&redirect_uri=http://nfchunt.appspot.com/&scope=manage_accounts,collect_payments,view_user,send_money,preapprove_payments,manage_subscriptions\r\n\r\nwhen i submitted the authorization, the authorization code was sent to an entirely separate application.\r\nthe response location header was:\r\nhttp://nfchunt.appspot.com/?code=1163ec6819f56b4c7ba9d3644b143db1ddf4dc2caf866e2163\r\n\r\nthis means that wepay.com is not currently safe to be used by any google app engine appplication using the appspot.com domain.\r\nthis likely affects other shared platform as a service hosting services.\r\n\r\nthe severity of this issue is high. it means that an attacker can craft an authorization url for another application. when the user grants that authorization, wepay gives the user's authorization code to the attacking application. the attacking application can then trade the code for an access token and act on the user's protected resources at wepay. game over.\r\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.wepay.com", 
            "about": "Payments partner to the platform economy", 
            "twitter_handle": "wepay", 
            "name": "WePay"
        }, 
        "handle": "wepay", 
        "url": "https://hackerone.com/wepay", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/110/7ab9a8f312b783a74b9c9f2e23469c327848210e_small.png?1512426859", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/110/f24dd424036c7229191ef9f6dc63e2e3773e1288_medium.png?1512426859"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 110, 
        "default_currency": "usd"
    }, 
    "is_published": false
}