{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2014-07-10T19:38:49.361Z", 
    "voters": [
        "ronygigi", 
        "spetr0x", 
        "dyabla", 
        "osama-amin"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 19640, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-07-17T22:35:24.576Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Session Hijacking attack (Different Scenario)", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-08-09T19:38:49.570Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-07-10T06:03:57.086Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T06:03:57.086Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Just found out that this can be done even when the X-XHR-Referer values are not same.", 
            "markdown_message": "<p>Just found out that this can be done even when the X-XHR-Referer values are not same.</p>\n", 
            "type": "Activities::Comment", 
            "id": 86945, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T15:24:01.267Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T15:24:01.267Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "This looks a theoretical issue at first glance. Did you find a way to actually intercept an HTTP header? Everything on www.hackerone.com is served over HTTPS. Thanks!", 
            "markdown_message": "<p>This looks a theoretical issue at first glance. Did you find a way to actually intercept an HTTP header? Everything on <a href=\"/redirect?signature=5d6566533d7b4f3feaea01437f23f8e72a3f4836&amp;url=http%3A%2F%2Fwww.hackerone.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.hackerone.com</span><i class=\"icon-external-link\"></i></a> is served over HTTPS. Thanks!</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 87116, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T15:28:04.627Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T15:28:04.627Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "I would have to disagree this is not a theoretical scenario. I know everything is served over HTTPS but an attacker capturing a session cookie during the victim is logged in. It would be of no use if the attacker could replay the cookies if he was also logged in. But he can replay and gain access to the session by replaying the cookie externally from the application. I intercepted my requests using tamper data and replayed the cookies. Were you able to reproduce my steps?", 
            "markdown_message": "<p>I would have to disagree this is not a theoretical scenario. I know everything is served over HTTPS but an attacker capturing a session cookie during the victim is logged in. It would be of no use if the attacker could replay the cookies if he was also logged in. But he can replay and gain access to the session by replaying the cookie externally from the application. I intercepted my requests using tamper data and replayed the cookies. Were you able to reproduce my steps?</p>\n", 
            "type": "Activities::BugNew", 
            "id": 87118, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T17:29:00.523Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T17:29:00.523Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yes, but that's intended behaviour. How would an attacker get the victim's session cookie?", 
            "markdown_message": "<p>Yes, but that&#39;s intended behaviour. How would an attacker get the victim&#39;s session cookie?</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 87166, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T17:39:04.241Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T17:39:04.241Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Well that should not intended behavior. Not making a standard or anything but most of the session hijacking reports that are accepted and disclosed do not emphasize on cookie stealing part. An attacker having network access could get the cookies of the victim but the attacker gaining access to the session because of the cookies replay inspite of not being logged in is the main game here.  Binding sessions to browsers is the best way to prevent this issue. I hope i am clear enough to explain the severity here", 
            "markdown_message": "<p>Well that should not intended behavior. Not making a standard or anything but most of the session hijacking reports that are accepted and disclosed do not emphasize on cookie stealing part. An attacker having network access could get the cookies of the victim but the attacker gaining access to the session because of the cookies replay inspite of not being logged in is the main game here.  Binding sessions to browsers is the best way to prevent this issue. I hope i am clear enough to explain the severity here</p>\n", 
            "type": "Activities::BugNew", 
            "id": 87173, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:12:25.758Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:13:04.260Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "But if you have the power of network access, why would you go after cookies or session tokens? So much more interesting data to go after. Tying the session to a browser doesn't make much sense to protect against this scenario though. The attacker has network access anyway, so he can just spoof an identical browser fingerprint and obtain access to the same session. Almost anything is defeated when an attacker has access to decrypted network traffic. That is why we make it extremely hard to get access to someone's network traffic (in a decrypted form).\n\nWhile I agree that tying sessions to browsers (like Google and Facebook do) increases security somewhat, it is still a best practice to have, but not a security vulnerability if you don't have it. It is a best practice we intentionally decided not to implement at this time. I'm certain that we will add more robust session management further down the road, but it is not something we can focus on right now.\n\nThank you.", 
            "markdown_message": "<p>But if you have the power of network access, why would you go after cookies or session tokens? So much more interesting data to go after. Tying the session to a browser doesn&#39;t make much sense to protect against this scenario though. The attacker has network access anyway, so he can just spoof an identical browser fingerprint and obtain access to the same session. Almost anything is defeated when an attacker has access to decrypted network traffic. That is why we make it extremely hard to get access to someone&#39;s network traffic (in a decrypted form).</p>\n\n<p>While I agree that tying sessions to browsers (like Google and Facebook do) increases security somewhat, it is still a best practice to have, but not a security vulnerability if you don&#39;t have it. It is a best practice we intentionally decided not to implement at this time. I&#39;m certain that we will add more robust session management further down the road, but it is not something we can focus on right now.</p>\n\n<p>Thank you.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 87224, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:21:24.768Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:21:24.768Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Forget the network access. Just tell me you are on HTTPS cookies cannot be stolen because there is no XSS. There were two reports on session hijacking just capture cookies and replay. You fixed those did you not. Despite in the real world scenario there was no way an attacker could have gotten the cookies. But all the reports coming to you now will be best practices because there is little chance of any exploitation.\n https://hackerone.com/reports/737\nSee the report. I am not quoting or anything but there is 0 % chance of it's exploitability. All i am saying that there is potential risk in there. Your best point of focus should be protection of the user's information and data. Reports like these are best practices that ensure better protection. Security is at strong as it's weak link. And this here is a weak link. Rethink this if you may", 
            "markdown_message": "<p>Forget the network access. Just tell me you are on HTTPS cookies cannot be stolen because there is no XSS. There were two reports on session hijacking just capture cookies and replay. You fixed those did you not. Despite in the real world scenario there was no way an attacker could have gotten the cookies. But all the reports coming to you now will be best practices because there is little chance of any exploitation.<br>\n <a title=\"https://hackerone.com/reports/737\" href=\"https://hackerone.com/reports/737\">https://hackerone.com/reports/737</a><br>\nSee the report. I am not quoting or anything but there is 0 % chance of it&#39;s exploitability. All i am saying that there is potential risk in there. Your best point of focus should be protection of the user&#39;s information and data. Reports like these are best practices that ensure better protection. Security is at strong as it&#39;s weak link. And this here is a weak link. Rethink this if you may</p>\n", 
            "type": "Activities::Comment", 
            "id": 87228, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:25:56.696Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:26:38.699Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "We fixed the #737 because it was a replay attack that was replaying a session that should've been ended already. I agree that it's hard to obtain a cookie, but with #737 it would've worked forever. That is not the case with what you are reporting here. If the user sign out or his session expires, you can not lift on the same session anymore (due to the fix we implemented for #737 :). The fact that this was possible with #737 made us fix it right away.\n\n> But all the reports coming to you now will be best practices because there is little chance of any exploitation.\n\nWe're happy to receive those, but many of them we already know about. Tying sessions to browser fingerprints/IP geolocations is not something that hasn't crossed our minds before. There were many researchers before you who reported the same scenario. We still consider it a won't fix and I'm certain we'll be implementing this further down the road, but just not now. It's not an imminent threat, so we won't treat it that way.", 
            "markdown_message": "<p>We fixed the <a href=\"/reports/737\">#737</a> because it was a replay attack that was replaying a session that should&#39;ve been ended already. I agree that it&#39;s hard to obtain a cookie, but with <a href=\"/reports/737\">#737</a> it would&#39;ve worked forever. That is not the case with what you are reporting here. If the user sign out or his session expires, you can not lift on the same session anymore (due to the fix we implemented for <a href=\"/reports/737\">#737</a> :). The fact that this was possible with <a href=\"/reports/737\">#737</a> made us fix it right away.</p>\n\n<blockquote>\n<p>But all the reports coming to you now will be best practices because there is little chance of any exploitation.</p>\n</blockquote>\n\n<p>We&#39;re happy to receive those, but many of them we already know about. Tying sessions to browser fingerprints/IP geolocations is not something that hasn&#39;t crossed our minds before. There were many researchers before you who reported the same scenario. We still consider it a won&#39;t fix and I&#39;m certain we&#39;ll be implementing this further down the road, but just not now. It&#39;s not an imminent threat, so we won&#39;t treat it that way.</p>\n", 
            "type": "Activities::Comment", 
            "id": 87230, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:29:47.397Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:30:07.638Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Also, before referring to other public reports and comparing them, I'd advise you to read carefully what was reported in that other report. Don't make conclusions too fast. For instance in #737, this is the catch that made us patch it asap:\n\n> the user receives a new session cookie, which is not authenticated at this point. However, the authenticated session cookie used by a user before logging out is still active.", 
            "markdown_message": "<p>Also, before referring to other public reports and comparing them, I&#39;d advise you to read carefully what was reported in that other report. Don&#39;t make conclusions too fast. For instance in <a href=\"/reports/737\">#737</a>, this is the catch that made us patch it asap:</p>\n\n<blockquote>\n<p>the user receives a new session cookie, which is not authenticated at this point. However, the authenticated session cookie used by a user before logging out is still active.</p>\n</blockquote>\n", 
            "type": "Activities::Comment", 
            "id": 87231, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:38:04.679Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:38:04.679Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "I told you before saying that i am making anything a standard. Even if the user does logout of the session. The other end of the captured cookies will still remain intact with the session. Meaning that an attacker could take that session for as long as he wants. This is also a replay attack but the only condition is that the user should remain logged in when the replay is made. This is just another form of session hijacking that i thought might be creative to report to you. Although i really thought this would impress you guys. And again i am not making reports as a standard. It's just really weird to see that some reports scanned with automated scanners are accepted and the creative ones are ignored. ", 
            "markdown_message": "<p>I told you before saying that i am making anything a standard. Even if the user does logout of the session. The other end of the captured cookies will still remain intact with the session. Meaning that an attacker could take that session for as long as he wants. This is also a replay attack but the only condition is that the user should remain logged in when the replay is made. This is just another form of session hijacking that i thought might be creative to report to you. Although i really thought this would impress you guys. And again i am not making reports as a standard. It&#39;s just really weird to see that some reports scanned with automated scanners are accepted and the creative ones are ignored. </p>\n", 
            "type": "Activities::Comment", 
            "id": 87235, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:38:49.376Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:38:49.376Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 87237, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:45:17.855Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:46:45.847Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "> I told you before saying that i am making anything a standard.\n\nYou are free to do that :), but we consider this not a serious threat but a best practice that we'll eventually build.\n\n> This is also a replay attack but the only condition is that the user should remain logged in when the replay is made. \n\nYup, and that small caveat (*the user has to remain logged in*) made us prioritize this much lower than #737 and finally led to the decision for won't fix. I hope you can understand this. We have to prioritize between building features that make the product better and fix potential security issues. This highly hypothetical report didn't make the cut for fixing right away.\n", 
            "markdown_message": "<blockquote>\n<p>I told you before saying that i am making anything a standard.</p>\n</blockquote>\n\n<p>You are free to do that :), but we consider this not a serious threat but a best practice that we&#39;ll eventually build.</p>\n\n<blockquote>\n<p>This is also a replay attack but the only condition is that the user should remain logged in when the replay is made. </p>\n</blockquote>\n\n<p>Yup, and that small caveat (<em>the user has to remain logged in</em>) made us prioritize this much lower than <a href=\"/reports/737\">#737</a> and finally led to the decision for won&#39;t fix. I hope you can understand this. We have to prioritize between building features that make the product better and fix potential security issues. This highly hypothetical report didn&#39;t make the cut for fixing right away.</p>\n", 
            "type": "Activities::Comment", 
            "id": 87240, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:48:26.579Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:48:26.579Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Not much low. But you can consider this as low. But Won't fix hurts :)\nHurts bad. That was as creative as i could get in session attacks. I understand because there is no other way i can convince you", 
            "markdown_message": "<p>Not much low. But you can consider this as low. But Won&#39;t fix hurts :)<br>\nHurts bad. That was as creative as i could get in session attacks. I understand because there is no other way i can convince you</p>\n", 
            "type": "Activities::Comment", 
            "id": 87242, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T19:52:46.731Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T19:52:46.731Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Why does won't fix hurt? It's up to us to prioritize what we want to fix right away and what we want to address later. Won't fix does not mean you found something that was incorrect or not a security vulnerability -- I would've closed it as N/A otherwise. You found something valid, but just not high priority enough to fix. \n\nWon't fix also doesn't mean we will never address this. We will in the future. But then again, improved session management (overview of active sessions, tie to browser fingerprints, kill individual sessions) is something that has been on our roadmap for a while and many researchers have reported similar things. In my opinion, this is much more a low hanging fruit report than a highly creative bug :). We get this stuff a lot.", 
            "markdown_message": "<p>Why does won&#39;t fix hurt? It&#39;s up to us to prioritize what we want to fix right away and what we want to address later. Won&#39;t fix does not mean you found something that was incorrect or not a security vulnerability -- I would&#39;ve closed it as N/A otherwise. You found something valid, but just not high priority enough to fix. </p>\n\n<p>Won&#39;t fix also doesn&#39;t mean we will never address this. We will in the future. But then again, improved session management (overview of active sessions, tie to browser fingerprints, kill individual sessions) is something that has been on our roadmap for a while and many researchers have reported similar things. In my opinion, this is much more a low hanging fruit report than a highly creative bug :). We get this stuff a lot.</p>\n", 
            "type": "Activities::Comment", 
            "id": 87248, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-10T20:02:45.943Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-10T20:02:45.943Z", 
            "actor": {
                "username": "shahmeer-amir", 
                "url": "/shahmeer-amir", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/590/41cfaae636edfbebde9059c14aee0dda4de47599_medium.png?1472603992"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "That topic is debatable but i do not want to carry on because i know its gonna take an extra gigabyte on your server to do this. :)\nWhat i meant was that if a report is marked as Won't fix it means that the report is valid and also with sprinkles of invalid on it. Which eventually marks it as invalid so it's like it went in vain. Well nice debating with you.", 
            "markdown_message": "<p>That topic is debatable but i do not want to carry on because i know its gonna take an extra gigabyte on your server to do this. :)<br>\nWhat i meant was that if a report is marked as Won&#39;t fix it means that the report is valid and also with sprinkles of invalid on it. Which eventually marks it as invalid so it&#39;s like it went in vain. Well nice debating with you.</p>\n", 
            "type": "Activities::Comment", 
            "id": 87254, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-17T22:35:24.591Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-17T22:35:24.591Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 90758, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-17T22:35:24.969Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-17T22:35:24.969Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 90759, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "shahmeer-amir", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/shahmeer-amir", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/590/0459c33396bb1c20747ce1f3a32e821acce06853_small.png?1472603992"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -136524341.99392927, 
    "disclosed_at": "2014-07-17T22:35:24.956Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/19640", 
    "created_at": "2014-07-10T06:00:49.279Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hey <br>\nI was able to replay a cookie of a current active session and hijack that by replaying the cookie. Now this is different from any conventional vanilla session hijacking because it works even when the user is not logged in. But the condition is that the victim&#39;s session must be active at the time of replay</p>\n\n<ol>\n<li><p>Capture a cookie from one account using tamper data just note that you learn the Referer and X-XHR-Referer values</p></li>\n<li><p>Open a new windows click on the same link without logging in. For example in the victim account i clicked on &quot;bugs&quot; so here in order to replay the cookie i have to click on bugs again. Replay the X-XHR value with the other one. Replay the session cookie and you are in. You hacked the account.</p></li>\n</ol>\n\n<p>I hope this impresses you because i have been trying hard to get you guys impressed. Although i have managed to do with the other ones :)<br>\nWaiting for your reply</p>\n", 
    "vulnerability_information": "Hey \r\nI was able to replay a cookie of a current active session and hijack that by replaying the cookie. Now this is different from any conventional vanilla session hijacking because it works even when the user is not logged in. But the condition is that the victim's session must be active at the time of replay\r\n1. Capture a cookie from one account using tamper data just note that you learn the Referer and X-XHR-Referer values\r\n\r\n2. Open a new windows click on the same link without logging in. For example in the victim account i clicked on \"bugs\" so here in order to replay the cookie i have to click on bugs again. Replay the X-XHR value with the other one. Replay the session cookie and you are in. You hacked the account.\r\n\r\nI hope this impresses you because i have been trying hard to get you guys impressed. Although i have managed to do with the other ones :)\r\nWaiting for your reply", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}