{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2014-11-07T15:22:36.661Z", 
    "voters": [
        "cuso4"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 25191, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "SMTP protection not used (please read carefully )", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-12-07T15:22:36.852Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-08-28T01:34:31.873Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-08-28T01:34:31.873Z", 
            "actor": {
                "username": "mcclurmc", 
                "url": "/mcclurmc", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "We are aware of the difference between `~all` and `-all`. We do not wish to change our SFP settings at this time.", 
            "markdown_message": "<p>We are aware of the difference between <code>~all</code> and <code>-all</code>. We do not wish to change our SFP settings at this time.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 116535, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-11-07T15:22:36.677Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-07T15:22:36.677Z", 
            "actor": {
                "username": "ashesh", 
                "url": "/ashesh", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/791/3180a667bc170e5197cc0bb36a97c00208341e1b_medium.png?1437239918"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 156786, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-11-07T18:04:38.372Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-07T18:04:38.372Z", 
            "actor": {
                "username": "mcclurmc", 
                "url": "/mcclurmc", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "No, you may not disclose this. This is not a bug, this is simply a setting we've chosen for our SPF records. This isn't at all a security flaw. Look, google has the same thing in their SPF record:\n\n```\ndig +short google.com TXT\n\"v=spf1 include:_spf.google.com ip4:216.73.93.70/31 ip4:216.73.93.72/31 ~all\"\n```", 
            "markdown_message": "<p>No, you may not disclose this. This is not a bug, this is simply a setting we&#39;ve chosen for our SPF records. This isn&#39;t at all a security flaw. Look, google has the same thing in their SPF record:</p>\n<pre class=\"highlight plaintext\"><code>dig +short google.com TXT\n&quot;v=spf1 include:_spf.google.com ip4:216.73.93.70/31 ip4:216.73.93.72/31 ~all&quot;\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 156980, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-12-07T15:22:50.325Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-12-07T15:22:50.325Z", 
            "actor": {
                "url": "/greenhouse", 
                "profile": {
                    "name": "Greenhouse.io"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/312/d8a5615eac371f9e26a4ab3e56b8c32370280a0c_medium.jpg?1412369170"
                }
            }, 
            "team_handle": "greenhouse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 173567, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ashesh", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ashesh", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/003/791/f4288565f5c5e17cb7d8ca1ab66a283c26254829_small.png?1437239918"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -126171606.27123077, 
    "disclosed_at": "2014-12-07T15:22:49.750Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/25191", 
    "created_at": "2014-08-19T01:15:21.614Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Details:<br>\nCompanies like Coinbase, Yahoo,Google,Facebook and even hackerone  implemented a strict email security policy (combining SPF, DKIM, and DMARC) but I don&#39;t see taht from mailgreenhouse.ioru , You should apply strict SMPT policy to stop spoofed email sending from your domain. POC is attached.</p>\n\n<h2 id=\"exploit-scenario\">Exploit scenario:</h2>\n\n<p>An attacker would send a Fake email from <a title=\"support@greenhouse.io\" href=\"mailto:support@greenhouse.io\" rel=\"nofollow noopener noreferrer\">support@greenhouse.io</a> saying that Please change your password, The victim is aware of phishing attacks, But when he sees that the mail originated from <a title=\"support@greenhouse.io\" href=\"mailto:support@greenhouse.io\" rel=\"nofollow noopener noreferrer\">support@greenhouse.io</a> , He has no other way than to believe it. Clicking on the link takes him to a website where certain JavaScript is executed which steals his greenhouse.io id and password (SESSION COOKIE). The results can be more dangerous.</p>\n\n<h2 id=\"code-to-exploit\">Code to Exploit:</h2>\n<pre class=\"highlight plaintext\"><code>&lt;?php\n$to = &quot;VICTIM@example.com&quot;;\n$subject = &quot;Password Change&quot;;\n$txt = &quot;Change your password by visiting here - [VIRUS LINK HERE]l&quot;;\n$headers = &quot;From: support@greenhouse.io&quot;;\nmail($to,$subject,$txt,$headers);\n?&gt;\n</code></pre>\n<p>You should do the fix (see the fix below) To prevent misunderstanding and to protect your users.</p>\n\n<h2 id=\"fix\">FIX</h2>\n\n<p>Your SPF record is <code>dig +short greenhouse.io txt<br>\n&quot;v=spf1 include:sendgrid.net include:spf.recurly.com include:mailgun.org include:servers.mcsv.net ~all</code></p>\n\n<p>It should be <code>dig +short greenhouse.io txt<br>\n&quot;v=spf1 include:sendgrid.net include:spf.recurly.com include:mailgun.org include:servers.mcsv.net   -all</code></p>\n\n<p>I <strong>strongly</strong> recommend you to read this article :</p>\n\n<p><a title=\"https://www.digitalocean.com/community/tutorials/how-to-use-an-spf-record-to-prevent-spoofing-improve-e-mail-reliability\" href=\"/redirect?signature=5df31864fe4bfa1052e34d8afce57dddf900cc3e&amp;url=https%3A%2F%2Fwww.digitalocean.com%2Fcommunity%2Ftutorials%2Fhow-to-use-an-spf-record-to-prevent-spoofing-improve-e-mail-reliability\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digitalocean.com/community/tutorials/how-to-use-an-spf-record-to-prevent-spoofing-improve-e-mail-reliability</span><i class=\"icon-external-link\"></i></a></p>\n\n<p><strong>The problem</strong><br>\nThe article clearly shows difference between softmail and fail you should be using fail as Softmail allows anyone to send spoofed emails from your domains. in your SPF record you should replace <code>~</code> with <code>-</code> at last before all , <code>-</code> is strict which prevents all spoofed emails except if you are sending. Your bug is that you are using<code>~</code> , you should use <code>-</code></p>\n", 
    "vulnerability_information": "Details:\r\nCompanies like Coinbase, Yahoo,Google,Facebook and even hackerone  implemented a strict email security policy (combining SPF, DKIM, and DMARC) but I don't see taht from mailgreenhouse.ioru , You should apply strict SMPT policy to stop spoofed email sending from your domain. POC is attached.\r\n\r\nExploit scenario:\r\n-----------------------\r\nAn attacker would send a Fake email from support@greenhouse.io saying that Please change your password, The victim is aware of phishing attacks, But when he sees that the mail originated from support@greenhouse.io , He has no other way than to believe it. Clicking on the link takes him to a website where certain JavaScript is executed which steals his greenhouse.io id and password (SESSION COOKIE). The results can be more dangerous.\r\n\r\n\r\nCode to Exploit:\r\n-------------------\r\n    <?php\r\n    $to = \"VICTIM@example.com\";\r\n    $subject = \"Password Change\";\r\n    $txt = \"Change your password by visiting here - [VIRUS LINK HERE]l\";\r\n    $headers = \"From: support@greenhouse.io\";\r\n    mail($to,$subject,$txt,$headers);\r\n    ?>\r\n\r\nYou should do the fix (see the fix below) To prevent misunderstanding and to protect your users.\r\nFIX\r\n----------\r\n\r\nYour SPF record is `dig +short greenhouse.io txt\r\n\"v=spf1 include:sendgrid.net include:spf.recurly.com include:mailgun.org include:servers.mcsv.net ~all`\r\n\r\nIt should be `dig +short greenhouse.io txt\r\n\"v=spf1 include:sendgrid.net include:spf.recurly.com include:mailgun.org include:servers.mcsv.net   -all`\r\n\r\nI **strongly** recommend you to read this article :\r\n\r\nhttps://www.digitalocean.com/community/tutorials/how-to-use-an-spf-record-to-prevent-spoofing-improve-e-mail-reliability\r\n\r\n**The problem**\r\nThe article clearly shows difference between softmail and fail you should be using fail as Softmail allows anyone to send spoofed emails from your domains. in your SPF record you should replace `~` with `-` at last before all , `-` is strict which prevents all spoofed emails except if you are sending. Your bug is that you are using`~` , you should use `-`\r\n\r\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://app.greenhouse.io", 
            "about": "Software to optimize your entire recruiting and onboarding process.", 
            "twitter_handle": "", 
            "name": "Greenhouse.io"
        }, 
        "handle": "greenhouse", 
        "url": "https://hackerone.com/greenhouse", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/312/ed3e97e66e1308f7cd4c8ebdab7110ddfeaa1378_small.jpg?1412369170", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/312/d8a5615eac371f9e26a4ab3e56b8c32370280a0c_medium.jpg?1412369170"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 312, 
        "default_currency": "usd"
    }, 
    "is_published": false
}