{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 219499, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-04-08T14:07:56.195Z", 
    "vulnerability_information": "gratipay.com:443 SSLv3 [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol\nversion (_ssl.c:590)\n\n\njust check it :] ", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "User"
    }, 
    "title": "POODLE SSLv3.0", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-04-08T11:56:27.006Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-08T11:56:27.006Z", 
            "actor": {
                "url": "/gratipay", 
                "profile": {
                    "name": "Gratipay"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/868/d74b2c3d5d3975cb38a59a3176d952c3553a72f1_medium.jpg?1458214340"
                }
            }, 
            "team_handle": "gratipay", 
            "message": "Hi,\n\nThank you for your report, the receipt of which we herewith confirm. We are currently verifying the issue you reported.\n\nPlease expect additional feedback from us within the next couple of days. The \"INFORMATION SECURITY\" section of the following page has additional, useful information regarding our platform's security: http://inside.gratipay.com/howto/manage-risk\n\nWe appreciate your interest in securing our platform and look forward to working with you.\n\nYours sincerely,\nThe Gratipay Security Team", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Thank you for your report, the receipt of which we herewith confirm. We are currently verifying the issue you reported.</p>\n\n<p>Please expect additional feedback from us within the next couple of days. The &quot;INFORMATION SECURITY&quot; section of the following page has additional, useful information regarding our platform&#39;s security: <a title=\"http://inside.gratipay.com/howto/manage-risk\" href=\"/redirect?signature=07ac30e85504acda37e3b100c87a61a058907aa9&amp;url=http%3A%2F%2Finside.gratipay.com%2Fhowto%2Fmanage-risk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://inside.gratipay.com/howto/manage-risk</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>We appreciate your interest in securing our platform and look forward to working with you.</p>\n\n<p>Yours sincerely,<br>\nThe Gratipay Security Team</p>\n", 
            "type": "Activities::Comment", 
            "id": 1590773, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-08T14:06:57.591Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-08T14:06:57.591Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gratipay", 
            "message": "Hi @wazehell,\n\nThis is an unusual report, since you marked the issue severity as `None`. I have decided to close this report as `Informative` rather than `N/A`, because I do not want to discourage you from reporting in the future. I will also give you a brief overview of what the POODLE vulnerability is and demonstrate why gratipay.com is not vulnerable to POODLE attacks. This will hopefully help you with reports in the future. \ud83d\ude0a\n\n# What is the POODLE attack?\n---\n\nPadding Oracle On Downgraded Legacy Encryption (POODLE) is an issue that affects SSL 3.0. If an adversary can modify network transmissions between the client and the server they can downgrade the SSL connection to SSL 3.0 and tamper with/decrypt data in transmission.\n\nThe actual problem stems from the fact that the block cipher padding in CBC encryption in SSL 3.0 is not fully verified during the decryption process.\n\n[CBC](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29) works as follows:\n\n~~~\nPi = DK(Ci) \u2295 Ci-1\nC0 = IV\n~~~\n\nDuring the decryption process in SSL 3.0, the recipient checks the padding length byte [1], then checks the padding blocks and finally reaches the MAC value.\n\n| Body | MAC | Padding | Padding length byte |\n|------|-----|---------|---------------------|\n|   ...    |     ...      |      ...       |               7 |\n\nAll the attacker has to do is replace the last block of the ciphertext by a copy of a ciphertext block `Ci`. If the final byte is correct the ciphertext will be accepted. This is where the padding oracle attack takes place, basically the attacker iterates through the different possibilities [2] until the ciphertext is accepted.\n\nThis vulnerability could allow attackers to steal session cookies and the only way to solve this issue is by disabling SSL 3.0.\n\n# Is gratipay.com vulnerable to POODLE?\n---\n\nSSL 3.0 is disabled on gratipay.com so this issue does not affect us.\n\n~~~~\n$ openssl s_client -connect gratipay.com:443 -ssl3\n...\n8636:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:s3_pkt.c:1472:SSL alert number 70\n8636:error:1409E0E5:SSL routines:ssl3_write_bytes:ssl handshake failure:s3_pkt.c:656:\n~~~\n\nI hope this explanation helps you with future research and I wish you the best of luck!\n\nBest regards,\nEd\n\n---\n\n[1]: For instance, let's say that the block size is 8 bytes. If there is a full block of padding the last byte will be 7.\n[2]: There is a total of 256 different possibilities in our case.", 
            "markdown_message": "<p>Hi <a href=\"/wazehell\">@wazehell</a>,</p>\n\n<p>This is an unusual report, since you marked the issue severity as <code>None</code>. I have decided to close this report as <code>Informative</code> rather than <code>N/A</code>, because I do not want to discourage you from reporting in the future. I will also give you a brief overview of what the POODLE vulnerability is and demonstrate why gratipay.com is not vulnerable to POODLE attacks. This will hopefully help you with reports in the future. \ud83d\ude0a</p>\n\n<h1 id=\"what-is-the-poodle-attack\">What is the POODLE attack?</h1>\n\n<hr>\n\n<p>Padding Oracle On Downgraded Legacy Encryption (POODLE) is an issue that affects SSL 3.0. If an adversary can modify network transmissions between the client and the server they can downgrade the SSL connection to SSL 3.0 and tamper with/decrypt data in transmission.</p>\n\n<p>The actual problem stems from the fact that the block cipher padding in CBC encryption in SSL 3.0 is not fully verified during the decryption process.</p>\n\n<p><a href=\"/redirect?signature=94f4d66e79de78083e14a2036832896259c3da3b&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FBlock_cipher_mode_of_operation%23Cipher_Block_Chaining_.28CBC.29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>CBC</span><i class=\"icon-external-link\"></i></a> works as follows:</p>\n<pre class=\"highlight plaintext\"><code>Pi = DK(Ci) \u2295 Ci-1\nC0 = IV\n</code></pre>\n<p>During the decryption process in SSL 3.0, the recipient checks the padding length byte [1], then checks the padding blocks and finally reaches the MAC value.</p>\n\n<table>\n<thead>\n<tr>\n<th>Body</th>\n<th>MAC</th>\n<th>Padding</th>\n<th>Padding length byte</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n\n<p>All the attacker has to do is replace the last block of the ciphertext by a copy of a ciphertext block <code>Ci</code>. If the final byte is correct the ciphertext will be accepted. This is where the padding oracle attack takes place, basically the attacker iterates through the different possibilities [2] until the ciphertext is accepted.</p>\n\n<p>This vulnerability could allow attackers to steal session cookies and the only way to solve this issue is by disabling SSL 3.0.</p>\n\n<h1 id=\"is-gratipay-com-vulnerable-to-poodle\">Is gratipay.com vulnerable to POODLE?</h1>\n\n<hr>\n\n<p>SSL 3.0 is disabled on gratipay.com so this issue does not affect us.</p>\n<pre class=\"highlight plaintext\"><code>$ openssl s_client -connect gratipay.com:443 -ssl3\n...\n8636:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:s3_pkt.c:1472:SSL alert number 70\n8636:error:1409E0E5:SSL routines:ssl3_write_bytes:ssl handshake failure:s3_pkt.c:656:\n</code></pre>\n<p>I hope this explanation helps you with future research and I wish you the best of luck!</p>\n\n<p>Best regards,<br>\nEd</p>\n\n<hr>\n\n<p>[1]: For instance, let&#39;s say that the block size is 8 bytes. If there is a full block of padding the last byte will be 7.<br>\n[2]: There is a total of 256 different possibilities in our case.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1590867, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-08T14:07:56.211Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-08T14:07:56.211Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gratipay", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1590868, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-09T09:05:38.333Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-09T09:05:38.333Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gratipay", 
            "message": "I am going to publicly disclose this report in order to inform fellow researchers.", 
            "markdown_message": "<p>I am going to publicly disclose this report in order to inform fellow researchers.</p>\n", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1600678, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "wazehell", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": true, 
        "url": "/wazehell", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-04-09T09:05:38.371Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/219499", 
    "created_at": "2017-04-08T11:56:25.675Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>gratipay.com:443 SSLv3 [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol<br>\nversion (_ssl.c:590)</p>\n\n<p>just check it :] </p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://gratipay.com/", 
            "about": "Gratitude? Gratipay! The easiest way for your company to pay for open source.", 
            "twitter_handle": "Gratipay", 
            "name": "Gratipay"
        }, 
        "handle": "gratipay", 
        "url": "https://hackerone.com/gratipay", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/868/5b2b5a44e2439cf6fe880b374cbbeaf38d740c6b_small.jpg?1458214340", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/868/d74b2c3d5d3975cb38a59a3176d952c3553a72f1_medium.jpg?1458214340"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1868, 
        "default_currency": "usd"
    }, 
    "is_published": false
}