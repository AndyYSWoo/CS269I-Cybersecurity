{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2015-04-21T16:09:46.285Z", 
    "voters": [
        "shazad_sadiq"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 55644, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Lack of SSL Pinning on POS Application ( iOS )", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-05-21T16:10:04.638Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2015-04-16T19:10:05.632Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-16T19:10:05.632Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for your report.\n\nWe will consider implementing certificate pinning in future versions of our mobile applications, but do not consider this a serious enough issue to warrant immediate changes as it requires the user to add a malicious certificate to their own device, or for a publicly trusted CA to issue an invalid certificate.", 
            "markdown_message": "<p>Thank you for your report.</p>\n\n<p>We will consider implementing certificate pinning in future versions of our mobile applications, but do not consider this a serious enough issue to warrant immediate changes as it requires the user to add a malicious certificate to their own device, or for a publicly trusted CA to issue an invalid certificate.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 382402, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-04-16T19:32:13.650Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-16T19:32:13.650Z", 
            "actor": {
                "username": "ishikawa", 
                "url": "/ishikawa", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/797/ad607d8c6a4fad2d702c036d70d03857c111f974_medium.jpg?1428102449"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "@clayton have in mind that OMM programs on mobile devices do install Profiles with their own certificates and there are plenty of attacks currently doing this type of trick. Additionally, you even have unintended applications such as the case for LinkedIn who created an app that forced people into installing profiles creating a trend in people to trust this actions.  IHMO, you should to take a second look at this for your own security sake. It sounds we both agree on the fact that is an issue, not just on the severity of it.  I agree with you it is not a \"critical\" issue, but I would recommend you not to treat as low, but as a medium-high. This is a common trend nowadays and the type of application you guys have that handles CHD. It is important that you are on top of your game. \n\nLast, but not least,  Given this is not a duplicate & given we both agree it is an issue we just disagree on the severity. Will I still get a bounty ?", 
            "markdown_message": "<p><a href=\"/clayton\">@clayton</a> have in mind that OMM programs on mobile devices do install Profiles with their own certificates and there are plenty of attacks currently doing this type of trick. Additionally, you even have unintended applications such as the case for LinkedIn who created an app that forced people into installing profiles creating a trend in people to trust this actions.  IHMO, you should to take a second look at this for your own security sake. It sounds we both agree on the fact that is an issue, not just on the severity of it.  I agree with you it is not a &quot;critical&quot; issue, but I would recommend you not to treat as low, but as a medium-high. This is a common trend nowadays and the type of application you guys have that handles CHD. It is important that you are on top of your game. </p>\n\n<p>Last, but not least,  Given this is not a duplicate &amp; given we both agree it is an issue we just disagree on the severity. Will I still get a bounty ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 382455, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-04-16T22:10:29.182Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-16T22:10:29.182Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "This report will not get a bounty. This issue has been previously reported to our security team.", 
            "markdown_message": "<p>This report will not get a bounty. This issue has been previously reported to our security team.</p>\n", 
            "type": "Activities::Comment", 
            "id": 382654, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-04-16T22:11:20.015Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-16T22:11:20.015Z", 
            "actor": {
                "username": "ishikawa", 
                "url": "/ishikawa", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/797/ad607d8c6a4fad2d702c036d70d03857c111f974_medium.jpg?1428102449"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "@andrewdunbar thanks for the prompt answer. ", 
            "markdown_message": "<p><a href=\"/andrewdunbar\">@andrewdunbar</a> thanks for the prompt answer. </p>\n", 
            "type": "Activities::Comment", 
            "id": 382656, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-04-21T16:09:46.393Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-21T16:09:46.393Z", 
            "actor": {
                "username": "ishikawa", 
                "url": "/ishikawa", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/797/ad607d8c6a4fad2d702c036d70d03857c111f974_medium.jpg?1428102449"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 386503, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-05-21T16:10:17.466Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-05-21T16:10:17.466Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 425896, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ishikawa", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ishikawa", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/019/797/a68783fbbe75135458a9b9a990648d69f36114df_small.jpg?1428102449"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 32, 
        "name": "Cryptographic Issues - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -111912646.9347894, 
    "disclosed_at": "2015-05-21T16:10:17.309Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/55644", 
    "created_at": "2015-04-10T07:33:09.683Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h4 id=\"description\">Description</h4>\n\n<p>Given that this is a POS application and handle CHD, cryptographic security is of most importance. Applications such as Square, Amazons POS, etc. have already implemented this. The iOS application is correctly checking for SSL certs using the os keychain, but due to the lack of checking for wether or not the certificate actually belongs to Sopify, the mobile app is vulnerable to MiTM attacks in which an attacker is able to install or force the user to install a certificate on the device. Given today&#39;s known issues with CAs and the lack of trust they are generating lately, Pinning on mobile devices is a technique that is becoming a standard practice. SSL Pinning is a technique for which you pin your applications or clients to one or more SSL Certificates, keys or CAs. This technique allows you to perform the normal SSL chain of trust exchange during SSL transmissions, but also checks that the SSL certificate or key within that cert is actually the one you know and trust.</p>\n\n<h4 id=\"vulnerable-platform\">Vulnerable platform</h4>\n\n<p>iOS - entire application.</p>\n\n<h4 id=\"proof-of-concept\">Proof of Concept</h4>\n\n<p>A simple way of testing this will be to use a tool like Burp Proxy and/or mitmproxy.<br>\nStep 1) install the &quot;malicious&quot; cert on device and trust it. An attacker can easily trick a user to install a profile, and/or malicious applications could potentially do it as part of installation. \u2028Step 2) Proxy all the communication through them. \u2028Step 3) You will confirm that your application is no longer using the Certificate it should trust.</p>\n\n<h4 id=\"recommendation\">Recommendation</h4>\n\n<p>Even though this is not a high risk vulnerability, lack of SSL Pinning certainly creates an unnecessary risk for applications on mobile devices. It is our recommendation that Shopify implements SSL Pinning on iOS, and do not trust the os-level certificate store since other applications might have control over it and there is no guarantees they won&#39;t be maliciously altered. Additionally, you might have other types of attacks in which CA issue wild-card certificates to random entities, as it was recently seen with Google and a Chinese CA.<br>\nFor more information please refer to <br>\n<a title=\"https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning\" href=\"/redirect?signature=157ada63294706544c4e4a09dbd023e33ae1961c&amp;url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FCertificate_and_Public_Key_Pinning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "vulnerability_information": "#### Description\r\n\r\nGiven that this is a POS application and handle CHD, cryptographic security is of most importance. Applications such as Square, Amazons POS, etc. have already implemented this. The iOS application is correctly checking for SSL certs using the os keychain, but due to the lack of checking for wether or not the certificate actually belongs to Sopify, the mobile app is vulnerable to MiTM attacks in which an attacker is able to install or force the user to install a certificate on the device. Given today's known issues with CAs and the lack of trust they are generating lately, Pinning on mobile devices is a technique that is becoming a standard practice. SSL Pinning is a technique for which you pin your applications or clients to one or more SSL Certificates, keys or CAs. This technique allows you to perform the normal SSL chain of trust exchange during SSL transmissions, but also checks that the SSL certificate or key within that cert is actually the one you know and trust.\r\n\r\n#### Vulnerable platform\r\n\r\niOS - entire application.\r\n\r\n#### Proof of Concept\r\n\r\nA simple way of testing this will be to use a tool like Burp Proxy and/or mitmproxy.\r\nStep 1) install the \"malicious\" cert on device and trust it. An attacker can easily trick a user to install a profile, and/or malicious applications could potentially do it as part of installation. \u2028Step 2) Proxy all the communication through them. \u2028Step 3) You will confirm that your application is no longer using the Certificate it should trust.\r\n\r\n#### Recommendation\r\n\r\nEven though this is not a high risk vulnerability, lack of SSL Pinning certainly creates an unnecessary risk for applications on mobile devices. It is our recommendation that Shopify implements SSL Pinning on iOS, and do not trust the os-level certificate store since other applications might have control over it and there is no guarantees they won't be maliciously altered. Additionally, you might have other types of attacks in which CA issue wild-card certificates to random entities, as it was recently seen with Google and a Chinese CA.\r\nFor more information please refer to \r\nhttps://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.shopify.com", 
            "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.", 
            "twitter_handle": "", 
            "name": "Shopify"
        }, 
        "handle": "shopify", 
        "url": "https://hackerone.com/shopify", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/382/1e9872bf9cfe04008c2673e07bfecaa83858cca1_small.jpg?1532728703", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1382, 
        "default_currency": "usd"
    }, 
    "is_published": false
}