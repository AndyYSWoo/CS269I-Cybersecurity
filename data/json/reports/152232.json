{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "yaworsk", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 152232, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-31T18:57:53.926Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "NULL Pointer Dereference in exif_process_user_comment", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-08-30T18:57:54.011Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-07-31T18:55:35.806Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:55:35.806Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "hoangnguyen", 
                "url": "/hoangnguyen"
            }, 
            "message": "We're assessing the minimum here because remote execution control does not seem highly likely. We'll be happy to revisit if you can demonstrate otherwise. Thanks for the excellent summary!", 
            "markdown_message": "<p>We&#39;re assessing the minimum here because remote execution control does not seem highly likely. We&#39;ll be happy to revisit if you can demonstrate otherwise. Thanks for the excellent summary!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1098506, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "hoangnguyen", 
                "url": "/hoangnguyen"
            }, 
            "created_at": "2016-07-31T18:55:42.779Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:55:42.779Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1098507, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-31T18:57:53.962Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:57:53.962Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1098508, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-30T18:58:10.579Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-30T18:58:10.579Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1163075, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "hoangnguyen", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/hoangnguyen", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/074/688/20accc167d39b53abd1c87ec31f7ac0e887e3819_small.png?1462527776"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 2, 
        "name": "Memory Corruption - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -71553105.70327552, 
    "disclosed_at": "2016-08-30T18:58:10.546Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/152232", 
    "created_at": "2016-07-19T07:55:52.244Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>There is a bug occur in exif_process_user_comment when trying to encode JIS string.</p>\n<pre class=\"highlight plaintext\"><code>else if (!memcmp(szValuePtr, &quot;JIS\\0\\0\\0\\0\\0&quot;, 8)) {\n            /* JIS should be tanslated to MB or we leave it to the user - leave it to the user */\n            *pszEncoding = estrdup((const char*)szValuePtr);\n            szValuePtr = szValuePtr+8;\n            ByteCount -= 8;\n            /* XXX this will fail again if encoding_converter returns on error something different than SIZE_MAX   */\n            if (zend_multibyte_encoding_converter(\n                    (unsigned char**)pszInfoPtr,\n                    &amp;len,\n                    (unsigned char*)szValuePtr,\n                    ByteCount,\n                    zend_multibyte_fetch_encoding(ImageInfo-&gt;encode_jis),\n                    zend_multibyte_fetch_encoding(ImageInfo-&gt;motorola_intel ? ImageInfo-&gt;decode_jis_be : ImageInfo-&gt;decode_jis_le)\n                    ) == (size_t)-1) {\n                len = exif_process_string_raw(pszInfoPtr, szValuePtr, ByteCount);\n            }\n            return len;\n</code></pre>\n<p>As you can see at function call zend_multibyte_fetch_encoding(ImageInfo-&gt;encode_jis). At PHP_INI_BEGIN encode_jis was set at empty string so that the result of this call above return NULL and then pass to zend_multibyte_encoding_converter. If this php version is compiled with <em>mbstring</em>, this NULL pointer is passed to mbfl_buffer_converter_new2 through <em>to</em> pointer.</p>\n<pre class=\"highlight plaintext\"><code>mbfl_buffer_converter_new2(\n    const mbfl_encoding *from,\n    const mbfl_encoding *to,\n    int buf_initsz)\n{\n    ******SNIP********\n    /* initialize */\n    convd-&gt;from = from;\n    convd-&gt;to = to;\n    /* create convert filter */\n    convd-&gt;filter1 = NULL;\n    convd-&gt;filter2 = NULL;\n    if (mbfl_convert_filter_get_vtbl(convd-&gt;from-&gt;no_encoding, convd-&gt;to-&gt;no_encoding) != NULL) {\n    ******SNIP********\n</code></pre>\n<p>Because of none checking 2 pointers <em>from</em> and <em>to</em> so NULL pointer is passed directly to convd-&gt;to and result is the crash when calling mbfl_convert_filter_get_vtbl.</p>\n\n<p>Here crash jpeg file : <a title=\"https://drive.google.com/file/d/0B0D1DYQpkA9URnRROVdLdG5jdFE/view?usp=sharing\" href=\"/redirect?signature=a12ee9e27ce5889b872da4bd59569c8c65177a40&amp;url=https%3A%2F%2Fdrive.google.com%2Ffile%2Fd%2F0B0D1DYQpkA9URnRROVdLdG5jdFE%2Fview%3Fusp%3Dsharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://drive.google.com/file/d/0B0D1DYQpkA9URnRROVdLdG5jdFE/view?usp=sharing</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>This bug also works on Mac OS X and Windows.</p>\n\n<h2 id=\"test-script\">Test script:</h2>\n<pre class=\"highlight plaintext\"><code>&lt;?php\n    $exif = exif_read_data(&#39;null.jpg&#39;);\n    var_dump($exif);\n?&gt;\n</code></pre>\n<p>The bug here : <a title=\"https://bugs.php.net/bug.php?id=72618\" href=\"/redirect?signature=09fbe79602419c82364e642f76a54089527b3c88&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D72618\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bugs.php.net/bug.php?id=72618</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "vulnerability_information": "There is a bug occur in exif_process_user_comment when trying to encode JIS string.\n```\nelse if (!memcmp(szValuePtr, \"JIS\\0\\0\\0\\0\\0\", 8)) {\n\t\t\t/* JIS should be tanslated to MB or we leave it to the user - leave it to the user */\n\t\t\t*pszEncoding = estrdup((const char*)szValuePtr);\n\t\t\tszValuePtr = szValuePtr+8;\n\t\t\tByteCount -= 8;\n\t\t\t/* XXX this will fail again if encoding_converter returns on error something different than SIZE_MAX   */\n\t\t\tif (zend_multibyte_encoding_converter(\n\t\t\t\t\t(unsigned char**)pszInfoPtr,\n\t\t\t\t\t&len,\n\t\t\t\t\t(unsigned char*)szValuePtr,\n\t\t\t\t\tByteCount,\n\t\t\t\t\tzend_multibyte_fetch_encoding(ImageInfo->encode_jis),\n\t\t\t\t\tzend_multibyte_fetch_encoding(ImageInfo->motorola_intel ? ImageInfo->decode_jis_be : ImageInfo->decode_jis_le)\n\t\t\t\t\t) == (size_t)-1) {\n\t\t\t\tlen = exif_process_string_raw(pszInfoPtr, szValuePtr, ByteCount);\n\t\t\t}\n\t\t\treturn len;\n```\nAs you can see at function call zend_multibyte_fetch_encoding(ImageInfo->encode_jis). At PHP_INI_BEGIN encode_jis was set at empty string so that the result of this call above return NULL and then pass to zend_multibyte_encoding_converter. If this php version is compiled with *mbstring*, this NULL pointer is passed to mbfl_buffer_converter_new2 through *to* pointer.\n```\nmbfl_buffer_converter_new2(\n\tconst mbfl_encoding *from,\n\tconst mbfl_encoding *to,\n    int buf_initsz)\n{\n    ******SNIP********\n\t/* initialize */\n\tconvd->from = from;\n\tconvd->to = to;\n\t/* create convert filter */\n\tconvd->filter1 = NULL;\n\tconvd->filter2 = NULL;\n\tif (mbfl_convert_filter_get_vtbl(convd->from->no_encoding, convd->to->no_encoding) != NULL) {\n    ******SNIP********\n```\n\nBecause of none checking 2 pointers *from* and *to* so NULL pointer is passed directly to convd->to and result is the crash when calling mbfl_convert_filter_get_vtbl.\n\nHere crash jpeg file : https://drive.google.com/file/d/0B0D1DYQpkA9URnRROVdLdG5jdFE/view?usp=sharing\n\nThis bug also works on Mac OS X and Windows.\n\nTest script:\n---------------\n```\n<?php\n\t$exif = exif_read_data('null.jpg');\n\tvar_dump($exif);\n?>\n```\nThe bug here : https://bugs.php.net/bug.php?id=72618", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.php.net", 
            "about": "", 
            "twitter_handle": "", 
            "name": "PHP (IBB)"
        }, 
        "handle": "ibb-php", 
        "url": "https://hackerone.com/ibb-php", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/029/0a20311cece1ff1938eac3f9b09a6af056bc9e90_small.png?1385119730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 29, 
        "default_currency": "usd"
    }, 
    "is_published": false
}