{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "zhchbin", 
        "arneswinnen", 
        "michiel", 
        "spam404", 
        "hunter", 
        "bogdantcaciuc", 
        "secalert", 
        "0xsyndr0me", 
        "eronx", 
        "eveeez", 
        "and 32 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2520.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 108113, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-13T20:34:17.690Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Bypassing callback_url validation on Digits", 
    "is_member_of_team?": null, 
    "vote_count": 42, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-08-12T20:34:17.934Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,520", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-01-04T22:16:30.995Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-04T22:16:30.995Z", 
            "actor": {
                "username": "arkadiyt", 
                "url": "/arkadiyt", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 741299, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "filedescriptor", 
                "url": "/filedescriptor"
            }, 
            "created_at": "2016-01-06T01:30:54.714Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T01:30:54.714Z", 
            "actor": {
                "username": "arkadiyt", 
                "url": "/arkadiyt", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>We consider this issue to be fixed now. Can you please confirm?</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 743530, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T04:40:53.705Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T04:40:53.705Z", 
            "actor": {
                "username": "filedescriptor", 
                "url": "/filedescriptor", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Looks like the authority part is now forbidden - confirmed fixed!", 
            "markdown_message": "<p>Looks like the authority part is now forbidden - confirmed fixed!</p>\n", 
            "type": "Activities::Comment", 
            "id": 743659, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-01-11T23:17:08.998Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-11T23:17:08.998Z", 
            "actor": {
                "url": "/twitter", 
                "profile": {
                    "name": "Twitter"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
                }
            }, 
            "team_handle": "twitter", 
            "bounty_amount": "2520.0", 
            "collaborator": {
                "username": "filedescriptor", 
                "url": "/filedescriptor"
            }, 
            "message": "Thanks again for helping us keep Twitter safe and secure for our users!", 
            "markdown_message": "<p>Thanks again for helping us keep Twitter safe and secure for our users!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 753912, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-13T20:34:17.844Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-13T20:34:17.844Z", 
            "actor": {
                "username": "andrewsorensen", 
                "url": "/andrewsorensen", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "first_to_agree": true, 
            "message": "We are requesting public disclosure of this bug to encourage more reports of this quality. Thanks again!\n", 
            "markdown_message": "<p>We are requesting public disclosure of this bug to encourage more reports of this quality. Thanks again!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1067649, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-12T20:34:31.873Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-12T20:34:31.873Z", 
            "actor": {
                "url": "/twitter", 
                "profile": {
                    "name": "Twitter"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
                }
            }, 
            "team_handle": "twitter", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1124003, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "filedescriptor", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/filedescriptor", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 53, 
        "name": "Open Redirect"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -73102573.54276426, 
    "disclosed_at": "2016-08-12T20:34:31.579Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/108113", 
    "created_at": "2016-01-04T16:49:58.642Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,<br>\nI would like to report an issue in Digits which allows attacker to bypass the <em>callback_url</em> validation of an application and thus takeover an account.</p>\n\n<h1 id=\"detail\">Detail</h1>\n\n<p>Digits is a part of the Fabric SDK which offers phone-based sign in. It also provides web login flow. In the <a href=\"/redirect?signature=239b93f444d81131f2b482f91df18af66e7370bd&amp;url=https%3A%2F%2Fdocs.fabric.io%2Fweb%2Fdigits%2Fsign-in-options.html%23callback-url\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>navigation-based authentication flow</span><i class=\"icon-external-link\"></i></a>, the OAuth credential data is passed to the specified callback URL (<em>callback_url</em>) after a user granted access to an application using HTTP 302 redirect. This parameter is supposed to be validated to match the registered domain of the application. Here&#39;s an example for Periscope:</p>\n\n<blockquote>\n<p><a title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://www.periscope.tv\" href=\"/redirect?signature=0c08d48dcad35baf100289c71a2b2b77b7e78df9&amp;url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://www.periscope.tv</span><i class=\"icon-external-link\"></i></a></p>\n</blockquote>\n\n<p>callback_url=<a title=\"https://www.periscope.tv\" href=\"/redirect?signature=9dd66f60e8c6126261773194134ff1e1e6cbcc3b&amp;url=https%3A%2F%2Fwww.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.periscope.tv</span><i class=\"icon-external-link\"></i></a> matches the application&#39;s registered domain, so no problem.</p>\n\n<p>If we modify it:</p>\n\n<blockquote>\n<p><a title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://example.com\" href=\"/redirect?signature=d1149c0d896409fdc6326d0330d13e7170810042&amp;url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Fexample.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://example.com</span><i class=\"icon-external-link\"></i></a></p>\n</blockquote>\n\n<p>callback_url=<a title=\"https://example.com\" href=\"/redirect?signature=c1090c16831405a5e6776a27873575899c1820d4&amp;url=https%3A%2F%2Fexample.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://example.com</span><i class=\"icon-external-link\"></i></a> does not match the application&#39;s registered domain, thus the request is rejected.</p>\n\n<p>Now, it is noticed that the validation is rather loose. For example, it parses the URL and compares only the hostname part. In other words, a URL with authority part is allowed (e.g. callback_url=<a title=\"https://whatever@www.periscope.tv\" href=\"/redirect?signature=a0410935d23861867be6e2f909bb0cac9b16ce36&amp;url=https%3A%2F%2Fwhatever%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://whatever@www.periscope.tv</span><i class=\"icon-external-link\"></i></a>). It is still a solid validation because the hostname part is correctly handled (something like <a title=\"https://whatever/@www.periscope.tv\" href=\"/redirect?signature=4e913925602058db681ec84526bffe7e9b1432b1&amp;url=https%3A%2F%2Fwhatever%2F%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://whatever/@www.periscope.tv</span><i class=\"icon-external-link\"></i></a> won&#39;t work). </p>\n\n<p>However, it is discovered that when outputting a non-ASCII character in the header, it will get converted to a question mark (?). <strong>This happens after the validation.</strong> Thus, attacker can bypass the validation by putting his/her own domain followed by a non-ASCII character in the authority part.</p>\n\n<p>Here&#39;s how it works:</p>\n\n<p>Input:</p>\n<pre class=\"highlight plaintext\"><code>https://attacker.com%ff@www.periscope.tv\n--------\\  authority   /\\   hostname   /\n</code></pre>\n<p>The URL is parsed and passes the validation because the hostname matches the registered domain.</p>\n\n<p>Output:</p>\n<pre class=\"highlight plaintext\"><code>https://attacker.com?@www.periscope.tv\n--------\\ hostname /-\\     query     /\n</code></pre>\n<p>Since the URL is outputted in the location header, %ff which is non-ASCII is converted. Now suddenly the hostname becomes attacker.com and everything after the question mark becomes the query part. Finally the victim will be redirected to attacker&#39;s site with victim&#39;s account&#39;s OAuth credential.</p>\n\n<h1 id=\"impact\">Impact</h1>\n\n<p>It affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim&#39;s account on the affected applications.</p>\n\n<h1 id=\"poc\">PoC</h1>\n\n<ol>\n<li>Prepare a Periscope account which is associated with a phone number</li>\n<li>Login to Periscope using the phone number with digits web login flow: <a title=\"https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://innerht.ml%FF@www.periscope.tv\" href=\"/redirect?signature=b46aacc07e28b4ed6158be8a1d6ce4fad5e2bc27&amp;url=https%3A%2F%2Fwww.digits.com%2Flogin%3Fconsumer_key%3D9I4iINIyd0R01qEPEwT9IC6RE%26host%3Dhttps%253A%252F%252Fwww.digits.com%26callback_url%3Dhttps%3A%2F%2Finnerht.ml%25FF%40www.periscope.tv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https%3A%2F%2Fwww.digits.com&amp;callback_url=https://innerht.ml%FF@www.periscope.tv</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>After that your account will be renamed as &quot;Pwn3d&quot;</li>\n</ol>\n\n<p>Video demo: <a title=\"https://vimeo.com/150671313\" href=\"/redirect?signature=886e972a72b16430f1c25f3cd1bcab9d46454bb0&amp;url=https%3A%2F%2Fvimeo.com%2F150671313\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://vimeo.com/150671313</span><i class=\"icon-external-link\"></i></a> (password: token)</p>\n\n<h1 id=\"fix\">Fix</h1>\n\n<p>The <em>callback_url</em> should discard the authority part before outputting.</p>\n", 
    "vulnerability_information": "Hi,\nI would like to report an issue in Digits which allows attacker to bypass the *callback_url* validation of an application and thus takeover an account.\n\n#Detail\nDigits is a part of the Fabric SDK which offers phone-based sign in. It also provides web login flow. In the [navigation-based authentication flow](https://docs.fabric.io/web/digits/sign-in-options.html#callback-url), the OAuth credential data is passed to the specified callback URL (*callback_url*) after a user granted access to an application using HTTP 302 redirect. This parameter is supposed to be validated to match the registered domain of the application. Here's an example for Periscope:\n\n> https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https%3A%2F%2Fwww.digits.com&callback_url=https://www.periscope.tv\n\ncallback_url=https://www.periscope.tv matches the application's registered domain, so no problem.\n\nIf we modify it:\n> https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https%3A%2F%2Fwww.digits.com&callback_url=https://example.com\n\ncallback_url=https://example.com does not match the application's registered domain, thus the request is rejected.\n\nNow, it is noticed that the validation is rather loose. For example, it parses the URL and compares only the hostname part. In other words, a URL with authority part is allowed (e.g. callback_url=https://whatever@www.periscope.tv). It is still a solid validation because the hostname part is correctly handled (something like https://whatever\\@www.periscope.tv won't work). \n\nHowever, it is discovered that when outputting a non-ASCII character in the header, it will get converted to a question mark (?). **This happens after the validation.** Thus, attacker can bypass the validation by putting his/her own domain followed by a non-ASCII character in the authority part.\n\nHere's how it works:\n\nInput:\n``` \nhttps://attacker.com%ff@www.periscope.tv\n--------\\  authority   /\\   hostname   /\n```\n\nThe URL is parsed and passes the validation because the hostname matches the registered domain.\n\nOutput:\n``` \nhttps://attacker.com?@www.periscope.tv\n--------\\ hostname /-\\     query     /\n```\n\nSince the URL is outputted in the location header, %ff which is non-ASCII is converted. Now suddenly the hostname becomes attacker.com and everything after the question mark becomes the query part. Finally the victim will be redirected to attacker's site with victim's account's OAuth credential.\n\n#Impact\nIt affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim's account on the affected applications.\n\n#PoC\n1. Prepare a Periscope account which is associated with a phone number\n2. Login to Periscope using the phone number with digits web login flow: https://www.digits.com/login?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https%3A%2F%2Fwww.digits.com&callback_url=https://innerht.ml%FF@www.periscope.tv\n3. After that your account will be renamed as \"Pwn3d\"\n\nVideo demo: https://vimeo.com/150671313 (password: token)\n\n#Fix\nThe *callback_url* should discard the authority part before outputting.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://twitter.com", 
            "about": "Twitter helps you create and share ideas and information instantly, without barriers.", 
            "twitter_handle": "twittersecurity", 
            "name": "Twitter"
        }, 
        "handle": "twitter", 
        "url": "https://hackerone.com/twitter", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/061/4acfe72859c5e9cb48a152edb4e498e13fa28df2_small.?1439954730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 61, 
        "default_currency": "usd"
    }, 
    "is_published": false
}