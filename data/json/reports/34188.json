{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-04-03T02:23:45.386Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 34188, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Various Low level Vulnerabilities", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-05-03T02:23:45.629Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "reporter": {
                "username": "sincerehacker", 
                "url": "/sincerehacker"
            }, 
            "created_at": "2014-11-06T10:40:03.541Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-06T10:40:03.541Z", 
            "actor": {
                "username": "kindoge", 
                "url": "/kindoge", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/014/3e9bb5937ddf6e665ef0515247abd36c4726f02b_medium.png?1413786609"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "blockio", 
            "message": "#3: The session cookie counts here, and it got the right flags. Same for #2 -- HttpOnly was set recently due to an earlier report.\n\n#1: XSS protection is enabled on files viewed in the browser. The JS file is only part of it.\n\nThanks!", 
            "markdown_message": "<h1 id=\"3-the-session-cookie-counts-here-and-it-got-the-right-flags-same-for-2-httponly-was-set-recently-due-to-an-earlier-report\">3: The session cookie counts here, and it got the right flags. Same for #2 -- HttpOnly was set recently due to an earlier report.</h1>\n\n<h1 id=\"1-xss-protection-is-enabled-on-files-viewed-in-the-browser-the-js-file-is-only-part-of-it\">1: XSS protection is enabled on files viewed in the browser. The JS file is only part of it.</h1>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 154835, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-04-03T02:23:45.457Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-04-03T02:23:45.457Z", 
            "actor": {
                "username": "sincerehacker", 
                "url": "/sincerehacker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/654/6751dcad566658f12e233e4e3b37c6d1d0600df8_medium.jpg?1414737474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "blockio", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 370522, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-05-03T02:23:48.703Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-05-03T02:23:48.703Z", 
            "actor": {
                "url": "/blockio", 
                "profile": {
                    "name": "Block.io"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/504/26d91d05bfade19e2c5992cd9a77a19ce818fd87_medium.png?1413241197"
                }
            }, 
            "team_handle": "blockio", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 400335, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "sincerehacker", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/sincerehacker", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/013/654/2b0dfa3f002ee4a2cc2d082d3bb09f2f739c82a6_small.jpg?1414737474"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -113517442.75925146, 
    "disclosed_at": "2015-05-03T02:23:48.608Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/34188", 
    "created_at": "2014-11-06T10:29:19.264Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>1.XSS protection Not Enabled:<br>\nExample URL: <a title=\"https://block.io/js/secure/secrets.js?mtime=1412493238\" href=\"/redirect?signature=544373df7669cf3d6361091f34c2be6760937786&amp;url=https%3A%2F%2Fblock.io%2Fjs%2Fsecure%2Fsecrets.js%3Fmtime%3D1412493238\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://block.io/js/secure/secrets.js?mtime=1412493238</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Web Browser XSS Protection is not enabled, or is disabled by the configuration of the &#39;X-XSS-Protection&#39; HTTP response header on the web server</p>\n\n<p>The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser&#39;s XSS protection mechanism. The following values would attempt to enable it: <br>\nX-XSS-Protection: 1; mode=block<br>\nX-XSS-Protection: 1; report=<a title=\"http://www.example.com/xss\" href=\"/redirect?signature=fdced13bb0988199e83fc5fd0bbe5d03ae55e946&amp;url=http%3A%2F%2Fwww.example.com%2Fxss\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.example.com/xss</span><i class=\"icon-external-link\"></i></a><br>\nThe following values would disable it:<br>\nX-XSS-Protection: 0<br>\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).<br>\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).</p>\n\n<p>Ensure that the web browser&#39;s XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to &#39;1&#39;.</p>\n\n<p>2.Cookie set Without HTTPonly flag<br>\nExample URL: <a title=\"https://block.io/users/sign_in\" href=\"/redirect?signature=fbf8b91f794f075f3af94f3db4cddac5e62816ca&amp;url=https%3A%2F%2Fblock.io%2Fusers%2Fsign_in\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://block.io/users/sign_in</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.Ensure that the HttpOnly flag is set for all cookies.</p>\n\n<p>3.Cookie set without secure flag<br>\nExample URL: <a title=\"https://block.io/users/password/new\" href=\"/redirect?signature=1b6546c54c1af367dd771f22f820c5abf2a5c0ff&amp;url=https%3A%2F%2Fblock.io%2Fusers%2Fpassword%2Fnew\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://block.io/users/password/new</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted tunnel. Ensure that the secure flag is set for cookies containing such sensitive information.</p>\n", 
    "vulnerability_information": "1.XSS protection Not Enabled:\r\nExample URL: https://block.io/js/secure/secrets.js?mtime=1412493238\r\n\r\nWeb Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server\r\n\r\nThe X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \r\nX-XSS-Protection: 1; mode=block\r\nX-XSS-Protection: 1; report=http://www.example.com/xss\r\nThe following values would disable it:\r\nX-XSS-Protection: 0\r\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\r\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).\r\n\r\nEnsure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.\r\n\r\n\r\n2.Cookie set Without HTTPonly flag\r\nExample URL: https://block.io/users/sign_in\r\n\r\nA cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.Ensure that the HttpOnly flag is set for all cookies.\r\n\r\n\r\n3.Cookie set without secure flag\r\nExample URL: https://block.io/users/password/new\r\n\r\nA cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted tunnel. Ensure that the secure flag is set for cookies containing such sensitive information.\r\n\r\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://block.io/", 
            "about": "The simple Bitcoin/Dogecoin/Litecoin API & Wallet.", 
            "twitter_handle": null, 
            "name": "Block.io"
        }, 
        "handle": "blockio", 
        "url": "https://hackerone.com/blockio", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/504/29fa56834f8bb08e1bd9691f90ec853ea6d234b0_small.png?1413241197", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/504/26d91d05bfade19e2c5992cd9a77a19ce818fd87_medium.png?1413241197"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 504, 
        "default_currency": "usd"
    }, 
    "is_published": false
}