{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "duplicate", 
    "bug_reporter_agreed_on_going_public_at": "2018-11-09T14:45:34.205Z", 
    "voters": [
        "eveeez", 
        "moonless"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": 373916, 
    "id": 373932, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-11-09T14:53:43.846Z", 
    "vulnerability_information": "## Summary\n\nSerendipity contains a script named `exit.php` that can be directly accessed. When crafting an hyperlink pointing to this page with the parameter `url` containing a base64-encoded  URL, it will redirect the user to this URL.\n\n##\u00a0Description\n\nThe file `exit.php` contains the following code:\n\n```php\n<?php\n// [...]\nif (isset($_GET['url_id']) && !empty($_GET['url_id']) && isset($_GET['entry_id']) && !empty($_GET['entry_id'])) {\n// [...]\n} elseif (isset($_GET['url']) && !empty($_GET['url'])) {\n    // No entry-link ID was submitted. Possibly a spammer tried to mis-use the script to get into the top-list.\n    $url = strip_tags(str_replace('&amp;', '&', base64_decode($_GET['url'])));\n}\n\nif (serendipity_isResponseClean($url)) {\n    header('HTTP/1.0 301 Moved Permanently');\n    header('Status: 301 Moved Permanently');\n    header('Location: ' . $url);\n}\n```\n\nThe interesting part is the handling of `$_GET['url']`. The function `serendipity_isResponseClean()` tries to prevent response splitting issues but does not validate the hostname of the URL where the user is redirected to. \n\n## Steps To Reproduce\n\n1. Access https://blog.fuzzing-project.org/exit.php?url=aHR0cHM6Ly9nb29nbGUuY29t with a browser;\n1. Notice that the `Location` header of the response contains an arbitrary URL (here, https://google.com).\n\n## Impact\n\nAn attacker can craft an hyperlink pointing to https://blog.fuzzing-project.org that, once accessed, will redirect the victim to an arbitrary URL.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "User"
    }, 
    "title": "Open redirect in Serendipity (exit.php)", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "*.fuzzing-project.org", 
        "max_severity": "critical", 
        "databaseId": 11140, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Duplicate", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "original_report_id": 373916, 
            "automated_response": false, 
            "created_at": "2018-06-29T16:19:44.701Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-29T16:19:44.701Z", 
            "actor": {
                "username": "hanno", 
                "url": "/hanno", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/020/918/0cbb82765672dbb4db446f4f2bda31226dbc2076_medium.jpg?1535099750"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "hannob", 
            "message": "Thanks, the same issue has already been reported by another person. I have reported it to serendipity and will update you about the result.", 
            "markdown_message": "<p>Thanks, the same issue has already been reported by another person. I have reported it to serendipity and will update you about the result.</p>\n", 
            "type": "Activities::BugDuplicate", 
            "id": 2959432, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-09T14:45:34.231Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-09T14:45:34.231Z", 
            "actor": {
                "username": "oreamnos", 
                "url": "/oreamnos", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/178/427/b2c3354151638b34c8ae3a64ae38fb0065e84a27_medium.png?1528961006"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "hannob", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3617269, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-09T14:53:43.872Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-09T14:53:43.872Z", 
            "actor": {
                "username": "hanno", 
                "url": "/hanno", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/020/918/0cbb82765672dbb4db446f4f2bda31226dbc2076_medium.jpg?1535099750"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "hannob", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3617305, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-09T14:53:43.913Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-09T14:53:43.913Z", 
            "actor": {
                "username": "hanno", 
                "url": "/hanno", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/020/918/0cbb82765672dbb4db446f4f2bda31226dbc2076_medium.jpg?1535099750"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "hannob", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3617306, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "oreamnos", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/oreamnos", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/178/427/7be89c2e8725dd5becde6454a2ebeb7db9a94224_small.png?1528961006"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 53, 
        "name": "Open Redirect"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2018-11-09T14:53:43.894Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/373932", 
    "created_at": "2018-06-29T14:17:49.624Z", 
    "original_report_url": "https://hackerone.com/reports/373916", 
    "vulnerability_information_html": "<h2 id=\"summary\">Summary</h2>\n\n<p>Serendipity contains a script named <code>exit.php</code> that can be directly accessed. When crafting an hyperlink pointing to this page with the parameter <code>url</code> containing a base64-encoded  URL, it will redirect the user to this URL.</p>\n\n<h2 id=\"description\">\u00a0Description</h2>\n\n<p>The file <code>exit.php</code> contains the following code:</p>\n<pre class=\"highlight php\"><code><span class=\"cp\">&lt;?php</span>\n<span class=\"c1\">// [...]\n</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">isset</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;url_id&#39;</span><span class=\"p\">])</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"k\">empty</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;url_id&#39;</span><span class=\"p\">])</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">isset</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;entry_id&#39;</span><span class=\"p\">])</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"k\">empty</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;entry_id&#39;</span><span class=\"p\">]))</span> <span class=\"p\">{</span>\n<span class=\"c1\">// [...]\n</span><span class=\"p\">}</span> <span class=\"k\">elseif</span> <span class=\"p\">(</span><span class=\"nb\">isset</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;url&#39;</span><span class=\"p\">])</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"k\">empty</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;url&#39;</span><span class=\"p\">]))</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// No entry-link ID was submitted. Possibly a spammer tried to mis-use the script to get into the top-list.\n</span>    <span class=\"nv\">$url</span> <span class=\"o\">=</span> <span class=\"nb\">strip_tags</span><span class=\"p\">(</span><span class=\"nb\">str_replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&amp;amp;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&amp;&#39;</span><span class=\"p\">,</span> <span class=\"nb\">base64_decode</span><span class=\"p\">(</span><span class=\"nv\">$_GET</span><span class=\"p\">[</span><span class=\"s1\">&#39;url&#39;</span><span class=\"p\">])));</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">serendipity_isResponseClean</span><span class=\"p\">(</span><span class=\"nv\">$url</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"nb\">header</span><span class=\"p\">(</span><span class=\"s1\">&#39;HTTP/1.0 301 Moved Permanently&#39;</span><span class=\"p\">);</span>\n    <span class=\"nb\">header</span><span class=\"p\">(</span><span class=\"s1\">&#39;Status: 301 Moved Permanently&#39;</span><span class=\"p\">);</span>\n    <span class=\"nb\">header</span><span class=\"p\">(</span><span class=\"s1\">&#39;Location: &#39;</span> <span class=\"o\">.</span> <span class=\"nv\">$url</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>The interesting part is the handling of <code>$_GET[&#39;url&#39;]</code>. The function <code>serendipity_isResponseClean()</code> tries to prevent response splitting issues but does not validate the hostname of the URL where the user is redirected to. </p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce</h2>\n\n<ol>\n<li>Access <a title=\"https://blog.fuzzing-project.org/exit.php?url=aHR0cHM6Ly9nb29nbGUuY29t\" href=\"/redirect?signature=e6d9a314855ed643af87cf67f00e071de829e06d&amp;url=https%3A%2F%2Fblog.fuzzing-project.org%2Fexit.php%3Furl%3DaHR0cHM6Ly9nb29nbGUuY29t\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://blog.fuzzing-project.org/exit.php?url=aHR0cHM6Ly9nb29nbGUuY29t</span><i class=\"icon-external-link\"></i></a> with a browser;</li>\n<li>Notice that the <code>Location</code> header of the response contains an arbitrary URL (here, <a title=\"https://google.com\" href=\"/redirect?signature=fe88e2a1b331aeedb3dffd0de51c8e3322970447&amp;url=https%3A%2F%2Fgoogle.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://google.com</span><i class=\"icon-external-link\"></i></a>).</li>\n</ol>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>An attacker can craft an hyperlink pointing to <a title=\"https://blog.fuzzing-project.org\" href=\"/redirect?signature=a1fee2396e2fd95af4c50823bdfe5ce0017c50f5&amp;url=https%3A%2F%2Fblog.fuzzing-project.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://blog.fuzzing-project.org</span><i class=\"icon-external-link\"></i></a> that, once accessed, will redirect the victim to an arbitrary URL.</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hboeck.de/", 
            "about": "Personal web projects from Hanno B\u00f6ck.", 
            "twitter_handle": "hanno", 
            "name": "Hanno's projects"
        }, 
        "handle": "hannob", 
        "url": "https://hackerone.com/hannob", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/030/278/253800fbe8bfabdc72f03b7f0f1ddb38adb47f82_small.?1529948333", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/030/278/dfe1a45d96316ca04d5f928eaff3e62f576945a8_medium.?1529948333"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 30278, 
        "default_currency": "usd"
    }, 
    "is_published": false
}