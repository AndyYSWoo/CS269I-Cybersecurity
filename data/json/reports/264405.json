{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2018-02-01T14:42:39.204Z", 
    "voters": [
        "jokebookservice1", 
        "cuso4", 
        "mr002"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 264405, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-08-30T16:00:11.733Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Header Injection In app.legalrobot.com", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "app.legalrobot.com", 
        "max_severity": "critical", 
        "databaseId": 519, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-08-29T18:57:32.649Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-29T18:57:32.649Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Thanks for the report! I'm not sure whether this is an issue with our redirect rules on CloudFlare, or an issue with our service, we'll find out. \n\nSince this attack would require user interaction or an intermediate to edit the host header, it's probably a fairly low severity, but certainly looks like something we can fix.", 
            "markdown_message": "<p>Thanks for the report! I&#39;m not sure whether this is an issue with our redirect rules on CloudFlare, or an issue with our service, we&#39;ll find out. </p>\n\n<p>Since this attack would require user interaction or an intermediate to edit the host header, it&#39;s probably a fairly low severity, but certainly looks like something we can fix.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1963914, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-29T19:20:02.122Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-29T19:20:02.122Z", 
            "actor": {
                "username": "cuso4", 
                "url": "/cuso4", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/181/556/ad7a57c3ac7bd9e68fcc690bd1d36dbf396e1641_medium.jpg?1507748517"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "@danrubins \nhttp://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html\nhttps://hackerone.com/reports/167631\n\nI am not sure whether can takeover accounts using this or not but just take a refrence here ...\nanyway we can block this host....\n\nthanks ", 
            "markdown_message": "<p><a href=\"/danrubins\">@danrubins</a> <br>\n<a title=\"http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html\" href=\"/redirect?signature=c54a8a6d23baab2c303c52c004a8eaaf8918713c&amp;url=http%3A%2F%2Fwww.skeletonscribe.net%2F2013%2F05%2Fpractical-http-host-header-attacks.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"https://hackerone.com/reports/167631\" href=\"https://hackerone.com/reports/167631\">https://hackerone.com/reports/167631</a></p>\n\n<p>I am not sure whether can takeover accounts using this or not but just take a refrence here ...<br>\nanyway we can block this host....</p>\n\n<p>thanks </p>\n", 
            "type": "Activities::Comment", 
            "id": 1963975, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-29T19:39:46.958Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-29T19:39:46.958Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Ok, interesting. We don't use Host when constructing our URLs, so that kind of attack should be avoided.", 
            "markdown_message": "<p>Ok, interesting. We don&#39;t use Host when constructing our URLs, so that kind of attack should be avoided.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1964002, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-29T19:47:49.153Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-29T19:47:49.153Z", 
            "actor": {
                "username": "cuso4", 
                "url": "/cuso4", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/181/556/ad7a57c3ac7bd9e68fcc690bd1d36dbf396e1641_medium.jpg?1507748517"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "@danrubins \nI Founded Acoount takeover with same bug in different web application ....\nIf we take general senario then , when cookies and access token are parsing though url then it would be impactfull ...\nanyway looking forward for triage and fix....", 
            "markdown_message": "<p><a href=\"/danrubins\">@danrubins</a> <br>\nI Founded Acoount takeover with same bug in different web application ....<br>\nIf we take general senario then , when cookies and access token are parsing though url then it would be impactfull ...<br>\nanyway looking forward for triage and fix....</p>\n", 
            "type": "Activities::Comment", 
            "id": 1964017, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T16:00:04.666Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T16:00:04.666Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "We talked to CloudFlare's excellent support team. Here is what they shared with us:\n\n> The host header attack isn't an attack. it's normal functionality. Thats how proxied requests are supposed to work - you request a URL but supply a different host header so the origin knows which host you want to talk to. Host based aliases work.\n> \n> The only person this redirect would happen for is the requester as they are manually specifying the \"Host\" header to get this result. This could only affect other visitors if they also specified the same \"Host\" header that the request used. This is also true with cached resources as our cache key is stored based on the \"Host\" provided.\n\nThis certainly is an interesting report, but seems to apply more to services that actually use the host header (see report #226659). Since we were able to rule out any effects on our side, I'm inclined to close this as Informative.", 
            "markdown_message": "<p>We talked to CloudFlare&#39;s excellent support team. Here is what they shared with us:</p>\n\n<blockquote>\n<p>The host header attack isn&#39;t an attack. it&#39;s normal functionality. Thats how proxied requests are supposed to work - you request a URL but supply a different host header so the origin knows which host you want to talk to. Host based aliases work.</p>\n\n<p>The only person this redirect would happen for is the requester as they are manually specifying the &quot;Host&quot; header to get this result. This could only affect other visitors if they also specified the same &quot;Host&quot; header that the request used. This is also true with cached resources as our cache key is stored based on the &quot;Host&quot; provided.</p>\n</blockquote>\n\n<p>This certainly is an interesting report, but seems to apply more to services that actually use the host header (see report <a href=\"/reports/226659\">#226659</a>). Since we were able to rule out any effects on our side, I&#39;m inclined to close this as Informative.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1966524, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T16:00:11.810Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T16:00:11.810Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1966525, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T17:04:23.971Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T17:04:23.971Z", 
            "actor": {
                "username": "cuso4", 
                "url": "/cuso4", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/181/556/ad7a57c3ac7bd9e68fcc690bd1d36dbf396e1641_medium.jpg?1507748517"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "well @danrubins ,\n\n<<We talked to CloudFlare's excellent support team. Here is what they shared with us:>>\n\nI reported this to them and issue is they blocked most of the sites but some are steal able for host header injection ...hope they will fix it since this founded in many websites\n  \n\n<<The host header attack isn't an attack. it's normal functionality. Thats how proxied requests are supposed to work - you request a URL but supply a different host header so the origin knows which host you want to talk to. Host based aliases work.\n\nIt would be interesting if something we can do with bug like account takeover ..\n\n<<<This certainly is an interesting report, but seems to apply more to services that actually use the host header (see report #226659). Since we were able to rule out any effects on our side, I'm inclined to close this as Informative.\n\nYes , absolutely . I founded this in some web application at which we can take over user's account using this .if the same would be in legalrobot then it will be quit interesting .\n\nPOST WORDS :\n\n@danrubins , this very good policy that every report are getting disclose since tansperancy does metter but as i said some web appliation having this issue at impactfull level and they are getting traiged so i should not disclose this report atleast for now .please let me allow when those web apps get the reports as resolved i may disclose ....\n\n\n\nBest regards.\n\n\n", 
            "markdown_message": "<p>well <a href=\"/danrubins\">@danrubins</a> ,</p>\n\n<p>&lt;&lt;We talked to CloudFlare&#39;s excellent support team. Here is what they shared with us:&gt;&gt;</p>\n\n<p>I reported this to them and issue is they blocked most of the sites but some are steal able for host header injection ...hope they will fix it since this founded in many websites</p>\n\n<p>&lt;&lt;The host header attack isn&#39;t an attack. it&#39;s normal functionality. Thats how proxied requests are supposed to work - you request a URL but supply a different host header so the origin knows which host you want to talk to. Host based aliases work.</p>\n\n<p>It would be interesting if something we can do with bug like account takeover ..</p>\n\n<p>&lt;&lt;&lt;This certainly is an interesting report, but seems to apply more to services that actually use the host header (see report <a href=\"/reports/226659\">#226659</a>). Since we were able to rule out any effects on our side, I&#39;m inclined to close this as Informative.</p>\n\n<p>Yes , absolutely . I founded this in some web application at which we can take over user&#39;s account using this .if the same would be in legalrobot then it will be quit interesting .</p>\n\n<p>POST WORDS :</p>\n\n<p><a href=\"/danrubins\">@danrubins</a> , this very good policy that every report are getting disclose since tansperancy does metter but as i said some web appliation having this issue at impactfull level and they are getting traiged so i should not disclose this report atleast for now .please let me allow when those web apps get the reports as resolved i may disclose ....</p>\n\n<p>Best regards.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1966732, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T17:25:24.742Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T17:25:24.742Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Ok, thanks. \n\nYeah, it's our policy to *at least* ask for disclosure on all reports in the interest of transparency, but it is not necessary for Informative/Not Applicable/Duplicate, only Resolved reports - even then, we're happy to do Limited Disclosure or delay for a good reason. In order to hold ourselves to a high standard, we'll also do Full Disclosure if there is a possibility that we've been unfair to a researcher (Spam, Locked Report, etc). \n\nSo, this report will be available for disclosure if/when you decide you want to do so. Cheers!", 
            "markdown_message": "<p>Ok, thanks. </p>\n\n<p>Yeah, it&#39;s our policy to <em>at least</em> ask for disclosure on all reports in the interest of transparency, but it is not necessary for Informative/Not Applicable/Duplicate, only Resolved reports - even then, we&#39;re happy to do Limited Disclosure or delay for a good reason. In order to hold ourselves to a high standard, we&#39;ll also do Full Disclosure if there is a possibility that we&#39;ve been unfair to a researcher (Spam, Locked Report, etc). </p>\n\n<p>So, this report will be available for disclosure if/when you decide you want to do so. Cheers!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1966859, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-01T14:42:39.243Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-01T14:42:39.243Z", 
            "actor": {
                "username": "cuso4", 
                "url": "/cuso4", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/181/556/ad7a57c3ac7bd9e68fcc690bd1d36dbf396e1641_medium.jpg?1507748517"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2342149, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-01T14:42:39.324Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-01T14:42:39.324Z", 
            "actor": {
                "username": "cuso4", 
                "url": "/cuso4", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/181/556/ad7a57c3ac7bd9e68fcc690bd1d36dbf396e1641_medium.jpg?1507748517"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2342150, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "cuso4", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/cuso4", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/181/556/32a043f3586e45a47ee13c46b29fe17e6976b90e_small.jpg?1507748517"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 53, 
        "name": "Open Redirect"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2018-02-01T14:42:39.282Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/264405", 
    "created_at": "2017-08-29T18:33:01.777Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>As per policy header injection are low priority bug but i recently discovered that when attacker change host to a special domain then victim will be redirect there....</p>\n\n<p>My Request :</p>\n\n<p>GET /sign-in HTTP/1.1<br>\nHost: app.legalrobot.com<br>\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0<br>\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8<br>\nAccept-Language: en-US,en;q=0.5<br>\nAccept-Encoding: gzip, deflate, br<br>\nCookie: __cfduid=d89f1b742903f9fedf12446b6bf8c8af51503233541; _ga=GA1.2.77695220.1503233606; ajs_user_id=%22jB5saN68Z69Dd64Rp%22; ajs_group_id=null; ajs_anonymous_id=%2271e53feb-3f14-49bc-acf8-25c0b9255d72%22; intercom-id-nmyyq5i5=ec9d124c-3c23-4608-9a39-f903db254744; _gat=1<br>\nConnection: close<br>\nUpgrade-Insecure-Requests: 1</p>\n\n<p>200 RESPONSE </p>\n\n<p>CHANGED HOST TO XNXX.COM  ..SO REQUEST :</p>\n\n<p>GET /sign-in HTTP/1.1<br>\nHost: xnxx.com<br>\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0<br>\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8<br>\nAccept-Language: en-US,en;q=0.5<br>\nAccept-Encoding: gzip, deflate, br<br>\nCookie: __cfduid=d89f1b742903f9fedf12446b6bf8c8af51503233541; _ga=GA1.2.77695220.1503233606; ajs_user_id=%22jB5saN68Z69Dd64Rp%22; ajs_group_id=null; ajs_anonymous_id=%2271e53feb-3f14-49bc-acf8-25c0b9255d72%22; intercom-id-nmyyq5i5=ec9d124c-3c23-4608-9a39-f903db254744; _gat=1<br>\nConnection: close<br>\nUpgrade-Insecure-Requests: 1</p>\n\n<p>RESPONSE :</p>\n\n<p>HTTP/1.1 301 Moved Permanently<br>\nDate: Tue, 29 Aug 2017 18:29:20 GMT<br>\nContent-Type: text/html; charset=iso-8859-1<br>\nConnection: close<br>\nLocation: <a title=\"http://www.xnxx.com/sign-in\" href=\"/redirect?signature=1993961571bf66f24e6a9120d7f509baec6fa91a&amp;url=http%3A%2F%2Fwww.xnxx.com%2Fsign-in\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.xnxx.com/sign-in</span><i class=\"icon-external-link\"></i></a><br>\nVary: Accept-Encoding<br>\nServer: cloudflare-nginx<br>\nCF-RAY: 3961933e8d168860-BOM<br>\nContent-Length: 235</p>\n\n<p>&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;<br>\n&lt;html&gt;&lt;head&gt;<br>\n&lt;title&gt;301 Moved Permanently&lt;/title&gt;<br>\n&lt;/head&gt;&lt;body&gt;<br>\n&lt;h1&gt;Moved Permanently&lt;/h1&gt;<br>\n&lt;p&gt;The document has moved &lt;a href=&quot;http://www.xnxx.com/sign-in&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;<br>\n&lt;/body&gt;&lt;/html&gt;</p>\n\n<p>It&#39;s 301 so it should not allow to moved permenanlty to a different domain this may lead to some serious attacking senario...</p>\n\n<p>as fix we can block xnxx and other impactfull host </p>\n\n<p>ps: please use xnxx.com only ( as a purpose use facebook.com and others domain also but there os no redirect )  we can find many  domain as xnxx.com so there must be a strict waf ..</p>\n", 
    "vulnerability_information": "As per policy header injection are low priority bug but i recently discovered that when attacker change host to a special domain then victim will be redirect there....\n\nMy Request :\n\nGET /sign-in HTTP/1.1\nHost: app.legalrobot.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nCookie: __cfduid=d89f1b742903f9fedf12446b6bf8c8af51503233541; _ga=GA1.2.77695220.1503233606; ajs_user_id=%22jB5saN68Z69Dd64Rp%22; ajs_group_id=null; ajs_anonymous_id=%2271e53feb-3f14-49bc-acf8-25c0b9255d72%22; intercom-id-nmyyq5i5=ec9d124c-3c23-4608-9a39-f903db254744; _gat=1\nConnection: close\nUpgrade-Insecure-Requests: 1\n\n\n\n200 RESPONSE \n\nCHANGED HOST TO XNXX.COM  ..SO REQUEST :\n\nGET /sign-in HTTP/1.1\nHost: xnxx.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nCookie: __cfduid=d89f1b742903f9fedf12446b6bf8c8af51503233541; _ga=GA1.2.77695220.1503233606; ajs_user_id=%22jB5saN68Z69Dd64Rp%22; ajs_group_id=null; ajs_anonymous_id=%2271e53feb-3f14-49bc-acf8-25c0b9255d72%22; intercom-id-nmyyq5i5=ec9d124c-3c23-4608-9a39-f903db254744; _gat=1\nConnection: close\nUpgrade-Insecure-Requests: 1\n\n\n\nRESPONSE :\n\n\nHTTP/1.1 301 Moved Permanently\nDate: Tue, 29 Aug 2017 18:29:20 GMT\nContent-Type: text/html; charset=iso-8859-1\nConnection: close\nLocation: http://www.xnxx.com/sign-in\nVary: Accept-Encoding\nServer: cloudflare-nginx\nCF-RAY: 3961933e8d168860-BOM\nContent-Length: 235\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>301 Moved Permanently</title>\n</head><body>\n<h1>Moved Permanently</h1>\n<p>The document has moved <a href=\"http://www.xnxx.com/sign-in\">here</a>.</p>\n</body></html>\n\n\n\nIt's 301 so it should not allow to moved permenanlty to a different domain this may lead to some serious attacking senario...\n\nas fix we can block xnxx and other impactfull host \n\n\nps: please use xnxx.com only ( as a purpose use facebook.com and others domain also but there os no redirect )  we can find many  domain as xnxx.com so there must be a strict waf ..\n\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.legalrobot.com", 
            "about": "Automated legal document review using artificial intelligence", 
            "twitter_handle": "LegalRobot", 
            "name": "Legal Robot"
        }, 
        "handle": "legalrobot", 
        "url": "https://hackerone.com/legalrobot", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/601/d66a130fccecc6d857e39f8b4251b67e4dfcc9db_small.png?1472852893", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/601/9242a6d1525aeaccd124e9bd6f222a3ca41f3de9_medium.png?1472852893"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1601, 
        "default_currency": "usd"
    }, 
    "is_published": false
}