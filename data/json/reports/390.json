{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2013-11-30T12:50:43.920Z", 
    "voters": [
        "test0x00", 
        "jensec", 
        "hackerhero", 
        "bogdantcaciuc", 
        "skansing", 
        "eveeez", 
        "benoculars", 
        "axolotl", 
        "mr_r3boot", 
        "carbonphyber", 
        "and 14 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 390, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2013-11-29T22:37:26.143Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Pixel flood attack", 
    "is_member_of_team?": null, 
    "vote_count": 24, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2013-11-30T12:50:44.000Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "attachments": [
        {
            "file_name": "lottapixel.jpg", 
            "type": "image/jpeg", 
            "id": 128, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/000/128/5f5a974e5f67ab7a11d2d92bd40f8997969f2f17/lottapixel.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230709Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ba22cce8b1b465b0e1312e3d7b2d4352202e2201d210ec726cec8b8ae9841ec7"
        }, 
        {
            "file_name": "timeout1.png", 
            "type": "image/png", 
            "id": 129, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/000/129/e3e0772eef6dfc5de6771a63ac2278a6f6322dd3/timeout1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230709Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1de324c311b7bb49bcee8e8988907ec03c61e08652df870a1551440151807367"
        }, 
        {
            "file_name": "timeout2.png", 
            "type": "image/png", 
            "id": 130, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/000/130/dde4645cf07170d871c7ef0dd55e1365e6796b00/timeout2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230709Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5f5928a4216401e573e381da39a91973d439a237dddc28645b77bcdcc342f2b8"
        }, 
        {
            "file_name": "timeout3.png", 
            "type": "image/png", 
            "id": 131, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/000/131/508c53ebc5bcec601308545cc9e57a473f5c8f67/timeout3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230709Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b8b4a57dee71b617b346cfde5bcd1ea596a7d2065dbb242a3ff3ffeb8cdbda3b"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "reporter": {
                "username": "dutchgraa", 
                "url": "/dutchgraa"
            }, 
            "created_at": "2013-11-12T21:58:27.518Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2013-11-12T21:58:27.518Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Nice catch! Thanks for your quick and prompt report. Shortly after you uploaded the tampered JPEG file, we noticed storage and memory exhaustion errors.\r\n\r\nThe bug seems to be related to Paperclip, a gem we use to process image uploads and resizing. Paperclip passes the file on to the `identify` command (part of the ImageMagick suite). This command somehow gets confused since the given dimensions differ from the actual dimensions. It runs out of memory and starts swapping to disk, which in turn increased disk I/O. \r\n\r\nWe identified two problems:\r\n\r\n- Paperclip seems to always run the `identify` command with the `exif:orientation` option enabled, while only one Paperclip feature (auto orient) needs this option. This option caused the DoS at our side. We fixed this by monkey patching [the way Paperclip builds a geometry string](https://github.com/thoughtbot/paperclip/blob/master/lib/paperclip/geometry_detector_factory.rb#L18). This is probably something that should get fixed in Paperclip too.\r\n- Paperclip started resizing the uploaded image even before it validated whether the image's dimensions were too large. We fixed this by instructing Paperclip to run validations before starting the resizing process.\r\n\r\nThanks again! We'll follow up regarding a reward soon.", 
            "markdown_message": "<p>Nice catch! Thanks for your quick and prompt report. Shortly after you uploaded the tampered JPEG file, we noticed storage and memory exhaustion errors.</p>\n\n<p>The bug seems to be related to Paperclip, a gem we use to process image uploads and resizing. Paperclip passes the file on to the <code>identify</code> command (part of the ImageMagick suite). This command somehow gets confused since the given dimensions differ from the actual dimensions. It runs out of memory and starts swapping to disk, which in turn increased disk I/O. </p>\n\n<p>We identified two problems:</p>\n\n<ul>\n<li>Paperclip seems to always run the <code>identify</code> command with the <code>exif:orientation</code> option enabled, while only one Paperclip feature (auto orient) needs this option. This option caused the DoS at our side. We fixed this by monkey patching <a href=\"/redirect?signature=18bd826298ef2b306b6aafc84f5c865387cc4ba3&amp;url=https%3A%2F%2Fgithub.com%2Fthoughtbot%2Fpaperclip%2Fblob%2Fmaster%2Flib%2Fpaperclip%2Fgeometry_detector_factory.rb%23L18\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>the way Paperclip builds a geometry string</span><i class=\"icon-external-link\"></i></a>. This is probably something that should get fixed in Paperclip too.</li>\n<li>Paperclip started resizing the uploaded image even before it validated whether the image&#39;s dimensions were too large. We fixed this by instructing Paperclip to run validations before starting the resizing process.</li>\n</ul>\n\n<p>Thanks again! We&#39;ll follow up regarding a reward soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 2178, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2013-11-29T22:37:17.603Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2013-11-29T22:37:17.603Z", 
            "actor": {
                "url": "/security", 
                "profile": {
                    "name": "HackerOne"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
                }
            }, 
            "team_handle": "security", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "dutchgraa", 
                "url": "/dutchgraa"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 2687, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2013-11-29T22:37:26.160Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2013-11-29T22:37:26.160Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2688, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2013-11-30T12:50:43.937Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2013-11-30T12:50:43.937Z", 
            "actor": {
                "username": "dutchgraa", 
                "url": "/dutchgraa", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/625/72819d225ac6312dac6ddfb0da76f0c5c7f8afcf_medium.?1386958714"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks for the service! Never imagined I'd pay the rent with an image. :)", 
            "markdown_message": "<p>Thanks for the service! Never imagined I&#39;d pay the rent with an image. :)</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2762, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-01-21T21:10:35.357Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-21T21:10:52.083Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "We've got a few requests to post a follow up regarding the solution we ended up implementing.\r\n\r\nFor now, we're just monkey patching Paperclip's [geometry_detector_factory.rb](https://github.com/thoughtbot/paperclip/blob/73d40d165e739193a268b54baba170ed457799ac/lib/paperclip/geometry_detector_factory.rb) in order to disable ImageMagick's EXIF orientation option (which was causing the trouble here).\r\n\r\nHere's the monkey patch:\r\n\r\n```\r\nmodule Paperclip\r\n  class GeometryDetector\r\n    private\r\n\r\n    def geometry_string\r\n      begin\r\n        silence_stream(STDERR) do\r\n          Paperclip.run(\"identify\", \"-format '%wx%h,1' :file\", :file => \"#{path}[0]\")\r\n        end\r\n      rescue Cocaine::ExitStatusError\r\n        \"\"\r\n      rescue Cocaine::CommandNotFoundError => e\r\n        raise_because_imagemagick_missing\r\n      end\r\n    end\r\n  end\r\nend\r\n```", 
            "markdown_message": "<p>We&#39;ve got a few requests to post a follow up regarding the solution we ended up implementing.</p>\n\n<p>For now, we&#39;re just monkey patching Paperclip&#39;s <a href=\"/redirect?signature=f2beeed17161d00a2c8f4dc773faff317b27cf43&amp;url=https%3A%2F%2Fgithub.com%2Fthoughtbot%2Fpaperclip%2Fblob%2F73d40d165e739193a268b54baba170ed457799ac%2Flib%2Fpaperclip%2Fgeometry_detector_factory.rb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>geometry_detector_factory.rb</span><i class=\"icon-external-link\"></i></a> in order to disable ImageMagick&#39;s EXIF orientation option (which was causing the trouble here).</p>\n\n<p>Here&#39;s the monkey patch:</p>\n<pre class=\"highlight plaintext\"><code>module Paperclip\n  class GeometryDetector\n    private\n\n    def geometry_string\n      begin\n        silence_stream(STDERR) do\n          Paperclip.run(&quot;identify&quot;, &quot;-format &#39;%wx%h,1&#39; :file&quot;, :file =&gt; &quot;#{path}[0]&quot;)\n        end\n      rescue Cocaine::ExitStatusError\n        &quot;&quot;\n      rescue Cocaine::CommandNotFoundError =&gt; e\n        raise_because_imagemagick_missing\n      end\n    end\n  end\nend\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 3902, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "dutchgraa", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/dutchgraa", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/625/b5659eb81c43c8c0c1ede226fdcd19fb319fff07_small.?1386958714"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -158321785.0277874, 
    "disclosed_at": "2013-11-30T12:50:43.920Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/390", 
    "created_at": "2013-11-12T16:04:27.096Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hey guys,</p>\n\n<p>I just found a way to make your service timeout. I didn&#39;t know if I should put this under the Internet section of just the HackerOne section, because the exploit also crashes my Windows Image Viewer. A lot of other services should be vulnerable as well.</p>\n\n<p>For the sake of responsible disclosure I haven&#39;t made an article about this yet. But if you fix this problem I would like to publish this for my ego, and because of the maximum giggles I experienced after finding this.</p>\n\n<p>The exploit is really simple. I have an image of 5kb, 260x260 pixels. In the image itself I exchange the 260x260 values with 0xfafa x 0xfafa (so 64250x64250 pixels). Now from what I remember your service tries to convert the image once uploaded. By loading the &#39;whole image&#39; into memory, it tries to allocate 4128062500 pixels into memory, flooding the memory and causing DoS. This also happens with Windows Photo Viewer on my computer.</p>\n\n<p>As attachments I sent three foto&#39;s of your service timing out (had to be sure it was my image), and the image with the &#39;spoofed&#39; pixels.</p>\n\n<p>As a patch I would just set a maximum amount of pixels an image can have.</p>\n\n<p>With kind regards,</p>\n\n<p>Sipke (Graa)</p>\n", 
    "vulnerability_information": "Hey guys,\r\n\r\nI just found a way to make your service timeout. I didn't know if I should put this under the Internet section of just the HackerOne section, because the exploit also crashes my Windows Image Viewer. A lot of other services should be vulnerable as well.\r\n\r\nFor the sake of responsible disclosure I haven't made an article about this yet. But if you fix this problem I would like to publish this for my ego, and because of the maximum giggles I experienced after finding this.\r\n\r\nThe exploit is really simple. I have an image of 5kb, 260x260 pixels. In the image itself I exchange the 260x260 values with 0xfafa x 0xfafa (so 64250x64250 pixels). Now from what I remember your service tries to convert the image once uploaded. By loading the 'whole image' into memory, it tries to allocate 4128062500 pixels into memory, flooding the memory and causing DoS. This also happens with Windows Photo Viewer on my computer.\r\n\r\nAs attachments I sent three foto's of your service timing out (had to be sure it was my image), and the image with the 'spoofed' pixels.\r\n\r\nAs a patch I would just set a maximum amount of pixels an image can have.\r\n\r\nWith kind regards,\r\n\r\nSipke (Graa)", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}