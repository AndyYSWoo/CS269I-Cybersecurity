{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "bl4de", 
        "0x08"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 321670, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-05-11T14:54:08.680Z", 
    "vulnerability_information": "I would like to report n uninitialized Buffer allocation issue in `stringstream`.\nIt allows to extract sensitive data from uninitialized memory or to cause a DoS by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower.\n\n# Module\n\n**module name:** `stringstream`\n**version:** 0.0.5\n**npm page:** `https://www.npmjs.com/package/stringstream`\n\n## Module Description\n\n> Decode streams into strings The Right Way(tm)\n\n## Module Stats\n\n740 368 downloads in the last day\n4 606 368 downloads in the last week\n19 182 466 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\nSee https://github.com/mhart/StringStream/blob/v0.0.5/stringstream.js#L32\n\nThe problem arises when a number is passed in the stream. That is unlikely to be attacker-controlled in real-world setups, but still possible. The API should not propagate the already-bad Buffer issue further.\n\nOn Node.js 4.x and below (4.x is still supported), this exposes uninitialized memory, which could contain sensitive data.\n\nOn Node.js 6.x and newer, this is type-checked on Node.js side and thows an error there.\n\n## Steps To Reproduce:\n\n```js\nvar stringstream = require('stringstream')\nvar stream = stringstream('hex', 'utf8')\nstream.pipe(process.stdout)\nstream.write(10000);\nstream.end();\n```\n\nRun on Node.js 4.x (or lower). `hex`/`utf8` is irrelevant, the issue is reproducable with all encodings.\n\n## Supporting Material/References:\n\n- Arch Linux Current\n- Node.js 4.8.7\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N\n\n## Impact\n\nSensitive uninitialized memory exposure\nDenail of Service\nThis issue affects only setups using Node.js 4.x (still supported) or lower.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "low", 
            "privileges_required": "none", 
            "user_interaction": "none", 
            "attack_vector": "physical", 
            "attack_complexity": "low", 
            "scope": "unchanged", 
            "integrity": "none", 
            "availability": "high"
        }, 
        "rating": "medium", 
        "score": 5.2, 
        "author_type": "Team"
    }, 
    "title": "`stringstream` allocates uninitialized Buffers when number is passed in input stream on Node.js 4.x and below", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "stringstream", 
        "max_severity": "critical", 
        "databaseId": 9377, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-06-10T14:54:08.757Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-04-05T12:15:07.871Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-05T12:15:07.871Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 2568743, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-05T12:20:14.559Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-05T12:20:14.559Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Thanks @chalker,\n\nI was able to confirm the vulnerability and will proceed to invite the module maintainer to the conversation to discuss the fix.", 
            "markdown_message": "<p>Thanks <a href=\"/chalker\">@chalker</a>,</p>\n\n<p>I was able to confirm the vulnerability and will proceed to invite the module maintainer to the conversation to discuss the fix.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2568749, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-05T12:20:53.490Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-05T12:20:53.490Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (5.2)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2568752, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-24T20:13:34.974Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-24T20:13:34.974Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@chalker no author input on this report", 
            "markdown_message": "<p><a href=\"/chalker\">@chalker</a> no author input on this report</p>\n", 
            "type": "Activities::Comment", 
            "id": 2661180, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-29T20:44:21.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-29T20:46:06.526Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@lirantal I think that the downloads/month are exaggerated here, in a sense that this module is in `request` dependendcy tree, but `request` doesn't actually use it, ref: https://github.com/request/request/pull/2885\n\nI estimate downloads that are not coming from `request` as several orders of decimal magnitude lower.\n\nI suppose that disclosing (and letting everyone migrate from it) would be fine.", 
            "markdown_message": "<p><a href=\"/lirantal\">@lirantal</a> I think that the downloads/month are exaggerated here, in a sense that this module is in <code>request</code> dependendcy tree, but <code>request</code> doesn&#39;t actually use it, ref: <a title=\"https://github.com/request/request/pull/2885\" href=\"/redirect?signature=8da769c39cdaa3ddcf75dd3a1918e6510298226d&amp;url=https%3A%2F%2Fgithub.com%2Frequest%2Frequest%2Fpull%2F2885\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/request/request/pull/2885</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>I estimate downloads that are not coming from <code>request</code> as several orders of decimal magnitude lower.</p>\n\n<p>I suppose that disclosing (and letting everyone migrate from it) would be fine.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2678076, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T08:47:38.536Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T08:47:38.536Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Alright so we're saying that the download count probably originates from the request module and even then it's for a specific case that you have an open PR for.\n\nI'll go ahead and disclose the vulnerability then for stringstream", 
            "markdown_message": "<p>Alright so we&#39;re saying that the download count probably originates from the request module and even then it&#39;s for a specific case that you have an open PR for.</p>\n\n<p>I&#39;ll go ahead and disclose the vulnerability then for stringstream</p>\n", 
            "type": "Activities::Comment", 
            "id": 2728653, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T09:05:07.705Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T09:05:07.705Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Yeah, thank you!", 
            "markdown_message": "<p>Yeah, thank you!</p>\n", 
            "type": "Activities::Comment", 
            "id": 2728696, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "chalker", 
                "url": "/chalker"
            }, 
            "created_at": "2018-05-11T14:53:58.348Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T14:53:58.348Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2729531, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T14:54:08.711Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T14:54:08.711Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2729533, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T14:54:16.587Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T14:54:16.587Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2729535, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "old_scope": "Other module", 
            "created_at": "2018-05-19T07:23:15.919Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-19T07:23:15.919Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "new_scope": "stringstream", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ChangedScope", 
            "id": 2764955, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "chalker", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/chalker", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/068/907/f597f5ffcdc20460ef54feffb26e20d03f4d2421_small.png?1490131885"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 8, 
        "name": "Out-of-bounds Read"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -15492602.20386456, 
    "disclosed_at": "2018-05-11T14:54:16.685Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/321670", 
    "created_at": "2018-03-03T21:51:21.472Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I would like to report n uninitialized Buffer allocation issue in <code>stringstream</code>.<br>\nIt allows to extract sensitive data from uninitialized memory or to cause a DoS by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower.</p>\n\n<h1 id=\"module\">Module</h1>\n\n<p><strong>module name:</strong> <code>stringstream</code><br>\n<strong>version:</strong> 0.0.5<br>\n<strong>npm page:</strong> <code>https://www.npmjs.com/package/stringstream</code></p>\n\n<h2 id=\"module-description\">Module Description</h2>\n\n<blockquote>\n<p>Decode streams into strings The Right Way(tm)</p>\n</blockquote>\n\n<h2 id=\"module-stats\">Module Stats</h2>\n\n<p>740 368 downloads in the last day<br>\n4 606 368 downloads in the last week<br>\n19 182 466 downloads in the last month</p>\n\n<h1 id=\"vulnerability\">Vulnerability</h1>\n\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n\n<p>See <a title=\"https://github.com/mhart/StringStream/blob/v0.0.5/stringstream.js#L32\" href=\"/redirect?signature=69955a4a61418a3d937941b4da787dc10255c89a&amp;url=https%3A%2F%2Fgithub.com%2Fmhart%2FStringStream%2Fblob%2Fv0.0.5%2Fstringstream.js%23L32\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mhart/StringStream/blob/v0.0.5/stringstream.js#L32</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>The problem arises when a number is passed in the stream. That is unlikely to be attacker-controlled in real-world setups, but still possible. The API should not propagate the already-bad Buffer issue further.</p>\n\n<p>On Node.js 4.x and below (4.x is still supported), this exposes uninitialized memory, which could contain sensitive data.</p>\n\n<p>On Node.js 6.x and newer, this is type-checked on Node.js side and thows an error there.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce:</h2>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">stringstream</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;stringstream&#39;</span><span class=\"p\">)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">stream</span> <span class=\"o\">=</span> <span class=\"nx\">stringstream</span><span class=\"p\">(</span><span class=\"s1\">&#39;hex&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;utf8&#39;</span><span class=\"p\">)</span>\n<span class=\"nx\">stream</span><span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">stdout</span><span class=\"p\">)</span>\n<span class=\"nx\">stream</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">);</span>\n<span class=\"nx\">stream</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">();</span>\n</code></pre>\n<p>Run on Node.js 4.x (or lower). <code>hex</code>/<code>utf8</code> is irrelevant, the issue is reproducable with all encodings.</p>\n\n<h2 id=\"supporting-material-references\">Supporting Material/References:</h2>\n\n<ul>\n<li>Arch Linux Current</li>\n<li>Node.js 4.8.7</li>\n</ul>\n\n<h1 id=\"wrap-up\">Wrap up</h1>\n\n<ul>\n<li>I contacted the maintainer to let them know: N</li>\n<li>I opened an issue in the related repository: N</li>\n</ul>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Sensitive uninitialized memory exposure<br>\nDenail of Service<br>\nThis issue affects only setups using Node.js 4.x (still supported) or lower.</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://nodejs.org/en/security/", 
            "about": "This program is used to handle vulnerabilities in the Node.js ecosystem.", 
            "twitter_handle": "", 
            "name": "Node.js third-party modules"
        }, 
        "handle": "nodejs-ecosystem", 
        "url": "https://hackerone.com/nodejs-ecosystem", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/023/949/309112251b444244d95977d1299148aae6482789_small.?1508679627", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 23949, 
        "default_currency": "usd"
    }, 
    "is_published": false
}