{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-11-05T08:48:07.990Z", 
    "voters": [
        "michiel", 
        "eveeez", 
        "leet-boy", 
        "japz", 
        "smit", 
        "spetr0x", 
        "martijn"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 157270, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "CSRF vulnerability that allows an attacker to purge plugin metric data", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-12-05T08:48:08.016Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-08-08T21:28:37.259Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-08T21:28:37.259Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 1113593, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-08T21:38:40.989Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-08T21:38:40.989Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi Martijn,\n\nThank you for the detailed and pragmatic report. We agree that would be pretty difficult to exploit but think we should fix it anyway. We've created a ticket for the responsible engineering team and they'll begin addressing the issue according to our vulnerability rating system. \n\nWe'll update this ticket when the issue has been addressed for you to verify the fix.\n\nCheers,\nMatthew", 
            "markdown_message": "<p>Hi Martijn,</p>\n\n<p>Thank you for the detailed and pragmatic report. We agree that would be pretty difficult to exploit but think we should fix it anyway. We&#39;ve created a ticket for the responsible engineering team and they&#39;ll begin addressing the issue according to our vulnerability rating system. </p>\n\n<p>We&#39;ll update this ticket when the issue has been addressed for you to verify the fix.</p>\n\n<p>Cheers,<br>\nMatthew</p>\n", 
            "type": "Activities::Comment", 
            "id": 1113618, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-09T04:05:28.300Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-09T04:05:28.300Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Awesome, thanks for the quick reply! ", 
            "markdown_message": "<p>Awesome, thanks for the quick reply! </p>\n", 
            "type": "Activities::Comment", 
            "id": 1114080, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-10T22:25:14.497Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-10T22:25:14.497Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi Martijn,\n\nWe're unable to reproduce this issue. The steps we follow were:\n- Used an agent w/ a plugin to generate metric data (ensuring that data indeed showed up in the application)\n- Created an html file containing <img src=\"https://rpm.newrelic.com/accounts/<acctID>/agents/<pluginID>\"/>\n- Loaded the html file in a browser\n\nHowever, we did not see any change with the metric data for that account/plugin. Can you provide some more detail (network captures, etc), for us to diagnose this issue further.\n\nThank you,\nMatthew", 
            "markdown_message": "<p>Hi Martijn,</p>\n\n<p>We&#39;re unable to reproduce this issue. The steps we follow were:</p>\n\n<ul>\n<li>Used an agent w/ a plugin to generate metric data (ensuring that data indeed showed up in the application)</li>\n<li>Created an html file containing &lt;img src=&quot;https://rpm.newrelic.com/accounts/&lt;acctID&gt;/agents/&lt;pluginID&gt;&quot;/&gt;</li>\n<li>Loaded the html file in a browser</li>\n</ul>\n\n<p>However, we did not see any change with the metric data for that account/plugin. Can you provide some more detail (network captures, etc), for us to diagnose this issue further.</p>\n\n<p>Thank you,<br>\nMatthew</p>\n", 
            "type": "Activities::Comment", 
            "id": 1118238, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-12T04:46:29.870Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-12T04:46:29.870Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi @mlapworth - sorry about that. I screwed up on the PoC. The correct URL for the `src` attribute has to be `https://rpm.newrelic.com/accounts/411552/agents/12345/purge_metrics`. My bad! Let me know if that works.", 
            "markdown_message": "<p>Hi <a href=\"/mlapworth\">@mlapworth</a> - sorry about that. I screwed up on the PoC. The correct URL for the <code>src</code> attribute has to be <code>https://rpm.newrelic.com/accounts/411552/agents/12345/purge_metrics</code>. My bad! Let me know if that works.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1121102, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-12T15:37:24.567Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-12T15:37:24.567Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thanks Martijn. We'll re-test now and let you know how it goes.", 
            "markdown_message": "<p>Thanks Martijn. We&#39;ll re-test now and let you know how it goes.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1123302, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-02T09:50:32.200Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-02T09:50:32.200Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi @mlapworth, did you verify the issue. Let me know if you need any help.", 
            "markdown_message": "<p>Hi <a href=\"/mlapworth\">@mlapworth</a>, did you verify the issue. Let me know if you need any help.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1169339, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-07T15:02:50.432Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-07T15:02:50.432Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi Martijn, we have successfully reproduced the issue. I have created a task with the engineering team responsible for that functionality and they're working on it according to our vulnerability rating system. I'll update this ticket once we've engineered a fix so you can re-test.\n\nSorry for the slow response!\n\nCheers,\nMatthew", 
            "markdown_message": "<p>Hi Martijn, we have successfully reproduced the issue. I have created a task with the engineering team responsible for that functionality and they&#39;re working on it according to our vulnerability rating system. I&#39;ll update this ticket once we&#39;ve engineered a fix so you can re-test.</p>\n\n<p>Sorry for the slow response!</p>\n\n<p>Cheers,<br>\nMatthew</p>\n", 
            "type": "Activities::Comment", 
            "id": 1180192, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-07T15:06:15.093Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-07T15:06:15.093Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "No problem, happy to hear you were able to reproduce the issue.", 
            "markdown_message": "<p>No problem, happy to hear you were able to reproduce the issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1180202, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-02T21:34:57.866Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-02T21:34:57.866Z", 
            "actor": {
                "username": "mlapworth", 
                "url": "/mlapworth", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/133/9e85d8632926096fed12357c0d7835402c3c06a9_medium.JPG?1437669168"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi Martijn,\n\nThe fix for this issue has been deployed to production. Can you verify the fix?\n\nThank you,\nMatthew\n", 
            "markdown_message": "<p>Hi Martijn,</p>\n\n<p>The fix for this issue has been deployed to production. Can you verify the fix?</p>\n\n<p>Thank you,<br>\nMatthew</p>\n", 
            "type": "Activities::Comment", 
            "id": 1281236, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-03T12:44:18.324Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-03T12:44:18.324Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thanks for the update. I can confirm this is fixed. It now fires a `POST` request.", 
            "markdown_message": "<p>Thanks for the update. I can confirm this is fixed. It now fires a <code>POST</code> request.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1282205, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "martijn", 
                "url": "/martijn"
            }, 
            "created_at": "2016-11-04T22:39:03.083Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-04T22:39:03.083Z", 
            "actor": {
                "username": "imelven", 
                "url": "/imelven", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/153/4df54ed716b59237add2eccc46f1f39b24d6feef_medium.jpeg?1454633488"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thanks for reporting the issue Martijn ! We appreciate your help in keeping New Relic secure ! ", 
            "markdown_message": "<p>Thanks for reporting the issue Martijn ! We appreciate your help in keeping New Relic secure ! </p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1285360, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-05T08:48:08.003Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-05T08:48:08.003Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1285727, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-05T08:48:08.895Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-05T08:48:08.895Z", 
            "actor": {
                "url": "/newrelic", 
                "profile": {
                    "name": "New Relic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
                }
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1340775, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-03T03:28:31.641Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-03T03:28:31.641Z", 
            "actor": {
                "url": "/newrelic", 
                "profile": {
                    "name": "New Relic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
                }
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 2694217, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "martijn", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/martijn", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/037/466f9408a5948826de482fa0e609f6c30d135cca_small.jpg?1447264787"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -63208687.33825925, 
    "disclosed_at": "2016-12-05T08:48:08.879Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/157270", 
    "created_at": "2016-08-06T22:47:20.418Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h1 id=\"vulnerability-details\">Vulnerability details</h1>\n\n<p>A (seemingly) minor CSRF vulnerability exists in the endpoint that purges plugin metric data. When an admin visits the Agent overview of its account, it will show a button for each plugin that allows the admin to purge the data. This button links to a <code>GET</code> requests that is vulnerable to a CSRF attack.</p>\n\n<h1 id=\"proof-of-concept\">Proof of concept</h1>\n\n<p>The attack is not super likely to be successfully pulled off, given the fact that the attacker needs to know the account ID and the plugin ID. However, in theory, it&#39;s possible and guessable, since the IDs are auto incrementing. To get the combination of both correct with a brute force attach is pretty low in my mind, but it could be interesting to abuse this in a more targeted attack (for example when a &quot;normal user&quot; tricks another user into visiting a certain link that purges the cache).</p>\n\n<p>To reproduce the issue, sign in as an account admin. Make sure the account has a plugin installed. Now go to <a title=\"https://rpm.newrelic.com/accounts/411552/agents\" href=\"/redirect?signature=8079b6b9d438c481bd417d1ee51c12348e5ca404&amp;url=https%3A%2F%2Frpm.newrelic.com%2Faccounts%2F411552%2Fagents\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://rpm.newrelic.com/accounts/411552/agents</span><i class=\"icon-external-link\"></i></a>, where <code>411552</code> is the account ID. Copy the agent ID from the &quot;Purge metric data&quot; and append it to the agent URL: <a title=\"https://rpm.newrelic.com/accounts/411552/agents/12345\" href=\"/redirect?signature=a95ae2866b04a9fbe47959175f973d2b123286d2&amp;url=https%3A%2F%2Frpm.newrelic.com%2Faccounts%2F411552%2Fagents%2F12345\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://rpm.newrelic.com/accounts/411552/agents/12345</span><i class=\"icon-external-link\"></i></a>. Now prepare the exploit:</p>\n<pre class=\"highlight plaintext\"><code>&lt;img src=&quot;https://rpm.newrelic.com/accounts/411552/agents/12345&quot; /&gt;\n</code></pre>\n<p>Store the code example above in a file and serve it to the victim. It&#39;ll fire a <code>GET</code> request as the person that is currently signed into rpm.newrelic.com. If that user has access to the account and agent ID, it&#39;ll purge the metric data for that agent without any interaction (besides visiting the rogue site) of the victim.</p>\n", 
    "vulnerability_information": "# Vulnerability details\nA (seemingly) minor CSRF vulnerability exists in the endpoint that purges plugin metric data. When an admin visits the Agent overview of its account, it will show a button for each plugin that allows the admin to purge the data. This button links to a `GET` requests that is vulnerable to a CSRF attack.\n\n# Proof of concept\nThe attack is not super likely to be successfully pulled off, given the fact that the attacker needs to know the account ID and the plugin ID. However, in theory, it's possible and guessable, since the IDs are auto incrementing. To get the combination of both correct with a brute force attach is pretty low in my mind, but it could be interesting to abuse this in a more targeted attack (for example when a \"normal user\" tricks another user into visiting a certain link that purges the cache).\n\nTo reproduce the issue, sign in as an account admin. Make sure the account has a plugin installed. Now go to https://rpm.newrelic.com/accounts/411552/agents, where `411552` is the account ID. Copy the agent ID from the \"Purge metric data\" and append it to the agent URL: https://rpm.newrelic.com/accounts/411552/agents/12345. Now prepare the exploit:\n\n```\n<img src=\"https://rpm.newrelic.com/accounts/411552/agents/12345\" />\n```\n\nStore the code example above in a file and serve it to the victim. It'll fire a `GET` request as the person that is currently signed into rpm.newrelic.com. If that user has access to the account and agent ID, it'll purge the metric data for that agent without any interaction (besides visiting the rogue site) of the victim.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://newrelic.com", 
            "about": "New Relic's Coordinated Disclosure Program", 
            "twitter_handle": "newrelic", 
            "name": "New Relic"
        }, 
        "handle": "newrelic", 
        "url": "https://hackerone.com/newrelic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/011/4a259e2f731f105c784b1279db99215cefb8abbd_small.?1482361910", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 17011, 
        "default_currency": "usd"
    }, 
    "is_published": false
}