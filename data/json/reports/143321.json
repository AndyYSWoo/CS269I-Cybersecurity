{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2016-06-08T12:39:02.904Z", 
    "voters": [
        "footstep", 
        "fantam1", 
        "temmyscript", 
        "spetr0x", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 143321, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-06-08T12:44:20.602Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Unauthenticated CSRF(User can input any value for CSRF Token)", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:08:05.745Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:08:05.745Z", 
            "actor": {
                "username": "veris-nayan", 
                "url": "/veris-nayan", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "message": "Thanks @footstep for the report. However, since the report describes an Anonymous request, it hardly makes for any Security bug or loophole. Please correct me if I am wrong. ", 
            "markdown_message": "<p>Thanks <a href=\"/footstep\">@footstep</a> for the report. However, since the report describes an Anonymous request, it hardly makes for any Security bug or loophole. Please correct me if I am wrong. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1004487, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:08:29.936Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:08:29.936Z", 
            "actor": {
                "username": "veris-nayan", 
                "url": "/veris-nayan", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "message": "I would like to close the same as Informative. Thanks", 
            "markdown_message": "<p>I would like to close the same as Informative. Thanks</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1004488, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:39:02.965Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:39:02.965Z", 
            "actor": {
                "username": "footstep", 
                "url": "/footstep", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/985/f6984fa964ecb9e27c9ac7b37599af06c8ec8bf1_medium.png?1454165301"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "first_to_agree": true, 
            "message": "Hope we can disclose this", 
            "markdown_message": "<p>Hope we can disclose this</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1004511, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:43:59.400Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:43:59.400Z", 
            "actor": {
                "username": "veris-nayan", 
                "url": "/veris-nayan", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1004515, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:43:59.483Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:43:59.483Z", 
            "actor": {
                "username": "veris-nayan", 
                "url": "/veris-nayan", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1004516, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-08T12:44:26.510Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-08T12:44:40.242Z", 
            "actor": {
                "username": "veris-nayan", 
                "url": "/veris-nayan", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "veris", 
            "message": "Sure", 
            "markdown_message": "<p>Sure</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1004517, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "footstep", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/footstep", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/040/985/108b1b2b44b1103a11a7db90699dadb4c83b113a_small.png?1454165301"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2016-06-08T12:43:59.446Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/143321", 
    "created_at": "2016-06-06T14:47:17.584Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello Veris,<br>\nI believe you have implemented <code>CSRF token</code> on the registration for a reason. In my research, I found that a user supplied CSRF Token would be accepted and even saved in the browser cookie and will be the set token on subsequent request. This report is limited to the <code>Register</code> and <code>Login</code> page anyway.<br>\nAnd most importantly, there is no verification of the <code>CSRF token</code> on the <code>server side</code> because if there is, the request shouldn&#39;t go through to talk of being saved in the browser cookie. The only verification I can see is if the inserted token is more than set 32 characters.</p>\n\n<p>PoC:</p>\n\n<ul>\n<li>Navigate to <a title=\"https://sandbox.veris.in/portal/register/\" href=\"/redirect?signature=7623fea761fb9cc7b1aaf9bbfff6d7f6156692d1&amp;url=https%3A%2F%2Fsandbox.veris.in%2Fportal%2Fregister%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://sandbox.veris.in/portal/register/</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Fill the form and the captcha as required</li>\n<li>Using a proxy tool, intercept the request (I&#39;m using Burp Proxy)</li>\n<li>Change the value of <code>csrftoken</code> in cookie field</li>\n<li>Copy the same input and paste in <code>csrfmiddlewaretoken</code>\n</li>\n<li>Forward the request</li>\n<li>You&#39;ll get a 200 OK response\ni.e Request made successfull</li>\n<li>In the next request, change the value of <code>csrftoken</code> to the one used recently. </li>\n<li>You could now check the value of cookie in the browser. </li>\n<li>Bam! You found it.</li>\n</ul>\n\n<p>I can provide a video proof if needed. I hope you understand</p>\n\n<p>Thanks<br>\nShuaib Oladigbolu</p>\n", 
    "vulnerability_information": "Hello Veris,\nI believe you have implemented `CSRF token` on the registration for a reason. In my research, I found that a user supplied CSRF Token would be accepted and even saved in the browser cookie and will be the set token on subsequent request. This report is limited to the `Register` and `Login` page anyway.\nAnd most importantly, there is no verification of the `CSRF token` on the `server side` because if there is, the request shouldn't go through to talk of being saved in the browser cookie. The only verification I can see is if the inserted token is more than set 32 characters.\n\nPoC:\n- Navigate to https://sandbox.veris.in/portal/register/\n- Fill the form and the captcha as required\n- Using a proxy tool, intercept the request (I'm using Burp Proxy)\n- Change the value of `csrftoken` in cookie field\n- Copy the same input and paste in `csrfmiddlewaretoken`\n- Forward the request\n- You'll get a 200 OK response\ni.e Request made successfull\n- In the next request, change the value of `csrftoken` to the one used recently. \n- You could now check the value of cookie in the browser. \n- Bam! You found it.\n\nI can provide a video proof if needed. I hope you understand\n\nThanks\nShuaib Oladigbolu", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Veris"
        }, 
        "handle": "veris", 
        "url": "https://hackerone.com/veris", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/009/409/a2bc130d19ed603f03d671f510d4bc557581189b_small.png?1461310869", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/009/409/aa0facfcb3cf691763d9cbd55bdfbd6479d042dd_medium.png?1461310869"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 9409, 
        "default_currency": "usd"
    }, 
    "is_published": false
}