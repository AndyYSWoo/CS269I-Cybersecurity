{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-11-10T23:17:32.427Z", 
    "voters": [
        "michiel", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 98259, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-11-10T22:21:20.321Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "'Limited' RCE in certain places where Liquid is accepted", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 1003, 
            "content": "This issue allowed calls to ruby methods that were not intended to be available to the Liquid template.", 
            "content_html": "<p>This issue allowed calls to ruby methods that were not intended to be available to the Liquid template.</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-12-10T22:21:20.496Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,500", 
    "attachments": [
        {
            "file_name": "Malicious_Template_Rendered.png", 
            "type": "image/png", 
            "id": 60587, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/587/ae286436b0aad03fd57cc9a6ba970436345542b2/Malicious_Template_Rendered.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=75818f6d77086e06aa34154251cc211090fd2c6f4c66eac8d4d612d470c7ffa0"
        }, 
        {
            "file_name": "Affected_Mail_Templates.png", 
            "type": "image/png", 
            "id": 60588, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/588/823e942f47f66b026f319f7afd4339a878ed781e/Affected_Mail_Templates.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=81a974cb7518ac32d88670a7dfe18f0eb8fc07c1dbb20ff6d0b667139bb5f45e"
        }, 
        {
            "file_name": "Malicious_Template.png", 
            "type": "image/png", 
            "id": 60589, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/589/ca85a68b691051cdf0673c8df872fae216817efa/Malicious_Template.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=465b0816b20457310c80326139ca05419de8b462ae63fc7e1de488e1d9a4a30d"
        }, 
        {
            "file_name": "Real_Order_Mail_Rendering.png", 
            "type": "image/png", 
            "id": 60590, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/590/ceec9628cef4159a2949fc599173af3d7e540fc6/Real_Order_Mail_Rendering.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0bbb3c3d2b1e143375a3d8b5013e89765398fc59d197fdfec8a85fe1cd7ea919"
        }, 
        {
            "file_name": "Checkout_Template.png", 
            "type": "image/png", 
            "id": 60591, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/591/a86195c9fe16bf966606bd18c63605c02f91f226/Checkout_Template.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=256d41d2efbed9bd7d5869d4d1c1607f28bc9599e59442638429c39de67116ba"
        }, 
        {
            "file_name": "Checkout_Rendering.png", 
            "type": "image/png", 
            "id": 60592, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/060/592/6f0dbf95e4c1189fd5994bf2fee636a415b656f6/Checkout_Rendering.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUSPGCL6N%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225816Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDFGKtgcswjtdzZD0XiK3A%2FxGmzpKHr5ekoQ8Q6J1p2wPg%2B4lFXgLgHF8GV%2FpAbzl8c1jkeJVbQGafh9cCZf5nDkGGvoj1MW8%2FEqxoLETmowovv5DF6JNI6KtcUa99kUpPVGGA41vwt0TYR4sK79EGjJ1GZQvua81wmE6Al9%2FjyEKMBr4Z%2BD%2B7%2BxkjtRr2YkyxWAbiFJAjY1c73ORg6Fm1lE7l99tqmBVg%2FxU2Bzq6cPN%2FiMjyU1Z8EEY0QfR7QN0mMEGqQAGivtnDAT%2Bm2soywu4tb%2FQz0UdoECNK3s%2F9RCntJ9rQjC2MdAgwPm%2FRGk7xh8O7tjef6RDTKiNGJsV2lyV78CVRog%2B376zzUEwsF%2FqAB%2F%2FhSXQ3Nu4PsGgilZIaKU0lHYU6BuG5uPwA4xIiWUtsltBgrtCN7JFz6qEg4WQudRCGwCzYxBJW3pl6P9ybgvmwORCVSRuYjX0UCWse2f7dpknAIOIdCfrNgcD1Og5lammFgkg8JCWe8S7Y29RMxkM0hwegOESBJjpUHD2rzBeABbol%2BCVNT5Ny6IYZq%2BQP%2B1M3ETgSt%2B5Z79oTiJmKpuZKzjDoQBjx98RK2QrPYCjuAJzSMcokIem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9f21e42e34a0d15a1ada6583169e91a8d267adb8220f7fa980ccd0a267da6d5c"
        }
    ], 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2015-11-06T13:37:34.205Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-06T13:37:34.205Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\r\n\r\nOur team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don't worry, we'll get to yours!\r\n\r\nWhile you are waiting, you can read over our list of non applicable issues listed on our program page: https://hackerone.com/shopify. Make sure your issue isn't listed!", 
            "markdown_message": "<p>Thank you for reporting this bug! This is an automated response to let you know that we&#39;ve received your issue, and we&#39;ll process it as soon as possible.</p>\n\n<p>Our team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don&#39;t worry, we&#39;ll get to yours!</p>\n\n<p>While you are waiting, you can read over our list of non applicable issues listed on our program page: <a title=\"https://hackerone.com/shopify\" href=\"https://hackerone.com/shopify\">https://hackerone.com/shopify</a>. Make sure your issue isn&#39;t listed!</p>\n", 
            "type": "Activities::Comment", 
            "id": 648007, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-06T13:42:03.460Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-06T13:42:03.460Z", 
            "actor": {
                "username": "brakhane", 
                "url": "/brakhane", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/726/edba22bffe524728352fe41e7905b315945293d9_medium.png?1444348505"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "I was in the progress of trying to achieve RCE here by using the standard_filters (where the source is public) or the Shopify specific filters, blocks and tags but most of the methods I tried converted the accessible methods/properties into strings first. To me this looks like the way to go as there 'might' be a filter, block or tag which does allow some kind of RCE.\n\nAs said, I stopped the research here as I believe this should be known to you even without escalating it to RCE.", 
            "markdown_message": "<p>I was in the progress of trying to achieve RCE here by using the standard_filters (where the source is public) or the Shopify specific filters, blocks and tags but most of the methods I tried converted the accessible methods/properties into strings first. To me this looks like the way to go as there &#39;might&#39; be a filter, block or tag which does allow some kind of RCE.</p>\n\n<p>As said, I stopped the research here as I believe this should be known to you even without escalating it to RCE.</p>\n", 
            "type": "Activities::Comment", 
            "id": 648013, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-09T15:18:35.859Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-09T15:18:35.859Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thanks for reporting this; we're currently investigating the cause of this.", 
            "markdown_message": "<p>Thanks for reporting this; we&#39;re currently investigating the cause of this.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 651057, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-10T18:08:53.681Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T18:08:53.681Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Hi @brakhane,\n\nWe deployed a fix for this yesterday. The issue was caused by bad validation on the methods that were callable from the email notification templates. Prior to our fix, any public method on the ruby object was callable, but this should have been limited to only a small number of safe methods. \n\nOn the bright side, the bug did not allow any arguments to be passed to the callable methods, which is why `instance_eval`, `instance_exec`, `send` or similar methods would not have been exploitable for a RCE.\n\nThanks again for reporting this, we'll follow up within a few days regarding our decision for a bounty.", 
            "markdown_message": "<p>Hi <a href=\"/brakhane\">@brakhane</a>,</p>\n\n<p>We deployed a fix for this yesterday. The issue was caused by bad validation on the methods that were callable from the email notification templates. Prior to our fix, any public method on the ruby object was callable, but this should have been limited to only a small number of safe methods. </p>\n\n<p>On the bright side, the bug did not allow any arguments to be passed to the callable methods, which is why <code>instance_eval</code>, <code>instance_exec</code>, <code>send</code> or similar methods would not have been exploitable for a RCE.</p>\n\n<p>Thanks again for reporting this, we&#39;ll follow up within a few days regarding our decision for a bounty.</p>\n", 
            "type": "Activities::Comment", 
            "id": 652884, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "brakhane", 
                "url": "/brakhane"
            }, 
            "created_at": "2015-11-10T18:09:07.345Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T18:09:07.345Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 652885, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-11-10T22:21:15.181Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T22:21:15.181Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "bounty_amount": "1500.0", 
            "collaborator": {
                "username": "brakhane", 
                "url": "/brakhane"
            }, 
            "message": "Thanks for helping improve the security of Shopify. This issue has been resolved.", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify. This issue has been resolved.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 653200, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-10T22:21:20.352Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T22:21:20.352Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 653202, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-10T23:17:32.459Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T23:17:32.459Z", 
            "actor": {
                "username": "brakhane", 
                "url": "/brakhane", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/726/edba22bffe524728352fe41e7905b315945293d9_medium.png?1444348505"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 653292, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-10T23:17:32.625Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-10T23:17:32.625Z", 
            "actor": {
                "username": "brakhane", 
                "url": "/brakhane", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/726/edba22bffe524728352fe41e7905b315945293d9_medium.png?1444348505"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 653293, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "brakhane", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/brakhane", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/040/726/052109b1ca2cb93ede120f0c10c31ac779a67270_small.png?1444348505"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -94351015.60160376, 
    "disclosed_at": "2015-11-10T23:17:32.596Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/98259", 
    "created_at": "2015-11-06T13:37:33.389Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h1 id=\"short\">Short</h1>\n\n<p>Certain interfaces where a shop owner/administrator is able to utilize Liquid have access to methods and properties of certain Drops. This allows calling all methods of the object and access to all properties. While this sounds bad, it seems to be very limited and seems to be &#39;only&#39; usable for Information Disclosure.</p>\n\n<h1 id=\"poc\">PoC</h1>\n\n<ol>\n<li>Go to your shop admin and navigate to the <code>Notifcation</code> settings</li>\n<li>\n<p>Edit the <code>New Order Template</code> and place the following text into the textbox (also shown in the <code>Malicious Template</code> screenshot:</p>\n\n<p>{{ methods | json }}<br>\n{{ systemu }}<br>\n{{ class }}<br>\n{{ to_yaml}}</p>\n</li>\n<li><p>Click the <code>Preview Button</code> to have your code executed, results are shown in the <code>Malicious Template Rendered</code> screenshot.</p></li>\n</ol>\n\n<h1 id=\"affected-parts-of-the-system\">Affected parts of the system</h1>\n\n<p>Almost all of the Notification Email Templates are affected. It looks like one has access to an <code>OrderDrop</code> and <code>DraftOrderDrop</code> instance (verifyable throigh {{ class }} or similar methods which expose the class name). Please see the attached <code>Affected Mail Templates</code> screenshot, all templates which do have a <code>Revert to default</code> button rendered are affected.</p>\n\n<p>The <code>thank you</code> page of the checkout is also affected, please see the <code>Checkout Template</code> and <code>Checkout Rendering</code> screenshots which are attached.</p>\n\n<h1 id=\"limitations\">Limitations</h1>\n\n<p>I wasn&#39;t able to supply arguments to the methods exposed through this method, but one is still able to call methods which don&#39;t accept any. But just because I couldn&#39;t find a way doesn&#39;t mean there isn&#39;t any.</p>\n\n<h1 id=\"impact\">Impact</h1>\n\n<ol>\n<li>One has (at least) the ability to execute instance methods with no arguments and read access to certain otherwise hidden fields via the <code>to_yaml</code> method. Depending on the actual code which is flawed it might be even possible to execute methods with user supplied arguments which would probably result in a server breach (there are very intersting methods like <code>systemu</code>, <code>real_call</code>, <code>instance_eval</code> and <code>instance_exec</code>.</li>\n<li>\n<p>This bypasses access restrictions to certain hidden/filtered fields, like a hashed user password. For example,  a malicious admin can force the delivery of the  <code>Real Order Mail Rendered</code> to an address controlled by him if he does the following:</p>\n\n<ol>\n<li>Ensure the last user who touched an order is a desired victim (e.g. the shop owner)</li>\n<li>Edit the customers email to an attacker controlled one via the Customer admin interface</li>\n<li>Resend an order confirmation mail which is prepared to render like <code>Real Order Rendering</code> in an Email, by placing <code>{{ to_yaml }}</code> in the template</li>\n</ol>\n</li>\n</ol>\n\n<h1 id=\"final-words\">Final words</h1>\n\n<p>Depending on the real flaw in the code this might be something which needs to be addressed by the Liquid library. I would be very pleased if you could disclose what kind of condition exactly led to this flaw. It might be worth chaning Liquid in a way to guard against this kind of flaw as users expect it to be secure by default.</p>\n\n<p>Please let me know if you need any additional information here, I hope I was clear enough with my explainations. I&#39;m still a little disappointed that I didn&#39;t manage to achieve &#39;real&#39; RCE here, but I&#39;m happy on the other side to report this asap even without &#39;real&#39; RCE so you could fix this asap. I discovered this approx. 18h ago by accident and couldn&#39;t spend that much time on developing a PoC.</p>\n", 
    "vulnerability_information": "Short\n====\nCertain interfaces where a shop owner/administrator is able to utilize Liquid have access to methods and properties of certain Drops. This allows calling all methods of the object and access to all properties. While this sounds bad, it seems to be very limited and seems to be 'only' usable for Information Disclosure.\n\nPoC\n====\n 1. Go to your shop admin and navigate to the `Notifcation` settings\n 2. Edit the `New Order Template` and place the following text into the textbox (also shown in the `Malicious Template` screenshot:\n\n    {{ methods | json }}\n    {{ systemu }}\n    {{ class }}\n    {{ to_yaml}}\n\n 3. Click the `Preview Button` to have your code executed, results are shown in the `Malicious Template Rendered` screenshot.\n\nAffected parts of the system\n====\nAlmost all of the Notification Email Templates are affected. It looks like one has access to an `OrderDrop` and `DraftOrderDrop` instance (verifyable throigh {{ class }} or similar methods which expose the class name). Please see the attached `Affected Mail Templates` screenshot, all templates which do have a `Revert to default` button rendered are affected.\n\nThe `thank you` page of the checkout is also affected, please see the `Checkout Template` and `Checkout Rendering` screenshots which are attached.\n\nLimitations\n====\nI wasn't able to supply arguments to the methods exposed through this method, but one is still able to call methods which don't accept any. But just because I couldn't find a way doesn't mean there isn't any.\n\nImpact\n====\n 1. One has (at least) the ability to execute instance methods with no arguments and read access to certain otherwise hidden fields via the `to_yaml` method. Depending on the actual code which is flawed it might be even possible to execute methods with user supplied arguments which would probably result in a server breach (there are very intersting methods like `systemu`, `real_call`, `instance_eval` and `instance_exec`.\n 2. This bypasses access restrictions to certain hidden/filtered fields, like a hashed user password. For example,  a malicious admin can force the delivery of the  `Real Order Mail Rendered` to an address controlled by him if he does the following:\n\n1. Ensure the last user who touched an order is a desired victim (e.g. the shop owner)\n2. Edit the customers email to an attacker controlled one via the Customer admin interface\n3. Resend an order confirmation mail which is prepared to render like `Real Order Rendering` in an Email, by placing `{{ to_yaml }}` in the template\n\nFinal words\n====\nDepending on the real flaw in the code this might be something which needs to be addressed by the Liquid library. I would be very pleased if you could disclose what kind of condition exactly led to this flaw. It might be worth chaning Liquid in a way to guard against this kind of flaw as users expect it to be secure by default.\n\nPlease let me know if you need any additional information here, I hope I was clear enough with my explainations. I'm still a little disappointed that I didn't manage to achieve 'real' RCE here, but I'm happy on the other side to report this asap even without 'real' RCE so you could fix this asap. I discovered this approx. 18h ago by accident and couldn't spend that much time on developing a PoC.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.shopify.com", 
            "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.", 
            "twitter_handle": "", 
            "name": "Shopify"
        }, 
        "handle": "shopify", 
        "url": "https://hackerone.com/shopify", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/382/1e9872bf9cfe04008c2673e07bfecaa83858cca1_small.jpg?1532728703", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1382, 
        "default_currency": "usd"
    }, 
    "is_published": false
}