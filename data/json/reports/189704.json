{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "duplicate", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-17T20:13:31.247Z", 
    "voters": [
        "eveeez", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 189704, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-17T20:48:31.681Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Segmentation fault due to invalid memory access in codegen when using break with the 127th argument a constant", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Duplicate", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/141/912/286bef8e1495a93f1a27a90af3b5f96d0f2a7465/crash-189704-variable.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224537Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f3c4c1302fa9a13f9a1a7d3f1ab4ca343f245072600c8bbf86c0dfc8743fb92a", 
                    "type": "text/plain", 
                    "id": 141912, 
                    "filename": "crash-189704-variable.rb"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/141/911/1be20919e4f22156d8ca3eca7a62029ee28f4fc7/crash-189704-constant.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224537Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=dd59397dcd69392cee976d67a8145edf55ea54348aac73b37268c9e1b6fdaa15", 
                    "type": "text/plain", 
                    "id": 141911, 
                    "filename": "crash-189704-constant.rb"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-12-09T03:41:35.551Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T03:41:35.551Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Crash files.", 
            "markdown_message": "<p>Crash files.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1352765, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/141/914/064b2aefefb01cc20aa7612e70b406f2d8fa27a1/bug-189704.patch?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224537Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=01be6d7218a474fbfdbf2d761f34c134a4d1f2709eecfdc60e3a72398963db8b", 
                    "type": "text/x-diff", 
                    "id": 141914, 
                    "filename": "bug-189704.patch"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-12-09T03:43:48.283Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T03:43:48.283Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Oh what was I saying, I did have a patch for this. It was to not bother doing a codegen if you are just going to do a raise directly after it. Like so:\n\n```\ndiff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 891c4f6..5ef7c83 100644\n--- a/mrbgems/mruby-compiler/core/codegen.c\n+++ b/mrbgems/mruby-compiler/core/codegen.c\n@@ -2850,7 +2850,6 @@ static void\n loop_break(codegen_scope *s, node *tree)\n {\n   if (!s->loop) {\n-    codegen(s, tree, NOVAL);\n     raise_error(s, \"unexpected break\");\n   }\n   else {\n```\n\nNow gets this:\n\n```\n$ ./mruby/bin/mruby crash-189704-constant.rb\ntrace:\n        [0] crash-189704-constant.rb:1\nLocalJumpError: unexpected break\n```", 
            "markdown_message": "<p>Oh what was I saying, I did have a patch for this. It was to not bother doing a codegen if you are just going to do a raise directly after it. Like so:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 891c4f6..5ef7c83 100644\n</span><span class=\"gd\">--- a/mrbgems/mruby-compiler/core/codegen.c\n</span><span class=\"gi\">+++ b/mrbgems/mruby-compiler/core/codegen.c\n</span><span class=\"gu\">@@ -2850,7 +2850,6 @@ static void\n</span> loop_break(codegen_scope *s, node *tree)\n {\n   if (!s-&gt;loop) {\n<span class=\"gd\">-    codegen(s, tree, NOVAL);\n</span>     raise_error(s, &quot;unexpected break&quot;);\n   }\n   else {\n</code></pre>\n<p>Now gets this:</p>\n<pre class=\"highlight plaintext\"><code>$ ./mruby/bin/mruby crash-189704-constant.rb\ntrace:\n        [0] crash-189704-constant.rb:1\nLocalJumpError: unexpected break\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1352767, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-09T03:47:37.602Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T03:47:37.602Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Also affected `mruby-engine`, but that patch fixes it as well.\n\n```\n$ ./bin/sandbox crash-189704-constant.rb\n./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000268\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon't forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0011 e:000010 CFUNC  :sandbox_eval\nc:0002 p:0214 s:0006 E:001f00 EVAL   ./bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:001350 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\n./bin/sandbox:20:in `<main>'\n./bin/sandbox:20:in `sandbox_eval'\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000000 rbx: 0x0000000000000256 rcx: 0x000000010224ec50\n rdx: 0x0000000000000000 rdi: 0x000000010224ec50 rsi: 0x0000000000000256\n rbp: 0x00007fff5e45cee0 rsp: 0x00007fff5e45ce50  r8: 0x0000000102214b60\n  r9: 0x0000000000000006 r10: 0x0000000000000000 r11: 0x00000001021f3000\n r12: 0x0000000000000000 r13: 0x000000010224ec50 r14: 0x000000010224a39c\n r15: 0x000000000000007e rip: 0x00000001021096e5 rfl: 0x0000000000010206\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010193f5d4 rb_vm_bugreport + 388\n1   ruby                                0x00000001017e1023 rb_bug_context + 483\n2   ruby                                0x00000001018b4653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff912e252a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001021096e5 codegen + 53\n5   ???                                 0x0000000000000000 0x0 + 0\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n<snip various gems>\n  185 /Users/<snip>/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/<snip>/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\nAbort trap: 6\n\n```\n\nAfter patch:\n\n```\n$ ./bin/sandbox crash-189704-constant.rb\n./bin/sandbox:20:in `sandbox_eval': unexpected break (MRubyEngine::EngineRuntimeError)\n  from ./bin/sandbox:20:in `<main>'\n```\n\nCheers,\n\nHugh", 
            "markdown_message": "<p>Also affected <code>mruby-engine</code>, but that patch fixes it as well.</p>\n<pre class=\"highlight plaintext\"><code>$ ./bin/sandbox crash-189704-constant.rb\n./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000268\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon&#39;t forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0011 e:000010 CFUNC  :sandbox_eval\nc:0002 p:0214 s:0006 E:001f00 EVAL   ./bin/sandbox:21 [FINISH]\nc:0001 p:0000 s:0002 E:001350 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\n./bin/sandbox:20:in `&lt;main&gt;&#39;\n./bin/sandbox:20:in `sandbox_eval&#39;\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000000 rbx: 0x0000000000000256 rcx: 0x000000010224ec50\n rdx: 0x0000000000000000 rdi: 0x000000010224ec50 rsi: 0x0000000000000256\n rbp: 0x00007fff5e45cee0 rsp: 0x00007fff5e45ce50  r8: 0x0000000102214b60\n  r9: 0x0000000000000006 r10: 0x0000000000000000 r11: 0x00000001021f3000\n r12: 0x0000000000000000 r13: 0x000000010224ec50 r14: 0x000000010224a39c\n r15: 0x000000000000007e rip: 0x00000001021096e5 rfl: 0x0000000000010206\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010193f5d4 rb_vm_bugreport + 388\n1   ruby                                0x00000001017e1023 rb_bug_context + 483\n2   ruby                                0x00000001018b4653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff912e252a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001021096e5 codegen + 53\n5   ???                                 0x0000000000000000 0x0 + 0\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n&lt;snip various gems&gt;\n  185 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\nAbort trap: 6\n\n</code></pre>\n<p>After patch:</p>\n<pre class=\"highlight plaintext\"><code>$ ./bin/sandbox crash-189704-constant.rb\n./bin/sandbox:20:in `sandbox_eval&#39;: unexpected break (MRubyEngine::EngineRuntimeError)\n  from ./bin/sandbox:20:in `&lt;main&gt;&#39;\n</code></pre>\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
            "type": "Activities::Comment", 
            "id": 1352775, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-09T16:09:05.610Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T16:09:05.610Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report. We previously discovered this issue internally, and it has already been patched in our production environment. We hadn't submitted the patch upstream yet, but we have done that now: https://github.com/mruby/mruby/pull/3338\n\nSorry about the delay in pushing that upstream.", 
            "markdown_message": "<p>Thank you for your report. We previously discovered this issue internally, and it has already been patched in our production environment. We hadn&#39;t submitted the patch upstream yet, but we have done that now: <a title=\"https://github.com/mruby/mruby/pull/3338\" href=\"/redirect?signature=bd190e1a0be7cca5bbf757b3ae6756c32c3e0b0a&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3338\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/pull/3338</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Sorry about the delay in pushing that upstream.</p>\n", 
            "type": "Activities::BugDuplicate", 
            "id": 1354165, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-09T20:38:07.240Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T20:38:07.240Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Oh interesting i couldn't get it to work with next. I tried as i saw that was generating the same call_args in code.y\n\nShame about duplicate. Serves me right for not reporting when i found it the other week.", 
            "markdown_message": "<p>Oh interesting i couldn&#39;t get it to work with next. I tried as i saw that was generating the same call_args in code.y</p>\n\n<p>Shame about duplicate. Serves me right for not reporting when i found it the other week.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1354860, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:13:31.271Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:13:31.271Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "Care to disclose?", 
            "markdown_message": "<p>Care to disclose?</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1371665, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:48:31.699Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:48:31.699Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Sure!", 
            "markdown_message": "<p>Sure!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1371701, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:48:31.728Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:48:31.728Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1371702, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "haquaman", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/haquaman", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/646/dc284cea5e3d18b7d17719465c17723a8349a967_small.png?1424925238"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2016-12-17T20:48:31.714Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/189704", 
    "created_at": "2016-12-09T03:40:49.614Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Crash file is:</p>\n<pre class=\"highlight plaintext\"><code>break 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,CRASH\n</code></pre>\n<p>This is 126 0&#39;s, then a constant. The 0&#39;s can be anything valid, and the constant just has to be a constant. Doesn&#39;t matter if it is defined or not. </p>\n\n<p>Causes a segfault with the following backtrace:</p>\n<pre class=\"highlight plaintext\"><code>ASAN:SIGSEGV\n=================================================================\n==813==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000002ad (pc 0x00000063edfc bp 0x7ffe98e8cfe0 sp 0x7ffe98e8ce20 T0)\n    #0 0x63edfb in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1221:39\n    #1 0x6818e5 in gen_values /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:821:9\n    #2 0x643cae in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1596:11\n    #3 0x64a94d in loop_break /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2853:5\n    #4 0x64a94d in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2001\n    #5 0x64c8d8 in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1239:7\n    #6 0x67a4b9 in scope_body /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:720:3\n    #7 0x63f3ef in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1540:5\n    #8 0x63d870 in mrb_generate_code /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2925:5\n    #9 0x5c0b4d in mrb_load_exec /root/mruby-fixes/mrbgems/mruby-compiler/core/parse.y:5723:10\n    #10 0x4e437b in main /root/mruby-fixes/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232:11\n    #11 0x7fae55836ec4  (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)\n    #12 0x43d116 in _start (/root/mruby-fixes/bin/mruby+0x43d116)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1221 codegen\n==813==ABORTING\n\n</code></pre>\n<p>Looking through, looks like in <code>gen_values</code>, n loops up to 126 (on the constant node), so takes the first if block, val isn&#39;t set, so takes the else inside there, but <code>t-&gt;car-&gt;cdr</code> points to a invalid memory address so when <code>codegen</code> dereferences <code>tree</code>, it segfaults.</p>\n<pre class=\"highlight plaintext\"><code>$ lldb ./mruby/bin/mruby crash.rb\n(lldb) target create &quot;./mruby/bin/mruby&quot;\nCurrent executable set to &#39;./mruby/bin/mruby&#39; (x86_64).\n(lldb) settings set -- target.run-args  &quot;crash.rb&quot;\n(lldb) r\nProcess 58614 launched: &#39;./mruby/bin/mruby&#39; (x86_64)\nProcess 58614 stopped\n* thread #1: tid = 0x612a08, 0x000000010005c3f1 mruby`codegen(s=0x000000010101cc20, tree=0x000000000000029b, val=0) + 129 at codegen.c:1221, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x2ad)\n    frame #0: 0x000000010005c3f1 mruby`codegen(s=0x000000010101cc20, tree=0x000000000000029b, val=0) + 129 at codegen.c:1221\n   1218     return;\n   1219   }\n   1220\n-&gt; 1221   if (s-&gt;irep &amp;&amp; s-&gt;filename_index != tree-&gt;filename_index) {\n   1222     s-&gt;irep-&gt;filename = mrb_parser_get_filename(s-&gt;parser, s-&gt;filename_index);\n   1223     mrb_debug_info_append_file(s-&gt;mrb, s-&gt;irep, s-&gt;debug_start_pos, s-&gt;pc);\n   1224     s-&gt;debug_start_pos = s-&gt;pc;\n(lldb) up\nframe #1: 0x000000010006581a mruby`gen_values(s=0x000000010101cc20, t=0x00000001010170d4, val=0) + 762 at codegen.c:821\n   818          }\n   819        }\n   820        else {\n-&gt; 821          codegen(s, t-&gt;car-&gt;cdr, NOVAL);\n   822          t = t-&gt;cdr;\n   823          while (t) {\n   824            codegen(s, t-&gt;car, NOVAL);\n(lldb) p *t-&gt;car\n(mrb_ast_node) $0 = {\n  car = 0x000000000000002c\n  cdr = 0x000000000000029b\n  lineno = 1\n  filename_index = 0\n}\n(lldb) p n\n(int) $1 = 126\n(lldb) p is_splat\n(int) $2 = 0\n(lldb) p val\n(int) $3 = 0\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n\n</code></pre>\n<p>So this is showing that that 127th argument to break isn&#39;t set right. I printed out <code>t-&gt;car</code> for each <code>codegen</code> call, and it shows for the above, we get a the usual start (CFUNC, BEGIN, etc), then NODE_BREAK, followed by 126 NODE_INT&#39;s, then the segfault happens (<code>tree</code> points to invalid memory). </p>\n\n<p>I changed the constant to some other values, and found that <code>t-&gt;car</code> was clearly overflowing for other values, <code>0.0</code> (<code>NODE_FLOAT</code>), was always a value of <code>3157552</code>, rather than <code>52</code>. A <code>NODE_INT</code> varied, but one value was <code>-197952842</code>, not <code>51</code>. same with <code>NODE_STR</code>, <code>NODE_DSTR</code>, <code>NODE_REGX</code>, a <em>non-empty</em> <code>NODE_ARRAY</code>, a <code>NODE_FCALL</code>, <code>NODE_CALL</code>.... You get the picture. Weirdly only the <code>NODE_FLOAT</code> always kept the same value...</p>\n\n<p>I&#39;ve just found that a NODE_LVAR also crashes, such as this example crash file:</p>\n<pre class=\"highlight plaintext\"><code>crash=1\nbreak 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,crash\n</code></pre>\n<p>Haven&#39;t got a patch for this one yet, just wanted to file it.</p>\n\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
    "vulnerability_information": "Crash file is:\n\n```\nbreak 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,CRASH\n```\n\nThis is 126 0's, then a constant. The 0's can be anything valid, and the constant just has to be a constant. Doesn't matter if it is defined or not. \n\nCauses a segfault with the following backtrace:\n```\nASAN:SIGSEGV\n=================================================================\n==813==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000002ad (pc 0x00000063edfc bp 0x7ffe98e8cfe0 sp 0x7ffe98e8ce20 T0)\n    #0 0x63edfb in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1221:39\n    #1 0x6818e5 in gen_values /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:821:9\n    #2 0x643cae in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1596:11\n    #3 0x64a94d in loop_break /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2853:5\n    #4 0x64a94d in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2001\n    #5 0x64c8d8 in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1239:7\n    #6 0x67a4b9 in scope_body /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:720:3\n    #7 0x63f3ef in codegen /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1540:5\n    #8 0x63d870 in mrb_generate_code /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:2925:5\n    #9 0x5c0b4d in mrb_load_exec /root/mruby-fixes/mrbgems/mruby-compiler/core/parse.y:5723:10\n    #10 0x4e437b in main /root/mruby-fixes/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232:11\n    #11 0x7fae55836ec4  (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)\n    #12 0x43d116 in _start (/root/mruby-fixes/bin/mruby+0x43d116)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /root/mruby-fixes/mrbgems/mruby-compiler/core/codegen.c:1221 codegen\n==813==ABORTING\n\n```\n\nLooking through, looks like in `gen_values`, n loops up to 126 (on the constant node), so takes the first if block, val isn't set, so takes the else inside there, but `t->car->cdr` points to a invalid memory address so when `codegen` dereferences `tree`, it segfaults.\n\n```\n$ lldb ./mruby/bin/mruby crash.rb\n(lldb) target create \"./mruby/bin/mruby\"\nCurrent executable set to './mruby/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 58614 launched: './mruby/bin/mruby' (x86_64)\nProcess 58614 stopped\n* thread #1: tid = 0x612a08, 0x000000010005c3f1 mruby`codegen(s=0x000000010101cc20, tree=0x000000000000029b, val=0) + 129 at codegen.c:1221, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x2ad)\n    frame #0: 0x000000010005c3f1 mruby`codegen(s=0x000000010101cc20, tree=0x000000000000029b, val=0) + 129 at codegen.c:1221\n   1218     return;\n   1219   }\n   1220\n-> 1221   if (s->irep && s->filename_index != tree->filename_index) {\n   1222     s->irep->filename = mrb_parser_get_filename(s->parser, s->filename_index);\n   1223     mrb_debug_info_append_file(s->mrb, s->irep, s->debug_start_pos, s->pc);\n   1224     s->debug_start_pos = s->pc;\n(lldb) up\nframe #1: 0x000000010006581a mruby`gen_values(s=0x000000010101cc20, t=0x00000001010170d4, val=0) + 762 at codegen.c:821\n   818          }\n   819        }\n   820        else {\n-> 821          codegen(s, t->car->cdr, NOVAL);\n   822          t = t->cdr;\n   823          while (t) {\n   824            codegen(s, t->car, NOVAL);\n(lldb) p *t->car\n(mrb_ast_node) $0 = {\n  car = 0x000000000000002c\n  cdr = 0x000000000000029b\n  lineno = 1\n  filename_index = 0\n}\n(lldb) p n\n(int) $1 = 126\n(lldb) p is_splat\n(int) $2 = 0\n(lldb) p val\n(int) $3 = 0\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n\n```\n\nSo this is showing that that 127th argument to break isn't set right. I printed out `t->car` for each `codegen` call, and it shows for the above, we get a the usual start (CFUNC, BEGIN, etc), then NODE_BREAK, followed by 126 NODE_INT's, then the segfault happens (`tree` points to invalid memory). \n\nI changed the constant to some other values, and found that `t->car` was clearly overflowing for other values, `0.0` (`NODE_FLOAT`), was always a value of `3157552`, rather than `52`. A `NODE_INT` varied, but one value was `-197952842`, not `51`. same with `NODE_STR`, `NODE_DSTR`, `NODE_REGX`, a *non-empty* `NODE_ARRAY`, a `NODE_FCALL`, `NODE_CALL`.... You get the picture. Weirdly only the `NODE_FLOAT` always kept the same value...\n\nI've just found that a NODE_LVAR also crashes, such as this example crash file:\n\n```\ncrash=1\nbreak 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,crash\n```\n\n\nHaven't got a patch for this one yet, just wanted to file it.\n\nCheers,\n\nHugh\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}