{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-06-08T09:12:55.703Z", 
    "voters": [
        "003random", 
        "eveeez", 
        "japz", 
        "zerotoone", 
        "spetr0x", 
        "v1per", 
        "cyneox", 
        "oneguy"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "100.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 203726, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "vulnerability_information": "## Open Redirect in scout24.greenhouse.io\n\nThe **Scout24 Security Team** did a penetration test against `scout24.greenhouse.io` in order to verify how Scout24 relevant data is protected against common attack vectors. Basically we have tested the (web) application against [OWASP Top 10](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project) using industry common metholodogies. \n\n## Reproduction steps\n\n* Visit https://boards.greenhouse.io/scout24 and click on some job offer (I chosed [this one](https://boards.greenhouse.io/scout24/jobs/503488))\n* After completing your personal information, you can *upload* some documents\n\t* Click `Attach` both under *Resume/CV* and *Cover Letter*\n\t* Upload some PDF files from your local host (in my case the file uwas called `neu.pdf`)\n* In the end you send your application by clicking on `Submit Application`\n\nUsing a HTTP proxy (in my case that was [Burp](https://portswigger.net/burp/)) I was able to intercept the `POST` request made by the browser before being sent to the `greenhouse.io` API. This is some sample request:\n\n### Proof-of-Concept (PoC)\n\n```.http\nPOST /scout24/jobs/503488 HTTP/1.1\nHost: boards.greenhouse.io\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nX-NewRelic-ID: VQ4PWFNbGwIFU1dbAgcB\nX-CSRF-Token: zF19Ky8GR0J/ZP7aLfFiN+p8Udc+X8ikPyk0cX7LlzgS0i4wWFIchmqcmsR3aXA0T1XSNrXSWdrVb47bGjGrEg==\nX-Requested-With: XMLHttpRequest\nReferer: https://boards.greenhouse.io/scout24/jobs/503488\nContent-Length: 4086\nContent-Type: multipart/form-data; boundary=---------------------------844282227400113298508475861\nCookie: __utma=44269810.1998188318.1484665255.1484837763.1484901247.18; __utmz=44269810.1484837763.17.11.utmcsr=scout24.eu.auth0.com|utmccn=(referral)|utmcmd=referral|utmcct=/login/callback; __zlcmid=edg9prI9rr6P3K; __utmc=44269810; __utmb=44269810.15.9.1484902626060; __atuvc=4%7C3; __atuvs=5881cd5b6c1ca704003; _jbs=7897bb31a3e984da1f15ec3b3f0e8129; __utmt=1\nConnection: close\n\n[...]\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[resume_url]\"\n\nhttps://grnhse-prod-jben-us-east-1.s3.amazonaws.com/applications%2Fresumes%2F1484902660983-1663bnwl7dt-b044057e6364840cde6c41d55de3a1e1%2Fneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[resume_url_filename]\"\n\nneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[cover_letter_url]\"\n\nhttps://grnhse-prod-jben-us-east-1.s3.amazonaws.com/applications%2Fresumes%2F1484902672335-lpk5xur1na-67346266367805828242f31b3887e539%2Fneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[cover_letter_url_filename]\"\n\nneu.pdf\n-----------------------------844282227400113298508475861--\n```\n\nAs you can notice the files have been already uploaded to `AWS` and therfore a S3 bucket links are \nused within the requests. \n\n## Exploitability\n\nUsing a browser and a HTTP proxy the request can be easily intercepted. In the **original** request the `Content-Disposition` parameter `job_application[cover_letter_url]` in the `POST` request contains a S3 bucket link. However, after tampering the request, the parameters values can be changed. In our specific case the value (basically an URL) could be changed to:\n\n* a phishing site\n* a site containing some malware\n\nAfter intercepting the request, the parameter was modified like this:\n\n```.http\nPOST /scout24/jobs/503488 HTTP/1.1\nHost: boards.greenhouse.io\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nX-NewRelic-ID: VQ4PWFNbGwIFU1dbAgcB\nX-CSRF-Token: zF19Ky8GR0J/ZP7aLfFiN+p8Udc+X8ikPyk0cX7LlzgS0i4wWFIchmqcmsR3aXA0T1XSNrXSWdrVb47bGjGrEg==\nX-Requested-With: XMLHttpRequest\nReferer: https://boards.greenhouse.io/scout24/jobs/503488\nContent-Length: 4086\nContent-Type: multipart/form-data; boundary=---------------------------844282227400113298508475861\nCookie: __utma=44269810.1998188318.1484665255.1484837763.1484901247.18; __utmz=44269810.1484837763.17.11.utmcsr=scout24.eu.auth0.com|utmccn=(referral)|utmcmd=referral|utmcct=/login/callback; __zlcmid=edg9prI9rr6P3K; __utmc=44269810; __utmb=44269810.15.9.1484902626060; __atuvc=4%7C3; __atuvs=5881cd5b6c1ca704003; _jbs=7897bb31a3e984da1f15ec3b3f0e8129; __utmt=1\nConnection: close\n[...]\n\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[resume_url]\"\n\nhttps://google.com\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[resume_url_filename]\"\n\nneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[cover_letter_url]\"\n\nhttp://google.com\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=\"job_application[cover_letter_url_filename]\"\n```\n\nWhenever the hiring manager will try to view the uploaded content, the application will not be able to render the content. Instead the person will then try to **download** the file by clicking on `Download` (left upper corner). Although the browser shows that the URL points to some specific `AWS` domain, the content is actually loaded from somewhere else (in this case from [https://google.com](https://google.com)). \n\nAgain, an attacker could then submit some URL containing malicious content or some phishing site. Only for the purpose of this report, something unspectacular like [https://google.com](https://google.com) has been chosen. \n\n## Impact\n\nThe attack can be conducted in multiple scenarios:\n\n* anonymous person applies for some jobs and manipulates the parameters (like described above)\n* internal employee adds referal for some person and also manipulates the parameters\n\nIn both cases the hiring manager would then unknowingly access the manipulated links which could then lead to:\n\n* installation of trojan horses / ransomeware (in general malicious content)\n* a phishing site where e.g. AD credentials are claimed to be required\n* CSRF (Cross-Site Request Forgery) [attacks](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF))\n\n## Remediation\n\nThe affected parameter should be first validated against some regular expression (e.g. allow only links that point to `grnhse-prod-jben-*.s3.amazonaws.com`). \n\n\n\n\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "User"
    }, 
    "title": "Open Redirect in <customer>.greenhouse.io", 
    "is_member_of_team?": null, 
    "vote_count": 8, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-07-08T09:12:55.750Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$100", 
    "attachments": [
        {
            "file_name": "Selection_120.png", 
            "type": "image/png", 
            "id": 157687, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/157/687/d6c73e432e61f9db572701ac148d4eed040301b9/Selection_120.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223556Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d84fe24b71704235d3027e4467a52501ed7e6a5fbc4c680bca098a9dd9220b0a"
        }, 
        {
            "file_name": "Selection_121.png", 
            "type": "image/png", 
            "id": 157688, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/157/688/fd94ca3f2c417651b6adae7f74d9d6e729f389fe/Selection_121.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223556Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2dab8d5df8317649dd2f05974983aea16b42862c50226b75cc1bc47206511b91"
        }, 
        {
            "file_name": "Selection_119.png", 
            "type": "image/png", 
            "id": 157689, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/157/689/2df9683c5a82b8b228d4de6bc69cb2da2d706b79/Selection_119.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223556Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bc28a371317696e2428e3110e80cda056d2d67e2534f28ea847c20b7a4c63e85"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-02-06T17:33:18.631Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-06T17:33:18.631Z", 
            "actor": {
                "username": "rongutierrez", 
                "url": "/rongutierrez", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "Hi @cyneox, \n\nThis is a known issue and we have a fix in the works. I will let you know once it has been pushed out.", 
            "markdown_message": "<p>Hi <a href=\"/cyneox\">@cyneox</a>, </p>\n\n<p>This is a known issue and we have a fix in the works. I will let you know once it has been pushed out.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1465774, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-06T17:33:57.413Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-06T17:33:57.413Z", 
            "actor": {
                "username": "rongutierrez", 
                "url": "/rongutierrez", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 1465778, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-07T08:29:16.098Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-07T08:29:16.098Z", 
            "actor": {
                "username": "cyneox", 
                "url": "/cyneox", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/067/003/177bf8bbc99063622a2ff24e6dc2a7b80ee6c3bb_medium.jpg?1459879676"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "HI @rongutierrez,\n\nis this just a duplicate or did your internal staff find this issue ?!\n\nBR,\nCyneox", 
            "markdown_message": "<p>HI <a href=\"/rongutierrez\">@rongutierrez</a>,</p>\n\n<p>is this just a duplicate or did your internal staff find this issue ?!</p>\n\n<p>BR,<br>\nCyneox</p>\n", 
            "type": "Activities::Comment", 
            "id": 1467879, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "cyneox", 
                "url": "/cyneox"
            }, 
            "created_at": "2017-05-30T15:16:44.101Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-30T15:16:44.101Z", 
            "actor": {
                "username": "rongutierrez", 
                "url": "/rongutierrez", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "message": "Hi @cyneox, \n\nWe have released several fixes for this issue. We are now validating the file extensions of uploaded files to prevent executable extensions from being submitted (this include HTML as well). All uploaded files are run through virus scanning and will prompt the Greenhouse user if a virus was detected.  Lastly, files containing HTML markup would be handled with a text/plain content-type when downloaded so that it cannot be used for phishing.", 
            "markdown_message": "<p>Hi <a href=\"/cyneox\">@cyneox</a>, </p>\n\n<p>We have released several fixes for this issue. We are now validating the file extensions of uploaded files to prevent executable extensions from being submitted (this include HTML as well). All uploaded files are run through virus scanning and will prompt the Greenhouse user if a virus was detected.  Lastly, files containing HTML markup would be handled with a text/plain content-type when downloaded so that it cannot be used for phishing.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1709822, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-05-30T15:16:55.020Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-30T15:16:55.020Z", 
            "actor": {
                "url": "/greenhouse", 
                "profile": {
                    "name": "Greenhouse.io"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/312/d8a5615eac371f9e26a4ab3e56b8c32370280a0c_medium.jpg?1412369170"
                }
            }, 
            "team_handle": "greenhouse", 
            "bonus_amount": "0.0", 
            "bounty_amount": "100.0", 
            "collaborator": {
                "username": "cyneox", 
                "url": "/cyneox"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1709823, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-08T09:12:55.725Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-08T09:12:55.725Z", 
            "actor": {
                "username": "cyneox", 
                "url": "/cyneox", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/067/003/177bf8bbc99063622a2ff24e6dc2a7b80ee6c3bb_medium.jpg?1459879676"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "greenhouse", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1740709, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-08T09:12:59.400Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-08T09:12:59.400Z", 
            "actor": {
                "url": "/greenhouse", 
                "profile": {
                    "name": "Greenhouse.io"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/312/d8a5615eac371f9e26a4ab3e56b8c32370280a0c_medium.jpg?1412369170"
                }
            }, 
            "team_handle": "greenhouse", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1816486, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "cyneox", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/cyneox", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/067/003/3196173eeaf8c6ee29427b58ce96bcc95e7f9251_small.jpg?1459879676"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 53, 
        "name": "Open Redirect"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -44630581.172268845, 
    "disclosed_at": "2017-07-08T09:12:59.363Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/203726", 
    "created_at": "2017-02-06T09:14:17.418Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"open-redirect-in-scout24-greenhouse-io\">Open Redirect in scout24.greenhouse.io</h2>\n\n<p>The <strong>Scout24 Security Team</strong> did a penetration test against <code>scout24.greenhouse.io</code> in order to verify how Scout24 relevant data is protected against common attack vectors. Basically we have tested the (web) application against <a href=\"/redirect?signature=ea9f806f85a2b315ce1af65eabdda6721b9b41d9&amp;url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FCategory%3AOWASP_Top_Ten_Project\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>OWASP Top 10</span><i class=\"icon-external-link\"></i></a> using industry common metholodogies. </p>\n\n<h2 id=\"reproduction-steps\">Reproduction steps</h2>\n\n<ul>\n<li>Visit <a title=\"https://boards.greenhouse.io/scout24\" href=\"/redirect?signature=491920a61c98ed03b91f43b5ac6b92f5224e3697&amp;url=https%3A%2F%2Fboards.greenhouse.io%2Fscout24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://boards.greenhouse.io/scout24</span><i class=\"icon-external-link\"></i></a> and click on some job offer (I chosed <a href=\"/redirect?signature=9416b5cd6121541c64601c27b3d2b65814ff6be9&amp;url=https%3A%2F%2Fboards.greenhouse.io%2Fscout24%2Fjobs%2F503488\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>this one</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>After completing your personal information, you can <em>upload</em> some documents\n\n<ul>\n<li>Click <code>Attach</code> both under <em>Resume/CV</em> and <em>Cover Letter</em>\n</li>\n<li>Upload some PDF files from your local host (in my case the file uwas called <code>neu.pdf</code>)</li>\n</ul>\n</li>\n<li>In the end you send your application by clicking on <code>Submit Application</code>\n</li>\n</ul>\n\n<p>Using a HTTP proxy (in my case that was <a href=\"/redirect?signature=2907c858fa670d78b1de204f1bb3a6f60c5df4a7&amp;url=https%3A%2F%2Fportswigger.net%2Fburp%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Burp</span><i class=\"icon-external-link\"></i></a>) I was able to intercept the <code>POST</code> request made by the browser before being sent to the <code>greenhouse.io</code> API. This is some sample request:</p>\n\n<h3 id=\"proof-of-concept-poc\">Proof-of-Concept (PoC)</h3>\n<pre class=\"highlight plaintext\"><code>POST /scout24/jobs/503488 HTTP/1.1\nHost: boards.greenhouse.io\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nX-NewRelic-ID: VQ4PWFNbGwIFU1dbAgcB\nX-CSRF-Token: zF19Ky8GR0J/ZP7aLfFiN+p8Udc+X8ikPyk0cX7LlzgS0i4wWFIchmqcmsR3aXA0T1XSNrXSWdrVb47bGjGrEg==\nX-Requested-With: XMLHttpRequest\nReferer: https://boards.greenhouse.io/scout24/jobs/503488\nContent-Length: 4086\nContent-Type: multipart/form-data; boundary=---------------------------844282227400113298508475861\nCookie: __utma=44269810.1998188318.1484665255.1484837763.1484901247.18; __utmz=44269810.1484837763.17.11.utmcsr=scout24.eu.auth0.com|utmccn=(referral)|utmcmd=referral|utmcct=/login/callback; __zlcmid=edg9prI9rr6P3K; __utmc=44269810; __utmb=44269810.15.9.1484902626060; __atuvc=4%7C3; __atuvs=5881cd5b6c1ca704003; _jbs=7897bb31a3e984da1f15ec3b3f0e8129; __utmt=1\nConnection: close\n\n[...]\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[resume_url]&quot;\n\nhttps://grnhse-prod-jben-us-east-1.s3.amazonaws.com/applications%2Fresumes%2F1484902660983-1663bnwl7dt-b044057e6364840cde6c41d55de3a1e1%2Fneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[resume_url_filename]&quot;\n\nneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[cover_letter_url]&quot;\n\nhttps://grnhse-prod-jben-us-east-1.s3.amazonaws.com/applications%2Fresumes%2F1484902672335-lpk5xur1na-67346266367805828242f31b3887e539%2Fneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[cover_letter_url_filename]&quot;\n\nneu.pdf\n-----------------------------844282227400113298508475861--\n</code></pre>\n<p>As you can notice the files have been already uploaded to <code>AWS</code> and therfore a S3 bucket links are <br>\nused within the requests. </p>\n\n<h2 id=\"exploitability\">Exploitability</h2>\n\n<p>Using a browser and a HTTP proxy the request can be easily intercepted. In the <strong>original</strong> request the <code>Content-Disposition</code> parameter <code>job_application[cover_letter_url]</code> in the <code>POST</code> request contains a S3 bucket link. However, after tampering the request, the parameters values can be changed. In our specific case the value (basically an URL) could be changed to:</p>\n\n<ul>\n<li>a phishing site</li>\n<li>a site containing some malware</li>\n</ul>\n\n<p>After intercepting the request, the parameter was modified like this:</p>\n<pre class=\"highlight plaintext\"><code>POST /scout24/jobs/503488 HTTP/1.1\nHost: boards.greenhouse.io\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nX-NewRelic-ID: VQ4PWFNbGwIFU1dbAgcB\nX-CSRF-Token: zF19Ky8GR0J/ZP7aLfFiN+p8Udc+X8ikPyk0cX7LlzgS0i4wWFIchmqcmsR3aXA0T1XSNrXSWdrVb47bGjGrEg==\nX-Requested-With: XMLHttpRequest\nReferer: https://boards.greenhouse.io/scout24/jobs/503488\nContent-Length: 4086\nContent-Type: multipart/form-data; boundary=---------------------------844282227400113298508475861\nCookie: __utma=44269810.1998188318.1484665255.1484837763.1484901247.18; __utmz=44269810.1484837763.17.11.utmcsr=scout24.eu.auth0.com|utmccn=(referral)|utmcmd=referral|utmcct=/login/callback; __zlcmid=edg9prI9rr6P3K; __utmc=44269810; __utmb=44269810.15.9.1484902626060; __atuvc=4%7C3; __atuvs=5881cd5b6c1ca704003; _jbs=7897bb31a3e984da1f15ec3b3f0e8129; __utmt=1\nConnection: close\n[...]\n\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[resume_url]&quot;\n\nhttps://google.com\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[resume_url_filename]&quot;\n\nneu.pdf\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[cover_letter_url]&quot;\n\nhttp://google.com\n-----------------------------844282227400113298508475861\nContent-Disposition: form-data; name=&quot;job_application[cover_letter_url_filename]&quot;\n</code></pre>\n<p>Whenever the hiring manager will try to view the uploaded content, the application will not be able to render the content. Instead the person will then try to <strong>download</strong> the file by clicking on <code>Download</code> (left upper corner). Although the browser shows that the URL points to some specific <code>AWS</code> domain, the content is actually loaded from somewhere else (in this case from <a href=\"/redirect?signature=fe88e2a1b331aeedb3dffd0de51c8e3322970447&amp;url=https%3A%2F%2Fgoogle.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://google.com</span><i class=\"icon-external-link\"></i></a>). </p>\n\n<p>Again, an attacker could then submit some URL containing malicious content or some phishing site. Only for the purpose of this report, something unspectacular like <a href=\"/redirect?signature=fe88e2a1b331aeedb3dffd0de51c8e3322970447&amp;url=https%3A%2F%2Fgoogle.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://google.com</span><i class=\"icon-external-link\"></i></a> has been chosen. </p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>The attack can be conducted in multiple scenarios:</p>\n\n<ul>\n<li>anonymous person applies for some jobs and manipulates the parameters (like described above)</li>\n<li>internal employee adds referal for some person and also manipulates the parameters</li>\n</ul>\n\n<p>In both cases the hiring manager would then unknowingly access the manipulated links which could then lead to:</p>\n\n<ul>\n<li>installation of trojan horses / ransomeware (in general malicious content)</li>\n<li>a phishing site where e.g. AD credentials are claimed to be required</li>\n<li>CSRF (Cross-Site Request Forgery) <a href=\"/redirect?signature=8027dafdaf59ecdabab89b5df00600d19090f686&amp;url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FCross-Site_Request_Forgery_%28CSRF%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>attacks</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ul>\n\n<h2 id=\"remediation\">Remediation</h2>\n\n<p>The affected parameter should be first validated against some regular expression (e.g. allow only links that point to <code>grnhse-prod-jben-*.s3.amazonaws.com</code>). </p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://app.greenhouse.io", 
            "about": "Software to optimize your entire recruiting and onboarding process.", 
            "twitter_handle": "", 
            "name": "Greenhouse.io"
        }, 
        "handle": "greenhouse", 
        "url": "https://hackerone.com/greenhouse", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/312/ed3e97e66e1308f7cd4c8ebdab7110ddfeaa1378_small.jpg?1412369170", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/312/d8a5615eac371f9e26a4ab3e56b8c32370280a0c_medium.jpg?1412369170"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 312, 
        "default_currency": "usd"
    }, 
    "is_published": false
}