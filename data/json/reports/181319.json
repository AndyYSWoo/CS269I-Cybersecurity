{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-16T20:53:52.464Z", 
    "voters": [
        "isra17", 
        "michiel", 
        "eveeez", 
        "mpz", 
        "babayaga_", 
        "japz", 
        "spetr0x", 
        "janhacker", 
        "hackerjuan", 
        "jmlb1337"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 181319, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-16T20:52:29.027Z", 
    "vulnerability_information": "This bug was found with `jmlb337`.\n\nHey again,\nwhile reviewing mruby for vulnerabilities, I stumble onto a case that allow an attacker to leak heap content including pointer that can be used along another vulnerability to craft a complete exploit.\n\n## Reproduction Step\n1. Allocate a string with a few lines.\n2. Call String#lines and free or reallocate the string.\n3. Allocate a few objects.\n4. The next lines will now contains the value of the newly allocated data, including pointer used by `mrb_value`s.\n\n## PoC\n```ruby\n@a = []\n$a = (\"a\"*0xf + \"\\n\") * 1000\n$a.lines do |l|\n  $a.clear\n  foo = \"UUUUUUUU\" * 1000\n  @a << l\nend\n```\nLook at `@a` to get the \"UUUU...\" `mrb_value` object and strings.\n\n## Explaination\nThe bug is triggered due to the caching of `p` at [string.c:310](https://github.com/mruby/mruby/blob/872517dff372ee6fde92c71861abf6ab9fbab958/mrbgems/mruby-string-ext/src/string.c#L310): \n```c\n  char *p = RSTRING_PTR(self), *t;\n  char *e = p + RSTRING_LEN(self);\n```\n\nHowever, while iterating on each line, the function allow the caller to provide a block to be called for each line [string.c:324](https://github.com/mruby/mruby/blob/872517dff372ee6fde92c71861abf6ab9fbab958/mrbgems/mruby-string-ext/src/string.c#L324): \n```c\n      mrb_yield_argv(mrb, blk, 1, &arg);\n```\nThis block let the attacker to update the `self` string, in which case `p` will now be a dangling pointer pointing to free memory. Allocating new objects will end up in this free location and let the next iteration read this data before giving it back to the block.\n\n## Exploitability\n\nThe vulnerability is exploitable as long as the attacker can run arbitrary ruby code in the mruby interpreter. It should cover mruby-engine case as used by Shopify.\n\n## Impact\n\nThis vulnerability comes handy to locate object address in the heap, by allowing reliable, cheap and simple memory disclosure. We would use this bug to build a complete RCE along with another reported bug in the following 1 or 2 week  (Will add a comment with the other report ID). I spoke with Fran\u00e7ois Chagnon and we preferred to report the bugs as soon as possible while working on provable RCE afterward so it can get patched earlier.\n\n## Proposed Fix\nSee patch in attachment.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "User"
    }, 
    "title": "Memory disclosure in mruby String#lines method", 
    "is_member_of_team?": null, 
    "vote_count": 10, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-01-15T20:52:29.056Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,000", 
    "attachments": [
        {
            "file_name": "0001-Fix-use-after-free-access-in-String-lines.patch", 
            "type": "text/x-diff", 
            "id": 133844, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/133/844/1ea2922a8273f6995bf4cdf833e269e4cc289718/0001-Fix-use-after-free-access-in-String-lines.patch?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2SVVFJ4K%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224553Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDHbUi43kCnkCH8ghLCK3A1d0D7VWgJRDZWkdXXQGdmf7n%2FMcJt3uTEwb6Hdinq%2BFBbOAPOTsDxxrJ44I1M0GsX5wZenJPL8PevI%2FkbL9IqT6R%2BJKEKlPqPM6LpUT14hZkERpNFrQjbQc8QQ%2BGLJrYv6NGh3Ip0gK9gXfS%2BBt4RVWsZtku7hv1GxjVLrVN4tDuBx9kVUepW9naK5%2F0oXZzGIIp6Gjh%2FIKSsk58VEBKjC8XaVYCB%2BOEny5LgjoqjGxQtdacfYhOkVvkddEIug%2BxqJX03QrdlzYBPmNTl%2FPYt%2B7Ia6XenfHJpLptcsNwDKANRyeTTV%2FG3g%2BOCXLUeY4exATzHTwdvoYqOvrt5wMz9qaQRoRKK%2BUjVv5ctpYJvTH%2FMcrqKT%2Bat0Vu5%2B29B4mQPTT0FWbwQNEZv9s2WUcZfFK4nwDe%2FbWVaTYUyESNo3P9MBzjTGlE3RUSHfTIaws9cxbq%2B26X0Us8FyKWbfQU0Wz7XFi79Hu7vzT0q43xcUGempz37db7hbAD8s5J3Yuqly6EYzpKQo3hgzH0paY8Y8q0cEeQcN483KhHSXRw2GkwLMg8vEagxezp9Qvun6sYzBWVKsCvy4ohp2m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=878c39899e6df67cc300fcceb447d11d6ecb79235b72518f21b29f86ae7210b6"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-11-10T15:52:58.166Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T15:52:58.166Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "@isra17 since we may end up using the patch you submitted (or parts of it) I just want to confirm in writing that you agree to release it under the original project license (MIT License). We'll attribute the patches to you by linking to this issue and your github account if you wish.", 
            "markdown_message": "<p><a href=\"/isra17\">@isra17</a> since we may end up using the patch you submitted (or parts of it) I just want to confirm in writing that you agree to release it under the original project license (MIT License). We&#39;ll attribute the patches to you by linking to this issue and your github account if you wish.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1293515, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-10T16:01:09.817Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T16:01:09.817Z", 
            "actor": {
                "username": "isra17", 
                "url": "/isra17", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I agree to release it under the original project license.", 
            "markdown_message": "<p>I agree to release it under the original project license.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1293536, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-10T16:05:53.543Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T16:05:53.543Z", 
            "actor": {
                "username": "isra17", 
                "url": "/isra17", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "The other reported bug I talked about: https://hackerone.com/reports/181321 .\nBoth of those should be usable to get an RCE to escape the ruby sandbox.", 
            "markdown_message": "<p>The other reported bug I talked about: <a title=\"https://hackerone.com/reports/181321\" href=\"https://hackerone.com/reports/181321\">https://hackerone.com/reports/181321</a> .<br>\nBoth of those should be usable to get an RCE to escape the ruby sandbox.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1293548, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-14T18:56:20.797Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T18:56:20.797Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report. We've reproduced the issue, and our engineering team is working on a fix.", 
            "markdown_message": "<p>Thank you for your report. We&#39;ve reproduced the issue, and our engineering team is working on a fix.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1298876, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "isra17", 
                "url": "/isra17"
            }, 
            "created_at": "2016-11-15T20:15:59.107Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-15T20:15:59.107Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you again for this great report. We've resolved this issue in our production environment and the fix has been submitted upstream: https://github.com/mruby/mruby/commit/242b21947102d98aba2fa3db2725b129ca547f20\n\nI'm marking this issue as resolved now but we still need to assess the impact &  determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.", 
            "markdown_message": "<p>Thank you again for this great report. We&#39;ve resolved this issue in our production environment and the fix has been submitted upstream: <a title=\"https://github.com/mruby/mruby/commit/242b21947102d98aba2fa3db2725b129ca547f20\" href=\"/redirect?signature=626ac348d1708f51b0f276a4948fc2687e6e89d7&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fcommit%2F242b21947102d98aba2fa3db2725b129ca547f20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/commit/242b21947102d98aba2fa3db2725b129ca547f20</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>I&#39;m marking this issue as resolved now but we still need to assess the impact &amp;  determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1301026, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-16T20:52:24.122Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T20:52:24.122Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bounty_amount": "2000.0", 
            "collaborator": {
                "username": "isra17", 
                "url": "/isra17"
            }, 
            "message": "Thanks for helping improve the security of Shopify Scripts and the mruby project!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify Scripts and the mruby project!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1370227, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T20:52:29.042Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T20:52:29.042Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370229, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T20:53:52.479Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T20:53:52.479Z", 
            "actor": {
                "username": "isra17", 
                "url": "/isra17", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370240, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T20:53:52.509Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T20:53:52.509Z", 
            "actor": {
                "username": "isra17", 
                "url": "/isra17", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1370241, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "isra17", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/isra17", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 2, 
        "name": "Memory Corruption - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -59622804.189927794, 
    "disclosed_at": "2016-12-16T20:53:52.497Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/181319", 
    "created_at": "2016-11-10T13:17:47.675Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>This bug was found with <code>jmlb337</code>.</p>\n\n<p>Hey again,<br>\nwhile reviewing mruby for vulnerabilities, I stumble onto a case that allow an attacker to leak heap content including pointer that can be used along another vulnerability to craft a complete exploit.</p>\n\n<h2 id=\"reproduction-step\">Reproduction Step</h2>\n\n<ol>\n<li>Allocate a string with a few lines.</li>\n<li>Call String#lines and free or reallocate the string.</li>\n<li>Allocate a few objects.</li>\n<li>The next lines will now contains the value of the newly allocated data, including pointer used by <code>mrb_value</code>s.</li>\n</ol>\n\n<h2 id=\"poc\">PoC</h2>\n<pre class=\"highlight ruby\"><code><span class=\"vi\">@a</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"vg\">$a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"o\">*</span><span class=\"mh\">0xf</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n<span class=\"vg\">$a</span><span class=\"p\">.</span><span class=\"nf\">lines</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">l</span><span class=\"o\">|</span>\n  <span class=\"vg\">$a</span><span class=\"p\">.</span><span class=\"nf\">clear</span>\n  <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;UUUUUUUU&quot;</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n  <span class=\"vi\">@a</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">l</span>\n<span class=\"k\">end</span>\n</code></pre>\n<p>Look at <code>@a</code> to get the &quot;UUUU...&quot; <code>mrb_value</code> object and strings.</p>\n\n<h2 id=\"explaination\">Explaination</h2>\n\n<p>The bug is triggered due to the caching of <code>p</code> at <a href=\"/redirect?signature=e05140ec6f821c63ca757f43f4574d3ac0371665&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fblob%2F872517dff372ee6fde92c71861abf6ab9fbab958%2Fmrbgems%2Fmruby-string-ext%2Fsrc%2Fstring.c%23L310\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>string.c:310</span><i class=\"icon-external-link\"></i></a>: </p>\n<pre class=\"highlight c\"><code>  <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">RSTRING_PTR</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">),</span> <span class=\"o\">*</span><span class=\"n\">t</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">p</span> <span class=\"o\">+</span> <span class=\"n\">RSTRING_LEN</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">);</span>\n</code></pre>\n<p>However, while iterating on each line, the function allow the caller to provide a block to be called for each line <a href=\"/redirect?signature=cfa6006573a5f4b0871ff9eaeee521103a65aea4&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fblob%2F872517dff372ee6fde92c71861abf6ab9fbab958%2Fmrbgems%2Fmruby-string-ext%2Fsrc%2Fstring.c%23L324\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>string.c:324</span><i class=\"icon-external-link\"></i></a>: </p>\n<pre class=\"highlight c\"><code>      <span class=\"n\">mrb_yield_argv</span><span class=\"p\">(</span><span class=\"n\">mrb</span><span class=\"p\">,</span> <span class=\"n\">blk</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">arg</span><span class=\"p\">);</span>\n</code></pre>\n<p>This block let the attacker to update the <code>self</code> string, in which case <code>p</code> will now be a dangling pointer pointing to free memory. Allocating new objects will end up in this free location and let the next iteration read this data before giving it back to the block.</p>\n\n<h2 id=\"exploitability\">Exploitability</h2>\n\n<p>The vulnerability is exploitable as long as the attacker can run arbitrary ruby code in the mruby interpreter. It should cover mruby-engine case as used by Shopify.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>This vulnerability comes handy to locate object address in the heap, by allowing reliable, cheap and simple memory disclosure. We would use this bug to build a complete RCE along with another reported bug in the following 1 or 2 week  (Will add a comment with the other report ID). I spoke with Fran\u00e7ois Chagnon and we preferred to report the bugs as soon as possible while working on provable RCE afterward so it can get patched earlier.</p>\n\n<h2 id=\"proposed-fix\">Proposed Fix</h2>\n\n<p>See patch in attachment.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}