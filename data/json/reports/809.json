{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "mrtuxracer", 
        "axolotl", 
        "ameerpornillos", 
        "spetr0x", 
        "cryptographer"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "300.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 809, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-01-28T00:57:58.908Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Improperly implemented password recovery link functionality", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-02-27T00:54:52.639Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$300", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-01-27T20:58:34.057Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-27T20:58:34.057Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "Thanks! I think the severity here is low, but this workflow definitely has some issues.\n\nWe can't always prompt for a new password before logging in because there may be no password provider (that is, an install may not allow users to login with passwords at all). However:\n\n1) We should prevent you from recovering an account if you're already logged in.\n2) We should prompt you to confirm the login and CSRF the action.\n\nDoes that cover it? Anything else that I'm missing?\n\nI'll work on getting this patched, although one of my usual reviewers is on vacation this week so it may take a little longer than usual to get reviewed/deployed.", 
            "markdown_message": "<p>Thanks! I think the severity here is low, but this workflow definitely has some issues.</p>\n\n<p>We can&#39;t always prompt for a new password before logging in because there may be no password provider (that is, an install may not allow users to login with passwords at all). However:</p>\n\n<p>1) We should prevent you from recovering an account if you&#39;re already logged in.<br>\n2) We should prompt you to confirm the login and CSRF the action.</p>\n\n<p>Does that cover it? Anything else that I&#39;m missing?</p>\n\n<p>I&#39;ll work on getting this patched, although one of my usual reviewers is on vacation this week so it may take a little longer than usual to get reviewed/deployed.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 4382, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-01-27T21:25:50.712Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-27T21:25:50.712Z", 
            "actor": {
                "username": "dawidczagan", 
                "url": "/dawidczagan", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/213/1070cb38ee5b80ee5b6b39a60798bbb7a940952e_medium.jpg?1412368543"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "When a user wants to reset a password - send him a link with a long and unpredictable token. Make this link valid for short period of time. When the token has already been used, make this link invalid.. The user enters new password twice (add a CSRF token to the form). When successfully done, the user gets an information that the password has been changed (no need to disclose the login of the user), Don't automatically log in a user - the user should provide a username and a new password to log in.", 
            "markdown_message": "<p>When a user wants to reset a password - send him a link with a long and unpredictable token. Make this link valid for short period of time. When the token has already been used, make this link invalid.. The user enters new password twice (add a CSRF token to the form). When successfully done, the user gets an information that the password has been changed (no need to disclose the login of the user), Don&#39;t automatically log in a user - the user should provide a username and a new password to log in.</p>\n", 
            "type": "Activities::Comment", 
            "id": 4385, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-01-27T21:30:09.897Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-27T21:30:09.897Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "This should be resolved by:\n\nhttps://secure.phabricator.com/D8079\n\nI'll commit it in a few hours if btrahan hasn't had a chance to look at it by then.\n\nWe can not require the user to enter a new password in order to login because installs may not support password authentication. Instead, we now require them to click a CSRF'd form button which says \"Login (user@domain.com)\".", 
            "markdown_message": "<p>This should be resolved by:</p>\n\n<p><a title=\"https://secure.phabricator.com/D8079\" href=\"/redirect?signature=f2d4f01d46e0cdf872cad415e55e6bd06cb982b4&amp;url=https%3A%2F%2Fsecure.phabricator.com%2FD8079\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://secure.phabricator.com/D8079</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>I&#39;ll commit it in a few hours if btrahan hasn&#39;t had a chance to look at it by then.</p>\n\n<p>We can not require the user to enter a new password in order to login because installs may not support password authentication. Instead, we now require them to click a CSRF&#39;d form button which says &quot;Login (<a title=\"user@domain.com\" href=\"mailto:user@domain.com\" rel=\"nofollow noopener noreferrer\">user@domain.com</a>)&quot;.</p>\n", 
            "type": "Activities::Comment", 
            "id": 4386, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "dawidczagan", 
                "url": "/dawidczagan"
            }, 
            "created_at": "2014-01-28T00:54:52.724Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-28T00:54:52.724Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "This should now be fixed in HEAD:\n\nhttps://secure.phabricator.com/rP152f05aebed00c486fcc32430f3a46c76470c188", 
            "markdown_message": "<p>This should now be fixed in HEAD:</p>\n\n<p><a title=\"https://secure.phabricator.com/rP152f05aebed00c486fcc32430f3a46c76470c188\" href=\"/redirect?signature=58ce9783de162966ac383457e364bbc620c30d90&amp;url=https%3A%2F%2Fsecure.phabricator.com%2FrP152f05aebed00c486fcc32430f3a46c76470c188\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://secure.phabricator.com/rP152f05aebed00c486fcc32430f3a46c76470c188</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugResolved", 
            "id": 4396, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2014-01-28T00:57:40.790Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-28T00:57:40.790Z", 
            "actor": {
                "url": "/phabricator", 
                "profile": {
                    "name": "Phabricator"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/018/29aa105aca62b26e62c64e57c902e5db2bb8daf6_medium.jpg?1487955532"
                }
            }, 
            "team_handle": "phabricator", 
            "bounty_amount": "300.0", 
            "collaborator": {
                "username": "dawidczagan", 
                "url": "/dawidczagan"
            }, 
            "message": "I'm assessing this as a low-severity issue because it's only a stepping stone to more complex attacks, those attacks are theoretical, it must be targeted, the attacker must be able to register accounts, the reset links expire, and the UI is full of feedback about which account you're logged in as.", 
            "markdown_message": "<p>I&#39;m assessing this as a low-severity issue because it&#39;s only a stepping stone to more complex attacks, those attacks are theoretical, it must be targeted, the attacker must be able to register accounts, the reset links expire, and the UI is full of feedback about which account you&#39;re logged in as.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 4397, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-01-28T00:57:58.919Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-01-28T00:57:58.919Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "This can be publicly disclosed at any time, it's already public in the commit history.", 
            "markdown_message": "<p>This can be publicly disclosed at any time, it&#39;s already public in the commit history.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 4398, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-02-27T00:54:55.452Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-02-27T00:54:55.452Z", 
            "actor": {
                "url": "/phabricator", 
                "profile": {
                    "name": "Phabricator"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/018/29aa105aca62b26e62c64e57c902e5db2bb8daf6_medium.jpg?1487955532"
                }
            }, 
            "team_handle": "phabricator", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 9662, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "dawidczagan", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/dawidczagan", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/213/b25d9e5afde86e109cdfcb4209fe9c97648b4185_small.jpg?1412368543"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -150675126.26424387, 
    "disclosed_at": "2014-02-27T00:54:55.437Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/809", 
    "created_at": "2014-01-27T20:49:36.770Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I took a look at live install of Phabricator (<a title=\"https://secure.phabricator.com/\" href=\"/redirect?signature=4e6b5d91caab1710d8853da19fee23e2ebf5ff85&amp;url=https%3A%2F%2Fsecure.phabricator.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://secure.phabricator.com/</span><i class=\"icon-external-link\"></i></a>) and noticed, that the user gets automatically logged in after clicking the password recovery link (this link is sent to the user&#39;s mail). This authentication takes place before the user is asked to enter a new password twice. This can be used be the attacker to log in a user to the attacker&#39;s account - the attacker generates a password recovery link to his account, sends it to the user and the user becomes logged in to the attacker&#39;s account, when he clicks the link delivered by the attacker.</p>\n", 
    "vulnerability_information": "I took a look at live install of Phabricator (https://secure.phabricator.com/) and noticed, that the user gets automatically logged in after clicking the password recovery link (this link is sent to the user's mail). This authentication takes place before the user is asked to enter a new password twice. This can be used be the attacker to log in a user to the attacker's account - the attacker generates a password recovery link to his account, sends it to the user and the user becomes logged in to the attacker's account, when he clicks the link delivered by the attacker.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://phacility.com/phabricator/", 
            "about": "Phabricator is a collection of open source web applications that help software companies build better software.", 
            "twitter_handle": "phabricator", 
            "name": "Phabricator"
        }, 
        "handle": "phabricator", 
        "url": "https://hackerone.com/phabricator", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/018/8f0130b0439b00cdeeddd76246ec8063cac6495f_small.jpg?1487955532", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/018/29aa105aca62b26e62c64e57c902e5db2bb8daf6_medium.jpg?1487955532"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 18, 
        "default_currency": "usd"
    }, 
    "is_published": false
}