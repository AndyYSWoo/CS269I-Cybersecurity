{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-03-31T15:41:11.333Z", 
    "voters": [
        "zhchbin", 
        "sp1d3rs", 
        "bl4de", 
        "adn", 
        "woltage", 
        "spam404", 
        "hunter", 
        "kapytein", 
        "003random", 
        "ta8ahi", 
        "and 74 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "5040.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 110467, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Bypassing Digits bridge origin validation", 
    "is_member_of_team?": null, 
    "vote_count": 84, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-04-30T15:41:11.389Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$5,040", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-01-15T17:03:23.631Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-15T17:03:23.631Z", 
            "actor": {
                "username": "bfd", 
                "url": "/bfd", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/639/6958ddee38cf9b6dfcb98bb2b029056b16824f4c_medium.jpg?1441215254"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 759579, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-23T00:52:48.766Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-23T00:52:48.766Z", 
            "actor": {
                "username": "andrewsorensen", 
                "url": "/andrewsorensen", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Just as an update - we haven't forgotten about the bounty for this report. We should get back to you next week.\n\nThanks for thinking of Twitter security!", 
            "markdown_message": "<p>Just as an update - we haven&#39;t forgotten about the bounty for this report. We should get back to you next week.</p>\n\n<p>Thanks for thinking of Twitter security!</p>\n", 
            "type": "Activities::Comment", 
            "id": 769166, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-23T01:49:04.733Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-23T01:49:13.295Z", 
            "actor": {
                "username": "filedescriptor", 
                "url": "/filedescriptor", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Cool, gotcha!", 
            "markdown_message": "<p>Cool, gotcha!</p>\n", 
            "type": "Activities::Comment", 
            "id": 769209, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-01-29T19:10:29.349Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-29T19:10:29.349Z", 
            "actor": {
                "url": "/twitter", 
                "profile": {
                    "name": "Twitter"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
                }
            }, 
            "team_handle": "twitter", 
            "bounty_amount": "5040.0", 
            "collaborator": {
                "username": "filedescriptor", 
                "url": "/filedescriptor"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 777239, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "filedescriptor", 
                "url": "/filedescriptor"
            }, 
            "created_at": "2016-02-23T19:27:27.172Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T19:27:27.172Z", 
            "actor": {
                "username": "bfd", 
                "url": "/bfd", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/639/6958ddee38cf9b6dfcb98bb2b029056b16824f4c_medium.jpg?1441215254"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>We consider this issue to be fixed now. Can you please confirm?</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 809212, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T19:28:02.678Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T19:28:02.678Z", 
            "actor": {
                "username": "filedescriptor", 
                "url": "/filedescriptor", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "I can confirm this is fixed! (I believe this was fixed a while ago)", 
            "markdown_message": "<p>I can confirm this is fixed! (I believe this was fixed a while ago)</p>\n", 
            "type": "Activities::Comment", 
            "id": 809213, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-31T15:41:11.358Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-31T15:41:11.358Z", 
            "actor": {
                "username": "filedescriptor", 
                "url": "/filedescriptor", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1575364, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-30T15:41:17.254Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-30T15:41:17.254Z", 
            "actor": {
                "url": "/twitter", 
                "profile": {
                    "name": "Twitter"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
                }
            }, 
            "team_handle": "twitter", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1645430, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "filedescriptor", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/filedescriptor", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -50569120.90567427, 
    "disclosed_at": "2017-04-30T15:41:17.220Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/110467", 
    "created_at": "2016-01-13T14:14:24.338Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,<br>\nI would like to report an issue in the bridge proxy in Digits which allows attacker to retrieve the OAuth credential data of an application victims authorized.</p>\n\n<h1 id=\"detail\">Detail</h1>\n\n<p>In the Digits Web SDK, the method <a href=\"/redirect?signature=0d0c8b1907ac56810908fae51edf2c3d7201b372&amp;url=https%3A%2F%2Fdocs.fabric.io%2Fweb%2Fdigits%2Fgetting-started.html%23set-up-digits-authentication\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>getLoginStatus</span><i class=\"icon-external-link\"></i></a> can be used to retrieve the OAuth credential data of an application if the user has already logged in Digits and authorized the app. The way it works is to inject an hidden iframe (I call it bridge because the URL is <a title=\"https://www.digits.com/bridge\" href=\"/redirect?signature=033ac9a9d0852cb835a3ad6695ab66b69692e167&amp;url=https%3A%2F%2Fwww.digits.com%2Fbridge\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digits.com/bridge</span><i class=\"icon-external-link\"></i></a>) which acts like a proxy into the webpage and communicate using <em>postMessage</em>. Once the bridge receives the <em>getLoginStatus</em> command, it will make an AJAX request to /login_status and the response will contain the OAuth credential data of the user of an application. Then, the bridge will send back the data via <em>postMessage</em> to parent window.</p>\n\n<p>For example:</p>\n<pre class=\"highlight plaintext\"><code>+----------------------------------------------------------------------------------+\n| https://www.periscope.tv/                                                        |\n+----------------------------------------------------------------------------------+\n|                                                                                  |\n|  +----------------------------------------------------------------------------+  |\n|  | https://www.digits.com/bridge?consumer_key=.&amp;host=https://www.periscope.tv |  |\n|  +----------------------------------------------------------------------------+  |\n|  |                                                                            |  |\n|  |                      ^                           +                         |  |\n|  +----------------------------------------------------------------------------+  |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         +                           v                            |\n|                   getLoginStatus             OAuth Credential                    |\n|                                                                                  |\n+----------------------------------------------------------------------------------+\n</code></pre>\n<p>If <a title=\"https://www.periscope.tv/\" href=\"/redirect?signature=8a100a7ac4b4b69c0f8d9b3e10a404d2ccad9869&amp;url=https%3A%2F%2Fwww.periscope.tv%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.periscope.tv/</span><i class=\"icon-external-link\"></i></a> invokes <em>Digits.getLoginStatus()</em>, then an iframe will be injected where the <em>host</em> parameter is the invoker origin.</p>\n\n<p>There&#39;s a protection in place which validates whether the <em>host</em> parameter provided matches the application registered domain. For example, <code>/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https://www.periscope.tv</code> passes while <code>/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https://attacker.com</code> fails. This prevents others to use the same <em>consumer_key</em> to pretend to be the legit application to issue the command.</p>\n\n<p>However, <strong>there is no validation to check whether the page which embeds the bridge proxy is from the registered domain</strong>. In other words, attacker can manually embed <code>/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&amp;host=https://www.periscope.tv</code> into his/her webpage and issue command on behalf of the legit application.</p>\n\n<h1 id=\"impact\">Impact</h1>\n\n<p>It affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim&#39;s account on the affected applications. In addition, this attack <strong>does not require user interaction</strong>. The only prerequisite is that the victim has already logged in Digits and authorized the application.</p>\n\n<h1 id=\"poc\">PoC</h1>\n\n<ol>\n<li>Prepare a Periscope account which is associated with a phone number, and make sure you have logged in Digits (<a title=\"https://www.digits.com/signin\" href=\"/redirect?signature=3497e847a9a31311ec0413c62a22d3fa959f7313&amp;url=https%3A%2F%2Fwww.digits.com%2Fsignin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.digits.com/signin</span><i class=\"icon-external-link\"></i></a>) with that number</li>\n<li>Go to <a title=\"http://innerht.ml/pocs/digits-bridge-origin-validation-bypass/\" href=\"/redirect?signature=03944fb1bb174226f12a3a20c14bd404e8cdf3dd&amp;url=http%3A%2F%2Finnerht.ml%2Fpocs%2Fdigits-bridge-origin-validation-bypass%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://innerht.ml/pocs/digits-bridge-origin-validation-bypass/</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Wait for a while</li>\n<li>You Periscope account will be renamed as &quot;Pwn3d&quot;</li>\n</ol>\n\n<p>Video demo: <a title=\"https://vimeo.com/151646523\" href=\"/redirect?signature=49ff28f58a2f953906e3fed07a20f34e57632162&amp;url=https%3A%2F%2Fvimeo.com%2F151646523\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://vimeo.com/151646523</span><i class=\"icon-external-link\"></i></a> (password: proxy)</p>\n\n<p>And as always, since it does not require user interaction, it can be put into a player card to achieve maximum stealthiness.</p>\n\n<h1 id=\"fix\">Fix</h1>\n\n<p>It would be ideal to employ CORS instead of postMessage + proxy for that purpose. An alternative fix would be to check whether the page embedding the bridge proxy is from the registered domain by comparing referrer (pretty unsound though).</p>\n", 
    "vulnerability_information": "Hi,\nI would like to report an issue in the bridge proxy in Digits which allows attacker to retrieve the OAuth credential data of an application victims authorized.\n\n#Detail\nIn the Digits Web SDK, the method [getLoginStatus](https://docs.fabric.io/web/digits/getting-started.html#set-up-digits-authentication) can be used to retrieve the OAuth credential data of an application if the user has already logged in Digits and authorized the app. The way it works is to inject an hidden iframe (I call it bridge because the URL is https://www.digits.com/bridge) which acts like a proxy into the webpage and communicate using *postMessage*. Once the bridge receives the *getLoginStatus* command, it will make an AJAX request to /login_status and the response will contain the OAuth credential data of the user of an application. Then, the bridge will send back the data via *postMessage* to parent window.\n\nFor example:\n\n```\n+----------------------------------------------------------------------------------+\n| https://www.periscope.tv/                                                        |\n+----------------------------------------------------------------------------------+\n|                                                                                  |\n|  +----------------------------------------------------------------------------+  |\n|  | https://www.digits.com/bridge?consumer_key=.&host=https://www.periscope.tv |  |\n|  +----------------------------------------------------------------------------+  |\n|  |                                                                            |  |\n|  |                      ^                           +                         |  |\n|  +----------------------------------------------------------------------------+  |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         |                           |                            |\n|                         +                           v                            |\n|                   getLoginStatus             OAuth Credential                    |\n|                                                                                  |\n+----------------------------------------------------------------------------------+\n```\n\nIf https://www.periscope.tv/ invokes *Digits.getLoginStatus()*, then an iframe will be injected where the *host* parameter is the invoker origin.\n\nThere's a protection in place which validates whether the *host* parameter provided matches the application registered domain. For example, ```/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https://www.periscope.tv``` passes while ```/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https://attacker.com``` fails. This prevents others to use the same *consumer_key* to pretend to be the legit application to issue the command.\n\nHowever, **there is no validation to check whether the page which embeds the bridge proxy is from the registered domain**. In other words, attacker can manually embed ```/bridge?consumer_key=9I4iINIyd0R01qEPEwT9IC6RE&host=https://www.periscope.tv``` into his/her webpage and issue command on behalf of the legit application.\n\n#Impact\nIt affects every application that has integrated Digits, and even official application (Periscope). Attacker can abuse the flaw to login to victim's account on the affected applications. In addition, this attack **does not require user interaction**. The only prerequisite is that the victim has already logged in Digits and authorized the application.\n\n#PoC\n1. Prepare a Periscope account which is associated with a phone number, and make sure you have logged in Digits (https://www.digits.com/signin) with that number\n2. Go to http://innerht.ml/pocs/digits-bridge-origin-validation-bypass/\n3. Wait for a while\n4. You Periscope account will be renamed as \"Pwn3d\"\n\nVideo demo: https://vimeo.com/151646523 (password: proxy)\n\nAnd as always, since it does not require user interaction, it can be put into a player card to achieve maximum stealthiness.\n\n#Fix\nIt would be ideal to employ CORS instead of postMessage + proxy for that purpose. An alternative fix would be to check whether the page embedding the bridge proxy is from the registered domain by comparing referrer (pretty unsound though).", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://twitter.com", 
            "about": "Twitter helps you create and share ideas and information instantly, without barriers.", 
            "twitter_handle": "twittersecurity", 
            "name": "Twitter"
        }, 
        "handle": "twitter", 
        "url": "https://hackerone.com/twitter", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/061/4acfe72859c5e9cb48a152edb4e498e13fa28df2_small.?1439954730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 61, 
        "default_currency": "usd"
    }, 
    "is_published": false
}