{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-02-22T11:02:52.770Z", 
    "voters": [
        "kenan", 
        "bugdiscloseguys", 
        "eveeez", 
        "madrobot", 
        "ak1t4", 
        "r0t", 
        "alfredsaonoy", 
        "japz", 
        "spetr0x", 
        "clarckowen_", 
        "and 3 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "300.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 174474, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "vulnerability_information": "Hello guys,\n\n**_Details:_**\nWell, initially I was testing for CRLF (Carriage Return Line Feed) Injection, but how turned out, I was able to inject cookie without CRLF, just via # value at HTTP Request.\n\n**_PoC:_**\nAttacker able to inject new cookie from any application place, e.g.\n`https://testerovusera.harvestapp.com/people/1412277/edit#NewLocalCookieKey=NewLocalCookieValue`\nin this case cookie will be created to following path, and will be valid only there: _/people/1412277/_\n**but**, it could be bypassed, if append root application path, e.g.\n`https://testerovusera.harvestapp.com/people/1412277/edit#NewGlobalCookieKey=NewGlobalCookieValue;path=/;/`\n{F126502}\n\n**_Attacking scenario:_**\nThis vulnerability perfectly could be used in combination with other vulnerabilities:\n- XSS thru Cookie;\n- Session Fixation;\n- CSRF protection bypass\n\n**_Recommendation:_**\nProperly validate what is going to cookie jar\n\nThank you,\nStas", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "User"
    }, 
    "title": "Cookie Injection at 'harvestapp.com'", 
    "is_member_of_team?": null, 
    "vote_count": 13, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-03-24T11:02:52.804Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$300", 
    "attachments": [
        {
            "file_name": "NewCookie.png", 
            "type": "image/png", 
            "id": 126502, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/126/502/939698b356e4cdc87ee7d275b3580dfb1db47f06/NewCookie.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224137Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7484a47743bf594b336c6ecef850495cacdd750e29823e899d27a8814fce8a8d"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-10-07T14:52:45.412Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-07T14:52:45.412Z", 
            "actor": {
                "username": "jorgeleria", 
                "url": "/jorgeleria", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/680/3e44968ac3b661792cd01009529cfad463cdf10c_medium.jpg?1459336835"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hi Stas,\n\nVery nice finding! I'm trying to understand the extend and implications of this and how it might affect us. Could you elaborate a bit more when you say?:\n\n> XSS thru Cookie;\n Session Fixation;\nCSRF protection bypass\n\nI'm not able to overwrite the session cookie and I'm not sure how it might be used in combination with a XSS or CSRF attack.\n\nBest regards,\nJorge", 
            "markdown_message": "<p>Hi Stas,</p>\n\n<p>Very nice finding! I&#39;m trying to understand the extend and implications of this and how it might affect us. Could you elaborate a bit more when you say?:</p>\n\n<blockquote>\n<p>XSS thru Cookie;<br>\n Session Fixation;<br>\nCSRF protection bypass</p>\n</blockquote>\n\n<p>I&#39;m not able to overwrite the session cookie and I&#39;m not sure how it might be used in combination with a XSS or CSRF attack.</p>\n\n<p>Best regards,<br>\nJorge</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1237297, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/126/562/d88a3e8dc4eba0f37bbac83e17f509c56c039298/NewCookie_harvest.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224137Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=8e45bb32407b8dfcbf6135c9e60fd56268525007375074aae984831eca88b860", 
                    "type": "image/png", 
                    "id": 126562, 
                    "filename": "NewCookie_harvest.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-10-07T16:19:59.779Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-07T16:19:59.779Z", 
            "actor": {
                "username": "zuh4n", 
                "url": "/zuh4n", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/842/c5edee4613e4023813dfc60caa8bc107a8f75bf1_medium.png?1469826496"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hey @jorgeleria \nSo, here is my result after short investigation: I was able to inject `production_access_token` and `_harvest_sess` cookies to specific page (in my case it's projects page), but after my injection, I'm not able to visit this page any more :D. To solve this issue - need to clean all (or just injected) cookie.\n\n**_PoC Request:_**\n`https://testerovusera.harvestapp.com/people#_harvest_sess=testValue;path=/projects/;/&production_access_token=testValue;path=/projects/;/`\n\nAbout XSS, it's hard to say you now, because I need to find some particular place (page / event / action) where cookie passes thru the code, and there break the code, and create XSS PoC.\n\nLet me know if you need more info :)\n\nThank you,\nStas", 
            "markdown_message": "<p>Hey <a href=\"/jorgeleria\">@jorgeleria</a> <br>\nSo, here is my result after short investigation: I was able to inject <code>production_access_token</code> and <code>_harvest_sess</code> cookies to specific page (in my case it&#39;s projects page), but after my injection, I&#39;m not able to visit this page any more :D. To solve this issue - need to clean all (or just injected) cookie.</p>\n\n<p><strong><u>PoC Request:</u></strong><br>\n<code>https://testerovusera.harvestapp.com/people#_harvest_sess=testValue;path=/projects/;/&amp;production_access_token=testValue;path=/projects/;/</code></p>\n\n<p>About XSS, it&#39;s hard to say you now, because I need to find some particular place (page / event / action) where cookie passes thru the code, and there break the code, and create XSS PoC.</p>\n\n<p>Let me know if you need more info :)</p>\n\n<p>Thank you,<br>\nStas</p>\n", 
            "type": "Activities::BugNew", 
            "id": 1237459, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-07T16:44:39.175Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-07T16:44:39.175Z", 
            "actor": {
                "username": "jorgeleria", 
                "url": "/jorgeleria", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/680/3e44968ac3b661792cd01009529cfad463cdf10c_medium.jpg?1459336835"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Thanks a lot for the additional info! I'm moving it to triage.\nI'll contact you as soon as I have some news or we deploy a fix.\n\nCheers,\nJorge", 
            "markdown_message": "<p>Thanks a lot for the additional info! I&#39;m moving it to triage.<br>\nI&#39;ll contact you as soon as I have some news or we deploy a fix.</p>\n\n<p>Cheers,<br>\nJorge</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1237497, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "zuh4n", 
                "url": "/zuh4n"
            }, 
            "created_at": "2016-11-02T16:29:42.568Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-02T16:29:42.568Z", 
            "actor": {
                "username": "jorgeleria", 
                "url": "/jorgeleria", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/680/3e44968ac3b661792cd01009529cfad463cdf10c_medium.jpg?1459336835"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hi Stas,\n\nThanks for your patience, this one should be fixed! \nCould you check if you are able to reproduce it?\n\nRegards,\nJorge", 
            "markdown_message": "<p>Hi Stas,</p>\n\n<p>Thanks for your patience, this one should be fixed! <br>\nCould you check if you are able to reproduce it?</p>\n\n<p>Regards,<br>\nJorge</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1280671, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-02T19:27:30.214Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-02T19:27:30.214Z", 
            "actor": {
                "username": "zuh4n", 
                "url": "/zuh4n", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/842/c5edee4613e4023813dfc60caa8bc107a8f75bf1_medium.png?1469826496"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hi Jorge,\n\nYes, I confirm that issue no longer reproducible!\n\nStas", 
            "markdown_message": "<p>Hi Jorge,</p>\n\n<p>Yes, I confirm that issue no longer reproducible!</p>\n\n<p>Stas</p>\n", 
            "type": "Activities::Comment", 
            "id": 1280982, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-08T17:00:17.981Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-08T17:00:17.981Z", 
            "actor": {
                "url": "/harvest", 
                "profile": {
                    "name": "Harvest"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/237/6d125866767807c1a1abda02f0ffd805c5928ff4_medium.png?1403079688"
                }
            }, 
            "team_handle": "harvest", 
            "bounty_amount": "150.0", 
            "collaborator": {
                "username": "zuh4n", 
                "url": "/zuh4n"
            }, 
            "message": "Thanks for helping make Harvest more secure!", 
            "markdown_message": "<p>Thanks for helping make Harvest more secure!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1351230, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-08T17:16:24.841Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-08T17:16:24.841Z", 
            "actor": {
                "username": "zuh4n", 
                "url": "/zuh4n", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/842/c5edee4613e4023813dfc60caa8bc107a8f75bf1_medium.png?1469826496"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hello guys. \nReally appreciate bounty. But to be honest a bit confused due to amount.. Especially because of impact..\n\nStas", 
            "markdown_message": "<p>Hello guys. <br>\nReally appreciate bounty. But to be honest a bit confused due to amount.. Especially because of impact..</p>\n\n<p>Stas</p>\n", 
            "type": "Activities::Comment", 
            "id": 1351266, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-08T17:38:34.994Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-08T17:38:34.994Z", 
            "actor": {
                "username": "jorgeleria", 
                "url": "/jorgeleria", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/680/3e44968ac3b661792cd01009529cfad463cdf10c_medium.jpg?1459336835"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Hi zuh4n,\n\nMy bad, I missed the smily face when you said:\n\n> I was able to inject production_access_token and _harvest_sess cookies to specific page (in my case it's projects page), but after my injection, I'm not able to visit this page any more :D\n\nWhen you said `I'm not able to visit this page any more` it is because the injection worked for that path, and this means that a session injection was possible.\n\nWe are going to discuss the bounty amount having in mind the info that was missing. I'll be back to you soon.\n\nBest regards,\nJorge\n", 
            "markdown_message": "<p>Hi zuh4n,</p>\n\n<p>My bad, I missed the smily face when you said:</p>\n\n<blockquote>\n<p>I was able to inject production_access_token and _harvest_sess cookies to specific page (in my case it&#39;s projects page), but after my injection, I&#39;m not able to visit this page any more :D</p>\n</blockquote>\n\n<p>When you said <code>I&#39;m not able to visit this page any more</code> it is because the injection worked for that path, and this means that a session injection was possible.</p>\n\n<p>We are going to discuss the bounty amount having in mind the info that was missing. I&#39;ll be back to you soon.</p>\n\n<p>Best regards,<br>\nJorge</p>\n", 
            "type": "Activities::Comment", 
            "id": 1351324, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-08T19:28:11.708Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-08T19:28:11.708Z", 
            "actor": {
                "url": "/harvest", 
                "profile": {
                    "name": "Harvest"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/237/6d125866767807c1a1abda02f0ffd805c5928ff4_medium.png?1403079688"
                }
            }, 
            "team_handle": "harvest", 
            "bounty_amount": "150.0", 
            "collaborator": {
                "username": "zuh4n", 
                "url": "/zuh4n"
            }, 
            "message": "After thinking about the risks we decided to duplicate the amount, thanks!", 
            "markdown_message": "<p>After thinking about the risks we decided to duplicate the amount, thanks!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1351671, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-09T09:07:10.609Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-09T09:07:10.609Z", 
            "actor": {
                "username": "zuh4n", 
                "url": "/zuh4n", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/842/c5edee4613e4023813dfc60caa8bc107a8f75bf1_medium.png?1469826496"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "message": "Ok. Thanks a lot.\n\nStas", 
            "markdown_message": "<p>Ok. Thanks a lot.</p>\n\n<p>Stas</p>\n", 
            "type": "Activities::Comment", 
            "id": 1353306, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-22T11:02:52.784Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-22T11:02:52.784Z", 
            "actor": {
                "username": "zuh4n", 
                "url": "/zuh4n", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/842/c5edee4613e4023813dfc60caa8bc107a8f75bf1_medium.png?1469826496"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "harvest", 
            "first_to_agree": true, 
            "message": "Don't you mind?", 
            "markdown_message": "<p>Don&#39;t you mind?</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1498911, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-24T11:03:01.982Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-24T11:03:01.982Z", 
            "actor": {
                "url": "/harvest", 
                "profile": {
                    "name": "Harvest"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/237/6d125866767807c1a1abda02f0ffd805c5928ff4_medium.png?1403079688"
                }
            }, 
            "team_handle": "harvest", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1561200, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "zuh4n", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/zuh4n", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/013/842/e826bb48ccf35644e25da31870821491284342c3_small.png?1469826496"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 58, 
        "name": "Command Injection - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -53782724.51496619, 
    "disclosed_at": "2017-03-24T11:03:01.958Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/174474", 
    "created_at": "2016-10-07T09:52:01.624Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello guys,</p>\n\n<p><strong><u>Details:</u></strong><br>\nWell, initially I was testing for CRLF (Carriage Return Line Feed) Injection, but how turned out, I was able to inject cookie without CRLF, just via # value at HTTP Request.</p>\n\n<p><strong><u>PoC:</u></strong><br>\nAttacker able to inject new cookie from any application place, e.g.<br>\n<code>https://testerovusera.harvestapp.com/people/1412277/edit#NewLocalCookieKey=NewLocalCookieValue</code><br>\nin this case cookie will be created to following path, and will be valid only there: <u>/people/1412277/</u><br>\n<strong>but</strong>, it could be bypassed, if append root application path, e.g.<br>\n<code>https://testerovusera.harvestapp.com/people/1412277/edit#NewGlobalCookieKey=NewGlobalCookieValue;path=/;/</code><br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"NewCookie.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/126/502/939698b356e4cdc87ee7d275b3580dfb1db47f06/NewCookie.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224137Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=7484a47743bf594b336c6ecef850495cacdd750e29823e899d27a8814fce8a8d\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/126/502/939698b356e4cdc87ee7d275b3580dfb1db47f06/NewCookie.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224137Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=7484a47743bf594b336c6ecef850495cacdd750e29823e899d27a8814fce8a8d\" class=\"markdown-inline-image\"></a></p>\n\n<p><strong><u>Attacking scenario:</u></strong><br>\nThis vulnerability perfectly could be used in combination with other vulnerabilities:</p>\n\n<ul>\n<li>XSS thru Cookie;</li>\n<li>Session Fixation;</li>\n<li>CSRF protection bypass</li>\n</ul>\n\n<p><strong><u>Recommendation:</u></strong><br>\nProperly validate what is going to cookie jar</p>\n\n<p>Thank you,<br>\nStas</p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://getharvest.com", 
            "about": "Harvest is a leader in online time tracking and invoicing. Work better, and make smarter decisions for your business.", 
            "twitter_handle": "", 
            "name": "Harvest"
        }, 
        "handle": "harvest", 
        "url": "https://hackerone.com/harvest", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/237/5a435a0bb3e0eb921fa925e824c6ed9d31eefdc8_small.png?1403079688", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/237/6d125866767807c1a1abda02f0ffd805c5928ff4_medium.png?1403079688"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 237, 
        "default_currency": "usd"
    }, 
    "is_published": false
}