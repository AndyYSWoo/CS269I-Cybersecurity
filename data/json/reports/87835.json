{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 87835, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-09-11T07:04:40.170Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Webview Vulnerablity [OwnCloudAndroid Application] ", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-10-11T07:04:44.827Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2015-09-07T11:57:11.647Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T11:57:11.647Z", 
            "actor": {
                "url": "/owncloud", 
                "profile": {
                    "name": "ownCloud"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/059/6af0ec24c370d0d2250fdf2ac3e937f4aab2692d_medium.png?1438786688"
                }
            }, 
            "team_handle": "owncloud", 
            "message": "Thanks a lot for reporting this potential issue back to us. We take security very seriously and would appreciate if you would not share any information about this bug until we have determined a potential patch.\r\n \r\nOur security team will take a look at this issue as soon as possible. We will reply to your report within 72 hours, usually much faster.", 
            "markdown_message": "<p>Thanks a lot for reporting this potential issue back to us. We take security very seriously and would appreciate if you would not share any information about this bug until we have determined a potential patch.</p>\n\n<p>Our security team will take a look at this issue as soon as possible. We will reply to your report within 72 hours, usually much faster.</p>\n", 
            "type": "Activities::Comment", 
            "id": 579679, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T11:58:54.425Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T11:58:54.425Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "One more thing I want to make you aware of , you should also disable File System Access:\n\nReason : If an attacker somehow find themselves in a position to inject script into a WebView, then they could exploit the opportunity to access local resources. This can be somewhat prevented by disabling local file system access. It is enabled by default. The Android WebSettings class can be used to disable local file system access via the public method setAllowFileAccess.\n\nwebSettings().setAllowFileAccess(false);\n\nThis restricts the WebView to loading local resources from `file:///android_asset (assets) and file:///android_res (resources).`\n", 
            "markdown_message": "<p>One more thing I want to make you aware of , you should also disable File System Access:</p>\n\n<p>Reason : If an attacker somehow find themselves in a position to inject script into a WebView, then they could exploit the opportunity to access local resources. This can be somewhat prevented by disabling local file system access. It is enabled by default. The Android WebSettings class can be used to disable local file system access via the public method setAllowFileAccess.</p>\n\n<p>webSettings().setAllowFileAccess(false);</p>\n\n<p>This restricts the WebView to loading local resources from <code>file:///android_asset (assets) and file:///android_res (resources).</code></p>\n", 
            "type": "Activities::Comment", 
            "id": 579683, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T12:21:51.988Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T12:21:51.988Z", 
            "actor": {
                "username": "lukasreschke", 
                "url": "/lukasreschke", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/891/0ddfc05411893988a0d2794cd70d5dc221729713_medium.png?1438782834"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "Thanks a lot for your report. Please note that the `SamlWebViewDialog.java` actually requires Javascript since some Shibboleth / SAML endpoints do actually require JS. Note that these endpoints are considered trusted,  furthermore this functionality needs to be enabled while compiling the application manually.\n\nWith regard to your second comment this applies to be a valid hardening we do however consider endpoints trusted at the moment which means that this would not qualify for a reward. We would however mark the `setAllowFileAccess` issue has applicable (which would give you positive reputation) if you would open a new dedicated issue for this one.", 
            "markdown_message": "<p>Thanks a lot for your report. Please note that the <code>SamlWebViewDialog.java</code> actually requires Javascript since some Shibboleth / SAML endpoints do actually require JS. Note that these endpoints are considered trusted,  furthermore this functionality needs to be enabled while compiling the application manually.</p>\n\n<p>With regard to your second comment this applies to be a valid hardening we do however consider endpoints trusted at the moment which means that this would not qualify for a reward. We would however mark the <code>setAllowFileAccess</code> issue has applicable (which would give you positive reputation) if you would open a new dedicated issue for this one.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 579705, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T12:30:02.277Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T12:30:02.277Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "Thanks for the reply.\nIf endpoint are trusted then there is no problem..\n\nI also raise an issue about this ,so I can contribute to it a little. \n Issue # 1143", 
            "markdown_message": "<p>Thanks for the reply.<br>\nIf endpoint are trusted then there is no problem..</p>\n\n<p>I also raise an issue about this ,so I can contribute to it a little. <br>\n Issue # 1143</p>\n", 
            "type": "Activities::Comment", 
            "id": 579712, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T12:59:33.107Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T12:59:33.107Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "And also once it is fixed you can resolve this issue , It is not needed to open other issue just for that! ", 
            "markdown_message": "<p>And also once it is fixed you can resolve this issue , It is not needed to open other issue just for that! </p>\n", 
            "type": "Activities::Comment", 
            "id": 579740, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T13:09:20.901Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T13:09:20.901Z", 
            "actor": {
                "username": "lukasreschke", 
                "url": "/lukasreschke", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/891/0ddfc05411893988a0d2794cd70d5dc221729713_medium.png?1438782834"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "Fair enough \ud83d\ude00", 
            "markdown_message": "<p>Fair enough \ud83d\ude00</p>\n", 
            "type": "Activities::BugReopened", 
            "id": 579750, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T13:09:35.551Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T13:09:46.955Z", 
            "actor": {
                "username": "lukasreschke", 
                "url": "/lukasreschke", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/891/0ddfc05411893988a0d2794cd70d5dc221729713_medium.png?1438782834"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "Triaged to https://github.com/owncloud/android/issues/1143", 
            "markdown_message": "<p>Triaged to <a title=\"https://github.com/owncloud/android/issues/1143\" href=\"/redirect?signature=68b9e3b5d6bdddad698a3ecd7d18724a94b38e30&amp;url=https%3A%2F%2Fgithub.com%2Fowncloud%2Fandroid%2Fissues%2F1143\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/owncloud/android/issues/1143</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 579751, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-07T14:28:27.254Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T14:28:44.062Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "I guess the recent commit on this issue fixed this bug . you can resolve it or so.", 
            "markdown_message": "<p>I guess the recent commit on this issue fixed this bug . you can resolve it or so.</p>\n", 
            "type": "Activities::Comment", 
            "id": 579845, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "avicoder_", 
                "url": "/avicoder_"
            }, 
            "created_at": "2015-09-07T14:29:19.217Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-07T14:29:19.217Z", 
            "actor": {
                "username": "lukasreschke", 
                "url": "/lukasreschke", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/891/0ddfc05411893988a0d2794cd70d5dc221729713_medium.png?1438782834"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 579849, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-11T07:04:40.199Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-11T07:04:40.199Z", 
            "actor": {
                "username": "lukasreschke", 
                "url": "/lukasreschke", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/891/0ddfc05411893988a0d2794cd70d5dc221729713_medium.png?1438782834"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 584746, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-11T07:06:14.973Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-11T07:10:19.497Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "You should have ask it before ! :/", 
            "markdown_message": "<p>You should have ask it before ! :/</p>\n", 
            "type": "Activities::Comment", 
            "id": 584760, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-10-11T07:04:45.360Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-11T07:04:45.360Z", 
            "actor": {
                "url": "/owncloud", 
                "profile": {
                    "name": "ownCloud"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/059/6af0ec24c370d0d2250fdf2ac3e937f4aab2692d_medium.png?1438786688"
                }
            }, 
            "team_handle": "owncloud", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 616720, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-13T11:26:54.767Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-13T11:26:54.767Z", 
            "actor": {
                "url": "/owncloud", 
                "profile": {
                    "name": "ownCloud"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/059/6af0ec24c370d0d2250fdf2ac3e937f4aab2692d_medium.png?1438786688"
                }
            }, 
            "team_handle": "owncloud", 
            "message": "Thanks a lot for your report. Please note that for the time being we do not award monetary rewards for bugs reported for our own website and infrastructure.\n\nFrom our FAQ:\n> **Q: Why do you exclude the ownCloud websites and infrastructure?**\n> A: For the time being we want to focus our efforts on ownCloud Server instead of vulnerabilities within our website and infrastructure. However, if you find a security bug in our website or infrastructure we welcome any report, though we cannot offer a monetary incentive.\n\nIf you want to ensure that your submission are in-scope you might want to try the code available from https://owncloud.org/install/", 
            "markdown_message": "<p>Thanks a lot for your report. Please note that for the time being we do not award monetary rewards for bugs reported for our own website and infrastructure.</p>\n\n<p>From our FAQ:</p>\n\n<blockquote>\n<p><strong>Q: Why do you exclude the ownCloud websites and infrastructure?</strong><br>\nA: For the time being we want to focus our efforts on ownCloud Server instead of vulnerabilities within our website and infrastructure. However, if you find a security bug in our website or infrastructure we welcome any report, though we cannot offer a monetary incentive.</p>\n</blockquote>\n\n<p>If you want to ensure that your submission are in-scope you might want to try the code available from <a title=\"https://owncloud.org/install/\" href=\"/redirect?signature=908b69f3a178cd6b3d1ad25fdeead64b980115a9&amp;url=https%3A%2F%2Fowncloud.org%2Finstall%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://owncloud.org/install/</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 656494, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-13T17:40:44.424Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-13T17:40:44.424Z", 
            "actor": {
                "username": "avicoder_", 
                "url": "/avicoder_", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/616/e8c156657f05a5a26194ce7965a7a5b5491db803_medium.jpg?1504794086"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "owncloud", 
            "message": "who ask for bounty? :-)", 
            "markdown_message": "<p>who ask for bounty? :-)</p>\n", 
            "type": "Activities::Comment", 
            "id": 656938, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "avicoder_", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/avicoder_", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/005/616/feb30074ebc7272dfad05528fba697339b90eaa4_small.jpg?1504794086"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -99590041.04180527, 
    "disclosed_at": "2015-10-11T07:04:45.321Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/87835", 
    "created_at": "2015-09-07T11:57:09.447Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi <strong>OwnCloud Team</strong> ,</p>\n\n<h3 id=\"vulnerability-description\">Vulnerability Description:</h3>\n\n<p><strong>What is Webview?:</strong> We can load a remote URL or display HTML pages stored in our application within an activity using WebView. Internally it uses WebKit rendering engine to display web pages. It supports methods to navigate forward and backward, text searches, etc. It has some nice features such as support for the usage of JavaScript.</p>\n\n<h3 id=\"where-i-found-it\">Where I found it?</h3>\n\n<p>In <strong>SamlWebViewDialog.java.class</strong> located under the path <code>android/src/com/owncloud/android/ui/dialog/</code> </p>\n\n<p>I clipped the important code which introduced this vulnerability in your app.</p>\n<pre class=\"highlight plaintext\"><code>        if (mSsoWebView == null) {\n        // initialize the WebView\n        mSsoWebView = new SsoWebView(getActivity().getApplicationContext());\n        mSsoWebView.setFocusable(true);\n        mSsoWebView.setFocusableInTouchMode(true);\n        mSsoWebView.setClickable(true);\n\n        WebSettings webSettings = mSsoWebView.getSettings();\n        webSettings.setJavaScriptEnabled(true);\n        webSettings.setBuiltInZoomControls(false);\n        webSettings.setLoadWithOverviewMode(false);\n        webSettings.setSavePassword(false);\n        webSettings.setUserAgentString(MainApp.getUserAgent());\n        webSettings.setSaveFormData(false);\n\n        CookieManager cookieManager = CookieManager.getInstance();\n        cookieManager.setAcceptCookie(true);\n        cookieManager.removeAllCookie();\n\n        mSsoWebView.loadUrl(mInitialUrl);\n    }\n</code></pre>\n<p>here you can see that:</p>\n<pre class=\"highlight plaintext\"><code>`webSettings.setJavaScriptEnabled(true);`\n</code></pre>\n<p>The <em>WebView</em> Object been activated to parse javascript inside it.</p>\n\n<p><strong>However by default when we create an WebView object JavaScript is disabled by default until and unless it explicitly declare by the developer.</strong> </p>\n\n<p>The untrusted Javascript code can call into the Java Reflection APIs exposed by the Interface and execute arbitrary commands. Some distributions of the Android Browser app have an addJavascriptInterface call tacked on, and thus are vulnerable to RCE.</p>\n\n<h3 id=\"mitigation\">Mitigation:</h3>\n\n<p>If you turn off the setJavaScriptEnabled as follows, adversaries will not be able to run any JavaScript in order to perform XSS <br>\n<code>webSettings.setJavaScriptEnabled(False);</code></p>\n\n<h3 id=\"severity-high\">SEVERITY: High</h3>\n\n<p>It is not just limited to XSS because of javascript ! In fact, using this, an attacker can even use JavaScript to invoke certain methods on the phone, such as sending an SMS to another number, making a call, or even getting a remote shell using tools such as Drozer.</p>\n\n<p><strong>I highly recommend my article on github for the mitgation and understanding of the attack</strong></p>\n\n<h2 id=\"https-github-com-vjex-writeup-blob-master-webviewvuln-md\"><a title=\"https://github.com/vjex/WriteUp/blob/master/WebviewVuln.md\" href=\"/redirect?signature=945c9da305e10739f9d30e2eadbc975c5c849011&amp;url=https%3A%2F%2Fgithub.com%2Fvjex%2FWriteUp%2Fblob%2Fmaster%2FWebviewVuln.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/vjex/WriteUp/blob/master/WebviewVuln.md</span><i class=\"icon-external-link\"></i></a></h2>\n\n<h3 id=\"more-references\">More References:</h3>\n\n<ul>\n<li><a title=\"http://www.wintellect.com/devcenter/paulballard/new-report-sites-significant-security-vulnerabilities-in-android-devices\" href=\"/redirect?signature=13694ff49d7043a31ccec4e6364ab6b65339e542&amp;url=http%3A%2F%2Fwww.wintellect.com%2Fdevcenter%2Fpaulballard%2Fnew-report-sites-significant-security-vulnerabilities-in-android-devices\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.wintellect.com/devcenter/paulballard/new-report-sites-significant-security-vulnerabilities-in-android-devices</span><i class=\"icon-external-link\"></i></a></li>\n<li><a title=\"http://www.cvedetails.com/cve/CVE-2013-4710/\" href=\"/redirect?signature=ec7e1f73c41c4aebcae5ef55c773df97be5c1a6b&amp;url=http%3A%2F%2Fwww.cvedetails.com%2Fcve%2FCVE-2013-4710%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.cvedetails.com/cve/CVE-2013-4710/</span><i class=\"icon-external-link\"></i></a></li>\n<li><a title=\"https://community.rapid7.com/community/metasploit/blog/2015/01/02/2014-a-year-of-android-exploits-in-metasploit\" href=\"/redirect?signature=322e6ce7d7296678bd53416c424ccc4201385086&amp;url=https%3A%2F%2Fcommunity.rapid7.com%2Fcommunity%2Fmetasploit%2Fblog%2F2015%2F01%2F02%2F2014-a-year-of-android-exploits-in-metasploit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://community.rapid7.com/community/metasploit/blog/2015/01/02/2014-a-year-of-android-exploits-in-metasploit</span><i class=\"icon-external-link\"></i></a></li>\n<li><a title=\"https://github.com/jduck/VulnWebView/\" href=\"/redirect?signature=5614d21a2b543d24ab08bcd329127175c1743d1a&amp;url=https%3A%2F%2Fgithub.com%2Fjduck%2FVulnWebView%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/jduck/VulnWebView/</span><i class=\"icon-external-link\"></i></a></li>\n</ul>\n\n<p><strong>Happy to help.</strong><br>\nCheers</p>\n\n<h1 id=\"part-5971e8\">:)</h1>\n\n<p><a href=\"/avicoder\">@avicoder</a></p>\n", 
    "vulnerability_information": "Hi **OwnCloud Team** ,\r\n\r\n###Vulnerability Description:###\r\n\r\n**What is Webview?:** We can load a remote URL or display HTML pages stored in our application within an activity using WebView. Internally it uses WebKit rendering engine to display web pages. It supports methods to navigate forward and backward, text searches, etc. It has some nice features such as support for the usage of JavaScript.\r\n\r\n###Where I found it?###\r\n\r\nIn **SamlWebViewDialog.java.class** located under the path ` android/src/com/owncloud/android/ui/dialog/` \r\n\r\nI clipped the important code which introduced this vulnerability in your app.\r\n\r\n            if (mSsoWebView == null) {\r\n            // initialize the WebView\r\n            mSsoWebView = new SsoWebView(getActivity().getApplicationContext());\r\n            mSsoWebView.setFocusable(true);\r\n            mSsoWebView.setFocusableInTouchMode(true);\r\n            mSsoWebView.setClickable(true);\r\n            \r\n            WebSettings webSettings = mSsoWebView.getSettings();\r\n            webSettings.setJavaScriptEnabled(true);\r\n            webSettings.setBuiltInZoomControls(false);\r\n            webSettings.setLoadWithOverviewMode(false);\r\n            webSettings.setSavePassword(false);\r\n            webSettings.setUserAgentString(MainApp.getUserAgent());\r\n            webSettings.setSaveFormData(false);\r\n            \r\n            CookieManager cookieManager = CookieManager.getInstance();\r\n            cookieManager.setAcceptCookie(true);\r\n            cookieManager.removeAllCookie();\r\n            \r\n            mSsoWebView.loadUrl(mInitialUrl);\r\n        }\r\n        \r\n\r\nhere you can see that:\r\n\r\n    `webSettings.setJavaScriptEnabled(true);`\r\n\r\nThe *WebView* Object been activated to parse javascript inside it.\r\n\r\n**However by default when we create an WebView object JavaScript is disabled by default until and unless it explicitly declare by the developer.** \r\n\r\nThe untrusted Javascript code can call into the Java Reflection APIs exposed by the Interface and execute arbitrary commands. Some distributions of the Android Browser app have an addJavascriptInterface call tacked on, and thus are vulnerable to RCE.\r\n\r\n###Mitigation:###\r\n\r\nIf you turn off the setJavaScriptEnabled as follows, adversaries will not be able to run any JavaScript in order to perform XSS \r\n`webSettings.setJavaScriptEnabled(False);`\r\n\r\n\r\n###SEVERITY: High ###\r\n\r\nIt is not just limited to XSS because of javascript ! In fact, using this, an attacker can even use JavaScript to invoke certain methods on the phone, such as sending an SMS to another number, making a call, or even getting a remote shell using tools such as Drozer.\r\n\r\n**I highly recommend my article on github for the mitgation and understanding of the attack**\r\n\r\n##https://github.com/vjex/WriteUp/blob/master/WebviewVuln.md##\r\n\r\n###More References:###\r\n\r\n   - http://www.wintellect.com/devcenter/paulballard/new-report-sites-significant-security-vulnerabilities-in-android-devices\r\n   - http://www.cvedetails.com/cve/CVE-2013-4710/\r\n   - https://community.rapid7.com/community/metasploit/blog/2015/01/02/2014-a-year-of-android-exploits-in-metasploit\r\n   - https://github.com/jduck/VulnWebView/\r\n\r\n**Happy to help.**\r\nCheers\r\n#:)#\r\n\r\n@avicoder", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.owncloud.com", 
            "about": "ownCloud GmbH is the company behind the ownCloud Project - the most downloaded open source project for data and file sync, share and view.", 
            "twitter_handle": "ownCloud", 
            "name": "ownCloud"
        }, 
        "handle": "owncloud", 
        "url": "https://hackerone.com/owncloud", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/003/059/ef3f773944541857909a6662470c5452b3f94d88_small.png?1438786688", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/003/059/6af0ec24c370d0d2250fdf2ac3e937f4aab2692d_medium.png?1438786688"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 3059, 
        "default_currency": "usd"
    }, 
    "is_published": false
}