{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-02-07T07:57:31.412Z", 
    "voters": [
        "eveeez", 
        "mpz", 
        "icanthack", 
        "spetr0x", 
        "amjamjamj"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "100.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 202362, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-02-07T01:26:18.907Z", 
    "vulnerability_information": "Sorry I was not quite sure about the scope. This bug is not triggerable in the sandbox, because it does not use the Random class, but it is triggerable in mruby with the following piece of code:\n\n```ruby\n$r = Random.new\na = Object.new\ndef a.to_int\n    $r.rand\nend\n\n$r.initialize a\n```\nThe data pointer of $r is set to NULL before parsing arguments in `mrb_random_init`. The srand() call will try to dereference it to get the mt_state and this results in a crash. \n\nThe problem lies in `mrbgems/mruby-random/src/random.c` and is similar to  #182274:\n```c\n128   t = (mt_state*)DATA_PTR(self);\n129   if (t) {\n130      mrb_free(mrb, t);\n131   }\n132   mrb_data_init(self, NULL, &mt_state_type);\n133   \n134   t = (mt_state *)mrb_malloc(mrb, sizeof(mt_state));\n135   t->mti = N + 1;\n136   \n137   seed = get_opt(mrb);        /* Move this up before line 127 */\n```\n\nPlease let me know if you are explicitly just looking for bugs affecting the sandbox, so I won't submit invalid reports. Thanks!", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "Team"
    }, 
    "title": "Null pointer dereference in mrb_random_initialize", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-03-09T01:26:18.975Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$100", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-01-31T14:26:03.854Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-31T14:26:03.854Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nDue to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!", 
            "markdown_message": "<p>Thank you for reporting this bug! This is an automated response to let you know that we&#39;ve received your issue, and we&#39;ll process it as soon as possible.</p>\n\n<p>Due to the large volume of reports we have received, it may take us up to three weeks to respond. Thank you for your patience!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1454066, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-02T21:51:58.446Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-02T21:51:58.446Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report. We've reproduced the issue and opened a pull request upstream: https://github.com/mruby/mruby/pull/3427\n\nWe are interested in hearing about MRuby bugs that don't affect our sandbox, but as noted on our [program page](https://hackerone.com/shopify-scripts) the maximum bounty for such reports is $100.", 
            "markdown_message": "<p>Thank you for your report. We&#39;ve reproduced the issue and opened a pull request upstream: <a title=\"https://github.com/mruby/mruby/pull/3427\" href=\"/redirect?signature=57e1a8a7a44ef5bb393ae326d7453f74afd4f4a4&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3427\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/pull/3427</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>We are interested in hearing about MRuby bugs that don&#39;t affect our sandbox, but as noted on our <a href=\"https://hackerone.com/shopify-scripts\">program page</a> the maximum bounty for such reports is $100.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1459634, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-02T21:52:07.817Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-02T21:52:07.817Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "None", 
                "old_severity": "High"
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1459635, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-02T21:57:31.935Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-02T21:57:31.935Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Sure, that's no problem, thanks for info and the fast triage", 
            "markdown_message": "<p>Sure, that&#39;s no problem, thanks for info and the fast triage</p>\n", 
            "type": "Activities::Comment", 
            "id": 1459648, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "eboda", 
                "url": "/eboda"
            }, 
            "created_at": "2017-02-03T15:10:53.299Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-03T15:10:53.299Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks again for your report. The pull request has been accepted upstream, resolving the issue.\n\nOur next round of bounty decisions will take place within two weeks, so we'll be in touch with you again soon.", 
            "markdown_message": "<p>Thanks again for your report. The pull request has been accepted upstream, resolving the issue.</p>\n\n<p>Our next round of bounty decisions will take place within two weeks, so we&#39;ll be in touch with you again soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1460942, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-02-07T01:26:13.723Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-07T01:26:13.723Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bonus_amount": "0.0", 
            "bounty_amount": "100.0", 
            "collaborator": {
                "username": "eboda", 
                "url": "/eboda"
            }, 
            "message": "Thanks for helping improve the security of the Mruby project!", 
            "markdown_message": "<p>Thanks for helping improve the security of the Mruby project!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1467349, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-07T01:26:18.927Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-07T01:26:18.927Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1467350, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-07T07:57:31.425Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-07T07:57:31.425Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks for the bounty :)", 
            "markdown_message": "<p>Thanks for the bounty :)</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1467859, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-07T07:57:31.456Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-07T07:57:31.456Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1467860, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "eboda", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/eboda", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/014/247/f5d06f8f31212f1fcbe5f517ca4059566ca97553_small.png?1515881564"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -55113460.62229567, 
    "disclosed_at": "2017-02-07T07:57:31.445Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/202362", 
    "created_at": "2017-01-31T14:26:03.652Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Sorry I was not quite sure about the scope. This bug is not triggerable in the sandbox, because it does not use the Random class, but it is triggerable in mruby with the following piece of code:</p>\n<pre class=\"highlight ruby\"><code><span class=\"vg\">$r</span> <span class=\"o\">=</span> <span class=\"no\">Random</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"no\">Object</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"k\">def</span> <span class=\"nc\">a</span><span class=\"o\">.</span><span class=\"nf\">to_int</span>\n    <span class=\"vg\">$r</span><span class=\"p\">.</span><span class=\"nf\">rand</span>\n<span class=\"k\">end</span>\n\n<span class=\"vg\">$r</span><span class=\"p\">.</span><span class=\"nf\">initialize</span> <span class=\"n\">a</span>\n</code></pre>\n<p>The data pointer of $r is set to NULL before parsing arguments in <code>mrb_random_init</code>. The srand() call will try to dereference it to get the mt_state and this results in a crash. </p>\n\n<p>The problem lies in <code>mrbgems/mruby-random/src/random.c</code> and is similar to  <a href=\"/reports/182274\">#182274</a>:</p>\n<pre class=\"highlight c\"><code><span class=\"mi\">128</span>   <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mt_state</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">DATA_PTR</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">);</span>\n<span class=\"mi\">129</span>   <span class=\"nf\">if</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"mi\">130</span>      <span class=\"n\">mrb_free</span><span class=\"p\">(</span><span class=\"n\">mrb</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">);</span>\n<span class=\"mi\">131</span>   <span class=\"p\">}</span>\n<span class=\"mi\">132</span>   <span class=\"n\">mrb_data_init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"nb\">NULL</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">mt_state_type</span><span class=\"p\">);</span>\n<span class=\"mi\">133</span>   \n<span class=\"mi\">134</span>   <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mt_state</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">mrb_malloc</span><span class=\"p\">(</span><span class=\"n\">mrb</span><span class=\"p\">,</span> <span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">mt_state</span><span class=\"p\">));</span>\n<span class=\"mi\">135</span>   <span class=\"n\">t</span><span class=\"o\">-&gt;</span><span class=\"n\">mti</span> <span class=\"o\">=</span> <span class=\"n\">N</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"mi\">136</span>   \n<span class=\"mi\">137</span>   <span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"n\">get_opt</span><span class=\"p\">(</span><span class=\"n\">mrb</span><span class=\"p\">);</span>        <span class=\"cm\">/* Move this up before line 127 */</span>\n</code></pre>\n<p>Please let me know if you are explicitly just looking for bugs affecting the sandbox, so I won&#39;t submit invalid reports. Thanks!</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}