{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2014-06-25T21:02:52.687Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 14702, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "CSRF & Nonce Token Weak Implementation", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-07-25T21:02:52.799Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-06-03T06:10:05.191Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-03T06:10:05.191Z", 
            "actor": {
                "username": "firehed", 
                "url": "/firehed", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "Thanks for copying from ZD, we've updated our internal ticket info with this.", 
            "markdown_message": "<p>Thanks for copying from ZD, we&#39;ve updated our internal ticket info with this.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 64637, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "eronx", 
                "url": "/eronx"
            }, 
            "created_at": "2014-06-09T21:53:38.148Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-09T21:53:38.148Z", 
            "actor": {
                "username": "firehed", 
                "url": "/firehed", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "Hi Clifford - \n\nThis issue should now be resolved. I will follow up shortly regarding the bounty.", 
            "markdown_message": "<p>Hi Clifford - </p>\n\n<p>This issue should now be resolved. I will follow up shortly regarding the bounty.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 70565, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-09T23:11:21.491Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-09T23:11:21.491Z", 
            "actor": {
                "username": "eronx", 
                "url": "/eronx", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/212/12b7742ed2473ce82a867894a9fbe433c45e24f3_medium.jpg?1539185881"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "Thank you sir Eric.", 
            "markdown_message": "<p>Thank you sir Eric.</p>\n", 
            "type": "Activities::Comment", 
            "id": 70595, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-25T21:02:52.703Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-25T21:02:52.703Z", 
            "actor": {
                "username": "eronx", 
                "url": "/eronx", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/212/12b7742ed2473ce82a867894a9fbe433c45e24f3_medium.jpg?1539185881"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "Public disclosure for h1.nobbd.de and the dups.", 
            "markdown_message": "<p>Public disclosure for h1.nobbd.de and the dups.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 79154, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-27T23:09:30.446Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-27T23:09:30.446Z", 
            "actor": {
                "username": "eronx", 
                "url": "/eronx", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/212/12b7742ed2473ce82a867894a9fbe433c45e24f3_medium.jpg?1539185881"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "I believe this has been missed of the bounty!  Thank you.\n- Clifford", 
            "markdown_message": "<p>I believe this has been missed of the bounty!  Thank you.</p>\n\n<ul>\n<li>Clifford</li>\n</ul>\n", 
            "type": "Activities::Comment", 
            "id": 80323, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-25T21:02:55.869Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-25T21:02:55.869Z", 
            "actor": {
                "url": "/wepay", 
                "profile": {
                    "name": "WePay"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/110/f24dd424036c7229191ef9f6dc63e2e3773e1288_medium.png?1512426859"
                }
            }, 
            "team_handle": "wepay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 96252, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-08-13T11:54:06.178Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-08-13T11:54:06.178Z", 
            "actor": {
                "username": "eronx", 
                "url": "/eronx", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/212/12b7742ed2473ce82a867894a9fbe433c45e24f3_medium.jpg?1539185881"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wepay", 
            "message": "I wonder if this does qualify for a bounty?", 
            "markdown_message": "<p>I wonder if this does qualify for a bounty?</p>\n", 
            "type": "Activities::Comment", 
            "id": 106550, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-10-29T22:46:17.464Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-10-29T22:46:17.464Z", 
            "actor": {
                "url": "/wepay", 
                "profile": {
                    "name": "WePay"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/110/f24dd424036c7229191ef9f6dc63e2e3773e1288_medium.png?1512426859"
                }
            }, 
            "team_handle": "wepay", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 150925, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "eronx", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/eronx", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/212/8d1e9aa798038542b69e4962804d9518af9dc648_small.jpg?1539185881"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -137815284.1034932, 
    "disclosed_at": "2014-07-25T21:02:55.850Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/14702", 
    "created_at": "2014-06-03T05:38:15.353Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello, this report is a copy of my previous reports sent to your email ( <a title=\"security@wepay.com\" href=\"mailto:security@wepay.com\" rel=\"nofollow noopener noreferrer\">security@wepay.com</a>) some days ago. Please note that everything written below are copied and pasted from the report. ( Ticket <a href=\"/reports/437212\">#437212</a> ):</p>\n\n<p>As part of your responsible disclosure program, I am reporting this leakage ( weak implementation ) of CSRF and Nonce Token.</p>\n\n<p>What is the security risk when the CSRF and or Nonce Token are being leaked? </p>\n\n<p>Well, the protected features of the CSRF token and Nonce can now be altered by a malicious user easily.</p>\n\n<p>What now is the weak implementation?</p>\n\n<p>You stored the CSRF and Nonce Token in the URL. ( This can be retrieve in the browser, or server logs and other places )</p>\n\n<p>How  is it getting leaked?</p>\n\n<ol>\n<li>Go over to <a title=\"https://www.wepay.com/account\" href=\"/redirect?signature=8854baf3f0331ed722e8afb7831b3a4bb285282f&amp;url=https%3A%2F%2Fwww.wepay.com%2Faccount\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.wepay.com/account</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Click on your created application</li>\n<li>In my case its ( <a title=\"https://www.wepay.com/account/1801912967\" href=\"/redirect?signature=1c8cc64683258a3cfe37058fb4c7f60143000706&amp;url=https%3A%2F%2Fwww.wepay.com%2Faccount%2F1801912967\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.wepay.com/account/1801912967</span><i class=\"icon-external-link\"></i></a> ) </li>\n<li>Click on balance. ( Transactions actually, mine is <a title=\"https://www.wepay.com/account/transactions/1801912967\" href=\"/redirect?signature=2912a9084fef77acd6923248bb2ba5b30ff8dd30&amp;url=https%3A%2F%2Fwww.wepay.com%2Faccount%2Ftransactions%2F1801912967\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.wepay.com/account/transactions/1801912967</span><i class=\"icon-external-link\"></i></a> ) </li>\n<li>In the customer email, input anything and hit enter.</li>\n<li>As you hit enter, it initiates a get request. The CSRF and Nonce Tokens are now in the URL. </li>\n</ol>\n\n<p>Its considered a best practice to not store a token in a get request. ( I do not know if you just miss that ).</p>\n\n<p>How can be exploited anyway?</p>\n\n<p>Set up something like the code below:</p>\n\n<p>&lt;form class=&quot;clearfix actions add-email&quot; method=&quot;post&quot; action=&quot;https://www.wepay.com/settings/email&quot;&gt;<br>\n                &lt;div&gt;<br>\n                    &lt;label&gt;Add New Email&lt;/label&gt;<br>\n                    &lt;input name=&quot;email&quot; type=&quot;text&quot; class=&quot;mrl&quot; placeholder=&quot;Email Address&quot;value=&quot;maliciousemail@gmail.com&quot; /&gt;<br>\n                    &lt;input type=&quot;hidden&quot; name=&quot;form&quot; value=&quot;add&quot; /&gt;                 &lt;input type=&quot;hidden&quot; name=&quot;csrf&quot; value=&quot;CSRF VALUE HERE&quot; /&gt;&lt;input type=&quot;hidden&quot; name=&quot;nonce&quot; value=&quot;NONCE VALUE&quot; /&gt;             &lt;/div&gt;<br>\n                &lt;button id=&quot;invite-user-confirm&quot; type=&quot;submit&quot; class=&quot;button small pull-right confirm&quot;&gt;Add&lt;/button&gt;<br>\n            &lt;/form&gt;</p>\n\n<p>Email now added in the account. Or any other action in the WePay application that is protected by the CSRF token. :)</p>\n\n<p>However, the impact gets minimal since you have implemented the CSRF and Nonce token to be 1 time / page. Meaning, it only works if the user has stop clicking on links within the page after searching ( step 5 above. )</p>\n\n<p>If you needed more information regarding this, then kindly let me know.</p>\n\n<p>Cheers,<br>\nClifford Trigo</p>\n", 
    "vulnerability_information": "Hello, this report is a copy of my previous reports sent to your email ( security@wepay.com) some days ago. Please note that everything written below are copied and pasted from the report. ( Ticket #437212 ):\r\n\r\nAs part of your responsible disclosure program, I am reporting this leakage ( weak implementation ) of CSRF and Nonce Token.\r\n\r\nWhat is the security risk when the CSRF and or Nonce Token are being leaked? \r\n\r\nWell, the protected features of the CSRF token and Nonce can now be altered by a malicious user easily.\r\n\r\nWhat now is the weak implementation?\r\n\r\nYou stored the CSRF and Nonce Token in the URL. ( This can be retrieve in the browser, or server logs and other places )\r\n\r\nHow  is it getting leaked?\r\n\r\n1. Go over to https://www.wepay.com/account\r\n2. Click on your created application\r\n3. In my case its ( https://www.wepay.com/account/1801912967 ) \r\n4. Click on balance. ( Transactions actually, mine is https://www.wepay.com/account/transactions/1801912967 ) \r\n5. In the customer email, input anything and hit enter.\r\n6. As you hit enter, it initiates a get request. The CSRF and Nonce Tokens are now in the URL. \r\n\r\nIts considered a best practice to not store a token in a get request. ( I do not know if you just miss that ).\r\n\r\nHow can be exploited anyway?\r\n\r\nSet up something like the code below:\r\n\r\n<form class=\"clearfix actions add-email\" method=\"post\" action=\"https://www.wepay.com/settings/email\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>Add New Email</label>\r\n\t\t\t\t\t<input name=\"email\" type=\"text\" class=\"mrl\" placeholder=\"Email Address\"value=\"maliciousemail@gmail.com\" />\r\n\t\t\t\t\t<input type=\"hidden\" name=\"form\" value=\"add\" />\t\t\t\t\t<input type=\"hidden\" name=\"csrf\" value=\"CSRF VALUE HERE\" /><input type=\"hidden\" name=\"nonce\" value=\"NONCE VALUE\" />\t\t\t\t</div>\r\n\t\t\t\t<button id=\"invite-user-confirm\" type=\"submit\" class=\"button small pull-right confirm\">Add</button>\r\n\t\t\t</form>\r\n\r\nEmail now added in the account. Or any other action in the WePay application that is protected by the CSRF token. :)\r\n\r\nHowever, the impact gets minimal since you have implemented the CSRF and Nonce token to be 1 time / page. Meaning, it only works if the user has stop clicking on links within the page after searching ( step 5 above. )\r\n\r\nIf you needed more information regarding this, then kindly let me know.\r\n\r\nCheers,\r\nClifford Trigo", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.wepay.com", 
            "about": "Payments partner to the platform economy", 
            "twitter_handle": "wepay", 
            "name": "WePay"
        }, 
        "handle": "wepay", 
        "url": "https://hackerone.com/wepay", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/110/7ab9a8f312b783a74b9c9f2e23469c327848210e_small.png?1512426859", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/110/f24dd424036c7229191ef9f6dc63e2e3773e1288_medium.png?1512426859"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 110, 
        "default_currency": "usd"
    }, 
    "is_published": false
}