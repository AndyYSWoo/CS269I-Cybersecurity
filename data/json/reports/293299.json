{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-11-29T16:46:28.487Z", 
    "voters": [
        "jokebookservice1", 
        "jr0ch17", 
        "spam404", 
        "jensec", 
        "kapytein", 
        "nahamsec", 
        "bogdantcaciuc", 
        "flashdisk", 
        "tk0", 
        "tungpun", 
        "and 48 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 293299, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-11-29T16:16:02.667Z", 
    "vulnerability_information": "**Summary:**\nHi team,\nFound a idor in Checking if a Team has sufficient fund to award\n\n### Steps To Reproduce\n\n1. Start a new program and login to the account\n2. A demo Report will be there\n3. Then Set award > Amount > $100 \n4. Set award and intercept the request \n5. change the report_ids to #262262\n\n #262262 - mixmax published report id\n\nmixmax offers $100 minimum bounty\n\n6. And Request\n\nwe will get ***Validation failed: insufficient funds to award this bounty.****\n\nagain use this #208237 report id - LocalTapiola \n\nwe will get ***You have successfully awarded a bounty.***\n\nUsing the report ids we get find that if funds have been added to teams or not\n\n## Impact\n\nJust a information disclosure where we can check if team has added funds to the account", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "low", 
            "privileges_required": "low", 
            "user_interaction": "none", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "unchanged", 
            "integrity": "none", 
            "availability": "none"
        }, 
        "rating": "medium", 
        "score": 5.0, 
        "author_type": "Team"
    }, 
    "title": "Validation message in Bounty award endpoint can be used to determine program balances", 
    "is_member_of_team?": null, 
    "vote_count": 58, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 5982, 
            "content": "The finder found a vulnerability that allowed them to determine the available bounty balance of some programs. The endpoint that awards a bounty did a balance check before the authorization check and returned an error when the program had insufficient funds. Someone could iterate over all report IDs and try to award a number of bounties to narrow down the balance. The program names were only accessible for public programs. This vulnerability only affected a limited set of our customers.\n\nWe'd like to thank @cyriac and @cjlegacion for bringing this vulnerability to our attention!", 
            "content_html": "<p>The finder found a vulnerability that allowed them to determine the available bounty balance of some programs. The endpoint that awards a bounty did a balance check before the authorization check and returned an error when the program had insufficient funds. Someone could iterate over all report IDs and try to award a number of bounties to narrow down the balance. The program names were only accessible for public programs. This vulnerability only affected a limited set of our customers.</p>\n\n<p>We&#39;d like to thank <a href=\"/cyriac\">@cyriac</a> and <a href=\"/cjlegacion\">@cjlegacion</a> for bringing this vulnerability to our attention!</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "https://hackerone.com", 
        "max_severity": "critical", 
        "databaseId": 3, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": "2017-12-29T16:16:02.958Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,500", 
    "attachments": [
        {
            "file_name": "1.png", 
            "type": "image/png", 
            "id": 242594, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/242/594/fff071d8b31c65599d6cabdf04267b5b4a844bf5/1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T222912Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7e8c5d4058ffd75491f90c2ed92ee4cbb6c44e036c8d2c0bfde277c8dcefcef7"
        }, 
        {
            "file_name": "2.png", 
            "type": "image/png", 
            "id": 242595, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/242/595/f1b7513df2e115f9d6010456cac2cd1b8bffc939/2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T222912Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=daf9b4337e3f45d35aeaa9a21cd14a965e12103b10bfe8cbcc7d90858c2f0ace"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-11-28T22:24:05.711Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T22:24:05.711Z", 
            "actor": {
                "username": "coffeecup", 
                "url": "/coffeecup", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/163/756/f43e0dda96a575dcb496c1e3028dedc45a10a391_medium.png?1526279637"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "security", 
            "message": "Thanks for reporting @cyriac. We've escalated this to the development team to see if this is something they would like to fix, and will get back to you as soon as we have any updates.\n\nKind regards,\n@coffeecup", 
            "markdown_message": "<p>Thanks for reporting <a href=\"/cyriac\">@cyriac</a>. We&#39;ve escalated this to the development team to see if this is something they would like to fix, and will get back to you as soon as we have any updates.</p>\n\n<p>Kind regards,<br>\n<a href=\"/coffeecup\">@coffeecup</a></p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 2187689, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T22:40:26.756Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T22:40:26.756Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (5.0)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2187723, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T22:40:57.379Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T22:40:57.379Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Validation message in Bounty award endpoint can be used to determine program balances", 
                "old_title": "IDOR in Checking if a Team has sufficient fund to award"
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 2187724, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-11-28T22:46:25.759Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T22:46:25.759Z", 
            "actor": {
                "url": "/security", 
                "profile": {
                    "name": "HackerOne"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
                }
            }, 
            "team_handle": "security", 
            "bonus_amount": "0.0", 
            "bounty_amount": "1500.0", 
            "collaborator": {
                "username": "cyriac", 
                "url": "/cyriac"
            }, 
            "message": "Hi @cyriac - \n\nThis is great find. We've decided to award $1,500 for this since it exposes some sensitive information about programs and their bounty amounts. We appreciate your help in identifying this issue. Thanks for thinking of HackerOne security and hacking with us!", 
            "markdown_message": "<p>Hi <a href=\"/cyriac\">@cyriac</a> - </p>\n\n<p>This is great find. We&#39;ve decided to award $1,500 for this since it exposes some sensitive information about programs and their bounty amounts. We appreciate your help in identifying this issue. Thanks for thinking of HackerOne security and hacking with us!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 2187734, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T23:17:15.519Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T23:17:15.519Z", 
            "actor": {
                "username": "cjlegacion", 
                "url": "/cjlegacion", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/085/516/d7206b4f9856baf1f3f8d30cf1650fe3f55b9bca_medium.jpg?1500409739"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 2187770, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T23:23:24.459Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T23:23:24.459Z", 
            "actor": {
                "username": "coffeecup", 
                "url": "/coffeecup", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/163/756/f43e0dda96a575dcb496c1e3028dedc45a10a391_medium.png?1526279637"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "security", 
            "message": "@cyriac - We believe this issue has been resolved now. Could you please verify on your end? Thanks! ", 
            "markdown_message": "<p><a href=\"/cyriac\">@cyriac</a> - We believe this issue has been resolved now. Could you please verify on your end? Thanks! </p>\n", 
            "type": "Activities::Comment", 
            "id": 2187782, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T23:58:46.778Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T23:58:46.778Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @cyriac - I wanted to take this opportunity to elaborate a little bit what went wrong here and the learning we took from this. At HackerOne, we use a library that consolidates authorization, input validation, and business logic into a single layer that lies directly under our controllers. This allows us to route API calls, GraphQL queries / mutations, and normal endpoints to that layer and know for sure that the authorization is always checked. However, it turns out that the input validation was sometimes bloated with business logic. Because the input validation is executed **before** the authorization logic, it would return error messages that revealed information about the report. Here's a code example:\n\n**Wrong**\n```ruby\nclass AwardBountyClass\n  def initialize(report_id)\n    # store the report_id in the class instance\n  end\n\n  def authorized?\n    # make sure user can award a bounty\n  end\n\n  def validate\n    # make sure report_id is an integer\n    # return an error when the balance is too low\n  end\n\n  def execute\n    # award the bounty\n  end\nend\n```\n\n**Good**\n```ruby\nclass AwardBountyClass\n  def initialize(report_id)\n    # store the report_id in the class instance\n  end\n\n  def authorized?\n    # make sure user can award a bounty\n  end\n\n  def validate\n    # make sure report_id is an integer\n  end\n\n  def execute\n    # return an error when the balance is too low\n    # award the bounty\n  end\nend\n```\n\nThe difference between the two is that the error **should** be returned in the `execute` method, not the `validate` method. We've identified multiple code structures in our code base where this could've happened and addressed those. We took the learnings from your report and will see if we can automate the detection of these incorrect code structures. Thanks again!", 
            "markdown_message": "<p>Hi <a href=\"/cyriac\">@cyriac</a> - I wanted to take this opportunity to elaborate a little bit what went wrong here and the learning we took from this. At HackerOne, we use a library that consolidates authorization, input validation, and business logic into a single layer that lies directly under our controllers. This allows us to route API calls, GraphQL queries / mutations, and normal endpoints to that layer and know for sure that the authorization is always checked. However, it turns out that the input validation was sometimes bloated with business logic. Because the input validation is executed <strong>before</strong> the authorization logic, it would return error messages that revealed information about the report. Here&#39;s a code example:</p>\n\n<p><strong>Wrong</strong></p>\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">AwardBountyClass</span>\n  <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"n\">report_id</span><span class=\"p\">)</span>\n    <span class=\"c1\"># store the report_id in the class instance</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">authorized?</span>\n    <span class=\"c1\"># make sure user can award a bounty</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">validate</span>\n    <span class=\"c1\"># make sure report_id is an integer</span>\n    <span class=\"c1\"># return an error when the balance is too low</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">execute</span>\n    <span class=\"c1\"># award the bounty</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre>\n<p><strong>Good</strong></p>\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">AwardBountyClass</span>\n  <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"n\">report_id</span><span class=\"p\">)</span>\n    <span class=\"c1\"># store the report_id in the class instance</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">authorized?</span>\n    <span class=\"c1\"># make sure user can award a bounty</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">validate</span>\n    <span class=\"c1\"># make sure report_id is an integer</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">execute</span>\n    <span class=\"c1\"># return an error when the balance is too low</span>\n    <span class=\"c1\"># award the bounty</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre>\n<p>The difference between the two is that the error <strong>should</strong> be returned in the <code>execute</code> method, not the <code>validate</code> method. We&#39;ve identified multiple code structures in our code base where this could&#39;ve happened and addressed those. We took the learnings from your report and will see if we can automate the detection of these incorrect code structures. Thanks again!</p>\n", 
            "type": "Activities::Comment", 
            "id": 2187818, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-29T05:49:23.691Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-29T05:49:23.691Z", 
            "actor": {
                "username": "cyriac", 
                "url": "/cyriac", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/041/421/569587f475b53df4af393a9b346b909f615aae44_medium.jpg?1496663085"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "I have retested :D Fast Fix :) Thanks @coffeecup and @jobert for the  details :D , Hackerone again excited me with  Bounty ,i was expecting a swag :) Thanks Team ", 
            "markdown_message": "<p>I have retested :D Fast Fix :) Thanks <a href=\"/coffeecup\">@coffeecup</a> and <a href=\"/jobert\">@jobert</a> for the  details :D , Hackerone again excited me with  Bounty ,i was expecting a swag :) Thanks Team </p>\n", 
            "type": "Activities::Comment", 
            "id": 2188092, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "cyriac", 
                "url": "/cyriac"
            }, 
            "created_at": "2017-11-29T16:09:36.265Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-29T16:09:36.265Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks for confirming, appreciate it!", 
            "markdown_message": "<p>Thanks for confirming, appreciate it!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 2189037, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-29T16:16:02.711Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-29T16:16:02.711Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2189047, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-29T16:46:28.534Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-29T16:46:28.534Z", 
            "actor": {
                "username": "cyriac", 
                "url": "/cyriac", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/041/421/569587f475b53df4af393a9b346b909f615aae44_medium.jpg?1496663085"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2189120, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-29T16:46:28.674Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-29T16:46:28.674Z", 
            "actor": {
                "username": "cyriac", 
                "url": "/cyriac", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/041/421/569587f475b53df4af393a9b346b909f615aae44_medium.jpg?1496663085"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2189121, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-03T07:50:02.316Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-03T07:50:02.316Z", 
            "actor": {
                "username": "cyriac", 
                "url": "/cyriac", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/041/421/569587f475b53df4af393a9b346b909f615aae44_medium.jpg?1496663085"
                }, 
                "hackerone_triager": false
            }, 
            "email": "cy**************om", 
            "team_handle": "security", 
            "message": null, 
            "markdown_message": "", 
            "type": "Activities::ReportCollaboratorInvited", 
            "id": 2196518, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-03T07:58:20.967Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-03T07:58:20.967Z", 
            "actor": {
                "username": "hacker__", 
                "url": "/hacker__", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/110/892/5dd45534ecb81ba193b4b916b6791b77344f21ad_medium.png?1496515334"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportCollaboratorJoined", 
            "id": 2196526, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "cyriac", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/cyriac", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/041/421/dd5b53d9e6e94a36eb81661eef2b14a634698245_small.jpg?1496663085"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -29571189.41172173, 
    "disclosed_at": "2017-11-29T16:46:28.636Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/293299", 
    "created_at": "2017-11-27T19:12:24.566Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p><strong>Summary:</strong><br>\nHi team,<br>\nFound a idor in Checking if a Team has sufficient fund to award</p>\n\n<h3 id=\"steps-to-reproduce\">Steps To Reproduce</h3>\n\n<ol>\n<li>Start a new program and login to the account</li>\n<li>A demo Report will be there</li>\n<li>Then Set award &gt; Amount &gt; $100 </li>\n<li>Set award and intercept the request </li>\n<li>change the report_ids to <a href=\"/reports/262262\">#262262</a>\n</li>\n</ol>\n\n<p><a href=\"/reports/262262\">#262262</a> - mixmax published report id</p>\n\n<p>mixmax offers $100 minimum bounty</p>\n\n<ol>\n<li>And Request</li>\n</ol>\n\n<p>we will get <strong><em>Validation failed: insufficient funds to award this bounty.</em></strong>*</p>\n\n<p>again use this <a href=\"/reports/208237\">#208237</a> report id - LocalTapiola </p>\n\n<p>we will get <strong><em>You have successfully awarded a bounty.</em></strong></p>\n\n<p>Using the report ids we get find that if funds have been added to teams or not</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Just a information disclosure where we can check if team has added funds to the account</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}