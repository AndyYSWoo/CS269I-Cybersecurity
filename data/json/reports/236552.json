{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-08-16T12:51:21.119Z", 
    "voters": [
        "flamezzz", 
        "marcs0h", 
        "bl4de", 
        "cha5m", 
        "bogdantcaciuc", 
        "edoverflow", 
        "eveeez", 
        "leet-boy", 
        "vijay_kumar", 
        "grampae", 
        "and 21 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 236552, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "vulnerability_information": "Hitting wordpress instalattion with vaultpress on it with get parameter vaultpress=true attacker is one method away from RCE and that method is **validate_api_signature**.\n\nIn this method we have the following constraints:\n1. Firewall\n2. Usage (recomended) of openssl to validate API call\n\nIn case of disabled firewall or its bypass ( easy on many configurations, specially the ones behind proxy/balancer servers ) then in case of usage of openssl to verify the signature we have easy bypass because unsafe usage of **openssl_verify** PHP function.\n\n```\nif ( $this->can_use_openssl() ) {\n\t\t\t\n\t\t\t$sslsig = '';\n\t\t\tif ( isset( $post['sslsig'] ) ) {\n\t\t\t\t$sslsig = $post['sslsig'];\n\t\t\t\tunset( $post['sslsig'] );\n\t\t\t}\n\t\t\tif ( openssl_verify( serialize( array( 'uri' => $uri, 'post' => $post ) ), base64_decode( $sslsig ), $this->get_option( 'public_key' ) ) ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t$__vp_validate_error = array( 'error' => 'invalid_signed_data' );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n```\nThis function **openssl_verify** have 3 possible values as result value: \n- int(1) success \n- int(0) failure to verify\n- int(-1) error \n\nbut we all know that \n```\nif (-1) {echo \"Hi RCE\";}\n```\nwill print **Hi RCE**\n\nProposed fix:\n```\nif ( openssl_verify( serialize( array( 'uri' => $uri, 'post' => $post ) ), base64_decode( $sslsig ), $this->get_option( 'public_key' ) ) ===1 ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t$__vp_validate_error = array( 'error' => 'invalid_signed_data' );\n\t\t\t\treturn false;\n\t\t\t}\n```\nIn order to get the idea how to cause **openssl_verify** to return -1all you need is to provide valid signature towards public key from different type. Check the uploaded files and execute them in the CMD in the following order:\n```\nphp genkey1.php\nphp genkey2.php\nphp PoC.php\n```\n", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "low", 
            "user_interaction": "none", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "changed", 
            "integrity": "high", 
            "availability": "high"
        }, 
        "rating": "critical", 
        "score": 9.9, 
        "author_type": "User"
    }, 
    "title": "Unauthenticated RCE in Vaultpress", 
    "is_member_of_team?": null, 
    "vote_count": 31, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-09-15T12:51:21.193Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "attachments": [
        {
            "file_name": "genkey2.php", 
            "type": "text/x-php", 
            "id": 191300, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/191/300/344a2d70a66ac330d5ca7d26b064c37299e2de78/genkey2.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223243Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=23816f2586a1e1ccba14fc0db5dcd744d154a91fad5bd5e662c35088d2766660"
        }, 
        {
            "file_name": "genkey1.php", 
            "type": "text/x-php", 
            "id": 191301, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/191/301/40a8794e4d194e8d084f6a85c49da93c6e6e64a1/genkey1.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223243Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=acfb2d2d2641185e0fd18b542ffeb0671b397904d7c4b4e14dd072fdcedfd069"
        }, 
        {
            "file_name": "PoC.php", 
            "type": "text/x-php", 
            "id": 191302, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/191/302/4a20e2244e6c30767c07fb7ada43f2c4f4667444/PoC.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223243Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1af29d5e8c697346cec2db3c80c96930d24aaa260e146b71e9c6666b1bc02e89"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-06-05T10:38:24.982Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-05T10:38:24.982Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. Thanks for the report. We are going to take a look.", 
            "markdown_message": "<p>Hi. Thanks for the report. We are going to take a look.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1729826, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "created_at": "2017-06-07T01:36:39.766Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-07T01:36:39.766Z", 
            "actor": {
                "username": "thingalon", 
                "url": "/thingalon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Thanks for reporting this. It's now fixed as of VaultPress 1.9.0 and have pushed this fix out to our users.", 
            "markdown_message": "<p>Thanks for reporting this. It&#39;s now fixed as of VaultPress 1.9.0 and have pushed this fix out to our users.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1736383, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-08T22:27:05.762Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-08T22:27:05.762Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Great, regarding this issue everything seems fine now. I can see the update process towards the clients goes quite fast. Any toughs/previous practices from your side regarding possible future disclosure and possible bounty?  ", 
            "markdown_message": "<p>Great, regarding this issue everything seems fine now. I can see the update process towards the clients goes quite fast. Any toughs/previous practices from your side regarding possible future disclosure and possible bounty?  </p>\n", 
            "type": "Activities::Comment", 
            "id": 1743058, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-06-09T21:04:39.736Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-09T21:04:39.736Z", 
            "actor": {
                "url": "/automattic", 
                "profile": {
                    "name": "Automattic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
                }
            }, 
            "team_handle": "automattic", 
            "bonus_amount": "0.0", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1745575, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-09T21:19:00.506Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-09T21:19:00.506Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Thx for the bounty, tough it was more worth than reflected XSS due its existence in security plugin, but it is your decision. When update completes on wordpress.org I'll request disclosure. :)", 
            "markdown_message": "<p>Thx for the bounty, tough it was more worth than reflected XSS due its existence in security plugin, but it is your decision. When update completes on wordpress.org I&#39;ll request disclosure. :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1745723, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-12T22:15:14.295Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-12T22:15:14.295Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Extra from my side, another type of bypass / attack against this method in order to get the wanted RCE :) :\n\n```\nif ( $sig[0] === $signature )\n\t\t\treturn true;\n```\nhere we have classic timing attack (effective because its goal - RCE ) and should be replaced with:\n\n```\nif ( hash_equals($signature, $sig[0]))\n\t\t\treturn true;\n```\n\n", 
            "markdown_message": "<p>Extra from my side, another type of bypass / attack against this method in order to get the wanted RCE :) :</p>\n<pre class=\"highlight plaintext\"><code>if ( $sig[0] === $signature )\n            return true;\n</code></pre>\n<p>here we have classic timing attack (effective because its goal - RCE ) and should be replaced with:</p>\n<pre class=\"highlight plaintext\"><code>if ( hash_equals($signature, $sig[0]))\n            return true;\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1750942, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-13T12:58:24.446Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-13T12:58:24.446Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. Yes, we are aware of it. I'll ping again the VaultPress team to see if they can also fix this issue.", 
            "markdown_message": "<p>Hi. Yes, we are aware of it. I&#39;ll ping again the VaultPress team to see if they can also fix this issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1752543, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-13T13:09:42.463Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-13T13:09:42.463Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "well, isn't 32 byte lenght (~50-100k requests to be defeated, worst case ~400k for md5), but exists and bad thing here is that isn't time limited e.g. could be solved piece by piece in quite big time interval.", 
            "markdown_message": "<p>well, isn&#39;t 32 byte lenght (~50-100k requests to be defeated, worst case ~400k for md5), but exists and bad thing here is that isn&#39;t time limited e.g. could be solved piece by piece in quite big time interval.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1752562, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-28T01:38:28.040Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-28T01:38:28.040Z", 
            "actor": {
                "username": "thingalon", 
                "url": "/thingalon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Thank you. This fix has been applied to trunk, and will be released with the next version of VaultPress soon.", 
            "markdown_message": "<p>Thank you. This fix has been applied to trunk, and will be released with the next version of VaultPress soon.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1786487, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-30T14:50:35.516Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-30T14:50:35.516Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "+1", 
            "markdown_message": "<p>+1</p>\n", 
            "type": "Activities::Comment", 
            "id": 1794307, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-16T12:51:21.160Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-16T12:51:21.160Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "first_to_agree": true, 
            "message": "Hi, patch was supplied more than 2 months ago, update progress is more than good, so in the beginning of September I plan to release public advisories regarding this issue.  ", 
            "markdown_message": "<p>Hi, patch was supplied more than 2 months ago, update progress is more than good, so in the beginning of September I plan to release public advisories regarding this issue.  </p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1933299, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-15T12:51:38.184Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-15T12:51:38.184Z", 
            "actor": {
                "url": "/automattic", 
                "profile": {
                    "name": "Automattic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
                }
            }, 
            "team_handle": "automattic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1999297, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "b258ea62bf297b02afa9854", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": true, 
        "url": "/b258ea62bf297b02afa9854", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -38655681.85821494, 
    "disclosed_at": "2017-09-15T12:51:38.159Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/236552", 
    "created_at": "2017-06-05T10:28:51.711Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hitting wordpress instalattion with vaultpress on it with get parameter vaultpress=true attacker is one method away from RCE and that method is <strong>validate_api_signature</strong>.</p>\n\n<p>In this method we have the following constraints:</p>\n\n<ol>\n<li>Firewall</li>\n<li>Usage (recomended) of openssl to validate API call</li>\n</ol>\n\n<p>In case of disabled firewall or its bypass ( easy on many configurations, specially the ones behind proxy/balancer servers ) then in case of usage of openssl to verify the signature we have easy bypass because unsafe usage of <strong>openssl_verify</strong> PHP function.</p>\n<pre class=\"highlight plaintext\"><code>if ( $this-&gt;can_use_openssl() ) {\n\n            $sslsig = &#39;&#39;;\n            if ( isset( $post[&#39;sslsig&#39;] ) ) {\n                $sslsig = $post[&#39;sslsig&#39;];\n                unset( $post[&#39;sslsig&#39;] );\n            }\n            if ( openssl_verify( serialize( array( &#39;uri&#39; =&gt; $uri, &#39;post&#39; =&gt; $post ) ), base64_decode( $sslsig ), $this-&gt;get_option( &#39;public_key&#39; ) ) ) {\n                return true;\n            } else {\n                $__vp_validate_error = array( &#39;error&#39; =&gt; &#39;invalid_signed_data&#39; );\n                return false;\n            }\n        }\n</code></pre>\n<p>This function <strong>openssl_verify</strong> have 3 possible values as result value: </p>\n\n<ul>\n<li>int(1) success </li>\n<li>int(0) failure to verify</li>\n<li>int(-1) error </li>\n</ul>\n\n<p>but we all know that </p>\n<pre class=\"highlight plaintext\"><code>if (-1) {echo &quot;Hi RCE&quot;;}\n</code></pre>\n<p>will print <strong>Hi RCE</strong></p>\n\n<p>Proposed fix:</p>\n<pre class=\"highlight plaintext\"><code>if ( openssl_verify( serialize( array( &#39;uri&#39; =&gt; $uri, &#39;post&#39; =&gt; $post ) ), base64_decode( $sslsig ), $this-&gt;get_option( &#39;public_key&#39; ) ) ===1 ) {\n                return true;\n            } else {\n                $__vp_validate_error = array( &#39;error&#39; =&gt; &#39;invalid_signed_data&#39; );\n                return false;\n            }\n</code></pre>\n<p>In order to get the idea how to cause <strong>openssl_verify</strong> to return -1all you need is to provide valid signature towards public key from different type. Check the uploaded files and execute them in the CMD in the following order:</p>\n<pre class=\"highlight plaintext\"><code>php genkey1.php\nphp genkey2.php\nphp PoC.php\n</code></pre>", 
    "severity_rating": "critical", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://automattic.com", 
            "about": "WordPress.com, VaultPress, Akismet, Gravatar, Cloudup, WooCommerce, Polldaddy and more!", 
            "twitter_handle": "", 
            "name": "Automattic"
        }, 
        "handle": "automattic", 
        "url": "https://hackerone.com/automattic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/111/6b5147b71079b286c99869a85682f609f6c617c6_small.png?1396031864", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 111, 
        "default_currency": "usd"
    }, 
    "is_published": false
}