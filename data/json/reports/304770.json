{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "yumi", 
        "eveeez", 
        "geeknik", 
        "axolotl", 
        "hassham", 
        "craxerbikash", 
        "apapedulimu", 
        "d4rk_g1rl", 
        "protector47", 
        "lopwoq", 
        "and 1 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 304770, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-03-15T15:47:21.641Z", 
    "vulnerability_information": "Dear Monero security team,\n    We\u2019re writing to disclose a privacy vulnerability when using monero-cli or monero-gui with an untrusted remote node.\n\nWhen using a remote node, the Monero client relies on the node to provide information from the blockchain, in particular the public keys and transaction outputs corresponding to mixins that the client chooses by global index (gidx). The client selects a handful of gidxs, and passes these in a request to the \u201cget_outs.bin\u201d RPC endpoint. The client is generally designed to provide *untraceability* even against the untrusted remote node, e.g. by masking which index in the request is the real one being spent. However, if the remote node provides an invalid response then the client may end up inadvertently revealing information about the real gidx being spent.\n\nIn more detail there, we've made a proof-of-concept of two forms of this attack:\n\n#1 Retry-and-intersect attack. \n====\nIf the attacker remote node returns bogus data, and the user *retries the same transaction* after clicking through the error message, it most likely reveals to the remote node exactly which coin in the transaction is the real one being spent.\n\n1. The attacker modifies monerod to return all bogus public keys in response to the first \u201cget_outs.bin\u201d request.\n\n2. The client reports an error that invalid data was received, but does not disconnect from the remote node or otherwise change its behavior. The outputs remain available for use.\n\n3. If the user dismisses the error and then tries the same transaction again, then the client samples a *new set of mixins* to request along with the real output again.\n\n4. The remote node looks at the two requests. Most likely, there is a unique intersection between the two sets of requested gidxs, which corresponds to the real transaction output.\n\n5. The remote node responds to the second request with correct data, so the transaction goes through.\nAs a proof of concept, we tested this 10 times with a monero-cli and our own modified monerod, and found that the correct output was detected in each trial. It is possible that two such requests do not have a unique intersection, but this appears to happen with low frequency.\n\nThis is an active attack, and involves showing an error message to the client. This would likely raise suspicion if occurred many times in a row. However, since the transaction goes through without error on the second request, used sparingly it may not raise suspicion.\n\n#2 Guess-and-check attack\n====\nIf the remote node returns bogus data for some but not all of of the requested gidxs, then by observing the client\u2019s behavior it can tell whether the real transaction input is one of the bogus ones or not.\n\n1. The attacker modifies monerod to return bogus public keys for all but one of the requested gidxs. There are two cases, depending on whether the real transaction input is one of the bogus ones.\n\n2a. The real input is one of the bogus public keys.\n   The client is able to identify the incorrect response. It throws an exception, and will not sign and transmit any transaction (until after making subsequent get_out.bin requests). The attacker learns that the real transaction input is not one of the bogus ones.\n\n2b. The real input corresponds to the non-bogus response\n\n   The wallet is unable to discover that the response is invalid, and therefore proceeds to sign and transmit the transaction to the remote node. The attacker learns that the real transaction input is the bogus one.\n\nSince the transaction is invalid, it will not show up on the blockchain. However, the client stores the transaction in the wallet as \u201cpending\u201d, such that its transaction inputs will not be reused again for 24 hours.\n\nBecause the client requests many more public keys than it actually needs for mixins (e.g., a default of 58 gidx requested for a ring size of 5), the probability of succeeding is small but non-negligible. If the attack fails (case 2a), the attacker cannot easily \u201ctry again\u201d, since the transaction inputs are unavailable for 24 hours. (However, we note that this behavior could also be considered a DoS vector for a remote node, and hence we imagine there could be a pressure to change this behavior, trading off privacy for DoS-resilience.)\n\nAttacks exacerbated by unauthenticated RPC\n======\nWe have described these two attack scenarios from the point of view of a corrupted remote node. However, because data between clients and the remote node is not authenticated (http json rather than https), this attack could also be performed by any on-path adversary (such as a router or ISP)\n\n## Impact\n\nSeverity:\n=======\nThe first of the two attacks is more severe, since the attacker can trace the transaction inputs with high probability while raising minimal suspicion to the user. We therefore recommend immediately implementing mitigations 1-3 as suggested below. The second attack type is less severe, since it has a smaller chance of success and cannot easily be repeated multiple times to increase the chance.\nRemote node operation can be considered a \u201cnon-default\u201d configuration, which is a mitigating factor. However, it is clear that many users would prefer a light client for administrative and performance reasons (it takes a while to sync a full node). Instructions for remote node operation appear on the getmonero.org user guides page, and infrastructure support is increasing (e.g., there are several \u201copen nodes\u201d services that provide lists of available remote nodes to connect to). So we think it is likely that this usage mode will see increased use in the near future. Statistics from moneroworld could be requested to estimate the popularity of this configuration.\n\nThe instructions at MoneroWorld https://moneroworld.com/#nodes do stress that remote nodes is not the recommended mode of operation and could lead to additional privacy risks. However, the instructions explain \u201cthe primary risk is that a remote node can get your IP address.\u201d Hence we think it is likely that users may follow these instructions, and even take precautions to shield their IP address (e.g., use Tor), but still fail to achieve the untraceability they expect. The instructions at getmonero do not provide warnings at all: https://getmonero.org/resources/user-guides/remote_node_gui.html )\nTo our knowledge, this attack vector is new and has not been discussed before in forums or reddit.\nWe suggest this should be considered MEDIUM severity according to the standards of the Vulnerability Response Process.\n\nPotential Mitigations\n=========\n1. _User warnings._ Any exceptions encountered in the RPC, after sending the list of gidxs to the remote node but prior to committing the transaction, should come with enhanced error messages warning about the potential of an active tracing attack. The instructions on using remote nodes should be expanded to warn the user in advance of this possibility against retrying a transaction. Statistics from moneroworld should be used to estimate the number of potentially affected users.\n\n2. _Caching of get_outs requests._ After the client samples a list of gidxs associated with a transaction output, it should immediately commit these to a persistent data structure (similar to the pending transactions in the wallet). If the output is used again in a short time interval (because of an exception through in the get_outs.bin RPC query or for any other reason), then the exact same gidxs should be sampled. This directly prevents the intersection attack #1 described above, however it does nothing to address attack #2.\n\n3. _Use a secure channel (TLS) between the client and remote node._ Communications should be JSON-RPC over HTTPS instead of over HTTP. Even opportunistic encryption (if the remote cannot be authenticated by a standard certificate) would require a network attacker to mount an active MitM first, which at least requires them to conduct a more invasive attack\n\n4. _Disconnect & blacklist remote node on failures._\nBoth of the attacks involve a remote node sending corrupt information in response to get_outs. Immediately blacklisting the node upon such an event reduces the effectiveness of the attack. A caveat is that with several \u201copen nodes\u201d services, e.g. nodes.moneroworld.com, which DNS-resolve to multiple IP addresses of different volunteers, the blacklist should be at the IP level rather than the hostname level. This should only be implemented after mitigation 3, since otherwise it would allow on-path adversaries to cause honest remote nodes to be falsely blacklisted.\n\n5. _Use authenticated data structures._ Although attack #2 is of lower severity, it is difficult to stamp out entirely. The general problem is that it is currently impossible for a client to authenticate get_outs.bin responses from a remote node except for public keys that it already knows, i.e. the real transaction input. Hence the differential behavior reveals information about the treal transaction inputs. A systematic mitigation would be to add an additional Merkle tree data structure to the Monero blockchain, indexed by gidx, that allows the client to authenticate responses to get_idx. We are currently working on a writeup about this mitigation, but the simpler mitigations could be employed in the meantime.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "Corrupt RPC responses from remote daemon nodes can lead to transaction tracing", 
    "is_member_of_team?": null, 
    "vote_count": 11, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2018-04-14T15:47:21.722Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-01-16T10:46:18.161Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-16T10:46:18.161Z", 
            "actor": {
                "username": "moneromooo", 
                "url": "/moneromooo", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Hi,\n\nthanks for the report.\nThis has been known for a while, and while we fixed a lot of the leaks that happen to the daemon, it's unfixable fully (and I've been regretting fixing some of them, since it makes use of a third party daemon have less drawbacks, making the problem worse in a way). If you want privacy and security, you shouldn't use a third party daemon. Unfortunately, many people just don't care and go for the easiest to use.\nSo while your report is correct, it doesn't tell us anything new, and this is not really something I want to fix (of course that only applies to information disclosure, and not of something like keys, that's be pretty bad).\nI'll let others give their opinion here, since it's a valid report.\n", 
            "markdown_message": "<p>Hi,</p>\n\n<p>thanks for the report.<br>\nThis has been known for a while, and while we fixed a lot of the leaks that happen to the daemon, it&#39;s unfixable fully (and I&#39;ve been regretting fixing some of them, since it makes use of a third party daemon have less drawbacks, making the problem worse in a way). If you want privacy and security, you shouldn&#39;t use a third party daemon. Unfortunately, many people just don&#39;t care and go for the easiest to use.<br>\nSo while your report is correct, it doesn&#39;t tell us anything new, and this is not really something I want to fix (of course that only applies to information disclosure, and not of something like keys, that&#39;s be pretty bad).<br>\nI&#39;ll let others give their opinion here, since it&#39;s a valid report.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2287282, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-16T14:35:37.843Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-16T14:35:37.843Z", 
            "actor": {
                "username": "fluffypony", 
                "url": "/fluffypony", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "I agree with moneromooo. I think that remote node functionality has been incorrectly advertised as being untrusted, when in fact it's a fully trusted model even with the untrusted flag on. I also think that this valid report might be a good catalyst for us to highlight this to users and start changing the perception. I will discuss this with others on the VRP response team as well.", 
            "markdown_message": "<p>I agree with moneromooo. I think that remote node functionality has been incorrectly advertised as being untrusted, when in fact it&#39;s a fully trusted model even with the untrusted flag on. I also think that this valid report might be a good catalyst for us to highlight this to users and start changing the perception. I will discuss this with others on the VRP response team as well.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2287702, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-19T09:33:15.075Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-19T09:33:15.075Z", 
            "actor": {
                "username": "moneromooo", 
                "url": "/moneromooo", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "By the way, most of this would be bypassed if we'd cache usable fake outs in the wallet as it scans the chain. I've not done that because it gives people another push towards using a third party node, which is proving too attractive to people who don't really care about privacy. Unfortunately, we have conflicting requirements here. Technically, it'd be nice fix, but fixing it acts as a force against decentralization.", 
            "markdown_message": "<p>By the way, most of this would be bypassed if we&#39;d cache usable fake outs in the wallet as it scans the chain. I&#39;ve not done that because it gives people another push towards using a third party node, which is proving too attractive to people who don&#39;t really care about privacy. Unfortunately, we have conflicting requirements here. Technically, it&#39;d be nice fix, but fixing it acts as a force against decentralization.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2300208, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-19T17:42:56.191Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-19T17:42:56.191Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Thanks for your responses!\n\n1. Do you have any citations (e.g. developer minutes) that show it was already known that malicious remote nodes would be able to trace transaction inputs? Otherwise we would still like to argue that this counts as a new insight. Many stackexchange and reddit posts explicitly say that tracing transaction inputs is not one of the risks of using remote nodes, whereas we haven't found anything to the contrary.\n\n2. We're receptive to the idea that declining to further develop remote node support could help discourage this usage pattern. However, leaving in a privacy vulnerability seems like the wrong lever to pull to achieve that, since that seems unlikely to discourage users one way or the other (it's a tail risk, and users may already think it's prevented). This is clearly subjective/speculative though, just a suggestion.", 
            "markdown_message": "<p>Thanks for your responses!</p>\n\n<ol>\n<li><p>Do you have any citations (e.g. developer minutes) that show it was already known that malicious remote nodes would be able to trace transaction inputs? Otherwise we would still like to argue that this counts as a new insight. Many stackexchange and reddit posts explicitly say that tracing transaction inputs is not one of the risks of using remote nodes, whereas we haven&#39;t found anything to the contrary.</p></li>\n<li><p>We&#39;re receptive to the idea that declining to further develop remote node support could help discourage this usage pattern. However, leaving in a privacy vulnerability seems like the wrong lever to pull to achieve that, since that seems unlikely to discourage users one way or the other (it&#39;s a tail risk, and users may already think it&#39;s prevented). This is clearly subjective/speculative though, just a suggestion.</p></li>\n</ol>\n", 
            "type": "Activities::Comment", 
            "id": 2301730, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-20T09:45:13.934Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-20T09:45:13.934Z", 
            "actor": {
                "username": "moneromooo", 
                "url": "/moneromooo", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "I don't think we have any kind of written up proof we know :) It's probably lost in IRC logs. A while back, I started caching the fake outs from the daemon for reuse, if that counts, but it's not cached long term. You have described well some avenues of attack, so this look good to me tbh, and is a good \"advancement\" of the problem, so I'm fine with describing this as a \"new insight\", and it is true that most privacy risk analysis does not consider this. tbh, I also often do when asked. So for the purposes of this bug report, I'm fine considering this as a valid report (also see fluffypony's reply above). ", 
            "markdown_message": "<p>I don&#39;t think we have any kind of written up proof we know :) It&#39;s probably lost in IRC logs. A while back, I started caching the fake outs from the daemon for reuse, if that counts, but it&#39;s not cached long term. You have described well some avenues of attack, so this look good to me tbh, and is a good &quot;advancement&quot; of the problem, so I&#39;m fine with describing this as a &quot;new insight&quot;, and it is true that most privacy risk analysis does not consider this. tbh, I also often do when asked. So for the purposes of this bug report, I&#39;m fine considering this as a valid report (also see fluffypony&#39;s reply above). </p>\n", 
            "type": "Activities::Comment", 
            "id": 2303364, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-14T00:30:29.707Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-14T00:30:29.707Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "If no one is going to provide a code fix, we should add this issue to our threat model as a known attack vector and publish said threat model.", 
            "markdown_message": "<p>If no one is going to provide a code fix, we should add this issue to our threat model as a known attack vector and publish said threat model.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2380753, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-14T00:31:11.915Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-14T00:31:11.915Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 2380755, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-25T14:36:40.679Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-25T14:36:40.679Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Just checking in... Could we agree on a timeline for concluding this disclosure? It seems like this is headed for a documentation update and a wontfix as far as code. I am assuming you could easily communicate this to Moneroworld, but I'm happy to communicate to them too. Given this response, it does not seem like there is any need to carefully coordinate the disclosure, e.g. with a software upgrade. Shall I consider myself free to publish the disclosure now, or in a short time frame? Thanks :)", 
            "markdown_message": "<p>Just checking in... Could we agree on a timeline for concluding this disclosure? It seems like this is headed for a documentation update and a wontfix as far as code. I am assuming you could easily communicate this to Moneroworld, but I&#39;m happy to communicate to them too. Given this response, it does not seem like there is any need to carefully coordinate the disclosure, e.g. with a software upgrade. Shall I consider myself free to publish the disclosure now, or in a short time frame? Thanks :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 2431768, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-26T23:18:32.690Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-26T23:18:32.690Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "@monero-hax123 Please read the VRP.\n\n`1. Response Team has 90 days to fulfill all points within section III`.", 
            "markdown_message": "<p><a href=\"/monero-hax123\">@monero-hax123</a> Please read the VRP.</p>\n\n<p><code>1. Response Team has 90 days to fulfill all points within section III</code>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2436631, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-28T18:10:54.649Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-28T18:10:54.649Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Indeed, we've read the VRP. Since the conclusion appears to be that no code fix or point release is forthcoming, then we'd hope for a shorter timeline. What do you think?", 
            "markdown_message": "<p>Indeed, we&#39;ve read the VRP. Since the conclusion appears to be that no code fix or point release is forthcoming, then we&#39;d hope for a shorter timeline. What do you think?</p>\n", 
            "type": "Activities::Comment", 
            "id": 2443474, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-09T02:07:31.411Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-09T02:07:31.411Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "@monero-hax123 Thanks for your patience. We'd like to proceed with the following:\n\n- If you'd like to do a writeup of this as a blog/reddit post, we'd back the findings. We'd also appreciate a non-clickbait/non-alarmist writeup since these issues are known issues. If you can give us the planned date/time of the post, we can then coordinate disclosure of this H1 ticket.\n- If you are interested in receiving bounty, please paste a monero address into this ticket. The address can be temporary/one-time if needed.", 
            "markdown_message": "<p><a href=\"/monero-hax123\">@monero-hax123</a> Thanks for your patience. We&#39;d like to proceed with the following:</p>\n\n<ul>\n<li>If you&#39;d like to do a writeup of this as a blog/reddit post, we&#39;d back the findings. We&#39;d also appreciate a non-clickbait/non-alarmist writeup since these issues are known issues. If you can give us the planned date/time of the post, we can then coordinate disclosure of this H1 ticket.</li>\n<li>If you are interested in receiving bounty, please paste a monero address into this ticket. The address can be temporary/one-time if needed.</li>\n</ul>\n", 
            "type": "Activities::Comment", 
            "id": 2475526, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-09T19:53:16.888Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-09T19:53:16.888Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Great, thanks for this response. I think a reddit post is appropriate, especially since that is where I've found most of the discussions about remote node operation. I will work on a draft of this and share it here first, which will be mostly similar to the writeup in this issue. My only other concern is I'd like to send a note about this to MoneroWorld ASAP since that is serving as a gateway to remote nodes and hosts explicit guidance about how to use it. I believe gingeropolous runs moneroworld, so I will share a draft with them by email at the same time as I post the draft here, OK?", 
            "markdown_message": "<p>Great, thanks for this response. I think a reddit post is appropriate, especially since that is where I&#39;ve found most of the discussions about remote node operation. I will work on a draft of this and share it here first, which will be mostly similar to the writeup in this issue. My only other concern is I&#39;d like to send a note about this to MoneroWorld ASAP since that is serving as a gateway to remote nodes and hosts explicit guidance about how to use it. I believe gingeropolous runs moneroworld, so I will share a draft with them by email at the same time as I post the draft here, OK?</p>\n", 
            "type": "Activities::Comment", 
            "id": 2477994, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-10T00:09:58.470Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T00:09:58.470Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Here is a draft post:\n\nVulnerability disclosure: Tracing attacks are possible when using \u201cRemote Nodes\u201d\n\n\u201cRemote nodes\u201d are when you connect the monero-cli or monero-gui user interface to a remote full node run by someone else. Remote nodes live in a grey area of best practice recommendations. On one hand, it is universally recommended that you run your own full node if possible. On the other hand, running a remote node is obviously more convenient, and several websites and reddit discussions provide documentation on how to use remote nodes. There is also increasing infrastructure support - monero reference software provides an \u201c-untrusted\u201d command line option that (partially) defends the client against an untrusted remote nodes, moneroworld provides a gateway service to remote nodes by volunteers, and a recent campaign to add remote node hidden services suggest these are an increasingly appealing option for new users.\n\nIn this note we explain a new attack vector on remote node clients, by which a corrupt remote node (or a man-in-the-middle attacker, since remote nodes are not authenticated), could launch an active attack to trace your transaction inputs.\n\nThe attack is pretty straightforward (a subtler variant is discussed later). When the wallet requests data from the remote node to create a transaction, the remote node sends bogus data in response. This results in an error message displayed to the user. If the user clicks through the error and retries the transaction a second time, *this immediately reveals the real input to the remote node.*\n\nMitigations: If you see ANY error message after attempting a transaction, DISCONNECT from that remote node and DO NOT try your transaction again right away.\n\nHere is an example of a possible error message, but others are possible too:\nhttps://imgur.com/a/C0ESM\n\nThe most important immediate-term mitigation is to increase user awareness. Documentation on remote nodes, especially those that steer new users towards this option, should warn users about this potential attack vector so they can react accordingly.\n\nHere are a short list of existing resources about remote nodes where this should be mentioned:\n- Guide to using remote nodes on getmonero.org https://getmonero.org/resources/user-guides/remote_node_gui.html\n- Guide to using remote nodes on moneroworld https://moneroworld.com/#nodes\n- Reddit discussions: \n-- https://www.reddit.com/r/Monero/comments/7ve75t/to_conceal_my_ip_address_using_monero_gui_wallet/\n-- https://www.reddit.com/r/Monero/comments/7ofx9v/monero_remote_node_for_tor/\n-- https://www.reddit.com/r/Monero/comments/605kp1/tell_new_users_to_use_remote_nodes/\n-- https://www.reddit.com/r/Monero/comments/7no0nh/running_your_own_node_vs_using_a_remote_node/\n\nTo explain the attack in slightly more detail:\n\nWhen the Monero client creates a transaction, it first chooses some random indices (\u201cgidxs\u201d) for the mixins. Since the wallet doesn\u2019t have the blockchain data, it needs to fetch the corresponding public keys from the remote node. This is done by sending the list of gidxs to the \u201cget_outs.bin\u201d RPC endpoint. Even though only 4 mixins are included by default, the client fetches a much larger number (58 by default). To disguise the real input, the wallet includes the real gidx along with the fake ones. Here is an example of what the client might send to the server:\n\n```\n   { 827145, 1633390, 1636535, \u2026, 4239205, \n    4239384, **4240066**, 4240130, 4240478,  ...}\n   (58 in total)\n```\n\nIf the \u201cget_outs.bin\u201d RPC endpoint returns invalid data, then the client will likely throw an error, which could be one of any variety of messages, including \u201ccouldn\u2019t create transaction\u201d as shown above, but also possibly \u201cDaemon returned wrong response\u201d, \u201cDaemon response did not include the requested real output,\u201d or several potential others.\n\nIf the user clicks OK and tries again, then the wallet will sample NEW mixins and include them along with the response. For example, \n```\n  { 772573, 829705, 1138406, \u2026, 4238645, \n  4239971, **4240066**, 4240661, 4241277, \u2026}\n  (58 in total)\n```\n\nNotice that only ONE of the requested gidxs is the same in both queries, and it happens to be the real one.\n\nThis is an active attack, and involves showing an error message to the client. This would likely raise suspicion if occurred many times in a row. However, since the transaction goes through without error on the second request, used sparingly the attack may not raise suspicion. This attack could also be performed by a man-in-the-middle or on-path attacker (e.g., an ISP or the starbucks wifi), since connections between a monero client and remote node are over unauthenticated HTTP.\n\nThe root cause of this hazard is that Monero wallets cannot determine whether the response from remote nodes. Other variations of this attack are possible but are lower yield for the attacker (they only provide useful information some of the time). In particular, instead of returning invalid data, the attacker could guess which input is the real one and just return a bogus response for that one. \n", 
            "markdown_message": "<p>Here is a draft post:</p>\n\n<p>Vulnerability disclosure: Tracing attacks are possible when using \u201cRemote Nodes\u201d</p>\n\n<p>\u201cRemote nodes\u201d are when you connect the monero-cli or monero-gui user interface to a remote full node run by someone else. Remote nodes live in a grey area of best practice recommendations. On one hand, it is universally recommended that you run your own full node if possible. On the other hand, running a remote node is obviously more convenient, and several websites and reddit discussions provide documentation on how to use remote nodes. There is also increasing infrastructure support - monero reference software provides an \u201c-untrusted\u201d command line option that (partially) defends the client against an untrusted remote nodes, moneroworld provides a gateway service to remote nodes by volunteers, and a recent campaign to add remote node hidden services suggest these are an increasingly appealing option for new users.</p>\n\n<p>In this note we explain a new attack vector on remote node clients, by which a corrupt remote node (or a man-in-the-middle attacker, since remote nodes are not authenticated), could launch an active attack to trace your transaction inputs.</p>\n\n<p>The attack is pretty straightforward (a subtler variant is discussed later). When the wallet requests data from the remote node to create a transaction, the remote node sends bogus data in response. This results in an error message displayed to the user. If the user clicks through the error and retries the transaction a second time, <em>this immediately reveals the real input to the remote node.</em></p>\n\n<p>Mitigations: If you see ANY error message after attempting a transaction, DISCONNECT from that remote node and DO NOT try your transaction again right away.</p>\n\n<p>Here is an example of a possible error message, but others are possible too:<br>\n<a title=\"https://imgur.com/a/C0ESM\" href=\"/redirect?signature=db060753998f0874c06da3bcd3f34a45e2c2c5ee&amp;url=https%3A%2F%2Fimgur.com%2Fa%2FC0ESM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://imgur.com/a/C0ESM</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>The most important immediate-term mitigation is to increase user awareness. Documentation on remote nodes, especially those that steer new users towards this option, should warn users about this potential attack vector so they can react accordingly.</p>\n\n<p>Here are a short list of existing resources about remote nodes where this should be mentioned:</p>\n\n<ul>\n<li>Guide to using remote nodes on getmonero.org <a title=\"https://getmonero.org/resources/user-guides/remote_node_gui.html\" href=\"/redirect?signature=f547ccffd87545d0ed6b78384e929ef76c1c2174&amp;url=https%3A%2F%2Fgetmonero.org%2Fresources%2Fuser-guides%2Fremote_node_gui.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://getmonero.org/resources/user-guides/remote_node_gui.html</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Guide to using remote nodes on moneroworld <a title=\"https://moneroworld.com/#nodes\" href=\"/redirect?signature=6305d87b81b7274dc5b7faecc6f0d30f8d63a68f&amp;url=https%3A%2F%2Fmoneroworld.com%2F%23nodes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://moneroworld.com/#nodes</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Reddit discussions: \n-- <a title=\"https://www.reddit.com/r/Monero/comments/7ve75t/to_conceal_my_ip_address_using_monero_gui_wallet/\" href=\"/redirect?signature=35ef12df8241512f1a39b50dc745aab67c0ba883&amp;url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMonero%2Fcomments%2F7ve75t%2Fto_conceal_my_ip_address_using_monero_gui_wallet%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.reddit.com/r/Monero/comments/7ve75t/to_conceal_my_ip_address_using_monero_gui_wallet/</span><i class=\"icon-external-link\"></i></a>\n-- <a title=\"https://www.reddit.com/r/Monero/comments/7ofx9v/monero_remote_node_for_tor/\" href=\"/redirect?signature=66c30bf0f11cdc5e281c8a8992eb5d3971474f3e&amp;url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMonero%2Fcomments%2F7ofx9v%2Fmonero_remote_node_for_tor%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.reddit.com/r/Monero/comments/7ofx9v/monero_remote_node_for_tor/</span><i class=\"icon-external-link\"></i></a>\n-- <a title=\"https://www.reddit.com/r/Monero/comments/605kp1/tell_new_users_to_use_remote_nodes/\" href=\"/redirect?signature=65756954209f22d49063d07557051eac6af5e97e&amp;url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMonero%2Fcomments%2F605kp1%2Ftell_new_users_to_use_remote_nodes%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.reddit.com/r/Monero/comments/605kp1/tell_new_users_to_use_remote_nodes/</span><i class=\"icon-external-link\"></i></a>\n-- <a title=\"https://www.reddit.com/r/Monero/comments/7no0nh/running_your_own_node_vs_using_a_remote_node/\" href=\"/redirect?signature=b405473be9fce1abf458b4e7181ba7b9b5735de2&amp;url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMonero%2Fcomments%2F7no0nh%2Frunning_your_own_node_vs_using_a_remote_node%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.reddit.com/r/Monero/comments/7no0nh/running_your_own_node_vs_using_a_remote_node/</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ul>\n\n<p>To explain the attack in slightly more detail:</p>\n\n<p>When the Monero client creates a transaction, it first chooses some random indices (\u201cgidxs\u201d) for the mixins. Since the wallet doesn\u2019t have the blockchain data, it needs to fetch the corresponding public keys from the remote node. This is done by sending the list of gidxs to the \u201cget_outs.bin\u201d RPC endpoint. Even though only 4 mixins are included by default, the client fetches a much larger number (58 by default). To disguise the real input, the wallet includes the real gidx along with the fake ones. Here is an example of what the client might send to the server:</p>\n<pre class=\"highlight plaintext\"><code>   { 827145, 1633390, 1636535, \u2026, 4239205, \n    4239384, **4240066**, 4240130, 4240478,  ...}\n   (58 in total)\n</code></pre>\n<p>If the \u201cget_outs.bin\u201d RPC endpoint returns invalid data, then the client will likely throw an error, which could be one of any variety of messages, including \u201ccouldn\u2019t create transaction\u201d as shown above, but also possibly \u201cDaemon returned wrong response\u201d, \u201cDaemon response did not include the requested real output,\u201d or several potential others.</p>\n\n<p>If the user clicks OK and tries again, then the wallet will sample NEW mixins and include them along with the response. For example, </p>\n<pre class=\"highlight plaintext\"><code>  { 772573, 829705, 1138406, \u2026, 4238645, \n  4239971, **4240066**, 4240661, 4241277, \u2026}\n  (58 in total)\n</code></pre>\n<p>Notice that only ONE of the requested gidxs is the same in both queries, and it happens to be the real one.</p>\n\n<p>This is an active attack, and involves showing an error message to the client. This would likely raise suspicion if occurred many times in a row. However, since the transaction goes through without error on the second request, used sparingly the attack may not raise suspicion. This attack could also be performed by a man-in-the-middle or on-path attacker (e.g., an ISP or the starbucks wifi), since connections between a monero client and remote node are over unauthenticated HTTP.</p>\n\n<p>The root cause of this hazard is that Monero wallets cannot determine whether the response from remote nodes. Other variations of this attack are possible but are lower yield for the attacker (they only provide useful information some of the time). In particular, instead of returning invalid data, the attacker could guess which input is the real one and just return a bogus response for that one. </p>\n", 
            "type": "Activities::Comment", 
            "id": 2478428, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-10T21:56:24.545Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-10T21:56:24.545Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Here's a monero address for any bug bounty, thank you for your consideration!\n4DQPtabN9QEW3xhKJ3T2mjNPhnvoDvBRjLRASKr3b58dT2PniYtYwNzfFBrPBamkNA21bCSDuVHk5CHxJy3cBEKL1yox67B3ob6BMZ4FyZ\nI've sent a note containing the draft above to gingeropolous via reddit as well.", 
            "markdown_message": "<p>Here&#39;s a monero address for any bug bounty, thank you for your consideration!<br>\n4DQPtabN9QEW3xhKJ3T2mjNPhnvoDvBRjLRASKr3b58dT2PniYtYwNzfFBrPBamkNA21bCSDuVHk5CHxJy3cBEKL1yox67B3ob6BMZ4FyZ<br>\nI&#39;ve sent a note containing the draft above to gingeropolous via reddit as well.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2480110, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-11T17:22:12.955Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-11T17:22:12.955Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "How about Tuesday at 1900 GMT?\n\nI contacted gingeropolous and proposed changes to the moneroworld.com documentation to highlight this risk, he responded quickly and said sure just say when.\n\nI will also make a pull-request for monero-site to add a similar brief warning to this guide:\nhttps://getmonero.org/resources/user-guides/remote_node_gui.html\nsomething like an italicized warning \"Caution: using a public remote node does not provide the same guarantees as running your own remote node.\"", 
            "markdown_message": "<p>How about Tuesday at 1900 GMT?</p>\n\n<p>I contacted gingeropolous and proposed changes to the moneroworld.com documentation to highlight this risk, he responded quickly and said sure just say when.</p>\n\n<p>I will also make a pull-request for monero-site to add a similar brief warning to this guide:<br>\n<a title=\"https://getmonero.org/resources/user-guides/remote_node_gui.html\" href=\"/redirect?signature=f547ccffd87545d0ed6b78384e929ef76c1c2174&amp;url=https%3A%2F%2Fgetmonero.org%2Fresources%2Fuser-guides%2Fremote_node_gui.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://getmonero.org/resources/user-guides/remote_node_gui.html</span><i class=\"icon-external-link\"></i></a><br>\nsomething like an italicized warning &quot;Caution: using a public remote node does not provide the same guarantees as running your own remote node.&quot;</p>\n", 
            "type": "Activities::Comment", 
            "id": 2481061, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-14T19:44:07.824Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-14T19:44:07.824Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": ">How about Tuesday at 1900 GMT?\n\nWe did not agree to a disclosure date and you [went ahead and posted](https://www.reddit.com/r/Monero/comments/84810s/psa_tracing_attacks_could_be_possible_when_using/) regardless. Not cool. We were waiting for a final review from the team. In the future, please respect the VRP as we were well within the parameters of time constraint.", 
            "markdown_message": "<blockquote>\n<p>How about Tuesday at 1900 GMT?</p>\n</blockquote>\n\n<p>We did not agree to a disclosure date and you <a href=\"/redirect?signature=62e527839a13cbdcbcf93760d692b69581f09cdb&amp;url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMonero%2Fcomments%2F84810s%2Fpsa_tracing_attacks_could_be_possible_when_using%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>went ahead and posted</span><i class=\"icon-external-link\"></i></a> regardless. Not cool. We were waiting for a final review from the team. In the future, please respect the VRP as we were well within the parameters of time constraint.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2492959, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-15T09:40:13.343Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T09:40:13.343Z", 
            "actor": {
                "username": "moneromooo", 
                "url": "/moneromooo", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "The text looks OK to me. A good place to put this is also monero.stackexchange.com. Just one minor thing:\n\n> The root cause of this hazard is that Monero wallets cannot determine whether the response from remote nodes\n\nThat sentence near the end is incomplete.\n\nSorry for the delay.", 
            "markdown_message": "<p>The text looks OK to me. A good place to put this is also monero.stackexchange.com. Just one minor thing:</p>\n\n<blockquote>\n<p>The root cause of this hazard is that Monero wallets cannot determine whether the response from remote nodes</p>\n</blockquote>\n\n<p>That sentence near the end is incomplete.</p>\n\n<p>Sorry for the delay.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2494563, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-15T13:34:48.260Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T13:34:48.260Z", 
            "actor": {
                "username": "monero-hax123", 
                "url": "/monero-hax123", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "@anonimal sorry about that, I interpreted your last message as a go ahead, and did not realize you were continuing to review w/ the team", 
            "markdown_message": "<p><a href=\"/anonimal\">@anonimal</a> sorry about that, I interpreted your last message as a go ahead, and did not realize you were continuing to review w/ the team</p>\n", 
            "type": "Activities::Comment", 
            "id": 2495617, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "monero-hax123", 
                "url": "/monero-hax123"
            }, 
            "created_at": "2018-03-15T15:45:23.861Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T15:45:23.861Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Bounty should be dispersed within a week but no later than 45 days per the VRP.", 
            "markdown_message": "<p>Bounty should be dispersed within a week but no later than 45 days per the VRP.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 2496049, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-15T15:47:21.676Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T15:47:21.676Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2496054, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-15T20:37:05.041Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T20:37:05.041Z", 
            "actor": {
                "username": "luigi1111w", 
                "url": "/luigi1111w", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "Sent 10 XMR, <8ab4579d98b1c56ce3a6f0acdfabb11efddea6599ae42324ca78ed874b023350>", 
            "markdown_message": "<p>Sent 10 XMR, &lt;8ab4579d98b1c56ce3a6f0acdfabb11efddea6599ae42324ca78ed874b023350&gt;</p>\n", 
            "type": "Activities::Comment", 
            "id": 2497001, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "monero-hax123", 
                "url": "/monero-hax123"
            }, 
            "created_at": "2018-03-15T20:40:34.208Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-15T20:40:34.208Z", 
            "actor": {
                "url": "/monero", 
                "profile": {
                    "name": "Monero"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/007/731/3428da1efb473c529a0d2e5836012a846f8b8d1e_medium.png?1484006970"
                }
            }, 
            "team_handle": "monero", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::SwagAwarded", 
            "id": 2497011, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-16T22:10:21.863Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-16T22:10:21.863Z", 
            "actor": {
                "username": "anonimal", 
                "url": "/anonimal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/857/5d3774e5d965a4122d4364133d467ea77fc31acd_medium.png?1449305173"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "monero", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2500243, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "monero-hax123", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/monero-hax123", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 46, 
        "name": "Privacy Violation"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -20414327.083385527, 
    "disclosed_at": "2018-03-16T22:10:21.957Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/304770", 
    "created_at": "2018-01-14T21:22:24.574Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Dear Monero security team,<br>\n    We\u2019re writing to disclose a privacy vulnerability when using monero-cli or monero-gui with an untrusted remote node.</p>\n\n<p>When using a remote node, the Monero client relies on the node to provide information from the blockchain, in particular the public keys and transaction outputs corresponding to mixins that the client chooses by global index (gidx). The client selects a handful of gidxs, and passes these in a request to the \u201cget_outs.bin\u201d RPC endpoint. The client is generally designed to provide <em>untraceability</em> even against the untrusted remote node, e.g. by masking which index in the request is the real one being spent. However, if the remote node provides an invalid response then the client may end up inadvertently revealing information about the real gidx being spent.</p>\n\n<p>In more detail there, we&#39;ve made a proof-of-concept of two forms of this attack:</p>\n\n<h1 id=\"1-retry-and-intersect-attack\">1 Retry-and-intersect attack.</h1>\n\n<p>====<br>\nIf the attacker remote node returns bogus data, and the user <em>retries the same transaction</em> after clicking through the error message, it most likely reveals to the remote node exactly which coin in the transaction is the real one being spent.</p>\n\n<ol>\n<li><p>The attacker modifies monerod to return all bogus public keys in response to the first \u201cget_outs.bin\u201d request.</p></li>\n<li><p>The client reports an error that invalid data was received, but does not disconnect from the remote node or otherwise change its behavior. The outputs remain available for use.</p></li>\n<li><p>If the user dismisses the error and then tries the same transaction again, then the client samples a <em>new set of mixins</em> to request along with the real output again.</p></li>\n<li><p>The remote node looks at the two requests. Most likely, there is a unique intersection between the two sets of requested gidxs, which corresponds to the real transaction output.</p></li>\n<li><p>The remote node responds to the second request with correct data, so the transaction goes through.<br>\nAs a proof of concept, we tested this 10 times with a monero-cli and our own modified monerod, and found that the correct output was detected in each trial. It is possible that two such requests do not have a unique intersection, but this appears to happen with low frequency.</p></li>\n</ol>\n\n<p>This is an active attack, and involves showing an error message to the client. This would likely raise suspicion if occurred many times in a row. However, since the transaction goes through without error on the second request, used sparingly it may not raise suspicion.</p>\n\n<h1 id=\"2-guess-and-check-attack\">2 Guess-and-check attack</h1>\n\n<p>====<br>\nIf the remote node returns bogus data for some but not all of of the requested gidxs, then by observing the client\u2019s behavior it can tell whether the real transaction input is one of the bogus ones or not.</p>\n\n<ol>\n<li>The attacker modifies monerod to return bogus public keys for all but one of the requested gidxs. There are two cases, depending on whether the real transaction input is one of the bogus ones.</li>\n</ol>\n\n<p>2a. The real input is one of the bogus public keys.<br>\n   The client is able to identify the incorrect response. It throws an exception, and will not sign and transmit any transaction (until after making subsequent get_out.bin requests). The attacker learns that the real transaction input is not one of the bogus ones.</p>\n\n<p>2b. The real input corresponds to the non-bogus response</p>\n\n<p>The wallet is unable to discover that the response is invalid, and therefore proceeds to sign and transmit the transaction to the remote node. The attacker learns that the real transaction input is the bogus one.</p>\n\n<p>Since the transaction is invalid, it will not show up on the blockchain. However, the client stores the transaction in the wallet as \u201cpending\u201d, such that its transaction inputs will not be reused again for 24 hours.</p>\n\n<p>Because the client requests many more public keys than it actually needs for mixins (e.g., a default of 58 gidx requested for a ring size of 5), the probability of succeeding is small but non-negligible. If the attack fails (case 2a), the attacker cannot easily \u201ctry again\u201d, since the transaction inputs are unavailable for 24 hours. (However, we note that this behavior could also be considered a DoS vector for a remote node, and hence we imagine there could be a pressure to change this behavior, trading off privacy for DoS-resilience.)</p>\n\n<h1 id=\"attacks-exacerbated-by-unauthenticated-rpc\">Attacks exacerbated by unauthenticated RPC</h1>\n\n<p>We have described these two attack scenarios from the point of view of a corrupted remote node. However, because data between clients and the remote node is not authenticated (http json rather than https), this attack could also be performed by any on-path adversary (such as a router or ISP)</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<h1 id=\"severity\">Severity:</h1>\n\n<p>The first of the two attacks is more severe, since the attacker can trace the transaction inputs with high probability while raising minimal suspicion to the user. We therefore recommend immediately implementing mitigations 1-3 as suggested below. The second attack type is less severe, since it has a smaller chance of success and cannot easily be repeated multiple times to increase the chance.<br>\nRemote node operation can be considered a \u201cnon-default\u201d configuration, which is a mitigating factor. However, it is clear that many users would prefer a light client for administrative and performance reasons (it takes a while to sync a full node). Instructions for remote node operation appear on the getmonero.org user guides page, and infrastructure support is increasing (e.g., there are several \u201copen nodes\u201d services that provide lists of available remote nodes to connect to). So we think it is likely that this usage mode will see increased use in the near future. Statistics from moneroworld could be requested to estimate the popularity of this configuration.</p>\n\n<p>The instructions at MoneroWorld <a title=\"https://moneroworld.com/#nodes\" href=\"/redirect?signature=6305d87b81b7274dc5b7faecc6f0d30f8d63a68f&amp;url=https%3A%2F%2Fmoneroworld.com%2F%23nodes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://moneroworld.com/#nodes</span><i class=\"icon-external-link\"></i></a> do stress that remote nodes is not the recommended mode of operation and could lead to additional privacy risks. However, the instructions explain \u201cthe primary risk is that a remote node can get your IP address.\u201d Hence we think it is likely that users may follow these instructions, and even take precautions to shield their IP address (e.g., use Tor), but still fail to achieve the untraceability they expect. The instructions at getmonero do not provide warnings at all: <a title=\"https://getmonero.org/resources/user-guides/remote_node_gui.html\" href=\"/redirect?signature=f547ccffd87545d0ed6b78384e929ef76c1c2174&amp;url=https%3A%2F%2Fgetmonero.org%2Fresources%2Fuser-guides%2Fremote_node_gui.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://getmonero.org/resources/user-guides/remote_node_gui.html</span><i class=\"icon-external-link\"></i></a> )<br>\nTo our knowledge, this attack vector is new and has not been discussed before in forums or reddit.<br>\nWe suggest this should be considered MEDIUM severity according to the standards of the Vulnerability Response Process.</p>\n\n<h1 id=\"potential-mitigations\">Potential Mitigations</h1>\n\n<ol>\n<li><p><u>User warnings.</u> Any exceptions encountered in the RPC, after sending the list of gidxs to the remote node but prior to committing the transaction, should come with enhanced error messages warning about the potential of an active tracing attack. The instructions on using remote nodes should be expanded to warn the user in advance of this possibility against retrying a transaction. Statistics from moneroworld should be used to estimate the number of potentially affected users.</p></li>\n<li><p><u>Caching of get_outs requests.</u> After the client samples a list of gidxs associated with a transaction output, it should immediately commit these to a persistent data structure (similar to the pending transactions in the wallet). If the output is used again in a short time interval (because of an exception through in the get_outs.bin RPC query or for any other reason), then the exact same gidxs should be sampled. This directly prevents the intersection attack #1 described above, however it does nothing to address attack #2.</p></li>\n<li><p><u>Use a secure channel (TLS) between the client and remote node.</u> Communications should be JSON-RPC over HTTPS instead of over HTTP. Even opportunistic encryption (if the remote cannot be authenticated by a standard certificate) would require a network attacker to mount an active MitM first, which at least requires them to conduct a more invasive attack</p></li>\n<li><p><u>Disconnect &amp; blacklist remote node on failures.</u><br>\nBoth of the attacks involve a remote node sending corrupt information in response to get_outs. Immediately blacklisting the node upon such an event reduces the effectiveness of the attack. A caveat is that with several \u201copen nodes\u201d services, e.g. nodes.moneroworld.com, which DNS-resolve to multiple IP addresses of different volunteers, the blacklist should be at the IP level rather than the hostname level. This should only be implemented after mitigation 3, since otherwise it would allow on-path adversaries to cause honest remote nodes to be falsely blacklisted.</p></li>\n<li><p><u>Use authenticated data structures.</u> Although attack #2 is of lower severity, it is difficult to stamp out entirely. The general problem is that it is currently impossible for a client to authenticate get_outs.bin responses from a remote node except for public keys that it already knows, i.e. the real transaction input. Hence the differential behavior reveals information about the treal transaction inputs. A systematic mitigation would be to add an additional Merkle tree data structure to the Monero blockchain, indexed by gidx, that allows the client to authenticate responses to get_idx. We are currently working on a writeup about this mitigation, but the simpler mitigations could be employed in the meantime.</p></li>\n</ol>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://getmonero.org", 
            "about": " Monero: the secure, private, untraceable cryptocurrency", 
            "twitter_handle": "monerocurrency", 
            "name": "Monero"
        }, 
        "handle": "monero", 
        "url": "https://hackerone.com/monero", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/007/731/e9db7ce84f372b423c4d212b494be78c2e0a571e_small.png?1484006970", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/007/731/3428da1efb473c529a0d2e5836012a846f8b8d1e_medium.png?1484006970"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 7731, 
        "default_currency": "usd"
    }, 
    "is_published": false
}