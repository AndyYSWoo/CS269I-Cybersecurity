{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "eveeez", 
        "virgindad", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 195950, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-06-01T18:41:44.660Z", 
    "vulnerability_information": "The following is a copy of the bug report at https://bugs.php.net/bug.php?id=73832\n\n# Description\n\nThere was found a bug showing that PHP uses uninitialized memory during\ncalls to `unserialize()`. As the following report shows, the payload supplied\nto `unserialize()` may control this uninitialized memory region and thus may\nbe used to trick PHP into operating on faked objects and calling attacker\ncontrolled destructor function pointers. The supplied proof of concept exploit\npractically demonstrates the issue by executing arbitrary code solely by\npassing a specially crafted string to `unserialize()`. Even though this\nparticular demo exploit only works locally this flaw is very likely to also\nallow for remote code execution.\n\nThis bug was found using `afl-fuzz` / `afl-utils`.\n\n\n# Analysis\n\nThe following shows a short gdb dump of the flaw in a custom-built PHP (git\nmaster on 40727d7ce9) with debugging symbols ([1], [2]):\n\n    $ gdb ./sapi/cli/php\n    gdb> r test.php payload.master\n    [...]\n    Fatal error: Possible integer overflow in memory allocation (2736264714 * 32 + 32) in test.php on line 6\n\n    Program received signal SIGSEGV, Segmentation fault.\n    gdb> i r\n    rax            0x7ffff7fb673c\t140737353836348\n    rbx            0x3030303030303030\t3472328296227680304\n    rcx            0xf6d9\t63193\n    rdx            0x1cb8c30\t30116912\n    rsi            0x0\t0\n    rdi            0x3030303030303030\t3472328296227680304\n    rbp            0x30303030\t0x30303030\n    rsp            0x7fffffffc080\t0x7fffffffc080\n    r8             0x7ffff7fb6740\t140737353836352\n    r9             0x1cb4d00\t30100736\n    r10            0xeb\t235\n    r11            0x206\t518\n    r12            0x1c96ad8\t29977304\n    r13            0x30303030\t808464432\n    r14            0x7ffff167be00\t140737243495936\n    r15            0x3030303030303030\t3472328296227680304         << !!!\n    rip            0x10b63d7\t0x10b63d7 <zend_hash_destroy+327>\n    eflags         0x10202\t[ IF RF ]\n    cs             0x33\t51\n    ss             0x2b\t43\n    ds             0x0\t0\n    es             0x0\t0\n    fs             0x0\t0\n    gs             0x0\t0\n    gdb> x/i $rip\n    => 0x10b63d7 <zend_hash_destroy+327>:\tcallq  *%r15\n    gdb> bt\n    #0  0x00000000010b63d7 in zend_hash_destroy (ht=<optimized out>) at Zend/zend_hash.c:1233\n    #1  0x00000000010b7914 in zend_array_destroy (ht=0x7ffff167be00) at Zend/zend_hash.c:1293\n    #2  0x000000000106f59e in _zval_dtor_func (p=0x7ffff167be00) at Zend/zend_variables.c:43\n    #3  0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=<optimized out>) at Zend/zend_variables.h:49\n    #4  zend_array_destroy (ht=<optimized out>) at Zend/zend_hash.c:1303\n    #5  0x000000000106f59e in _zval_dtor_func (p=0x7ffff167bce8) at Zend/zend_variables.c:43\n    #6  0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=<optimized out>) at Zend/zend_variables.h:49\n    #7  zend_array_destroy (ht=<optimized out>) at Zend/zend_hash.c:1303\n    [...]\n    #83 0x000000000106f59e in _zval_dtor_func (p=0x7ffff1656540) at Zend/zend_variables.c:43\n    #84 0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=<optimized out>) at Zend/zend_variables.h:49\n    #85 zend_array_destroy (ht=<optimized out>) at Zend/zend_hash.c:1303\n    #86 0x000000000106f59e in _zval_dtor_func (p=0x7ffff1656428) at Zend/zend_variables.c:43\n    #87 0x00000000010b7323 in i_zval_ptr_dtor (zval_ptr=<optimized out>) at Zend/zend_variables.h:49\n    #88 zend_array_destroy (ht=<optimized out>) at Zend/zend_hash.c:1307\n    #89 0x0000000001137a3d in zend_object_std_dtor (object=0x7ffff165c960) at Zend/zend_objects.c:60\n    #90 0x0000000001147fdf in zend_objects_store_free_object_storage (objects=<optimized out>) at Zend/zend_objects_API.c:99\n    #91 0x000000000103ce3b in shutdown_executor () at Zend/zend_execute_API.c:359\n    #92 0x0000000001073599 in zend_deactivate () at Zend/zend.c:997\n    #93 0x0000000000f27ff1 in php_request_shutdown (dummy=<optimized out>) at main/main.c:1873\n    #94 0x0000000001355e25 in do_cli (argc=<optimized out>, argv=<optimized out>) at sapi/cli/php_cli.c:1161\n    #95 0x00000000013533d5 in main (argc=<optimized out>, argv=<optimized out>) at sapi/cli/php_cli.c:1387\n\nSome more in-depth debugging walk through follows:\n \n    $ gdb ./sapi/cli/php\n    gdb> b zend_hash_destroy\n    gdb> ign 1 2\n    gdb> r test.php payload.master\n    gdb> p ht\n    $6 = (HashTable *) 0x7ffff167be00\n    gdb> p *ht\n    $7 = {\n      gc = {\n        refcount = 0, \n        u = {\n          v = {\n            type = 1 '\\001', \n            flags = 0 '\\000', \n            gc_info = 32768\n          }, \n          type_info = 2147483649\n        }\n      }, \n      u = {\n        v = {\n          flags = 18 '\\022', \n          nApplyCount = 0 '\\000', \n          nIteratorsCount = 0 '\\000', \n          consistency = 0 '\\000'\n        }, \n        flags = 18\n      }, \n      nTableMask = 808464432, \n      arData = 0x3030303030303030, \n      nNumUsed = 808464432, \n      nNumOfElements = 808464432, \n      nTableSize = 808464432, \n      nInternalPointer = 808464432, \n      nNextFreeElement = 3472328296227680304, \n      pDestructor = 0x3030303030303030\n    }\n    gdb> awatch *0x7ffff167be00\n    gdb> dis 1\n    gdb> r\n    Hardware access (read/write) watchpoint 2: *0x7ffff167be00\n    Value = 808464432\n    0x00007ffff5103d44 in __memmove_sse2_unaligned_erms () from /usr/lib/libc.so.6\n    gdb> x/20x 0x00007ffff167be00\n    0x7ffff167be00:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be10:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be20:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be30:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be40:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    gdb> c // (multiple times)\n    [...]\n    Hardware access (read/write) watchpoint 2: *0x7ffff167be00\n\n    Value = -244859336\n    0x0000000000fdcacb in zend_mm_alloc_small (size=<optimized out>, heap=<optimized out>, bin_num=<optimized out>) at Zend/zend_alloc.c:1261\n    1261\t\t\theap->free_slot[bin_num] = p->next_free_slot;\n    >>> bt\n    #0  0x0000000000fdcacb in zend_mm_alloc_small (size=<optimized out>, heap=<optimized out>, bin_num=<optimized out>) at Zend/zend_alloc.c:1261\n    #1  _emalloc_56 () at Zend/zend_alloc.c:2336\n    #2  0x000000000107f6f7 in _array_init (arg=0x7ffff16673c0, size=2736264714) at Zend/zend_API.c:1060\n    #3  0x0000000000e23888 in php_var_unserialize_internal (rval=<optimized out>, p=<optimized out>, max=<optimized out>, var_hash=<optimized out>) at ext/standard/var_unserializer.re:788\n\nFrom the above backtrace one can see PHP tries to allocate memory for a\n`zend_array` of very large length corresponding to `a:9000111000000010:{...`\nin `payload.master` ([2]).\nThis allocation fails a bit later because of an integer overflow in the size\nparameter that is detected in `zend_hash_check_size()` called from\n`_zend_hash_init()`. As soon as this overflow is detected, PHP starts to\nshut down. At this point the contents of the partially initialized `zend_array`\nlook as follows:\n\n    gdb> c\n    Fatal error: Possible integer overflow in memory allocation (2736264714 * 32 + 32) in test.php on line 6\n    Hardware access (read/write) watchpoint 2: *0x7ffff167be00\n\n    Value = 1\n    0x00000000010b6f6e in i_zval_ptr_dtor (zval_ptr=<optimized out>) at Zend/zend_variables.h:48\n    48\t\t\tif (!--GC_REFCOUNT(ref)) {\n    gdb> x/16x 0x00007ffff167be00\n    0x7ffff167be00:\t0x00000001\t0x00008007\t0x00000012\t0x30303030\n    0x7ffff167be10:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be20:\t0x30303030\t0x30303030\t0x30303030\t0x30303030\n    0x7ffff167be30:\t0x30303030\t0x30303030\t0xf167be70\t0x00007fff \n\nDuring shutdown PHP attempts to destroy its internal objects as well as the\ncorrupted array shown above. Therefore at some point the arrays own destructor\ngets called from `zend_hash_destroy()` which was overwritten with user supplied\ncontents:\n \n```c\nZEND_API void ZEND_FASTCALL zend_hash_destroy(HashTable *ht)\n{\n// ...\n1231 \t\t\t\tif (HT_IS_WITHOUT_HOLES(ht)) {\n1232 \t\t\t\t\tdo {\n1233 \t\t\t\t\t\tht->pDestructor(&p->val);\n1234 \t\t\t\t\t} while (++p != end);\n1235 \t\t\t\t} else {\n// ...\n```\n\n\n# PoC\n\nThe following PoC exploit was developed for PHP 7.0.14 shipped with the\nArchlinux (x64) distribution:\n\n    $ uname -a\n    Linux box01 4.8.13-1-ARCH #1 SMP PREEMPT Fri Dec 9 07:24:34 CET 2016 x86_64 GNU/Linux\n    $ php --version\n    PHP 7.0.14 (cli) (built: Dec  7 2016 17:11:27) ( NTS )\n    Copyright (c) 1997-2016 The PHP Group\n    Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n\nFor the PoC `exploit.py` ([3]) to work you'll need the PHP test script\n`test.php` ([1]) as well as the master payload file `payload.master` ([2])\nto be placed in the same directory.\nThe PoC contains ROP gadgets for php-7.0.13-* and php-7.0.14 of Arch linux.\nUncomment them as needed.\n\n    $ python exploit.py\n    [............... <gnome-calculator pops open!> ......]\n\nUpon success `gnome-calculator` should be executed. You may want to replace\n`gnome-calculator` with sth. else like, f.e. `touch a` in `epxloit.py` in case\nyou want to test this without `gnome-calculator` present.\n\n\n# References\n\n[1](http://hlt99.blinkenshell.org/php/gfhd8763lkjdg3149nop1qyt/test.php)\n[2](http://hlt99.blinkenshell.org/php/gfhd8763lkjdg3149nop1qyt/payload.master)\n[3](http://hlt99.blinkenshell.org/php/gfhd8763lkjdg3149nop1qyt/exploit.py)\n\n\n# PHP versions known to be affected\n\n7.0.13 (Arch Linux)\n7.0.13-* (Arch Linux)\n7.0.14 (Arch Linux)\nmaster on Github (as of commit 40727d7ce9)\n\nVersions prior to 7.0.13 have not been tested.\n\n\n\n# Reporters\n\nrc0r <hlt99@blinkenshell.org>\nHenri Salo from Nixu Corporation\n\n\n# Thanks\n\nA very big thank you goes to Kapsi internet-k\u00e4ytt\u00e4j\u00e4t ry for providing\nvaluable fuzzing resources!", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "Team"
    }, 
    "title": "Use of uninitialized memory in unserialize()", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-07-01T18:41:44.738Z", 
    "state": "Closed", 
    "cve_ids": [
        "CVE-2017-5340"
    ], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-01-05T11:31:27.385Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-31T18:04:19.255Z", 
            "actor": {
                "username": "rc0r", 
                "url": "/rc0r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/153/fba7b238959b21ab47c816b08fcd463ce880a11f_medium.png?1457542865"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n* \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n* \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\nThanks!", 
            "markdown_message": "<p>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588<br>\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588</p>\n\n<ul>\n<li>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588</li>\n<li>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588</li>\n</ul>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1401290, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-18T16:26:21.023Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-18T16:26:21.023Z", 
            "actor": {
                "username": "rc0r", 
                "url": "/rc0r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/153/fba7b238959b21ab47c816b08fcd463ce880a11f_medium.png?1457542865"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "[CVE-2017-5340](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5340) was assigned for this issue.", 
            "markdown_message": "<p><a href=\"/redirect?signature=32d38dd060d3648f94644759b7927891eb4ffb92&amp;url=http%3A%2F%2Fcve.mitre.org%2Fcgi-bin%2Fcvename.cgi%3Fname%3DCVE-2017-5340\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>CVE-2017-5340</span><i class=\"icon-external-link\"></i></a> was assigned for this issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1427905, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-24T18:37:21.198Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-24T18:37:21.198Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "cve_ids": [
                "CVE-2017-5340"
            ], 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::CveIdAdded", 
            "id": 1698599, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-24T18:39:31.314Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-24T18:39:31.314Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium", 
                "old_severity": "High"
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1698606, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "rc0r", 
                "url": "/rc0r"
            }, 
            "created_at": "2017-05-24T18:39:46.265Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-24T18:39:46.265Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1698607, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-05-24T18:43:14.171Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-31T18:04:44.118Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "bonus_amount": "0.0", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "rc0r", 
                "url": "/rc0r"
            }, 
            "message": "Downgraded from \"High\" to \"Medium\" as [unserialize](http://php.net/manual/en/function.unserialize.php) issues are classified there based upon the current [PHP security classification](https://wiki.php.net/security#medium_severity).\n\n> \u2588\u2588\u2588\u2588\u2588\u2588\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\nThank you for the finding and your patience!", 
            "markdown_message": "<p>Downgraded from &quot;High&quot; to &quot;Medium&quot; as <a href=\"/redirect?signature=bba882b2c85bd13c4a1f4ab15b2bb1cc3c456d91&amp;url=http%3A%2F%2Fphp.net%2Fmanual%2Fen%2Ffunction.unserialize.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>unserialize</span><i class=\"icon-external-link\"></i></a> issues are classified there based upon the current <a href=\"/redirect?signature=41fc83f186711063e57e20e6cd8e3aaa4dce02ec&amp;url=https%3A%2F%2Fwiki.php.net%2Fsecurity%23medium_severity\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>PHP security classification</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<blockquote>\n<p>\u2588\u2588\u2588\u2588\u2588\u2588</p>\n</blockquote>\n\n<p>\u2588\u2588\u2588\u2588\u2588\u2588\u2588</p>\n\n<p>Thank you for the finding and your patience!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1698618, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-31T05:59:39.813Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-31T05:59:39.813Z", 
            "actor": {
                "username": "rc0r", 
                "url": "/rc0r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/153/fba7b238959b21ab47c816b08fcd463ce880a11f_medium.png?1457542865"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "Before publicly disclosing this report could you please redact the non-technical comments to the report?\n\nThanks, rc0r!", 
            "markdown_message": "<p>Before publicly disclosing this report could you please redact the non-technical comments to the report?</p>\n\n<p>Thanks, rc0r!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1715034, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-31T18:05:19.207Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-31T18:05:19.207Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "@rc0r - No problem. Sufficiently redacted now?", 
            "markdown_message": "<p><a href=\"/rc0r\">@rc0r</a> - No problem. Sufficiently redacted now?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1717191, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-01T12:39:22.263Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-01T12:39:22.263Z", 
            "actor": {
                "username": "rc0r", 
                "url": "/rc0r", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/153/fba7b238959b21ab47c816b08fcd463ce880a11f_medium.png?1457542865"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "Yes, thank you!", 
            "markdown_message": "<p>Yes, thank you!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1721004, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-01T18:41:44.691Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-01T18:41:44.691Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1722564, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-01T18:41:51.225Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-01T18:41:51.225Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1722565, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "rc0r", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/rc0r", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/153/eb232471153ab2f2efb7a0df7cc970b1e9627d1a_small.png?1457542865"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -45201369.95262765, 
    "disclosed_at": "2017-06-01T18:41:51.251Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/195950", 
    "created_at": "2017-01-05T11:24:39.937Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>The following is a copy of the bug report at <a title=\"https://bugs.php.net/bug.php?id=73832\" href=\"/redirect?signature=612f09c680c2b87b6e027b2aa5e4dbc2d56bac70&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D73832\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bugs.php.net/bug.php?id=73832</span><i class=\"icon-external-link\"></i></a></p>\n\n<h1 id=\"description\">Description</h1>\n\n<p>There was found a bug showing that PHP uses uninitialized memory during<br>\ncalls to <code>unserialize()</code>. As the following report shows, the payload supplied<br>\nto <code>unserialize()</code> may control this uninitialized memory region and thus may<br>\nbe used to trick PHP into operating on faked objects and calling attacker<br>\ncontrolled destructor function pointers. The supplied proof of concept exploit<br>\npractically demonstrates the issue by executing arbitrary code solely by<br>\npassing a specially crafted string to <code>unserialize()</code>. Even though this<br>\nparticular demo exploit only works locally this flaw is very likely to also<br>\nallow for remote code execution.</p>\n\n<p>This bug was found using <code>afl-fuzz</code> / <code>afl-utils</code>.</p>\n\n<h1 id=\"analysis\">Analysis</h1>\n\n<p>The following shows a short gdb dump of the flaw in a custom-built PHP (git<br>\nmaster on 40727d7ce9) with debugging symbols ([1], [2]):</p>\n<pre class=\"highlight plaintext\"><code>$ gdb ./sapi/cli/php\ngdb&gt; r test.php payload.master\n[...]\nFatal error: Possible integer overflow in memory allocation (2736264714 * 32 + 32) in test.php on line 6\n\nProgram received signal SIGSEGV, Segmentation fault.\ngdb&gt; i r\nrax            0x7ffff7fb673c   140737353836348\nrbx            0x3030303030303030   3472328296227680304\nrcx            0xf6d9   63193\nrdx            0x1cb8c30    30116912\nrsi            0x0  0\nrdi            0x3030303030303030   3472328296227680304\nrbp            0x30303030   0x30303030\nrsp            0x7fffffffc080   0x7fffffffc080\nr8             0x7ffff7fb6740   140737353836352\nr9             0x1cb4d00    30100736\nr10            0xeb 235\nr11            0x206    518\nr12            0x1c96ad8    29977304\nr13            0x30303030   808464432\nr14            0x7ffff167be00   140737243495936\nr15            0x3030303030303030   3472328296227680304         &lt;&lt; !!!\nrip            0x10b63d7    0x10b63d7 &lt;zend_hash_destroy+327&gt;\neflags         0x10202  [ IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\ngdb&gt; x/i $rip\n=&gt; 0x10b63d7 &lt;zend_hash_destroy+327&gt;:   callq  *%r15\ngdb&gt; bt\n#0  0x00000000010b63d7 in zend_hash_destroy (ht=&lt;optimized out&gt;) at Zend/zend_hash.c:1233\n#1  0x00000000010b7914 in zend_array_destroy (ht=0x7ffff167be00) at Zend/zend_hash.c:1293\n#2  0x000000000106f59e in _zval_dtor_func (p=0x7ffff167be00) at Zend/zend_variables.c:43\n#3  0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=&lt;optimized out&gt;) at Zend/zend_variables.h:49\n#4  zend_array_destroy (ht=&lt;optimized out&gt;) at Zend/zend_hash.c:1303\n#5  0x000000000106f59e in _zval_dtor_func (p=0x7ffff167bce8) at Zend/zend_variables.c:43\n#6  0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=&lt;optimized out&gt;) at Zend/zend_variables.h:49\n#7  zend_array_destroy (ht=&lt;optimized out&gt;) at Zend/zend_hash.c:1303\n[...]\n#83 0x000000000106f59e in _zval_dtor_func (p=0x7ffff1656540) at Zend/zend_variables.c:43\n#84 0x00000000010b708e in i_zval_ptr_dtor (zval_ptr=&lt;optimized out&gt;) at Zend/zend_variables.h:49\n#85 zend_array_destroy (ht=&lt;optimized out&gt;) at Zend/zend_hash.c:1303\n#86 0x000000000106f59e in _zval_dtor_func (p=0x7ffff1656428) at Zend/zend_variables.c:43\n#87 0x00000000010b7323 in i_zval_ptr_dtor (zval_ptr=&lt;optimized out&gt;) at Zend/zend_variables.h:49\n#88 zend_array_destroy (ht=&lt;optimized out&gt;) at Zend/zend_hash.c:1307\n#89 0x0000000001137a3d in zend_object_std_dtor (object=0x7ffff165c960) at Zend/zend_objects.c:60\n#90 0x0000000001147fdf in zend_objects_store_free_object_storage (objects=&lt;optimized out&gt;) at Zend/zend_objects_API.c:99\n#91 0x000000000103ce3b in shutdown_executor () at Zend/zend_execute_API.c:359\n#92 0x0000000001073599 in zend_deactivate () at Zend/zend.c:997\n#93 0x0000000000f27ff1 in php_request_shutdown (dummy=&lt;optimized out&gt;) at main/main.c:1873\n#94 0x0000000001355e25 in do_cli (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at sapi/cli/php_cli.c:1161\n#95 0x00000000013533d5 in main (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at sapi/cli/php_cli.c:1387\n</code></pre>\n<p>Some more in-depth debugging walk through follows:</p>\n<pre class=\"highlight plaintext\"><code>$ gdb ./sapi/cli/php\ngdb&gt; b zend_hash_destroy\ngdb&gt; ign 1 2\ngdb&gt; r test.php payload.master\ngdb&gt; p ht\n$6 = (HashTable *) 0x7ffff167be00\ngdb&gt; p *ht\n$7 = {\n  gc = {\n    refcount = 0, \n    u = {\n      v = {\n        type = 1 &#39;\\001&#39;, \n        flags = 0 &#39;\\000&#39;, \n        gc_info = 32768\n      }, \n      type_info = 2147483649\n    }\n  }, \n  u = {\n    v = {\n      flags = 18 &#39;\\022&#39;, \n      nApplyCount = 0 &#39;\\000&#39;, \n      nIteratorsCount = 0 &#39;\\000&#39;, \n      consistency = 0 &#39;\\000&#39;\n    }, \n    flags = 18\n  }, \n  nTableMask = 808464432, \n  arData = 0x3030303030303030, \n  nNumUsed = 808464432, \n  nNumOfElements = 808464432, \n  nTableSize = 808464432, \n  nInternalPointer = 808464432, \n  nNextFreeElement = 3472328296227680304, \n  pDestructor = 0x3030303030303030\n}\ngdb&gt; awatch *0x7ffff167be00\ngdb&gt; dis 1\ngdb&gt; r\nHardware access (read/write) watchpoint 2: *0x7ffff167be00\nValue = 808464432\n0x00007ffff5103d44 in __memmove_sse2_unaligned_erms () from /usr/lib/libc.so.6\ngdb&gt; x/20x 0x00007ffff167be00\n0x7ffff167be00: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be10: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be20: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be30: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be40: 0x30303030  0x30303030  0x30303030  0x30303030\ngdb&gt; c // (multiple times)\n[...]\nHardware access (read/write) watchpoint 2: *0x7ffff167be00\n\nValue = -244859336\n0x0000000000fdcacb in zend_mm_alloc_small (size=&lt;optimized out&gt;, heap=&lt;optimized out&gt;, bin_num=&lt;optimized out&gt;) at Zend/zend_alloc.c:1261\n1261            heap-&gt;free_slot[bin_num] = p-&gt;next_free_slot;\n&gt;&gt;&gt; bt\n#0  0x0000000000fdcacb in zend_mm_alloc_small (size=&lt;optimized out&gt;, heap=&lt;optimized out&gt;, bin_num=&lt;optimized out&gt;) at Zend/zend_alloc.c:1261\n#1  _emalloc_56 () at Zend/zend_alloc.c:2336\n#2  0x000000000107f6f7 in _array_init (arg=0x7ffff16673c0, size=2736264714) at Zend/zend_API.c:1060\n#3  0x0000000000e23888 in php_var_unserialize_internal (rval=&lt;optimized out&gt;, p=&lt;optimized out&gt;, max=&lt;optimized out&gt;, var_hash=&lt;optimized out&gt;) at ext/standard/var_unserializer.re:788\n</code></pre>\n<p>From the above backtrace one can see PHP tries to allocate memory for a<br>\n<code>zend_array</code> of very large length corresponding to <code>a:9000111000000010:{...</code><br>\nin <code>payload.master</code> ([2]).<br>\nThis allocation fails a bit later because of an integer overflow in the size<br>\nparameter that is detected in <code>zend_hash_check_size()</code> called from<br>\n<code>_zend_hash_init()</code>. As soon as this overflow is detected, PHP starts to<br>\nshut down. At this point the contents of the partially initialized <code>zend_array</code><br>\nlook as follows:</p>\n<pre class=\"highlight plaintext\"><code>gdb&gt; c\nFatal error: Possible integer overflow in memory allocation (2736264714 * 32 + 32) in test.php on line 6\nHardware access (read/write) watchpoint 2: *0x7ffff167be00\n\nValue = 1\n0x00000000010b6f6e in i_zval_ptr_dtor (zval_ptr=&lt;optimized out&gt;) at Zend/zend_variables.h:48\n48          if (!--GC_REFCOUNT(ref)) {\ngdb&gt; x/16x 0x00007ffff167be00\n0x7ffff167be00: 0x00000001  0x00008007  0x00000012  0x30303030\n0x7ffff167be10: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be20: 0x30303030  0x30303030  0x30303030  0x30303030\n0x7ffff167be30: 0x30303030  0x30303030  0xf167be70  0x00007fff \n</code></pre>\n<p>During shutdown PHP attempts to destroy its internal objects as well as the<br>\ncorrupted array shown above. Therefore at some point the arrays own destructor<br>\ngets called from <code>zend_hash_destroy()</code> which was overwritten with user supplied<br>\ncontents:</p>\n<pre class=\"highlight c\"><code><span class=\"n\">ZEND_API</span> <span class=\"kt\">void</span> <span class=\"n\">ZEND_FASTCALL</span> <span class=\"nf\">zend_hash_destroy</span><span class=\"p\">(</span><span class=\"n\">HashTable</span> <span class=\"o\">*</span><span class=\"n\">ht</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"c1\">// ...\n</span><span class=\"mi\">1231</span>                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">HT_IS_WITHOUT_HOLES</span><span class=\"p\">(</span><span class=\"n\">ht</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n<span class=\"mi\">1232</span>                    <span class=\"k\">do</span> <span class=\"p\">{</span>\n<span class=\"mi\">1233</span>                        <span class=\"n\">ht</span><span class=\"o\">-&gt;</span><span class=\"n\">pDestructor</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">val</span><span class=\"p\">);</span>\n<span class=\"mi\">1234</span>                    <span class=\"p\">}</span> <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"o\">++</span><span class=\"n\">p</span> <span class=\"o\">!=</span> <span class=\"n\">end</span><span class=\"p\">);</span>\n<span class=\"mi\">1235</span>                <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n<span class=\"c1\">// ...\n</span></code></pre>\n<h1 id=\"poc\">PoC</h1>\n\n<p>The following PoC exploit was developed for PHP 7.0.14 shipped with the<br>\nArchlinux (x64) distribution:</p>\n<pre class=\"highlight plaintext\"><code>$ uname -a\nLinux box01 4.8.13-1-ARCH #1 SMP PREEMPT Fri Dec 9 07:24:34 CET 2016 x86_64 GNU/Linux\n$ php --version\nPHP 7.0.14 (cli) (built: Dec  7 2016 17:11:27) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n</code></pre>\n<p>For the PoC <code>exploit.py</code> ([3]) to work you&#39;ll need the PHP test script<br>\n<code>test.php</code> ([1]) as well as the master payload file <code>payload.master</code> ([2])<br>\nto be placed in the same directory.<br>\nThe PoC contains ROP gadgets for php-7.0.13-* and php-7.0.14 of Arch linux.<br>\nUncomment them as needed.</p>\n<pre class=\"highlight plaintext\"><code>$ python exploit.py\n[............... &lt;gnome-calculator pops open!&gt; ......]\n</code></pre>\n<p>Upon success <code>gnome-calculator</code> should be executed. You may want to replace<br>\n<code>gnome-calculator</code> with sth. else like, f.e. <code>touch a</code> in <code>epxloit.py</code> in case<br>\nyou want to test this without <code>gnome-calculator</code> present.</p>\n\n<h1 id=\"references\">References</h1>\n\n<p><a href=\"/redirect?signature=808b41ef72888acff8f5fa3fabb5a0bf9763497f&amp;url=http%3A%2F%2Fhlt99.blinkenshell.org%2Fphp%2Fgfhd8763lkjdg3149nop1qyt%2Ftest.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>1</span><i class=\"icon-external-link\"></i></a><br>\n<a href=\"/redirect?signature=906bb4f71d0397ad092e6703495214cb1c71b2a1&amp;url=http%3A%2F%2Fhlt99.blinkenshell.org%2Fphp%2Fgfhd8763lkjdg3149nop1qyt%2Fpayload.master\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>2</span><i class=\"icon-external-link\"></i></a><br>\n<a href=\"/redirect?signature=8b689a67c9bf4924a6e4f58ab3ea39e5e367e7e0&amp;url=http%3A%2F%2Fhlt99.blinkenshell.org%2Fphp%2Fgfhd8763lkjdg3149nop1qyt%2Fexploit.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>3</span><i class=\"icon-external-link\"></i></a></p>\n\n<h1 id=\"php-versions-known-to-be-affected\">PHP versions known to be affected</h1>\n\n<p>7.0.13 (Arch Linux)<br>\n7.0.13-* (Arch Linux)<br>\n7.0.14 (Arch Linux)<br>\nmaster on Github (as of commit 40727d7ce9)</p>\n\n<p>Versions prior to 7.0.13 have not been tested.</p>\n\n<h1 id=\"reporters\">Reporters</h1>\n\n<p>rc0r <a title=\"hlt99@blinkenshell.org\" href=\"mailto:hlt99@blinkenshell.org\" rel=\"nofollow noopener noreferrer\">hlt99@blinkenshell.org</a><br>\nHenri Salo from Nixu Corporation</p>\n\n<h1 id=\"thanks\">Thanks</h1>\n\n<p>A very big thank you goes to Kapsi internet-k\u00e4ytt\u00e4j\u00e4t ry for providing<br>\nvaluable fuzzing resources!</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.php.net", 
            "about": "", 
            "twitter_handle": "", 
            "name": "PHP (IBB)"
        }, 
        "handle": "ibb-php", 
        "url": "https://hackerone.com/ibb-php", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/029/0a20311cece1ff1938eac3f9b09a6af056bc9e90_small.png?1385119730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 29, 
        "default_currency": "usd"
    }, 
    "is_published": false
}