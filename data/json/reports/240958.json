{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-07-07T12:43:25.776Z", 
    "voters": [
        "jokebookservice1", 
        "gerben_javado", 
        "eveeez", 
        "axolotl", 
        "babayaga_", 
        "japz", 
        "hacklad"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 240958, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-07-10T16:42:06.941Z", 
    "vulnerability_information": "Dear Yelp bug bounty team,\n\n# Summary\n---\n\n[Firefly](https://github.com/Yelp/firefly) is vulnerable to timing attacks, because the `verify_access_token()` function performs a byte-by-byte comparison, which terminates early when two characters do not match.\n\nTiming attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.\n\n~~~python\ndef verify_access_token(token, key):\n    \"\"\"Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\"\"\"\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n    return signature == expected_signature and int(t) >= int(time.time())\n~~~\n\nThe `==` operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed. An attacker can then create a valid HMAC without knowing the HMAC key.\n\n# How can this be fixed?\n---\n\nYou have already imported the hmac module, so this fix simply consists of changing one line.\n\n~~~diff\ndef verify_access_token(token, key):\n    \"\"\"Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature\"\"\"\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n-   return signature == expected_signature and int(t) >= int(time.time())\n+   return hmac.compare_digest(signature, expected_signature) and int(t) >= int(time.time())\n~~~\n\nThe `hmac.compare_digest()` function does not terminate as soon as two bytes are not the same.\n\nIf you would like me to submit a PR to address this issue, I would be more than happy to do that.\n\nBest regards,\nEd", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "Team"
    }, 
    "title": "Firefly's verify_access_token() function does a byte-by-byte comparison of HMAC values.", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-08-06T12:43:25.820Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-06-17T10:03:52.751Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-17T10:03:52.751Z", 
            "actor": {
                "url": "/yelp", 
                "profile": {
                    "name": "Yelp"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/545/07e1907beb162cc1aa6eae80dfc8a8757b6655bc_medium.png?1473896260"
                }
            }, 
            "team_handle": "yelp", 
            "message": "Hi there!\n\nThanks for submitting your report to us! Please expect a response within a week.\n\nBest,\nThe Yelp Security Team\n", 
            "markdown_message": "<p>Hi there!</p>\n\n<p>Thanks for submitting your report to us! Please expect a response within a week.</p>\n\n<p>Best,<br>\nThe Yelp Security Team</p>\n", 
            "type": "Activities::Comment", 
            "id": 1762952, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-26T17:44:35.623Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-26T17:44:35.623Z", 
            "actor": {
                "username": "5a37bf56c8", 
                "url": "/5a37bf56c8", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "message": "Hello @edio,\n\nThanks for submitting your report to us!\n\nThis codebase hasn't been touched in awhile. We'll take a look and get back to you once we have further updates.\n\nBest,\nThe Yelp Security Team", 
            "markdown_message": "<p>Hello <a href=\"/edio\">@edio</a>,</p>\n\n<p>Thanks for submitting your report to us!</p>\n\n<p>This codebase hasn&#39;t been touched in awhile. We&#39;ll take a look and get back to you once we have further updates.</p>\n\n<p>Best,<br>\nThe Yelp Security Team</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1781540, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "edoverflow", 
                "url": "/edoverflow"
            }, 
            "created_at": "2017-06-28T19:31:41.502Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-28T19:31:41.502Z", 
            "actor": {
                "username": "5a37bf56c8", 
                "url": "/5a37bf56c8", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "message": "Hello @edio,\n\nThanks for your report!\n\nWe don't use this open source project internally, but nonetheless pushed a fix.\n\nBest,\nThe Yelp Security Team", 
            "markdown_message": "<p>Hello <a href=\"/edio\">@edio</a>,</p>\n\n<p>Thanks for your report!</p>\n\n<p>We don&#39;t use this open source project internally, but nonetheless pushed a fix.</p>\n\n<p>Best,<br>\nThe Yelp Security Team</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1788336, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-28T19:31:53.451Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-28T19:31:53.451Z", 
            "actor": {
                "username": "5a37bf56c8", 
                "url": "/5a37bf56c8", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "None", 
                "old_severity": "Low (3.7)"
            }, 
            "team_handle": "yelp", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1788338, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-07T12:43:25.799Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-07T12:43:25.799Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1814023, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-10T10:09:07.340Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-10T10:09:07.340Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "message": "Hi @5a37bf56c8,\n\nCan we disclose this report publicly?\n\nBest regards,\nEd", 
            "markdown_message": "<p>Hi <a href=\"/5a37bf56c8\">@5a37bf56c8</a>,</p>\n\n<p>Can we disclose this report publicly?</p>\n\n<p>Best regards,<br>\nEd</p>\n", 
            "type": "Activities::Comment", 
            "id": 1819437, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-10T16:41:50.348Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-10T16:41:50.348Z", 
            "actor": {
                "url": "/yelp", 
                "profile": {
                    "name": "Yelp"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/545/07e1907beb162cc1aa6eae80dfc8a8757b6655bc_medium.png?1473896260"
                }
            }, 
            "team_handle": "yelp", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 1820941, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-10T16:42:06.964Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-10T16:42:06.964Z", 
            "actor": {
                "username": "5a37bf56c8", 
                "url": "/5a37bf56c8", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1820942, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-10T16:42:07.016Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-10T16:42:07.016Z", 
            "actor": {
                "username": "5a37bf56c8", 
                "url": "/5a37bf56c8", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "yelp", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1820943, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "edoverflow", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/edoverflow", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/116/374/2e86e29173a7b27dc4e4c35ecaef804781110b9f_small.png?1527882436"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 32, 
        "name": "Cryptographic Issues - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -42112343.77607393, 
    "disclosed_at": "2017-07-10T16:42:06.997Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/240958", 
    "created_at": "2017-06-17T10:03:52.550Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Dear Yelp bug bounty team,</p>\n\n<h1 id=\"summary\">Summary</h1>\n\n<hr>\n\n<p><a href=\"/redirect?signature=cc4f17b2fb8c959ace272e1fdef34ffc4aa039e1&amp;url=https%3A%2F%2Fgithub.com%2FYelp%2Ffirefly\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Firefly</span><i class=\"icon-external-link\"></i></a> is vulnerable to timing attacks, because the <code>verify_access_token()</code> function performs a byte-by-byte comparison, which terminates early when two characters do not match.</p>\n\n<p>Timing attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.</p>\n<pre class=\"highlight python\"><code><span class=\"k\">def</span> <span class=\"nf\">verify_access_token</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n    <span class=\"s\">&quot;&quot;&quot;Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature&quot;&quot;&quot;</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">token</span><span class=\"p\">[:</span><span class=\"mi\">15</span><span class=\"p\">]</span>\n    <span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">token</span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">:]</span>\n    <span class=\"n\">expected_signature</span> <span class=\"o\">=</span> <span class=\"n\">hmac</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">digestmod</span><span class=\"o\">=</span><span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">signature</span> <span class=\"o\">==</span> <span class=\"n\">expected_signature</span> <span class=\"ow\">and</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n</code></pre>\n<p>The <code>==</code> operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed. An attacker can then create a valid HMAC without knowing the HMAC key.</p>\n\n<h1 id=\"how-can-this-be-fixed\">How can this be fixed?</h1>\n\n<hr>\n\n<p>You have already imported the hmac module, so this fix simply consists of changing one line.</p>\n<pre class=\"highlight diff\"><code>def verify_access_token(token, key):\n    &quot;&quot;&quot;Verify that the given access token is still valid. Returns true if it is,\n    false if it either failed to validate or has expired.\n    A token is a combination of a unix timestamp and a signature&quot;&quot;&quot;\n    t = token[:15]\n    signature = token[15:]\n    expected_signature = hmac.new(key, msg=t, digestmod=hashlib.sha1).hexdigest()\n<span class=\"gd\">-   return signature == expected_signature and int(t) &gt;= int(time.time())\n</span><span class=\"gi\">+   return hmac.compare_digest(signature, expected_signature) and int(t) &gt;= int(time.time())\n</span></code></pre>\n<p>The <code>hmac.compare_digest()</code> function does not terminate as soon as two bytes are not the same.</p>\n\n<p>If you would like me to submit a PR to address this issue, I would be more than happy to do that.</p>\n\n<p>Best regards,<br>\nEd</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.yelp.com", 
            "about": "Connecting people to great local businesses in communities around the world.", 
            "twitter_handle": "", 
            "name": "Yelp"
        }, 
        "handle": "yelp", 
        "url": "https://hackerone.com/yelp", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/545/ab078775ffbecc3543e6a5495bd7cda1b80cb628_small.png?1473896260", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/545/07e1907beb162cc1aa6eae80dfc8a8757b6655bc_medium.png?1473896260"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 545, 
        "default_currency": "usd"
    }, 
    "is_published": false
}