{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2014-07-23T16:35:22.471Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 21064, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-07-23T16:40:23.369Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Back - Refresh - Attack To  Obtain User Credentials", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-08-22T16:35:22.553Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-07-22T18:19:32.691Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T18:19:32.691Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "How do you recommend we prevent this?", 
            "markdown_message": "<p>How do you recommend we prevent this?</p>\n", 
            "type": "Activities::Comment", 
            "id": 93636, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-22T18:23:28.075Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T18:23:28.075Z", 
            "actor": {
                "username": "xtross1", 
                "url": "/xtross1", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/210/e3915b6fbc2dfc425d0b6cf78e82cfd1c99d8f52_medium.jpg?1437045801"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "The following steps can be used: \n* An intermediate page can be used to prevent this from happening b/w registering and the main landing page\n* Look for redirection status (302 codes)\n* Redirect user back to landing page if he presses back button\n", 
            "markdown_message": "<p>The following steps can be used: </p>\n\n<ul>\n<li>An intermediate page can be used to prevent this from happening b/w registering and the main landing page</li>\n<li>Look for redirection status (302 codes)</li>\n<li>Redirect user back to landing page if he presses back button</li>\n</ul>\n", 
            "type": "Activities::Comment", 
            "id": 93640, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-22T18:35:51.304Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T18:35:51.304Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "This doesn't seem worth fixing. In general, if an attacker has access to a browser process with information in history, they can attack it directly. #13587 discusses an attack where the attacker simply inspects the process memory to retrieve the password.\n\nSimilarly, attackers with access to the process can just install a keylogger before you use the machine.\n\nUsing untrusted machines is inherently dangerous, and there are severe limits to the steps we can realistically take to protect users. We also already support two-factor auth, which is probably the best general-purpose mitigation against this class of attacks.", 
            "markdown_message": "<p>This doesn&#39;t seem worth fixing. In general, if an attacker has access to a browser process with information in history, they can attack it directly. <a href=\"/reports/13587\">#13587</a> discusses an attack where the attacker simply inspects the process memory to retrieve the password.</p>\n\n<p>Similarly, attackers with access to the process can just install a keylogger before you use the machine.</p>\n\n<p>Using untrusted machines is inherently dangerous, and there are severe limits to the steps we can realistically take to protect users. We also already support two-factor auth, which is probably the best general-purpose mitigation against this class of attacks.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 93658, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-22T18:41:56.458Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T18:41:56.458Z", 
            "actor": {
                "username": "xtross1", 
                "url": "/xtross1", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/210/e3915b6fbc2dfc425d0b6cf78e82cfd1c99d8f52_medium.jpg?1437045801"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "Well the vulnerability which you are describing regarding - obtaining user creds from memory is different attack which is used for forensics altogether.\n\nThe vulnerability exists on registration page hence 2F auth is of no use here.\n\nThis attack can be used POST the user has created an account. Hence if keylogger is not installed on the computer, he can still use this (web based vulnerability) technique to obtain user creds. On a hardened system (where USBs are disabled or EXEs are not allowed to run) , an attacker can simply use an addon - like tamerdata which is an XPI file to obtain creds, just because the application allows re-submission.\n", 
            "markdown_message": "<p>Well the vulnerability which you are describing regarding - obtaining user creds from memory is different attack which is used for forensics altogether.</p>\n\n<p>The vulnerability exists on registration page hence 2F auth is of no use here.</p>\n\n<p>This attack can be used POST the user has created an account. Hence if keylogger is not installed on the computer, he can still use this (web based vulnerability) technique to obtain user creds. On a hardened system (where USBs are disabled or EXEs are not allowed to run) , an attacker can simply use an addon - like tamerdata which is an XPI file to obtain creds, just because the application allows re-submission.</p>\n", 
            "type": "Activities::Comment", 
            "id": 93661, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T16:35:22.486Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T16:35:22.486Z", 
            "actor": {
                "username": "xtross1", 
                "url": "/xtross1", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/210/e3915b6fbc2dfc425d0b6cf78e82cfd1c99d8f52_medium.jpg?1437045801"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 94425, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T16:40:23.383Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T16:40:23.383Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 94435, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T16:40:23.472Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T16:40:23.472Z", 
            "actor": {
                "username": "epriestley", 
                "url": "/epriestley", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/043/67210f4155bb8999679d01c81406df1242df0f8c_medium.jpg?1383694450"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "phabricator", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 94436, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "xtross1", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/xtross1", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/210/0e0550e91f4345c00050c31e020a4687cc1eabb5_small.jpg?1437045801"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -135412138.70101517, 
    "disclosed_at": "2014-07-23T16:40:23.459Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/21064", 
    "created_at": "2014-07-22T18:14:57.958Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Back - refresh attack is attack which enables an adversary to obtain application credentials by going by to previous page and re-submitting the expired-document.</p>\n\n<p>How to perform:</p>\n\n<ol>\n<li>Register to https://&lt;some-site&gt;/auth/register/</li>\n<li>Once registered, press &quot;Back&quot; on the browser window. Now you&#39;ll see the &quot;Document Expired&quot; page.</li>\n<li>Now run an interceptor (burp/tamper data)</li>\n<li>Click &quot;Tray again&quot; on the web page</li>\n<li>Click &quot;Re-send data&quot;</li>\n<li>Watch the intercepted request.</li>\n</ol>\n\n<p>You&#39;ll observe that login credentials both email and passwords being resubmitted by browser get captured.</p>\n", 
    "vulnerability_information": "Back - refresh attack is attack which enables an adversary to obtain application credentials by going by to previous page and re-submitting the expired-document.\r\n\r\nHow to perform:\r\n1. Register to https://<some-site>/auth/register/\r\n2. Once registered, press \"Back\" on the browser window. Now you'll see the \"Document Expired\" page.\r\n3. Now run an interceptor (burp/tamper data)\r\n4. Click \"Tray again\" on the web page\r\n5. Click \"Re-send data\"\r\n6. Watch the intercepted request.\r\n\r\nYou'll observe that login credentials both email and passwords being resubmitted by browser get captured.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://phacility.com/phabricator/", 
            "about": "Phabricator is a collection of open source web applications that help software companies build better software.", 
            "twitter_handle": "phabricator", 
            "name": "Phabricator"
        }, 
        "handle": "phabricator", 
        "url": "https://hackerone.com/phabricator", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/018/8f0130b0439b00cdeeddd76246ec8063cac6495f_small.jpg?1487955532", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/018/29aa105aca62b26e62c64e57c902e5db2bb8daf6_medium.jpg?1487955532"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 18, 
        "default_currency": "usd"
    }, 
    "is_published": false
}