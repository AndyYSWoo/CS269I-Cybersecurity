{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-06-03T05:07:16.051Z", 
    "voters": [
        "eveeez", 
        "apapedulimu", 
        "m7mdharoun", 
        "spetr0x", 
        "oblivionx79x", 
        "sule"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 229577, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-06-02T09:54:10.718Z", 
    "vulnerability_information": "### Affected Domain:\nhttps://demo.weblate.org/ \n\n### Issue: \nThe sites like Facebook and Google keeps tracks of old password and does not allow user to set password similar to their old passwords.\nHowever in case of demo.weblate.org. It is possible for a user to set new password which is exactly similar to old passwords. \n\n### Impact:\nThought the impact of the issue is not high, it is always best practice to now allow so. \n\n### Solution:\nThe password history of the user should be tracked and user should not be allowed to set password which are similar to his old passwords.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "User"
    }, 
    "title": "Old password can be new password", 
    "is_member_of_team?": null, 
    "vote_count": 6, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-07-02T09:54:10.782Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-05-18T20:11:25.112Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-18T20:11:25.112Z", 
            "actor": {
                "username": "nijel", 
                "url": "/nijel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/153/118/9770aee425079d6f3780b490f7fb4ab1c3837546_medium.jpg?1535890419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "message": "There is no way to figure out similarity to old password unless storing them in clear text and that we certainly don't want to do. The only thing we could do is comparing to last password as that is the one users enters in the form as well. But why to do that?\n\nHonestly I don't see much reason to enforce any policy on this - when user is changing the password, it's up to him what he wants to use. Also enforcing regular password changes is quite bad idea (see eg. https://arstechnica.com/security/2016/08/frequent-password-changes-are-the-enemy-of-security-ftc-technologist-says/).", 
            "markdown_message": "<p>There is no way to figure out similarity to old password unless storing them in clear text and that we certainly don&#39;t want to do. The only thing we could do is comparing to last password as that is the one users enters in the form as well. But why to do that?</p>\n\n<p>Honestly I don&#39;t see much reason to enforce any policy on this - when user is changing the password, it&#39;s up to him what he wants to use. Also enforcing regular password changes is quite bad idea (see eg. <a title=\"https://arstechnica.com/security/2016/08/frequent-password-changes-are-the-enemy-of-security-ftc-technologist-says/\" href=\"/redirect?signature=442b6ac7b643d7453b091885d762fe5c69ae4f13&amp;url=https%3A%2F%2Farstechnica.com%2Fsecurity%2F2016%2F08%2Ffrequent-password-changes-are-the-enemy-of-security-ftc-technologist-says%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://arstechnica.com/security/2016/08/frequent-password-changes-are-the-enemy-of-security-ftc-technologist-says/</span><i class=\"icon-external-link\"></i></a>).</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1684376, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-19T02:53:12.911Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T02:53:12.911Z", 
            "actor": {
                "username": "proabiral", 
                "url": "/proabiral", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/101/314/44448497c4a971708dda67daf2b617a9a3f3b8b0_medium.jpg?1505921483"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "message": "Thanks for the quick response.\nI think there is no need to store the old password in plain text. The solution can be implemented even if password is hashed. The hashes of last '3-4' number of password should be stored and every time user tries to change the password, the hash of new password should be checked again hash of old passwords. The new password should only be allowed to set if it's hash does not match old password's hash.\n\nYes, and its up to the user to choose his password but user would definitely use his new password from one of his old password, if allowed to do so.\n\nAdditional Info:\nIn the research paper you provided, the user would change the new password something similar to his old password, if the exact similar old password is not allowed to used. The solution for this is available too. The old password should be first mutated before hashing it and the hash of mutated password should be created. Every time user tries to change password, the hash of new password should be matched against hashes of old password and mutated password.\n\nRegards,\nAbiral", 
            "markdown_message": "<p>Thanks for the quick response.<br>\nI think there is no need to store the old password in plain text. The solution can be implemented even if password is hashed. The hashes of last &#39;3-4&#39; number of password should be stored and every time user tries to change the password, the hash of new password should be checked again hash of old passwords. The new password should only be allowed to set if it&#39;s hash does not match old password&#39;s hash.</p>\n\n<p>Yes, and its up to the user to choose his password but user would definitely use his new password from one of his old password, if allowed to do so.</p>\n\n<p>Additional Info:<br>\nIn the research paper you provided, the user would change the new password something similar to his old password, if the exact similar old password is not allowed to used. The solution for this is available too. The old password should be first mutated before hashing it and the hash of mutated password should be created. Every time user tries to change password, the hash of new password should be matched against hashes of old password and mutated password.</p>\n\n<p>Regards,<br>\nAbiral</p>\n", 
            "type": "Activities::BugNew", 
            "id": 1684923, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "proabiral", 
                "url": "/proabiral"
            }, 
            "created_at": "2017-05-19T08:35:29.065Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-19T08:35:29.065Z", 
            "actor": {
                "username": "nijel", 
                "url": "/nijel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/153/118/9770aee425079d6f3780b490f7fb4ab1c3837546_medium.jpg?1535890419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "message": "Still I fail to see why we should avoid this. But as this has been brought several times, it's probably better to implement some policy than discussing this. I've added simple check against current password in https://github.com/WeblateOrg/weblate/commit/a24423e4b70256a906fe763664437bfbca2002d5, but I don't think we should store past passwords. This is really something what stores too much of sensitive data without gaining anything substantial.", 
            "markdown_message": "<p>Still I fail to see why we should avoid this. But as this has been brought several times, it&#39;s probably better to implement some policy than discussing this. I&#39;ve added simple check against current password in <a title=\"https://github.com/WeblateOrg/weblate/commit/a24423e4b70256a906fe763664437bfbca2002d5\" href=\"/redirect?signature=e21d5feee599a9609c4fae35283ca69f270dc493&amp;url=https%3A%2F%2Fgithub.com%2FWeblateOrg%2Fweblate%2Fcommit%2Fa24423e4b70256a906fe763664437bfbca2002d5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/WeblateOrg/weblate/commit/a24423e4b70256a906fe763664437bfbca2002d5</span><i class=\"icon-external-link\"></i></a>, but I don&#39;t think we should store past passwords. This is really something what stores too much of sensitive data without gaining anything substantial.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1685352, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-02T09:54:10.736Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-02T09:54:10.736Z", 
            "actor": {
                "username": "nijel", 
                "url": "/nijel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/153/118/9770aee425079d6f3780b490f7fb4ab1c3837546_medium.jpg?1535890419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1724467, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-03T05:07:16.069Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-03T05:07:16.069Z", 
            "actor": {
                "username": "proabiral", 
                "url": "/proabiral", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/101/314/44448497c4a971708dda67daf2b617a9a3f3b8b0_medium.jpg?1505921483"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1727610, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-03T05:07:16.130Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-03T05:07:16.130Z", 
            "actor": {
                "username": "proabiral", 
                "url": "/proabiral", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/101/314/44448497c4a971708dda67daf2b617a9a3f3b8b0_medium.jpg?1505921483"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "weblate", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1727611, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "proabiral", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/proabiral", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/101/314/2ebfcad08222958163a29f5eb5e59663f4944c85_small.jpg?1505921483"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -45146612.50028677, 
    "disclosed_at": "2017-06-03T05:07:16.115Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/229577", 
    "created_at": "2017-05-18T09:58:45.364Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h3 id=\"affected-domain\">Affected Domain:</h3>\n\n<p><a title=\"https://demo.weblate.org/\" href=\"/redirect?signature=733c7d903711415bf7d6b46961dca7d6931dd8b7&amp;url=https%3A%2F%2Fdemo.weblate.org%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://demo.weblate.org/</span><i class=\"icon-external-link\"></i></a> </p>\n\n<h3 id=\"issue\">Issue:</h3>\n\n<p>The sites like Facebook and Google keeps tracks of old password and does not allow user to set password similar to their old passwords.<br>\nHowever in case of demo.weblate.org. It is possible for a user to set new password which is exactly similar to old passwords. </p>\n\n<h3 id=\"impact\">Impact:</h3>\n\n<p>Thought the impact of the issue is not high, it is always best practice to now allow so. </p>\n\n<h3 id=\"solution\">Solution:</h3>\n\n<p>The password history of the user should be tracked and user should not be allowed to set password which are similar to his old passwords.</p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://weblate.org/", 
            "about": "Weblate is a free web-based translation management system.", 
            "twitter_handle": "WeblateOrg", 
            "name": "Weblate"
        }, 
        "handle": "weblate", 
        "url": "https://hackerone.com/weblate", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/019/468/8de19bd3587c60a19501ba13609bc8a80071d5ca_small.?1490255263", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/019/468/031e92a2cecbe38ab7cb25b78a1de2e6455a7cda_medium.?1490255263"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 19468, 
        "default_currency": "usd"
    }, 
    "is_published": false
}