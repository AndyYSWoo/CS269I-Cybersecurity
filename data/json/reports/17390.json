{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2014-07-23T17:50:35.469Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 17390, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-07-23T12:35:16.227Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Flash Content-Type Sniffing Vulnerability ", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-08-22T12:35:16.496Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-06-23T22:07:30.404Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T22:07:30.404Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Dude, Nice :)  So what is the fix for this ?", 
            "markdown_message": "<p>Dude, Nice :)  So what is the fix for this ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 78130, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T22:13:38.465Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T22:13:38.465Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Great find.  Will definitely get this fixed.", 
            "markdown_message": "<p>Great find.  Will definitely get this fixed.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 78141, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T22:18:46.257Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T22:18:46.257Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "I think adding a `Content-Disposition` header shall do the work.\n\n`Content-Disposition: attachment; filename=\"magic.jpg\u201d`\n\n  OR \n\nManually verify the file structure to check whether the file is a valid JPG/PNG/GIF ", 
            "markdown_message": "<p>I think adding a <code>Content-Disposition</code> header shall do the work.</p>\n\n<p><code>Content-Disposition: attachment; filename=&quot;magic.jpg\u201d</code></p>\n\n<p>OR </p>\n\n<p>Manually verify the file structure to check whether the file is a valid JPG/PNG/GIF </p>\n", 
            "type": "Activities::Comment", 
            "id": 78147, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T23:25:24.206Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T23:25:24.206Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "hey @prakharprasad, you think you could try this on the live site ?  How did you get an image stored at this location - https://staging.uzbey.com/sites/default/files/magic.jpg", 
            "markdown_message": "<p>hey <a href=\"/prakharprasad\">@prakharprasad</a>, you think you could try this on the live site ?  How did you get an image stored at this location - <a title=\"https://staging.uzbey.com/sites/default/files/magic.jpg\" href=\"/redirect?signature=21ed5b5981678e272f90ba6782e595cf39dbb772&amp;url=https%3A%2F%2Fstaging.uzbey.com%2Fsites%2Fdefault%2Ffiles%2Fmagic.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/sites/default/files/magic.jpg</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 78183, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T23:50:55.125Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T23:50:55.125Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Hi @mlitchfiled, I am writing the upload process.I did it in a live system as I don't have backend access:\n\n1. Login to your Uzbey account\n2. Navigate to https://staging.uzbey.com/node/add/other-album (fill Title)\n3. In the **Album Images** select **Choose file** button and select your SWF with spoofed JPG extension and hit **Upload**\n3. Once the upload finishes, just navigate to \n`https://staging.uzbey.com/sites/default/files/<your-swf-file-spoofed-jpg-extension>`\n\nA demo upload: https://staging.uzbey.com/sites/default/files/I-can-upload.jpg", 
            "markdown_message": "<p>Hi <a href=\"/mlitchfiled\">@mlitchfiled</a>, I am writing the upload process.I did it in a live system as I don&#39;t have backend access:</p>\n\n<ol>\n<li>Login to your Uzbey account</li>\n<li>Navigate to <a title=\"https://staging.uzbey.com/node/add/other-album\" href=\"/redirect?signature=ec0676af45b2c36521d14383800a5839f3055793&amp;url=https%3A%2F%2Fstaging.uzbey.com%2Fnode%2Fadd%2Fother-album\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/node/add/other-album</span><i class=\"icon-external-link\"></i></a> (fill Title)</li>\n<li>In the <strong>Album Images</strong> select <strong>Choose file</strong> button and select your SWF with spoofed JPG extension and hit <strong>Upload</strong>\n</li>\n<li>Once the upload finishes, just navigate to \n<code>https://staging.uzbey.com/sites/default/files/&lt;your-swf-file-spoofed-jpg-extension&gt;</code>\n</li>\n</ol>\n\n<p>A demo upload: <a title=\"https://staging.uzbey.com/sites/default/files/I-can-upload.jpg\" href=\"/redirect?signature=60a8ad9bcb6c88ad2739129cf426f58661d2cf9f&amp;url=https%3A%2F%2Fstaging.uzbey.com%2Fsites%2Fdefault%2Ffiles%2FI-can-upload.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/sites/default/files/I-can-upload.jpg</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 78194, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-24T00:04:04.731Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-24T00:04:04.731Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Hi, I just confirmed this on the live site :)  Again great bug.  The /sites/default/files path was confusing me as files should be served from Amazon.  Which they are, but they are also saved in the file system in that path.", 
            "markdown_message": "<p>Hi, I just confirmed this on the live site :)  Again great bug.  The /sites/default/files path was confusing me as files should be served from Amazon.  Which they are, but they are also saved in the file system in that path.</p>\n", 
            "type": "Activities::Comment", 
            "id": 78201, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "prakharprasad", 
                "url": "/prakharprasad"
            }, 
            "created_at": "2014-07-22T20:34:16.333Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-22T20:34:16.333Z", 
            "actor": {
                "username": "mlitchfield", 
                "url": "/mlitchfield", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/748/280394c6f7fb9d7cc77647d9839f5ebdd534b7e1_medium.png?1440553412"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "This should be fixed on staging.  Please can you confirm.  Thanks", 
            "markdown_message": "<p>This should be fixed on staging.  Please can you confirm.  Thanks</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 93788, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T07:44:23.123Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T07:44:23.123Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Looks fixed !", 
            "markdown_message": "<p>Looks fixed !</p>\n", 
            "type": "Activities::Comment", 
            "id": 94242, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T12:35:16.242Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T12:35:16.242Z", 
            "actor": {
                "username": "gazly", 
                "url": "/gazly", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/044/3fa653b5874ed6549cc5039067c74f28968b6a04_medium.jpg?1415520242"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 94344, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T17:50:35.485Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T17:50:35.485Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 94580, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T17:50:35.642Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T17:50:35.642Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 94581, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "prakharprasad", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/prakharprasad", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/885/5e9da7b255d8e02575200f93b1c8c894aaf1f17d_small.png?1543067973"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -135426544.19641376, 
    "disclosed_at": "2014-07-23T17:50:35.626Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/17390", 
    "created_at": "2014-06-23T22:00:12.795Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hello,</p>\n\n<p>There&#39;s a <strong>Flash Content-Type Sniffing vulnerability</strong>. Using this vulnerability I can read the client side source code of your website from a different origin (say prakharprasad.com) and then look for potentially sensitive data in those pages for example - CSRF prevention tokens and then successfully mount a side-wide CSRF attack (as I can read the token every time and on every page) or read messages. Once the victim views my page, I can read his <code>https://staging.uzbey.com/*</code> webpage source and then extract out the data I need (messages, anti-csrf tokens and what not).</p>\n\n<p><strong>Proof-of-Concept</strong>:</p>\n\n<ol>\n<li>Login to your Uzbey account</li>\n<li>Visit <a title=\"https://demo.prakharprasad.com/uzbey/uzbey.html\" href=\"/redirect?signature=46f08e31ccc42f14384428b57c724d285d393ba0&amp;url=https%3A%2F%2Fdemo.prakharprasad.com%2Fuzbey%2Fuzbey.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://demo.prakharprasad.com/uzbey/uzbey.html</span><i class=\"icon-external-link\"></i></a> (and wait for 5 -10 seconds)</li>\n<li>Now visit <a title=\"https://staging.uzbey.com/messages\" href=\"/redirect?signature=81acc534dc3ca17d7862016bb2d41dcc13094cfc&amp;url=https%3A%2F%2Fstaging.uzbey.com%2Fmessages\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/messages</span><i class=\"icon-external-link\"></i></a> and you&#39;ll see a message has been sent to <em>admin</em> saying <em>DemoHAX :)</em> </li>\n</ol>\n\n<p><strong>How this works?</strong></p>\n\n<ol>\n<li>My webpage loads an <code>&lt;iframe&gt;</code> pointing to <a title=\"https://demo.prakharprasad.com/uzbey/sniff.html\" href=\"/redirect?signature=93502ddaf1f3f1ba9ae8e3be5b46896b517c90f6&amp;url=https%3A%2F%2Fdemo.prakharprasad.com%2Fuzbey%2Fsniff.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://demo.prakharprasad.com/uzbey/sniff.html</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>\n<code>sniff.html</code> essentially embeds an SWF-file that has been uploaded to my (attacker&#39;s) photo gallery with <strong>.jpg</strong> extension - <a title=\"https://staging.uzbey.com/sites/default/files/magic.jpg\" href=\"/redirect?signature=21ed5b5981678e272f90ba6782e595cf39dbb772&amp;url=https%3A%2F%2Fstaging.uzbey.com%2Fsites%2Fdefault%2Ffiles%2Fmagic.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/sites/default/files/magic.jpg</span><i class=\"icon-external-link\"></i></a> </li>\n<li>Once the embedded file run, it sends a <strong>GET</strong> request to <code>https://staging.uzbey.com/messages/new</code>and passes the callback to a function called <code>nice()</code>within <code>sniff.html</code>. The callback data is the source code of the page that was requested with a <strong>GET</strong> earlier.</li>\n<li>Now<code>nice()</code>function parses the page for <code>form_bulid_id</code>and <code>form_token</code> and then builds up a form to mount the CSRF attack and then submits the form with a <strong>POST</strong> request. </li>\n<li><strong>Game over ! :)</strong></li>\n</ol>\n\n<p>Basically I used the upload functionality to upload the malicious SWF with <strong>.jpg</strong> extension and then loaded it in an iframe and did my work!</p>\n\n<p>Thanks, </p>\n\n<p><a href=\"/prakharprasad\">@prakharprasad</a></p>\n", 
    "vulnerability_information": "Hello,\r\n\r\nThere's a **Flash Content-Type Sniffing vulnerability**. Using this vulnerability I can read the client side source code of your website from a different origin (say prakharprasad.com) and then look for potentially sensitive data in those pages for example - CSRF prevention tokens and then successfully mount a side-wide CSRF attack (as I can read the token every time and on every page) or read messages. Once the victim views my page, I can read his `https://staging.uzbey.com/*` webpage source and then extract out the data I need (messages, anti-csrf tokens and what not).\r\n\r\n**Proof-of-Concept**:\r\n\r\n1. Login to your Uzbey account\r\n2. Visit https://demo.prakharprasad.com/uzbey/uzbey.html (and wait for 5 -10 seconds)\r\n3. Now visit https://staging.uzbey.com/messages and you'll see a message has been sent to *admin* saying *DemoHAX :)* \r\n\r\n**How this works?**\r\n\r\n1. My webpage loads an `<iframe>` pointing to https://demo.prakharprasad.com/uzbey/sniff.html\r\n2. `sniff.html` essentially embeds an SWF-file that has been uploaded to my (attacker's) photo gallery with **.jpg** extension - https://staging.uzbey.com/sites/default/files/magic.jpg \r\n3. Once the embedded file run, it sends a **GET** request to `https://staging.uzbey.com/messages/new`and passes the callback to a function called `nice()`within `sniff.html`. The callback data is the source code of the page that was requested with a **GET** earlier.\r\n4. Now`nice()`function parses the page for `form_bulid_id`and `form_token` and then builds up a form to mount the CSRF attack and then submits the form with a **POST** request. \r\n5. **Game over ! :)**\r\n\r\nBasically I used the upload functionality to upload the malicious SWF with **.jpg** extension and then loaded it in an iframe and did my work!\r\n\r\nThanks, \r\n\r\n@prakharprasad", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://staging.uzbey.com/", 
            "about": "The goal of Uzbey is to create the worlds largest selfie to be launched into space. test @jobert", 
            "twitter_handle": "", 
            "name": "Uzbey"
        }, 
        "handle": "uzbey", 
        "url": "https://hackerone.com/uzbey", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/230/48753fdb7bb218437f825053bb4a1653aad53d5c_small.png?1402219598", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/230/f2033ac222410d1a234e27fe3318e86e3ccef213_medium.png?1402219598"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 230, 
        "default_currency": "usd"
    }, 
    "is_published": false
}