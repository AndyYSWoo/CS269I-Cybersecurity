{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-11-22T10:33:59.385Z", 
    "voters": [
        "michiel", 
        "secator", 
        "bogdantcaciuc", 
        "bugdiscloseguys", 
        "malcolmx", 
        "eveeez", 
        "madrobot", 
        "mpz", 
        "hussain_0x3c", 
        "jens", 
        "and 7 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "300.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 165275, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-11-22T10:43:11.344Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "OX (Guard): Stored Cross-Site Scripting via Email Attachment", 
    "is_member_of_team?": null, 
    "vote_count": 17, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-12-22T10:33:59.434Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$300", 
    "attachments": [
        {
            "file_name": "ext.js", 
            "type": "text/plain", 
            "id": 116785, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/785/bb0b465ebd4cb195b6d5ea2681076adc2e2ffadc/ext.js?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224642Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=89283a5a6fa502b2ce952c87e05f5cf4a3f6f19026f93e8a4ee9b06b54755973"
        }, 
        {
            "file_name": "share1.png", 
            "type": "image/png", 
            "id": 116786, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/786/0ea6723f08f000b48a484b52f5d0dd76d472f6e6/share1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224642Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0f3b3588b4c3828dc1b50a1e12f77567181919536fd73b11c8a0d12cc44fd4ac"
        }, 
        {
            "file_name": "share2.png", 
            "type": "image/png", 
            "id": 116787, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/787/c5716b021e97d20f61b97d95e3f2179202110d30/share2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224642Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4826b5a1d3a72eeb6c456088ebc14b028cc904b32b60290a1bb5abf42377e7a2"
        }, 
        {
            "file_name": "xss.png", 
            "type": "image/png", 
            "id": 116792, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/792/08c11c9acae5924e150e7704eb45132b4aaf8d92/xss.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224642Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=8a0b21e4aa879930cef9da21d60350f72a0f785b9d2c04e78d92c58a1852eb41"
        }, 
        {
            "file_name": "xss-csp.html", 
            "type": "text/html", 
            "id": 116796, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/796/62ee6788cce343eb5fd561c3e6024e154ed8d337/xss-csp.html?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224642Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c991188ed2bce74d042845d72af0bc0054d0c651374ef4809ce4ee9b1a256d1e"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-09-05T09:31:48.768Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-05T09:31:48.768Z", 
            "actor": {
                "username": "mheiland", 
                "url": "/mheiland", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "Thanks for the report and the great background analysis. Indeed our sanitizer is not being used properly in this case. CSP should always be a last-resort mitigation.", 
            "markdown_message": "<p>Thanks for the report and the great background analysis. Indeed our sanitizer is not being used properly in this case. CSP should always be a last-resort mitigation.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1173711, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-23T17:31:36.624Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-23T17:31:36.624Z", 
            "actor": {
                "username": "dejavuln", 
                "url": "/dejavuln", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/045/064/5981b4f8a64f2637b643f797be2e18f302ce9875_medium.png?1457363129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "Would you please update me on the status of #164821, #165019 and #165275?\n\nI'm asking because two days ago I noticed the release of an OX Guard security patch (v2.4.2-rev6): [Announcement #1](https://forum.open-xchange.com/showthread.php?10222-Open-Xchange-releases-Security-Patch-2016-09-21-for-OX-Guard-v2-4-2), [Announcement #2](https://forum.open-xchange.com/showthread.php?10221-Open-Xchange-releases-Security-Patch-2016-09-21-for-OX-Guard-v2-4-2)\n\nAccording to the [referenced PDF](http://software.open-xchange.com/products/guard/doc/Release_Notes_for_Patch_Release_3561_2.4.2_2016-09-16.pdf), this security patch addresses three vulnerabilities with consecutive OX tracking IDs (48509, 48510, 48511). Considering that #164821, #165019 and #165275 were all triaged on the same day and within 20 minutes, I felt that the patch may well be the result of my reports.\n\nToday I found that code within a third party's OX Guard installation has been changed in a way that addresses the three vulnerabilities I reported in #164821, #165019 and #165275, and I have been able to confirm that the third party is indeed using OX Guard version v2.4.2-rev6.\n\nI understand that bounty decisions may require some additional time. At this point I'm more concerned about the status of my reports.", 
            "markdown_message": "<p>Would you please update me on the status of <a href=\"/reports/164821\">#164821</a>, <a href=\"/reports/165019\">#165019</a> and <a href=\"/reports/165275\">#165275</a>?</p>\n\n<p>I&#39;m asking because two days ago I noticed the release of an OX Guard security patch (v2.4.2-rev6): <a href=\"/redirect?signature=19ea67e91b2d64b49e48b3574fd77cc5ffa786fd&amp;url=https%3A%2F%2Fforum.open-xchange.com%2Fshowthread.php%3F10222-Open-Xchange-releases-Security-Patch-2016-09-21-for-OX-Guard-v2-4-2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Announcement #1</span><i class=\"icon-external-link\"></i></a>, <a href=\"/redirect?signature=7e64449cdfac8787e33d7069d7f8bc9e04e47b65&amp;url=https%3A%2F%2Fforum.open-xchange.com%2Fshowthread.php%3F10221-Open-Xchange-releases-Security-Patch-2016-09-21-for-OX-Guard-v2-4-2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Announcement #2</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>According to the <a href=\"/redirect?signature=6bec57d81a393aef90ae2695fac8239ea8745f7c&amp;url=http%3A%2F%2Fsoftware.open-xchange.com%2Fproducts%2Fguard%2Fdoc%2FRelease_Notes_for_Patch_Release_3561_2.4.2_2016-09-16.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>referenced PDF</span><i class=\"icon-external-link\"></i></a>, this security patch addresses three vulnerabilities with consecutive OX tracking IDs (48509, 48510, 48511). Considering that <a href=\"/reports/164821\">#164821</a>, <a href=\"/reports/165019\">#165019</a> and <a href=\"/reports/165275\">#165275</a> were all triaged on the same day and within 20 minutes, I felt that the patch may well be the result of my reports.</p>\n\n<p>Today I found that code within a third party&#39;s OX Guard installation has been changed in a way that addresses the three vulnerabilities I reported in <a href=\"/reports/164821\">#164821</a>, <a href=\"/reports/165019\">#165019</a> and <a href=\"/reports/165275\">#165275</a>, and I have been able to confirm that the third party is indeed using OX Guard version v2.4.2-rev6.</p>\n\n<p>I understand that bounty decisions may require some additional time. At this point I&#39;m more concerned about the status of my reports.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1212985, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-25T12:26:05.617Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-25T12:27:48.369Z", 
            "actor": {
                "username": "mheiland", 
                "url": "/mheiland", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "Hi @dejavuln indeed this Security Patch Release did contain fixes based on your reports. We started working on them as fast as possible, regardless of the status with HackerOne. Note that we're transferring reports from HackerOne to our defect tracker and do not use HackerOne for the actual tracking/resolution process.\n\nNow, regarding your concern: I've just update your reports and researcher credits will be contained with our public advisories on Bugtraq. I understand those tickets were idle for a long time and i'm gratefully sorry to let you wait. We had issues with the recent change in Billing with HackerOne. Transferring money from Germany to the US, then to HackerOne and then splitting to our 3 bounty programs was a bit troublesome and took a long time.\n\nThe decision with regards to bounty is already done and was quite straight forward, we simply had no balance left on HackerOne due to the billing change (pre-paid (new) vs. invoicing (old)). I wanted to be sure we can compensate right after putting your tickets to resolved, i'll do that first day in the morning tomorrow.", 
            "markdown_message": "<p>Hi <a href=\"/dejavuln\">@dejavuln</a> indeed this Security Patch Release did contain fixes based on your reports. We started working on them as fast as possible, regardless of the status with HackerOne. Note that we&#39;re transferring reports from HackerOne to our defect tracker and do not use HackerOne for the actual tracking/resolution process.</p>\n\n<p>Now, regarding your concern: I&#39;ve just update your reports and researcher credits will be contained with our public advisories on Bugtraq. I understand those tickets were idle for a long time and i&#39;m gratefully sorry to let you wait. We had issues with the recent change in Billing with HackerOne. Transferring money from Germany to the US, then to HackerOne and then splitting to our 3 bounty programs was a bit troublesome and took a long time.</p>\n\n<p>The decision with regards to bounty is already done and was quite straight forward, we simply had no balance left on HackerOne due to the billing change (pre-paid (new) vs. invoicing (old)). I wanted to be sure we can compensate right after putting your tickets to resolved, i&#39;ll do that first day in the morning tomorrow.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1214816, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "dejavuln", 
                "url": "/dejavuln"
            }, 
            "created_at": "2016-09-25T12:26:45.933Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-25T12:26:45.933Z", 
            "actor": {
                "username": "mheiland", 
                "url": "/mheiland", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1214819, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-25T22:16:46.206Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-25T22:16:46.206Z", 
            "actor": {
                "username": "dejavuln", 
                "url": "/dejavuln", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/045/064/5981b4f8a64f2637b643f797be2e18f302ce9875_medium.png?1457363129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "Alright, thanks for the quick reply. I had been wondering about the sudden lack of (visible) activity, and I appreciate the clarification and insights. ", 
            "markdown_message": "<p>Alright, thanks for the quick reply. I had been wondering about the sudden lack of (visible) activity, and I appreciate the clarification and insights. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1215258, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-09-26T08:29:11.762Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-26T08:29:11.762Z", 
            "actor": {
                "url": "/open-xchange", 
                "profile": {
                    "name": "Open-Xchange"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/906/b7c0771c5edfbd0774f7209e493699e39f5cb695_medium.?1454083837"
                }
            }, 
            "team_handle": "open-xchange", 
            "bounty_amount": "300.0", 
            "collaborator": {
                "username": "dejavuln", 
                "url": "/dejavuln"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1215686, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-22T10:33:59.404Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-22T10:33:59.404Z", 
            "actor": {
                "username": "dejavuln", 
                "url": "/dejavuln", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/045/064/5981b4f8a64f2637b643f797be2e18f302ce9875_medium.png?1457363129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1312121, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-22T10:43:11.361Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-22T10:43:11.361Z", 
            "actor": {
                "username": "mheiland", 
                "url": "/mheiland", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1312130, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-22T10:43:11.402Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-22T10:43:11.402Z", 
            "actor": {
                "username": "mheiland", 
                "url": "/mheiland", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "open-xchange", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1312131, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "dejavuln", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/dejavuln", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/045/064/555bf3cfde9b926ac3540de3f4acc94325696e05_small.png?1457363129"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -61733563.22535213, 
    "disclosed_at": "2016-11-22T10:43:11.385Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/165275", 
    "created_at": "2016-09-02T12:55:27.701Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"summary\">Summary</h2>\n\n<p>Improper handling of email attachments by &quot;OX Guard&quot; causes a Stored Cross-Site Scripting (XSS) vulnerability inside the OX &quot;Mail&quot; module. </p>\n\n<p>Injected code will be executed when the victim opens the HTML attachment of a decrypted email by using the &quot;Open in browser&quot; link/button. </p>\n\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n\n<ol>\n<li>\n<u><strong>As the attacker</strong></u>, download the attached file <code>xss-csp.html</code>: <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"xss-csp.html\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/796/62ee6788cce343eb5fd561c3e6024e154ed8d337/xss-csp.html?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=c991188ed2bce74d042845d72af0bc0054d0c651374ef4809ce4ee9b1a256d1e\" data-attachment-type=\"text/html\">xss-csp.html (F116796)</a> and</li>\n<li>attach it to an email addressed to the victim, with PGP encryption enabled.</li>\n<li>\n<u><strong>As the victim</strong></u>, decrypt the email within OX, then</li>\n<li>click on &quot;Open in browser&#39; and wait for six seconds (explanation below).</li>\n</ol>\n\n<p><em>NB: Because this PoC targets the sandbox, it requires the victim to open the email on the <code>sandbox.open-xchange.com</code> domain as well. The PoC can be adapted to work on other domains.</em></p>\n\n<p>Expected result:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"xss.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/792/08c11c9acae5924e150e7704eb45132b4aaf8d92/xss.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=8a0b21e4aa879930cef9da21d60350f72a0f785b9d2c04e78d92c58a1852eb41\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/792/08c11c9acae5924e150e7704eb45132b4aaf8d92/xss.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=8a0b21e4aa879930cef9da21d60350f72a0f785b9d2c04e78d92c58a1852eb41\" class=\"markdown-inline-image\"></a></p>\n\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n\n<p>The vulnerability exists because OX treats files attached to unencrypted emails differently than files attached to decrypted emails. </p>\n\n<p>When an HTML file is attached to an <strong>unencrypted</strong> email, the user can click &quot;Open in browser&quot; to view the contents of the HTML file. This file will have been sanitized by the OX backend.</p>\n\n<p>When an HTML file is attached to a <strong>decrypted</strong> email, clicking on &quot;Open in browser&quot; will cause OX to open the HTML file without sanitizing it first. At this point, JS code inside the HTML file will be executed on the same domain as the OX application.</p>\n\n<p>Similar inconsistencies in the application logic can be observed for SVG files. Whereas for unencrypted emails OX instructs the web browser to download the SVG file, this is not the case for SVG files attached to decrypted emails. Instead, the SVG file will be opened in the web browser, leading to the execution of embedded JS code and subsequently Stored XSS. <strong>Other file types may be affected as well.</strong></p>\n\n<h2 id=\"bypassing-content-security-policy\">Bypassing Content Security Policy</h2>\n\n<p>The program rules are not clear as to whether a vulnerability has to be exploitable only on a default installation (which may not send CSP headers) or also on the provided <a href=\"/redirect?signature=b30f2a77839221067c9334060851147423915b00&amp;url=https%3A%2F%2Fsandbox.open-xchange.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>sandbox</span><i class=\"icon-external-link\"></i></a> (which does send them). Assuming the latter, I had to find a way to bypass the CSP.</p>\n\n<p>The sandbox sends the following headers:</p>\n<pre class=\"highlight plaintext\"><code>Content-Security-Policy: script-src &#39;self&#39;\nX-WebKit-CSP: script-src &#39;self&#39;\nX-Content-Security-Policy: script-src &#39;self&#39;\n[...]\nX-Frame-Options: SAMEORIGIN\n</code></pre>\n<p>While the CSP would successfully prevent the execution of JS embedded in the previously mentioned HTML/SVG files, it still allows for the loading of JS from external files, as long as they share the same origin. </p>\n\n<p>In order to make a malicious, attacker-crafted JS file ( <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"ext.js\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/785/bb0b465ebd4cb195b6d5ea2681076adc2e2ffadc/ext.js?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=89283a5a6fa502b2ce952c87e05f5cf4a3f6f19026f93e8a4ee9b06b54755973\" data-attachment-type=\"text/plain\">ext.js (F116785)</a> ) share the same origin with the CSP protected page, the JS file can be uploaded to the OX server via the Drive module. The JS file can then be made accessible to the victim by sharing it (menu: <code>Share &gt; Get link</code>). OX returns a link (&quot;URL-1&quot;) to access the shared file:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"share1.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/786/0ea6723f08f000b48a484b52f5d0dd76d472f6e6/share1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=0f3b3588b4c3828dc1b50a1e12f77567181919536fd73b11c8a0d12cc44fd4ac\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/786/0ea6723f08f000b48a484b52f5d0dd76d472f6e6/share1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=0f3b3588b4c3828dc1b50a1e12f77567181919536fd73b11c8a0d12cc44fd4ac\" class=\"markdown-inline-image\"></a></p>\n\n<p>Sample link: <code>https://sandbox.open-xchange.com/ajax/share/04c917a807019a414c917f87019a484e8f3ecfaeb0ef0e0c/1/8/MzQ/MzQvMg</code></p>\n\n<p>This link will not open the JS file itself, but a preview page. The actual URL (&quot;URL-2&quot;) of the JS file can be obtained by pressing the &quot;Open attachment&quot; button:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"share2.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/787/c5716b021e97d20f61b97d95e3f2179202110d30/share2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=4826b5a1d3a72eeb6c456088ebc14b028cc904b32b60290a1bb5abf42377e7a2\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/116/787/c5716b021e97d20f61b97d95e3f2179202110d30/share2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T224642Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=4826b5a1d3a72eeb6c456088ebc14b028cc904b32b60290a1bb5abf42377e7a2\" class=\"markdown-inline-image\"></a></p>\n\n<p>Sample link: <code>https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&amp;folder=10&amp;id=10%2F2&amp;version=1&amp;user=9&amp;context=80&amp;sequence=1472804350823&amp;9.80.1472804350823&amp;delivery=view</code></p>\n\n<p>URL-2 can be used to load the JS file from within an HTML file:</p>\n<pre class=\"highlight plaintext\"><code>&lt;script src=&quot;https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&amp;folder=10&amp;id=10%2F2&amp;version=1&amp;user=9&amp;context=80&amp;sequence=1472804350823&amp;9.80.1472804350823&amp;delivery=view&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>However, when a client attempts to access URL-2 before having received a cookie from URL-1, OX responds with an error message instead of the JS code:</p>\n<pre class=\"highlight plaintext\"><code>Bad Request\n\nSVL-0002 Categories=ERROR Message=&#39;Missing cookie: open-xchange-public-session-V4VUFwKeyL8GQ3dB2IHQ. Please re-login.&#39; exceptionID=1425497541-54297\n</code></pre>\n<p>This restriction can be bypassed by loading URL-1 within an iframe:</p>\n<pre class=\"highlight plaintext\"><code>&lt;iframe src=&quot;https://sandbox.open-xchange.com/ajax/share/04c917a807019a414c917f87019a484e8f3ecfaeb0ef0e0c/1/8/MzQ/MzQvMg&quot;&gt;&lt;/iframe&gt;\n\n&lt;script src=&quot;https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&amp;folder=10&amp;id=10%2F2&amp;version=1&amp;user=9&amp;context=80&amp;sequence=1472804350823&amp;9.80.1472804350823&amp;delivery=view&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>Because the browser has to load URL-1 before URL-2 for the attack to succeed, the attached file <code>xss-file.html</code> includes a Meta Refresh to make the exploit more reliable. The Meta Refresh reloads the page after five seconds, which is useful in case the browser had attempted to load URL-2 before receiving the required cookie from URL-1. By the time the Meta Refresh causes the page (and subsequently URL-2) to be reloaded, the browser should have received this cookie from URL-1. </p>\n\n<p>As I have mentioned before, I&#39;m not sure whether a CSP bypass is required by the program rules, so I don&#39;t want to spend too much time on optimizing the CSP bypass. Anyway, the actual vulnerability is the rendering of unsanitized data as described in the <code>Vulnerability Details</code> part.</p>\n", 
    "vulnerability_information": "\n## Summary\n\nImproper handling of email attachments by \"OX Guard\" causes a Stored Cross-Site Scripting (XSS) vulnerability inside the OX \"Mail\" module. \n\nInjected code will be executed when the victim opens the HTML attachment of a decrypted email by using the \"Open in browser\" link/button. \n\n## Proof of Concept\n\n1. _**As the attacker**_, download the attached file `xss-csp.html`: {F116796} and\n2. attach it to an email addressed to the victim, with PGP encryption enabled.\n3. _**As the victim**_, decrypt the email within OX, then\n4. click on \"Open in browser' and wait for six seconds (explanation below).\n\n*NB: Because this PoC targets the sandbox, it requires the victim to open the email on the `sandbox.open-xchange.com` domain as well. The PoC can be adapted to work on other domains.*\n\nExpected result:\n\n{F116792}\n\n## Vulnerability Details\n\nThe vulnerability exists because OX treats files attached to unencrypted emails differently than files attached to decrypted emails. \n\nWhen an HTML file is attached to an **unencrypted** email, the user can click \"Open in browser\" to view the contents of the HTML file. This file will have been sanitized by the OX backend.\n\nWhen an HTML file is attached to a **decrypted** email, clicking on \"Open in browser\" will cause OX to open the HTML file without sanitizing it first. At this point, JS code inside the HTML file will be executed on the same domain as the OX application.\n\nSimilar inconsistencies in the application logic can be observed for SVG files. Whereas for unencrypted emails OX instructs the web browser to download the SVG file, this is not the case for SVG files attached to decrypted emails. Instead, the SVG file will be opened in the web browser, leading to the execution of embedded JS code and subsequently Stored XSS. **Other file types may be affected as well.**\n\n\n## Bypassing Content Security Policy\n\nThe program rules are not clear as to whether a vulnerability has to be exploitable only on a default installation (which may not send CSP headers) or also on the provided [sandbox](https://sandbox.open-xchange.com/) (which does send them). Assuming the latter, I had to find a way to bypass the CSP.\n\nThe sandbox sends the following headers:\n\n```\nContent-Security-Policy: script-src 'self'\nX-WebKit-CSP: script-src 'self'\nX-Content-Security-Policy: script-src 'self'\n[...]\nX-Frame-Options: SAMEORIGIN\n```\n\nWhile the CSP would successfully prevent the execution of JS embedded in the previously mentioned HTML/SVG files, it still allows for the loading of JS from external files, as long as they share the same origin. \n\nIn order to make a malicious, attacker-crafted JS file ( {F116785} ) share the same origin with the CSP protected page, the JS file can be uploaded to the OX server via the Drive module. The JS file can then be made accessible to the victim by sharing it (menu: `Share > Get link`). OX returns a link (\"URL-1\") to access the shared file:\n\n{F116786}\n\nSample link: `https://sandbox.open-xchange.com/ajax/share/04c917a807019a414c917f87019a484e8f3ecfaeb0ef0e0c/1/8/MzQ/MzQvMg`\n\nThis link will not open the JS file itself, but a preview page. The actual URL (\"URL-2\") of the JS file can be obtained by pressing the \"Open attachment\" button:\n\n{F116787}\n\nSample link: `https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&folder=10&id=10%2F2&version=1&user=9&context=80&sequence=1472804350823&9.80.1472804350823&delivery=view`\n\nURL-2 can be used to load the JS file from within an HTML file:\n\n```\n<script src=\"https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&folder=10&id=10%2F2&version=1&user=9&context=80&sequence=1472804350823&9.80.1472804350823&delivery=view\"></script>\n```\n\nHowever, when a client attempts to access URL-2 before having received a cookie from URL-1, OX responds with an error message instead of the JS code:\n\n```\nBad Request\n\nSVL-0002 Categories=ERROR Message='Missing cookie: open-xchange-public-session-V4VUFwKeyL8GQ3dB2IHQ. Please re-login.' exceptionID=1425497541-54297\n```\n\nThis restriction can be bypassed by loading URL-1 within an iframe:\n\n```\n<iframe src=\"https://sandbox.open-xchange.com/ajax/share/04c917a807019a414c917f87019a484e8f3ecfaeb0ef0e0c/1/8/MzQ/MzQvMg\"></iframe>\n\n<script src=\"https://sandbox.open-xchange.com/appsuite/api/files/ext.js?action=document&folder=10&id=10%2F2&version=1&user=9&context=80&sequence=1472804350823&9.80.1472804350823&delivery=view\"></script>\n```\n\nBecause the browser has to load URL-1 before URL-2 for the attack to succeed, the attached file `xss-file.html` includes a Meta Refresh to make the exploit more reliable. The Meta Refresh reloads the page after five seconds, which is useful in case the browser had attempted to load URL-2 before receiving the required cookie from URL-1. By the time the Meta Refresh causes the page (and subsequently URL-2) to be reloaded, the browser should have received this cookie from URL-1. \n\nAs I have mentioned before, I'm not sure whether a CSP bypass is required by the program rules, so I don't want to spend too much time on optimizing the CSP bypass. Anyway, the actual vulnerability is the rendering of unsanitized data as described in the `Vulnerability Details` part.\n\n\n\n\n\n\n\n\n\n\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.open-xchange.com", 
            "about": "Creator of communication, collaboration and office productivity software for service providers", 
            "twitter_handle": "openexchange", 
            "name": "Open-Xchange"
        }, 
        "handle": "open-xchange", 
        "url": "https://hackerone.com/open-xchange", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/906/6dc9519916ca8b0b2db97220097e17a2584c3651_small.?1454083837", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/906/b7c0771c5edfbd0774f7209e493699e39f5cb695_medium.?1454083837"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8906, 
        "default_currency": "usd"
    }, 
    "is_published": false
}