{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-03-16T04:22:33.579Z", 
    "voters": [
        "delimitry", 
        "sp1d3rs", 
        "ston3", 
        "yaworsk", 
        "bogdantcaciuc", 
        "malcolmx", 
        "supernatural", 
        "eveeez", 
        "madrobot", 
        "muhammad_uwais", 
        "and 24 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 192210, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-03-14T21:01:47.636Z", 
    "vulnerability_information": "Hi there!\n\nAs far I understand the Shopify Shop have blogs which allow users to comment on blog posts, however the comments with HTML content automatically gets sanitised and then posted to avoid XSS issue. However using the API for comment modification, any application with comment permission can modify a comment and include arbitrary HTML leading to XSS. \n\n**Steps to Reproduce** \n\n1.  Open the Shopify Shop's blog and post a comment on a blogpost through a browser. \n2. Note the *comment id*, this can be easily grabbed by checking the HTML after the comment is posted: \nEg. `<div id=\"comment-2929551246\" class=\"comment border-bottom clearfix\">`\n3. Now setup an application with comment permission on the Shop \n4. Send the following JSON to the API endpoint /admin/comments/<comment-id>.json\n`  {\n  \"comment\": {\n    \"id\": <comment-id>,\n    \"body\": \"blahblah\",\n    \"body_html\": \"blah<img src=x onerror=alert(0);>\"\n  }\n  }`\n5. Send request twice.\n6. Visit the blog post, JS in the comment should execute.\n\nI believe this is a valid bug as the comment should get stripped of HTML, which is not the case in case of the above request, however it does gets stripped when posted via web or modified through the comment API documentation at https://help.shopify.com/api/reference/comment#update. To insert arbitrary HTML I've purposely added `body_html` in the request, which is not mentioned in the API reference, the allows me to add HTML, in the comment. The HTML even executes in the Shop's Admin Panel when viewing comments for a particular blog. \n\nPoC (see comment section for JS execution): https://derp-10.myshopify.com/blogs/news/43260355-first-post\n\nVideo: https://www.dropbox.com/s/7ie1tiex1eo4kk9/Comment%20XSS.mov?dl=0\n\nThanks,\nPrakhar Prasad\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "Stored XSS in blog comments through Shopify API", 
    "is_member_of_team?": null, 
    "vote_count": 34, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 3489, 
            "content": "Though html content can be set through the API for many locations in the Shopify storefront, this report was a special case. We were also displaying the body_html of these comments in Shopify admin, leading to XSS in admin rather than the storefront.", 
            "content_html": "<p>Though html content can be set through the API for many locations in the Shopify storefront, this report was a special case. We were also displaying the body_html of these comments in Shopify admin, leading to XSS in admin rather than the storefront.</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-12-18T13:46:52.274Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-18T13:46:52.274Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "In step 4. The request will be a `PUT` request", 
            "markdown_message": "<p>In step 4. The request will be a <code>PUT</code> request</p>\n", 
            "type": "Activities::Comment", 
            "id": 1372544, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-19T21:58:52.149Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-19T21:58:52.149Z", 
            "actor": {
                "username": "jenn-shopify", 
                "url": "/jenn-shopify", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thank you for your report. Our engineering team is investigating the issue.", 
            "markdown_message": "<p>Thank you for your report. Our engineering team is investigating the issue.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1375441, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-28T17:36:37.705Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-28T17:36:37.705Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Hey! how is the progress so far on this ticket. ", 
            "markdown_message": "<p>Hey! how is the progress so far on this ticket. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1449662, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-01T15:36:31.992Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-01T15:36:31.992Z", 
            "actor": {
                "username": "jenn-shopify", 
                "url": "/jenn-shopify", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "We're still working on this, and will contact you when we have an update. Thank you for your patience.", 
            "markdown_message": "<p>We&#39;re still working on this, and will contact you when we have an update. Thank you for your patience.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1456329, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "prakharprasad", 
                "url": "/prakharprasad"
            }, 
            "created_at": "2017-03-08T23:02:55.478Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-08T23:02:55.478Z", 
            "actor": {
                "username": "jenn-shopify", 
                "url": "/jenn-shopify", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "Thanks again for your report!\nWe have deployed a fix for this issue. Our next round of bounty decisions will take place within two weeks, so we will be in touch with you again soon.", 
            "markdown_message": "<p>Thanks again for your report!<br>\nWe have deployed a fix for this issue. Our next round of bounty decisions will take place within two weeks, so we will be in touch with you again soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1528458, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-03-14T21:01:41.538Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-14T21:01:41.538Z", 
            "actor": {
                "url": "/shopify", 
                "profile": {
                    "name": "Shopify"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
                }
            }, 
            "team_handle": "shopify", 
            "bonus_amount": "0.0", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "prakharprasad", 
                "url": "/prakharprasad"
            }, 
            "message": "Thanks for helping improve the security of Shopify!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1541548, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-14T21:01:47.656Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-14T21:01:47.656Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1541549, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-16T04:22:33.598Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-16T04:22:33.598Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1544545, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-16T04:22:33.645Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-16T04:22:33.645Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1544546, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "prakharprasad", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/prakharprasad", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/885/5e9da7b255d8e02575200f93b1c8c894aaf1f17d_small.png?1543067973"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-03-16T04:22:33.627Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/192210", 
    "created_at": "2016-12-18T13:43:21.084Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi there!</p>\n\n<p>As far I understand the Shopify Shop have blogs which allow users to comment on blog posts, however the comments with HTML content automatically gets sanitised and then posted to avoid XSS issue. However using the API for comment modification, any application with comment permission can modify a comment and include arbitrary HTML leading to XSS. </p>\n\n<p><strong>Steps to Reproduce</strong> </p>\n\n<ol>\n<li> Open the Shopify Shop&#39;s blog and post a comment on a blogpost through a browser. </li>\n<li>Note the <em>comment id</em>, this can be easily grabbed by checking the HTML after the comment is posted: \nEg. <code>&lt;div id=&quot;comment-2929551246&quot; class=&quot;comment border-bottom clearfix&quot;&gt;</code>\n</li>\n<li>Now setup an application with comment permission on the Shop </li>\n<li>Send the following JSON to the API endpoint /admin/comments/&lt;comment-id&gt;.json\n<code>{\n&quot;comment&quot;: {\n&quot;id&quot;: &lt;comment-id&gt;,\n&quot;body&quot;: &quot;blahblah&quot;,\n&quot;body_html&quot;: &quot;blah&lt;img src=x onerror=alert(0);&gt;&quot;\n}\n}</code>\n</li>\n<li>Send request twice.</li>\n<li>Visit the blog post, JS in the comment should execute.</li>\n</ol>\n\n<p>I believe this is a valid bug as the comment should get stripped of HTML, which is not the case in case of the above request, however it does gets stripped when posted via web or modified through the comment API documentation at <a title=\"https://help.shopify.com/api/reference/comment#update\" href=\"/redirect?signature=bb1864516b3683960d2d545afe3ba7587fdbab93&amp;url=https%3A%2F%2Fhelp.shopify.com%2Fapi%2Freference%2Fcomment%23update\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://help.shopify.com/api/reference/comment#update</span><i class=\"icon-external-link\"></i></a>. To insert arbitrary HTML I&#39;ve purposely added <code>body_html</code> in the request, which is not mentioned in the API reference, the allows me to add HTML, in the comment. The HTML even executes in the Shop&#39;s Admin Panel when viewing comments for a particular blog. </p>\n\n<p>PoC (see comment section for JS execution): <a title=\"https://derp-10.myshopify.com/blogs/news/43260355-first-post\" href=\"/redirect?signature=83b2b01c0e4fdf06a7456c668e20e2d8726aa092&amp;url=https%3A%2F%2Fderp-10.myshopify.com%2Fblogs%2Fnews%2F43260355-first-post\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://derp-10.myshopify.com/blogs/news/43260355-first-post</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Video: <a title=\"https://www.dropbox.com/s/7ie1tiex1eo4kk9/Comment%20XSS.mov?dl=0\" href=\"/redirect?signature=5f1547efc2ad7132f66e759123a018604229c6ad&amp;url=https%3A%2F%2Fwww.dropbox.com%2Fs%2F7ie1tiex1eo4kk9%2FComment%2520XSS.mov%3Fdl%3D0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.dropbox.com/s/7ie1tiex1eo4kk9/Comment%20XSS.mov?dl=0</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Thanks,<br>\nPrakhar Prasad</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.shopify.com", 
            "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.", 
            "twitter_handle": "", 
            "name": "Shopify"
        }, 
        "handle": "shopify", 
        "url": "https://hackerone.com/shopify", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/382/1e9872bf9cfe04008c2673e07bfecaa83858cca1_small.jpg?1532728703", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/382/30421c25f4a7b03ec3250e36efb64f7291402806_medium.jpg?1532728703"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1382, 
        "default_currency": "usd"
    }, 
    "is_published": false
}