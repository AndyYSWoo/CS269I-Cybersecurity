{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-17T20:09:42.841Z", 
    "voters": [
        "eveeez", 
        "madrobot", 
        "c1231665", 
        "japz", 
        "spetr0x", 
        "bvdbijl", 
        "hackerjuan", 
        "xcom"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "8000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 181232, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-16T19:36:41.148Z", 
    "vulnerability_information": "Hi,\n\nThe following file causes a segmentation fault in mruby, which also causes a segmentation fault in mruby-engine. I've minimized this file down to the bare bones what crashes it, and renamed variables so you can see what is needed and what isn't.\n\n```\na=*\"any splat operator\", case \"any object or nil\"\nwhen \"any value\"\n  redo |b|\n  \"any return object\"\nend\n```\n\n```\n$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n```\n\n```\n$ ./dev/bin/mruby crash.rb\nSegmentation fault: 11\n```\n\n```\n$ lldb ./dev/bin/mruby crash.rb\n(lldb) target create \"./dev/bin/mruby\"\nCurrent executable set to './dev/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 18945 launched: './dev/bin/mruby' (x86_64)\nProcess 18945 stopped\n* thread #1: tid = 0x4626e3b, 0x0000000100001814 mruby`ary_modify + 20, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n    frame #0: 0x0000000100001814 mruby`ary_modify + 20\nmruby`ary_modify:\n->  0x100001814 <+20>: movl   (%rsi), %eax\n    0x100001816 <+22>: shrl   $0xb, %eax\n    0x100001819 <+25>: andl   $0x100, %eax              ; imm = 0x100\n    0x10000181e <+30>: cmpl   $0x0, %eax\n(lldb) bt\n* thread #1: tid = 0x4626e3b, 0x0000000100001814 mruby`ary_modify + 20, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n  * frame #0: 0x0000000100001814 mruby`ary_modify + 20\n    frame #1: 0x0000000100001e10 mruby`mrb_ary_push + 48\n    frame #2: 0x00000001000426d5 mruby`mrb_vm_exec + 25589\n    frame #3: 0x000000010003c2c7 mruby`mrb_vm_run + 135\n    frame #4: 0x00000001000446b4 mruby`mrb_top_run + 100\n    frame #5: 0x000000010006f19f mruby`load_exec + 1183\n    frame #6: 0x000000010006ece3 mruby`mrb_load_file_cxt + 67\n    frame #7: 0x0000000100000d78 mruby`main + 904\n    frame #8: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb) register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000000\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000000\n       rdx = 0x0000000000000000\n       rdi = 0x0000000100600000\n       rsi = 0x0000000000000000\n       rbp = 0x00007fff5fbfc9f0\n       rsp = 0x00007fff5fbfc9c0\n        r8 = 0x0000000000000000\n        r9 = 0x00007fff5fbfc380\n       r10 = 0x5d00add5139cce40\n       r11 = 0x0000000000000001\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100001814  mruby`ary_modify + 20\n    rflags = 0x0000000000010206\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) \n```\n\nThe cause for this is there is a null `RArray` struct getting sent via a ptr to `mrb_ary_push`, and then the program is trying to retrieve and set members of this null struct.\n\nA patch to fix this would be similar to:\n```\ndiff --git a/src/array.c b/src/array.c\nindex df95383..47d5ce8 100644\n--- a/src/array.c\n+++ b/src/array.c\n@@ -406,6 +406,9 @@ mrb_ary_push(mrb_state *mrb, mrb_value ary, mrb_value elem)\n {\n   struct RArray *a = mrb_ary_ptr(ary);\n \n+  /* FIXME: throw an error? */\n+  if (!a) return;\n+\n   ary_modify(mrb, a);\n   if (a->len == a->aux.capa)\n     ary_expand_capa(mrb, a, a->len + 1);\n```\n\n\nAs mentioned above, this also affected mruby-engine via this:\n\n```\n13:25 $ ./bin/sandbox crash.rb\n./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000002\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon't forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:001658 EVAL   ./bin/sandbox:20 [FINISH]\nc:0001 p:0000 s:0002 E:000c00 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\n./bin/sandbox:20:in `<main>'\n./bin/sandbox:20:in `sandbox_eval'\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000001 rbx: 0x00000001016665a8 rcx: 0x0000000101678a60\n rdx: 0x0000000000000000 rdi: 0x0000000101666440 rsi: 0x0000000000000000\n rbp: 0x00007fff5efe5f10 rsp: 0x00007fff5efe5ef0  r8: 0x0000000000000001\n  r9: 0x0000000000000000 r10: 0x0000000000000001 r11: 0x00000001016665a8\n r12: 0x0000000000000000 r13: 0x0000000101666440 r14: 0x0000000101666440\n r15: 0x0000000000000000 rip: 0x00000001015440f1 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x0000000100db65d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100c58023 rb_bug_context + 483\n2   ruby                                0x0000000100d2b653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001015440f1 ary_modify + 17\n5   ???                                 0x00000001016665a8 0x0 + 4318455208\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n<snip various gems>\n  185 /Users/<snip>/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/<snip>/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\nAbort trap: 6\n\n```\n\nAfter applying that patch to `ext/mruby_engine/mruby` and recompiling, that crash no longer happens.\n\nJust to clarify, I'm not to sure how one would achieve `$10,000 for denial of service against Shopify\u2019s infrastructure caused by a bug in mruby or mruby_engine (for example, a crash in the native library).` as your rules clearly state to not test against your infrastructure. Is that something your end tests after submission of the bug?\n\nAlso, should I approach mruby directly to get the patch resolved?\n\nCheers,\n\nHugh\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "Team"
    }, 
    "title": "Denial of Service in mruby due to null pointer dereference", 
    "is_member_of_team?": null, 
    "vote_count": 8, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-01-15T19:36:41.196Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$8,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/133/756/3379db51b0863594020d70bec6d5566df0cb041d/bug-181232.patch?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224538Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1e63f59bec136d9b25b0469dc7d23a8ab831a71efeec91aff19ab2742286e2a7", 
                    "type": "text/x-diff", 
                    "id": 133756, 
                    "filename": "bug-181232.patch"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/133/755/413b63e17a4b4762e593d7494e80d9da316fdee7/crash.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224538Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6d027ec0bf4e0df9141aa066d5ffeb78faca2a5a8ee724cf9231012c2d9966c8", 
                    "type": "text/plain", 
                    "id": 133755, 
                    "filename": "crash.rb"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-11-10T03:34:29.005Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T03:34:29.005Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Attached the crash file, and the patch to fix.", 
            "markdown_message": "<p>Attached the crash file, and the patch to fix.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1292704, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-10T16:44:03.134Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T16:44:03.134Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi @haquaman,\n\nTo answer your question regarding exploitability against our infrastructure: we will determine that ourselves, but I recommend that you test against [mruby-engine](https://github.com/Shopify/mruby-engine/commits/master) at the latest version since this is a good approximation of our production environment. See https://www.mruby.science/ for instructions on how to test your proof of concept against mruby-engine locally.\n\nSince we may end up using the patch you submitted (or parts of it) I just want to confirm in writing that you agree to release it under the original project license (MIT License). We'll attribute the patches to you by linking to this issue and your github account if you wish. For future reports we've also added the license requirement directly to [our program rules](https://hackerone.com/shopify-scripts/policy_versions?change=3541603).", 
            "markdown_message": "<p>Hi <a href=\"/haquaman\">@haquaman</a>,</p>\n\n<p>To answer your question regarding exploitability against our infrastructure: we will determine that ourselves, but I recommend that you test against <a href=\"/redirect?signature=ee044c07e82054ea578936efa810cdd3baea481d&amp;url=https%3A%2F%2Fgithub.com%2FShopify%2Fmruby-engine%2Fcommits%2Fmaster\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>mruby-engine</span><i class=\"icon-external-link\"></i></a> at the latest version since this is a good approximation of our production environment. See <a title=\"https://www.mruby.science/\" href=\"/redirect?signature=6b003dee6371fbf3974a02c606c2d256002761a1&amp;url=https%3A%2F%2Fwww.mruby.science%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.mruby.science/</span><i class=\"icon-external-link\"></i></a> for instructions on how to test your proof of concept against mruby-engine locally.</p>\n\n<p>Since we may end up using the patch you submitted (or parts of it) I just want to confirm in writing that you agree to release it under the original project license (MIT License). We&#39;ll attribute the patches to you by linking to this issue and your github account if you wish. For future reports we&#39;ve also added the license requirement directly to <a href=\"https://hackerone.com/shopify-scripts/policy_versions?change=3541603\">our program rules</a>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1293624, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-10T17:47:39.804Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-10T17:47:39.804Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi,\n\nCool that makes sense. I tested with the bin/sandbox of master from a few days ago, but i can pull and test again (or send the version) when I'm on that laptop.\n\nMIT is fine by me, github is hughdavenport. Need email as well?", 
            "markdown_message": "<p>Hi,</p>\n\n<p>Cool that makes sense. I tested with the bin/sandbox of master from a few days ago, but i can pull and test again (or send the version) when I&#39;m on that laptop.</p>\n\n<p>MIT is fine by me, github is hughdavenport. Need email as well?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1293794, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-13T21:21:17.427Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-13T21:21:17.427Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I'm going to mark this issue triaged while we work on getting this issue fixed", 
            "markdown_message": "<p>I&#39;m going to mark this issue triaged while we work on getting this issue fixed</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1297296, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-14T00:50:18.532Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T00:50:18.532Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Cool, let me know if you need anything more from me. Happy to help.\n\nCheers,\n\nHugh", 
            "markdown_message": "<p>Cool, let me know if you need anything more from me. Happy to help.</p>\n\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
            "type": "Activities::Comment", 
            "id": 1297375, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-14T20:52:51.448Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T20:52:51.448Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 1299195, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-14T21:10:38.875Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T21:10:38.875Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High", 
                "old_severity": null
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1299236, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "haquaman", 
                "url": "/haquaman"
            }, 
            "created_at": "2016-11-16T21:19:29.789Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-16T21:19:29.789Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi @haquaman, thanks again for the report and the patch, and the proof of concept exploit. We've deployed a fix for this in our production environment as of earlier today.\n\nI'm marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact & determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.", 
            "markdown_message": "<p>Hi <a href=\"/haquaman\">@haquaman</a>, thanks again for the report and the patch, and the proof of concept exploit. We&#39;ve deployed a fix for this in our production environment as of earlier today.</p>\n\n<p>I&#39;m marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact &amp; determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1303174, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-18T08:17:42.600Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-18T08:17:42.600Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi Francois, No worries. I would expect a flurry of activity with a new program. I'll chase it up if I haven't heard back in a fortnight or so.", 
            "markdown_message": "<p>Hi Francois, No worries. I would expect a flurry of activity with a new program. I&#39;ll chase it up if I haven&#39;t heard back in a fortnight or so.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1306298, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-25T15:23:33.343Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-25T15:23:33.343Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hello again, I just wanted to let you know the fix for this issue has landed upstream: https://github.com/mruby/mruby/pull/3285", 
            "markdown_message": "<p>Hello again, I just wanted to let you know the fix for this issue has landed upstream: <a title=\"https://github.com/mruby/mruby/pull/3285\" href=\"/redirect?signature=2fe960f851869d5529a6ba1161a75a7e55cadbde&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3285\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/pull/3285</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1319204, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-25T20:58:24.312Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-25T20:58:24.312Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Cool beans. Thanks for thr speed. I see a bunch more also landed :)", 
            "markdown_message": "<p>Cool beans. Thanks for thr speed. I see a bunch more also landed :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1319785, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-02T00:40:06.756Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-02T00:40:06.756Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hi Francois,\n\nHas there been any discussion about bounty yet? No worries if not, just pinging as its been a fortnight.\n\nCheers,\n\nHugh", 
            "markdown_message": "<p>Hi Francois,</p>\n\n<p>Has there been any discussion about bounty yet? No worries if not, just pinging as its been a fortnight.</p>\n\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
            "type": "Activities::Comment", 
            "id": 1335387, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-02T14:47:32.067Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-02T14:47:32.067Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "@haquaman We're getting close to issuing our first round of bounty payouts, but we can't promise an exact date just yet. Thank you for your patience.", 
            "markdown_message": "<p><a href=\"/haquaman\">@haquaman</a> We&#39;re getting close to issuing our first round of bounty payouts, but we can&#39;t promise an exact date just yet. Thank you for your patience.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1336526, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-02T18:08:28.479Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-02T18:08:28.479Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Cool no worries, will check in another week or so", 
            "markdown_message": "<p>Cool no worries, will check in another week or so</p>\n", 
            "type": "Activities::Comment", 
            "id": 1337064, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-16T19:36:34.508Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:36:34.508Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bounty_amount": "8000.0", 
            "collaborator": {
                "username": "haquaman", 
                "url": "/haquaman"
            }, 
            "message": "Thanks for helping improve the security of Shopify Scripts and the mruby project!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify Scripts and the mruby project!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1369971, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T19:36:41.180Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:36:41.180Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1369972, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:09:42.873Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:09:42.873Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Hey thanks for the bounty!", 
            "markdown_message": "<p>Hey thanks for the bounty!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1371657, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:09:42.945Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:09:42.945Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1371658, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "haquaman", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/haquaman", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/646/dc284cea5e3d18b7d17719465c17723a8349a967_small.png?1424925238"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -59627336.795214176, 
    "disclosed_at": "2016-12-17T20:09:42.923Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/181232", 
    "created_at": "2016-11-10T03:33:06.714Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,</p>\n\n<p>The following file causes a segmentation fault in mruby, which also causes a segmentation fault in mruby-engine. I&#39;ve minimized this file down to the bare bones what crashes it, and renamed variables so you can see what is needed and what isn&#39;t.</p>\n<pre class=\"highlight plaintext\"><code>a=*&quot;any splat operator&quot;, case &quot;any object or nil&quot;\nwhen &quot;any value&quot;\n  redo |b|\n  &quot;any return object&quot;\nend\n</code></pre><pre class=\"highlight plaintext\"><code>$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n</code></pre><pre class=\"highlight plaintext\"><code>$ ./dev/bin/mruby crash.rb\nSegmentation fault: 11\n</code></pre><pre class=\"highlight plaintext\"><code>$ lldb ./dev/bin/mruby crash.rb\n(lldb) target create &quot;./dev/bin/mruby&quot;\nCurrent executable set to &#39;./dev/bin/mruby&#39; (x86_64).\n(lldb) settings set -- target.run-args  &quot;crash.rb&quot;\n(lldb) r\nProcess 18945 launched: &#39;./dev/bin/mruby&#39; (x86_64)\nProcess 18945 stopped\n* thread #1: tid = 0x4626e3b, 0x0000000100001814 mruby`ary_modify + 20, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n    frame #0: 0x0000000100001814 mruby`ary_modify + 20\nmruby`ary_modify:\n-&gt;  0x100001814 &lt;+20&gt;: movl   (%rsi), %eax\n    0x100001816 &lt;+22&gt;: shrl   $0xb, %eax\n    0x100001819 &lt;+25&gt;: andl   $0x100, %eax              ; imm = 0x100\n    0x10000181e &lt;+30&gt;: cmpl   $0x0, %eax\n(lldb) bt\n* thread #1: tid = 0x4626e3b, 0x0000000100001814 mruby`ary_modify + 20, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n  * frame #0: 0x0000000100001814 mruby`ary_modify + 20\n    frame #1: 0x0000000100001e10 mruby`mrb_ary_push + 48\n    frame #2: 0x00000001000426d5 mruby`mrb_vm_exec + 25589\n    frame #3: 0x000000010003c2c7 mruby`mrb_vm_run + 135\n    frame #4: 0x00000001000446b4 mruby`mrb_top_run + 100\n    frame #5: 0x000000010006f19f mruby`load_exec + 1183\n    frame #6: 0x000000010006ece3 mruby`mrb_load_file_cxt + 67\n    frame #7: 0x0000000100000d78 mruby`main + 904\n    frame #8: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb) register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000000\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000000\n       rdx = 0x0000000000000000\n       rdi = 0x0000000100600000\n       rsi = 0x0000000000000000\n       rbp = 0x00007fff5fbfc9f0\n       rsp = 0x00007fff5fbfc9c0\n        r8 = 0x0000000000000000\n        r9 = 0x00007fff5fbfc380\n       r10 = 0x5d00add5139cce40\n       r11 = 0x0000000000000001\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100001814  mruby`ary_modify + 20\n    rflags = 0x0000000000010206\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) \n</code></pre>\n<p>The cause for this is there is a null <code>RArray</code> struct getting sent via a ptr to <code>mrb_ary_push</code>, and then the program is trying to retrieve and set members of this null struct.</p>\n\n<p>A patch to fix this would be similar to:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/src/array.c b/src/array.c\nindex df95383..47d5ce8 100644\n</span><span class=\"gd\">--- a/src/array.c\n</span><span class=\"gi\">+++ b/src/array.c\n</span><span class=\"gu\">@@ -406,6 +406,9 @@ mrb_ary_push(mrb_state *mrb, mrb_value ary, mrb_value elem)\n</span> {\n   struct RArray *a = mrb_ary_ptr(ary);\n\n<span class=\"gi\">+  /* FIXME: throw an error? */\n+  if (!a) return;\n+\n</span>   ary_modify(mrb, a);\n   if (a-&gt;len == a-&gt;aux.capa)\n     ary_expand_capa(mrb, a, a-&gt;len + 1);\n</code></pre>\n<p>As mentioned above, this also affected mruby-engine via this:</p>\n<pre class=\"highlight plaintext\"><code>13:25 $ ./bin/sandbox crash.rb\n./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000002\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon&#39;t forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\nc:0002 p:0201 s:0005 E:001658 EVAL   ./bin/sandbox:20 [FINISH]\nc:0001 p:0000 s:0002 E:000c00 (none) [FINISH]\n\n-- Ruby level backtrace information ----------------------------------------\n./bin/sandbox:20:in `&lt;main&gt;&#39;\n./bin/sandbox:20:in `sandbox_eval&#39;\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000001 rbx: 0x00000001016665a8 rcx: 0x0000000101678a60\n rdx: 0x0000000000000000 rdi: 0x0000000101666440 rsi: 0x0000000000000000\n rbp: 0x00007fff5efe5f10 rsp: 0x00007fff5efe5ef0  r8: 0x0000000000000001\n  r9: 0x0000000000000000 r10: 0x0000000000000001 r11: 0x00000001016665a8\n r12: 0x0000000000000000 r13: 0x0000000101666440 r14: 0x0000000101666440\n r15: 0x0000000000000000 rip: 0x00000001015440f1 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x0000000100db65d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100c58023 rb_bug_context + 483\n2   ruby                                0x0000000100d2b653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001015440f1 ary_modify + 17\n5   ???                                 0x00000001016665a8 0x0 + 4318455208\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n&lt;snip various gems&gt;\n  185 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\nAbort trap: 6\n\n</code></pre>\n<p>After applying that patch to <code>ext/mruby_engine/mruby</code> and recompiling, that crash no longer happens.</p>\n\n<p>Just to clarify, I&#39;m not to sure how one would achieve <code>$10,000 for denial of service against Shopify\u2019s infrastructure caused by a bug in mruby or mruby_engine (for example, a crash in the native library).</code> as your rules clearly state to not test against your infrastructure. Is that something your end tests after submission of the bug?</p>\n\n<p>Also, should I approach mruby directly to get the patch resolved?</p>\n\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}