{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2017-08-27T11:11:43.604Z", 
    "voters": [
        "skansing"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 178990, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-08-26T23:19:57.976Z", 
    "vulnerability_information": "'Cross-Site WebSocket Hijacking' is possible, because the websocket connection is not secure (enough). \nThe traffic from and to the websocket can be sniffed with Chrome (see attachment), and replayed elsewhere (cross-domain). Explanation: https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\n\n**Steps**:\nAfter opening the homepage (https://app.legalrobot-uat.com) a websocket is created after a HTTP request like: https://app.legalrobot-uat.com/sockjs/689/k287_2tz/websocket, with a HTTP101 (switching protocols) response, resulting in a connection wss://app.legalrobot-uat.com/sockjs/689/k287_2tz/websocket.\n\nThis (upgrade) request can be called from an external origin.\n{F131186}\n\nAfter knowing the websocket URL, messages (captured in chrome) can be successfully sent. \n\nFor example:\nOpen a session:  [\"{\\\"msg\\\":\\\"connect\\\",\\\"version\\\":\\\"1\\\",\\\"support\\\":[\\\"1\\\",\\\"pre2\\\",\\\"pre1\\\"]}\"]\nPing:  [\"{\\\"msg\\\":\\\"ping\\\"}\"]\nLogin:  [\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"login\\\",\\\"params\\\":[{\\\"user\\\":{\\\"email\\\":\\\"arnotstacc@gmail.com\\\"},\\\"password\\\":{\\\"digest\\\":\\\"082a7a2a81c2733fd03567e47e0b6d9f09d32ec80065bda9c5cd34dd1c4f9edf\\\",\\\"algorithm\\\":\\\"sha-256\\\"}}],\\\"id\\\":\\\"7\\\"}\"]\nIt is also unnecessary, to include the password algorithm in the login message (which can be encrypted with: http://md5decrypt.net/en/Sha256/)\n\nA successful test with above messages using: http://ironwasp.org/cswsh.html (an online test tool).\n{F131189}\n\n**Suggestions to fix**:\n- Check the origin from the requester server-side and adjust the Origin header for the 'upgrade' request.\n- Add additional 'CSRF tokens'.\n- Encrypt messages, so they cannot be intercepted in Chrome\n\n**Additional references**:\nhttps://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/\nhttps://www.owasp.org/index.php/Testing_WebSockets_(OTG-CLIENT-010)\nhttps://humblesoftwaredev.wordpress.com/2016/08/01/securing-websocket-sockjs-connection/\n\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "The websocket traffic is not secure enough", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "attachments": [
        {
            "file_name": "legarobot-ws-upgrade_2016-10-30_1641_001.png", 
            "type": "image/png", 
            "id": 131186, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/186/172b87d930a3f23774e55c1c9e36272043209655/legarobot-ws-upgrade_2016-10-30_1641_001.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223339Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6e56743b8f8827c61f1a0e6e741280b74c9afeb92ee9e127c5fd0c674032c74c"
        }, 
        {
            "file_name": "websocket_legalrobot_chrome.png", 
            "type": "image/png", 
            "id": 131188, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/188/77642563f712b5477a69cd3080662612224eb863/websocket_legalrobot_chrome.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223339Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=963cf8ce40b0e3f5bd55cf9174e89c55edf9703f64947db8b5f0edef95a99d44"
        }, 
        {
            "file_name": "ironwasp-test_2016-10-30_1909.png", 
            "type": "image/png", 
            "id": 131189, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/189/b53c05681ff006b76690dfa606fa61eee7500b1f/ironwasp-test_2016-10-30_1909.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223339Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=161d589a1514602269066694b307c911997f76893283a24d85c6a791804f8d8c"
        }
    ], 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-11-04T18:13:07.936Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-04T18:13:07.936Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Thanks for the report. Luckily for us, the framework we use (Meteor), while it relies heavily on web sockets, seems to be immune to this type of attack because it uses on localStorage for authentication rather than cookie-based auth or other fairly vulnerable methods. By design, the sensitive information in localStorage is only accessible by javascript from the same origin.\n\nWhile it is possible to replay an upgrade request from another origin, the process you describe would require an attacker to compromise a user's browser to access the digest in order to be authenticated. If the browser itself is compromised, that's not really something we could protect against.\n\nHere is some more detail on the security implications of CSWSH-type attacks in Meteor: http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/\n\nNow, if there was some way to establish an authenticated web socket connection from another origin, that would be A Very Bad Day\u2122 for us, and for every other site that uses the Meteor framework. It's one reason we're so sensitive to respond to script injection attacks since some of those could potentially expose localStorage. Perhaps that is a potential attack vector for you to attempt: if you can somehow inject a script and expose the token in localStorage, then use that to execute arbitrary code on a malicious server. So, I'm going to close out this issue and we can reopen it if an attack like that can be demonstrated.", 
            "markdown_message": "<p>Thanks for the report. Luckily for us, the framework we use (Meteor), while it relies heavily on web sockets, seems to be immune to this type of attack because it uses on localStorage for authentication rather than cookie-based auth or other fairly vulnerable methods. By design, the sensitive information in localStorage is only accessible by javascript from the same origin.</p>\n\n<p>While it is possible to replay an upgrade request from another origin, the process you describe would require an attacker to compromise a user&#39;s browser to access the digest in order to be authenticated. If the browser itself is compromised, that&#39;s not really something we could protect against.</p>\n\n<p>Here is some more detail on the security implications of CSWSH-type attacks in Meteor: <a title=\"http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/\" href=\"/redirect?signature=a711faae923805b9c37ce06d84b382bd8a6b5ce5&amp;url=http%3A%2F%2Fwww.east5th.co%2Fblog%2F2015%2F06%2F08%2Fauthentication-with-localstorage%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Now, if there was some way to establish an authenticated web socket connection from another origin, that would be A Very Bad Day\u2122 for us, and for every other site that uses the Meteor framework. It&#39;s one reason we&#39;re so sensitive to respond to script injection attacks since some of those could potentially expose localStorage. Perhaps that is a potential attack vector for you to attempt: if you can somehow inject a script and expose the token in localStorage, then use that to execute arbitrary code on a malicious server. So, I&#39;m going to close out this issue and we can reopen it if an attack like that can be demonstrated.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1284868, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-26T23:19:57.995Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-26T23:19:57.995Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1957553, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-27T11:11:43.618Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-27T11:11:43.618Z", 
            "actor": {
                "username": "arnonymous", 
                "url": "/arnonymous", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/115/966/4f7d01df473074ee302ebcce81084d3b595ce891_medium.png?1476572839"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1958025, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-27T11:11:43.647Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-27T11:11:43.647Z", 
            "actor": {
                "username": "arnonymous", 
                "url": "/arnonymous", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/115/966/4f7d01df473074ee302ebcce81084d3b595ce891_medium.png?1476572839"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1958026, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "arnonymous", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/arnonymous", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/115/966/925e98d9770b79066f09635a138ce6427242ab71_small.png?1476572839"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-08-27T11:11:43.633Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/178990", 
    "created_at": "2016-10-30T19:17:43.941Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>&#39;Cross-Site WebSocket Hijacking&#39; is possible, because the websocket connection is not secure (enough). <br>\nThe traffic from and to the websocket can be sniffed with Chrome (see attachment), and replayed elsewhere (cross-domain). Explanation: <a title=\"https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\" href=\"/redirect?signature=7c4c1c7430d1d4e58718f42ca6b347e7aa878481&amp;url=https%3A%2F%2Fwww.christian-schneider.net%2FCrossSiteWebSocketHijacking.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html</span><i class=\"icon-external-link\"></i></a></p>\n\n<p><strong>Steps</strong>:<br>\nAfter opening the homepage (<a title=\"https://app.legalrobot-uat.com\" href=\"/redirect?signature=ff0b7339f4af2a668cf0d040f55f980983bae49d&amp;url=https%3A%2F%2Fapp.legalrobot-uat.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.legalrobot-uat.com</span><i class=\"icon-external-link\"></i></a>) a websocket is created after a HTTP request like: <a title=\"https://app.legalrobot-uat.com/sockjs/689/k287_2tz/websocket\" href=\"/redirect?signature=dd59802622cd50ac0ea28e605564bc7d0c71dbc9&amp;url=https%3A%2F%2Fapp.legalrobot-uat.com%2Fsockjs%2F689%2Fk287_2tz%2Fwebsocket\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.legalrobot-uat.com/sockjs/689/k287_2tz/websocket</span><i class=\"icon-external-link\"></i></a>, with a HTTP101 (switching protocols) response, resulting in a connection wss://app.legalrobot-uat.com/sockjs/689/k287_2tz/websocket.</p>\n\n<p>This (upgrade) request can be called from an external origin.<br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"legarobot-ws-upgrade_2016-10-30_1641_001.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/186/172b87d930a3f23774e55c1c9e36272043209655/legarobot-ws-upgrade_2016-10-30_1641_001.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223339Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=6e56743b8f8827c61f1a0e6e741280b74c9afeb92ee9e127c5fd0c674032c74c\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/186/172b87d930a3f23774e55c1c9e36272043209655/legarobot-ws-upgrade_2016-10-30_1641_001.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223339Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=6e56743b8f8827c61f1a0e6e741280b74c9afeb92ee9e127c5fd0c674032c74c\" class=\"markdown-inline-image\"></a></p>\n\n<p>After knowing the websocket URL, messages (captured in chrome) can be successfully sent. </p>\n\n<p>For example:<br>\nOpen a session:  [&quot;{\\&quot;msg\\&quot;:\\&quot;connect\\&quot;,\\&quot;version\\&quot;:\\&quot;1\\&quot;,\\&quot;support\\&quot;:[\\&quot;1\\&quot;,\\&quot;pre2\\&quot;,\\&quot;pre1\\&quot;]}&quot;]<br>\nPing:  [&quot;{\\&quot;msg\\&quot;:\\&quot;ping\\&quot;}&quot;]<br>\nLogin:  [&quot;{\\&quot;msg\\&quot;:\\&quot;method\\&quot;,\\&quot;method\\&quot;:\\&quot;login\\&quot;,\\&quot;params\\&quot;:[{\\&quot;user\\&quot;:{\\&quot;email\\&quot;:\\&quot;<a title=\"arnotstacc@gmail.com\" href=\"mailto:arnotstacc@gmail.com\" rel=\"nofollow noopener noreferrer\">arnotstacc@gmail.com</a>\\&quot;},\\&quot;password\\&quot;:{\\&quot;digest\\&quot;:\\&quot;082a7a2a81c2733fd03567e47e0b6d9f09d32ec80065bda9c5cd34dd1c4f9edf\\&quot;,\\&quot;algorithm\\&quot;:\\&quot;sha-256\\&quot;}}],\\&quot;id\\&quot;:\\&quot;7\\&quot;}&quot;]<br>\nIt is also unnecessary, to include the password algorithm in the login message (which can be encrypted with: <a title=\"http://md5decrypt.net/en/Sha256/\" href=\"/redirect?signature=3df629017fa6e65a86b8bde91312808fea3f386a&amp;url=http%3A%2F%2Fmd5decrypt.net%2Fen%2FSha256%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://md5decrypt.net/en/Sha256/</span><i class=\"icon-external-link\"></i></a>)</p>\n\n<p>A successful test with above messages using: <a title=\"http://ironwasp.org/cswsh.html\" href=\"/redirect?signature=567083df50ded83e26cfeba14ba451ba69100d10&amp;url=http%3A%2F%2Fironwasp.org%2Fcswsh.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://ironwasp.org/cswsh.html</span><i class=\"icon-external-link\"></i></a> (an online test tool).<br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"ironwasp-test_2016-10-30_1909.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/189/b53c05681ff006b76690dfa606fa61eee7500b1f/ironwasp-test_2016-10-30_1909.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223339Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=161d589a1514602269066694b307c911997f76893283a24d85c6a791804f8d8c\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/131/189/b53c05681ff006b76690dfa606fa61eee7500b1f/ironwasp-test_2016-10-30_1909.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T223339Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=161d589a1514602269066694b307c911997f76893283a24d85c6a791804f8d8c\" class=\"markdown-inline-image\"></a></p>\n\n<p><strong>Suggestions to fix</strong>:</p>\n\n<ul>\n<li>Check the origin from the requester server-side and adjust the Origin header for the &#39;upgrade&#39; request.</li>\n<li>Add additional &#39;CSRF tokens&#39;.</li>\n<li>Encrypt messages, so they cannot be intercepted in Chrome</li>\n</ul>\n\n<p><strong>Additional references</strong>:<br>\n<a title=\"https://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/\" href=\"/redirect?signature=ffd04e6cd720b29b022464925831b8631c2d1891&amp;url=https%3A%2F%2Fwww.notsosecure.com%2Fhow-cross-site-websocket-hijacking-could-lead-to-full-session-compromise%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"https://www.owasp.org/index.php/Testing_WebSockets_(OTG-CLIENT-010)\" href=\"/redirect?signature=b4c938d5c7b1b60617d51929fa9d1fcae7cb273e&amp;url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FTesting_WebSockets_%28OTG-CLIENT-010%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.owasp.org/index.php/Testing_WebSockets_(OTG-CLIENT-010)</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"https://humblesoftwaredev.wordpress.com/2016/08/01/securing-websocket-sockjs-connection/\" href=\"/redirect?signature=74a5942b95f15d7187c38c4418e71911f0cd52e6&amp;url=https%3A%2F%2Fhumblesoftwaredev.wordpress.com%2F2016%2F08%2F01%2Fsecuring-websocket-sockjs-connection%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://humblesoftwaredev.wordpress.com/2016/08/01/securing-websocket-sockjs-connection/</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.legalrobot.com", 
            "about": "Automated legal document review using artificial intelligence", 
            "twitter_handle": "LegalRobot", 
            "name": "Legal Robot"
        }, 
        "handle": "legalrobot", 
        "url": "https://hackerone.com/legalrobot", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/601/d66a130fccecc6d857e39f8b4251b67e4dfcc9db_small.png?1472852893", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/601/9242a6d1525aeaccd124e9bd6f222a3ca41f3de9_medium.png?1472852893"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1601, 
        "default_currency": "usd"
    }, 
    "is_published": false
}