{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2017-10-16T07:07:08.312Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 211283, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-08-26T23:09:59.492Z", 
    "vulnerability_information": "### Description:\nThe given URL fails to validate Origin header- leading to Cross-Site WebSocket Hijacking. \n\n### Impact:\nThe impact, however, depends on how the server is configured. For example, it might require an authentication token which are user specific. In such cases, it might not be as sever as it would be in cases where server doesn't require anything at all.  \nSince almost all the request in the site are performed in web socket, it might be possible to hijack the websocket. The impact would be similar to side-wise CSRF plus every response from server could be possible to be read by attacker.\n\n### Affected Domain: \napp.legalrobot.com/socketjs/444/jfalksf/websocket\n\n### Reference: \nhttps://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\nhttps://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "Cross Site WebSocket Hijacking", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/166/845/78c0b460c8f71018872f63870da03a25ba429312/Screenshot_from_2017-03-07_13-20-09.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRRGIDB3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223128Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEBAaDBxaaLwYN2vGJMHU3yK3A60CbW7QJhRBSUWEebtoqVFBavCBeg3jCt%2Ff6Ue7ixJjwCt7yq0tq9sMjLsNcoWRvtzj2%2FROkCO4zNzzBp31CEVqphGDPGK4TwxJpsrRac9NLMf03D%2Be%2BJ2ZNV2d3nHzvT4XKWaT82j9XOTkFb6Na6DxwgvQvr1Hf%2FEqlGdE892eO07jT5EU%2FK35L97rIFHrO9VcuTN7ryNS%2B7sAimJ6rHmOLQJ%2BYUkhqg0irzYjFAYK2lpH5L8hzjkL5gOuzMlDEuL3UJAzmDO%2BlHSr3KOiEOOJt5CAwYCvbfdQ%2Fmf9SK6rXcy%2BUcSjH31N16mUjQCBjabHn0E45bovxZ0SsgCCItoso2NvMPAl7ZTxRvQFkkIMIKFg%2F17b%2F6Efuj07DmrIFpvHwbVR9jVNresgxKqtpJ4WLjNKNl1rYMpAMWsuond5AHhcYsUjveEyaC9r3bV2RH0HyaZPga0CQ8O2R5uHtuAnNSkzHtOZlrgultAHw6bLgsH%2F3dQsi24%2BF0PkFA5L29Va%2FxPiVy3QrmsPxcQPTKnaR%2BmyDfaDY9xyHusS%2BLnQHy9tJ9RX447YdvsdbyGpRbao2BKcHLcosL%2Bm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2ba576aa76b5d70979877adb6b84fa1b3c8b3edfdb7e40b786581aaf99c304d1", 
                    "type": "image/png", 
                    "id": 166845, 
                    "filename": "Screenshot_from_2017-03-07_13-20-09.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-03-07T07:56:28.922Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-07T07:56:28.922Z", 
            "actor": {
                "username": "bughunter111", 
                "url": "/bughunter111", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Sorry I forgot to attach the screen-shot.", 
            "markdown_message": "<p>Sorry I forgot to attach the screen-shot.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1523723, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-03-07T16:55:31.379Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-03-07T16:55:31.379Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "Thanks for the report. Luckily for us, the framework we use (Meteor), while it relies heavily on web sockets, seems to be immune to this type of attack because it uses on localStorage for authentication rather than cookie-based auth, or other fairly vulnerable methods. By design, the sensitive information in localStorage is only accessible by javascript from the same origin.\n\nWhile it is possible to replay an upgrade request from another origin, the process you describe would require an attacker to compromise a user's browser to access the digest in order to be authenticated. If the browser itself is compromised, that's not really something we could protect against.\n\nHere is some more detail on the security implications of CSWSH-type attacks in Meteor: http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/\n\nNow, if there was some way to establish an authenticated web socket connection from another origin, that would be A Very Bad Day\u2122 for us, and for every other site that uses the Meteor framework. It's one reason we're so sensitive to respond to script injection attacks since some of those could potentially expose localStorage. Perhaps that is a potential attack vector for you to attempt: if you can somehow inject a script and expose the token in localStorage, then use that to execute arbitrary code on a malicious server. So, I'm going to close out this issue and we can reopen it if an attack like that can be demonstrated.", 
            "markdown_message": "<p>Thanks for the report. Luckily for us, the framework we use (Meteor), while it relies heavily on web sockets, seems to be immune to this type of attack because it uses on localStorage for authentication rather than cookie-based auth, or other fairly vulnerable methods. By design, the sensitive information in localStorage is only accessible by javascript from the same origin.</p>\n\n<p>While it is possible to replay an upgrade request from another origin, the process you describe would require an attacker to compromise a user&#39;s browser to access the digest in order to be authenticated. If the browser itself is compromised, that&#39;s not really something we could protect against.</p>\n\n<p>Here is some more detail on the security implications of CSWSH-type attacks in Meteor: <a title=\"http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/\" href=\"/redirect?signature=a711faae923805b9c37ce06d84b382bd8a6b5ce5&amp;url=http%3A%2F%2Fwww.east5th.co%2Fblog%2F2015%2F06%2F08%2Fauthentication-with-localstorage%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.east5th.co/blog/2015/06/08/authentication-with-localstorage/</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Now, if there was some way to establish an authenticated web socket connection from another origin, that would be A Very Bad Day\u2122 for us, and for every other site that uses the Meteor framework. It&#39;s one reason we&#39;re so sensitive to respond to script injection attacks since some of those could potentially expose localStorage. Perhaps that is a potential attack vector for you to attempt: if you can somehow inject a script and expose the token in localStorage, then use that to execute arbitrary code on a malicious server. So, I&#39;m going to close out this issue and we can reopen it if an attack like that can be demonstrated.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1524655, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-26T23:09:59.510Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-26T23:09:59.510Z", 
            "actor": {
                "username": "danrubins", 
                "url": "/danrubins", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/021/222/fd4d9c3e5ca72c982596cbb9747ec14629aab4df_medium.jpg?1472196419"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1957534, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-10-16T07:07:08.334Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-10-16T07:07:08.334Z", 
            "actor": {
                "username": "bughunter111", 
                "url": "/bughunter111", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2068278, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-10-16T07:07:08.370Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-10-16T07:07:08.370Z", 
            "actor": {
                "username": "bughunter111", 
                "url": "/bughunter111", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "legalrobot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2068279, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "bughunter111", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/bughunter111", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-10-16T07:07:08.356Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/211283", 
    "created_at": "2017-03-07T07:55:45.004Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h3 id=\"description\">Description:</h3>\n\n<p>The given URL fails to validate Origin header- leading to Cross-Site WebSocket Hijacking. </p>\n\n<h3 id=\"impact\">Impact:</h3>\n\n<p>The impact, however, depends on how the server is configured. For example, it might require an authentication token which are user specific. In such cases, it might not be as sever as it would be in cases where server doesn&#39;t require anything at all.<br><br>\nSince almost all the request in the site are performed in web socket, it might be possible to hijack the websocket. The impact would be similar to side-wise CSRF plus every response from server could be possible to be read by attacker.</p>\n\n<h3 id=\"affected-domain\">Affected Domain:</h3>\n\n<p>app.legalrobot.com/socketjs/444/jfalksf/websocket</p>\n\n<h3 id=\"reference\">Reference:</h3>\n\n<p><a title=\"https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\" href=\"/redirect?signature=7c4c1c7430d1d4e58718f42ca6b347e7aa878481&amp;url=https%3A%2F%2Fwww.christian-schneider.net%2FCrossSiteWebSocketHijacking.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.christian-schneider.net/CrossSiteWebSocketHijacking.html</span><i class=\"icon-external-link\"></i></a><br>\n<a title=\"https://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/\" href=\"/redirect?signature=ffd04e6cd720b29b022464925831b8631c2d1891&amp;url=https%3A%2F%2Fwww.notsosecure.com%2Fhow-cross-site-websocket-hijacking-could-lead-to-full-session-compromise%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.notsosecure.com/how-cross-site-websocket-hijacking-could-lead-to-full-session-compromise/</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.legalrobot.com", 
            "about": "Automated legal document review using artificial intelligence", 
            "twitter_handle": "LegalRobot", 
            "name": "Legal Robot"
        }, 
        "handle": "legalrobot", 
        "url": "https://hackerone.com/legalrobot", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/601/d66a130fccecc6d857e39f8b4251b67e4dfcc9db_small.png?1472852893", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/601/9242a6d1525aeaccd124e9bd6f222a3ca41f3de9_medium.png?1472852893"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1601, 
        "default_currency": "usd"
    }, 
    "is_published": false
}