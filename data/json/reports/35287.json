{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-03-13T04:17:04.736Z", 
    "voters": [
        "eveeez", 
        "dudez"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "140.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 35287, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-03-12T19:41:06.521Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "getting emails of users/removing them from victims account [using typical attack]", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-04-11T19:41:07.311Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$140", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-11-13T05:14:29.388Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-13T05:14:29.388Z", 
            "actor": {
                "username": "jimio", 
                "url": "/jimio", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/734/a4e139dd022d8440c05c3d788e203859cc708139_medium.jpg?1423261245"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Hello, and thank you for the report.\n\nI will look into this a bit further, but the token is tied to the account that you specify in [account_name], as well as a timestamp from when the token is generated (why we you notice that a new one is generated with each request).\n\nCould you perhaps show a working proof-of-concept, or try to for a test account like \u201cjimio74\u201d to deduce the associated email address? We believe that the difficulty in crawlability/discoverability of these links to be sufficient for protecting the information displayed on the page; however, I\u2019ll also look into the obfuscation (t****@gmail.com) as you suggest, and can change this report's resolution if we end up making any changes.\n\nthanks!", 
            "markdown_message": "<p>Hello, and thank you for the report.</p>\n\n<p>I will look into this a bit further, but the token is tied to the account that you specify in [account_name], as well as a timestamp from when the token is generated (why we you notice that a new one is generated with each request).</p>\n\n<p>Could you perhaps show a working proof-of-concept, or try to for a test account like \u201cjimio74\u201d to deduce the associated email address? We believe that the difficulty in crawlability/discoverability of these links to be sufficient for protecting the information displayed on the page; however, I\u2019ll also look into the obfuscation (t****@gmail.com) as you suggest, and can change this report&#39;s resolution if we end up making any changes.</p>\n\n<p>thanks!</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 159352, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-11-17T12:39:56.380Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-17T12:39:56.380Z", 
            "actor": {
                "username": "akhil-reni", 
                "url": "/akhil-reni", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/797/45b0411638bf5bf8efa543cab0878a4f331d7b2b_medium.JPG?1482734201"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "hey hi,\n\nYes, Every time a new token is generated and the old one doesn't expire.\nMaking a change like using asterisks  is really a good idea,\ncause email id is some sensitive information(sometimes can retrieve  from browser history )  :)\nWhats your call? \n\n\nRegards,\nKarthik", 
            "markdown_message": "<p>hey hi,</p>\n\n<p>Yes, Every time a new token is generated and the old one doesn&#39;t expire.<br>\nMaking a change like using asterisks  is really a good idea,<br>\ncause email id is some sensitive information(sometimes can retrieve  from browser history )  :)<br>\nWhats your call? </p>\n\n<p>Regards,<br>\nKarthik</p>\n", 
            "type": "Activities::BugNew", 
            "id": 161877, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-11-17T20:52:56.940Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-17T20:52:56.940Z", 
            "actor": {
                "username": "jimio", 
                "url": "/jimio", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/734/a4e139dd022d8440c05c3d788e203859cc708139_medium.jpg?1423261245"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 162681, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "akhil-reni", 
                "url": "/akhil-reni"
            }, 
            "created_at": "2014-11-22T04:36:34.199Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-22T04:43:53.013Z", 
            "actor": {
                "username": "jimio", 
                "url": "/jimio", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/734/a4e139dd022d8440c05c3d788e203859cc708139_medium.jpg?1423261245"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "We consider this issue to be fixed now. Can you please confirm?\n\n3 & 4 on your list were the only issues that we considered fixing. 1 & 2 are sufficiently protected due to the nature in which tokens are generated.\n\nThank you for helping keep Twitter secure!", 
            "markdown_message": "<p>We consider this issue to be fixed now. Can you please confirm?</p>\n\n<p>3 &amp; 4 on your list were the only issues that we considered fixing. 1 &amp; 2 are sufficiently protected due to the nature in which tokens are generated.</p>\n\n<p>Thank you for helping keep Twitter secure!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 166312, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-11-22T06:30:30.993Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-22T06:30:30.993Z", 
            "actor": {
                "username": "akhil-reni", 
                "url": "/akhil-reni", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/797/45b0411638bf5bf8efa543cab0878a4f331d7b2b_medium.JPG?1482734201"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Seems fixed :) \n", 
            "markdown_message": "<p>Seems fixed :) </p>\n", 
            "type": "Activities::Comment", 
            "id": 166334, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2014-11-23T22:11:10.681Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-11-23T22:11:10.681Z", 
            "actor": {
                "url": "/twitter", 
                "profile": {
                    "name": "Twitter"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
                }
            }, 
            "team_handle": "twitter", 
            "bounty_amount": "140.0", 
            "collaborator": {
                "username": "akhil-reni", 
                "url": "/akhil-reni"
            }, 
            "message": "Thanks again for helping us keep Twitter safe and secure for our users!", 
            "markdown_message": "<p>Thanks again for helping us keep Twitter safe and secure for our users!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 166867, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-03-12T19:41:06.699Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-12T19:41:06.699Z", 
            "actor": {
                "username": "jintwitter", 
                "url": "/jintwitter", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "first_to_agree": true, 
            "message": "Thanks again. Let's disclose this publicly.", 
            "markdown_message": "<p>Thanks again. Let&#39;s disclose this publicly.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 352553, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-03-13T04:17:04.891Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-13T04:17:04.891Z", 
            "actor": {
                "username": "akhil-reni", 
                "url": "/akhil-reni", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/797/45b0411638bf5bf8efa543cab0878a4f331d7b2b_medium.JPG?1482734201"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "Not the best of ones :)", 
            "markdown_message": "<p>Not the best of ones :)</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 353191, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-03-13T04:17:05.394Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-13T04:17:05.394Z", 
            "actor": {
                "username": "akhil-reni", 
                "url": "/akhil-reni", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/797/45b0411638bf5bf8efa543cab0878a4f331d7b2b_medium.JPG?1482734201"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "twitter", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 353192, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "akhil-reni", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/akhil-reni", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/012/797/784a52c482ee24eefa5550c520461b6d122dab6e_small.JPG?1482734201"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -115356038.04731312, 
    "disclosed_at": "2015-03-13T04:17:05.335Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/35287", 
    "created_at": "2014-11-12T13:04:55.177Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hey Hi, </p>\n\n<p>I would like to explain a typical type of attack combined with a brute force attack leading to email disclosure. <br>\nconditions : should be having email notifications ON .</p>\n\n<p>Every time someone follows me , favs my tweet i get a notification on my email, and the footer of the email . click here if this email is not signed up.</p>\n\n<p><a title=\"https://twitter.com/account/not_my_account/%5Baccount_name%5D/D26H5-DAH4C-141579\" href=\"/redirect?signature=05f9ea1b5b7e9dd870e7adb20726b588aa9902b3&amp;url=https%3A%2F%2Ftwitter.com%2Faccount%2Fnot_my_account%2F%255Baccount_name%255D%2FD26H5-DAH4C-141579\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://twitter.com/account/not_my_account/%5Baccount_name%5D/D26H5-DAH4C-141579</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Every notification email has a different unique Code.<br>\nBut the probability of getting the right is very LOW.<br>\nBut when we send 1000 email notifications to the victim(by fav and un-fav continuously on a particular tweet )<br><br>\nthe probability decreases a bit, and when the email notifications are increased the probability of getting the right code gets HIGH!</p>\n\n<p>chances of getting the right code \u221d number of notification emails.</p>\n\n<p>This whole process can be simply automated using PHP or python, making it more easy.</p>\n\n<p>Faults in the system:</p>\n\n<p>1) a unique code is generated every time, 5 secs 5 notification emails = 5 different codes.<br>\n      Fix suggested: The code generated should be the same for like next 1 hour</p>\n\n<p>2)  The code doesn&#39;t expire.  i dig&#39;d into one of my old twitter notification emails and seen that the code is still active.<br>\n        Fix suggested : Expire tokens ASAP!</p>\n\n<p>3)  Getting the right discloses the email. whenever i get the right code, the email is disclosed.<br>\n              For example: for username <a href=\"/test\">@test</a> entering the right code discloses<br>\n              &quot;If you did not sign up for the Twitter account &quot;test&quot;, please confirm so that we may remove your                  email address <a title=\"test@gmail.com\" href=\"mailto:test@gmail.com\" rel=\"nofollow noopener noreferrer\">test@gmail.com</a> from this account. &quot;<br>\n      Fix suggested : use *** instead<br>\nsomething like te****@gmail.com</p>\n\n<p>4) if a user removes an email , the code should immediately  get expired .<br>\n    if we hit the right code it still discloses the old email.<br>\nsomething like this:<br>\n&quot;Your email has been removed.<br>\nYour email (<a title=\"test@live.com\" href=\"mailto:test@live.com\" rel=\"nofollow noopener noreferrer\">test@live.com</a>) has been removed from the Twitter account &quot;test&quot;.</p>\n\n<p>You will no longer receive Twitter notifications intended for this account.&quot;</p>\n\n<p>Thanks,<br>\nKarthik<br>\nwesecureapp</p>\n", 
    "vulnerability_information": "Hey Hi, \r\n\r\nI would like to explain a typical type of attack combined with a brute force attack leading to email disclosure. \r\nconditions : should be having email notifications ON .\r\n\r\nEvery time someone follows me , favs my tweet i get a notification on my email, and the footer of the email . click here if this email is not signed up.\r\n\r\nhttps://twitter.com/account/not_my_account/[account_name]/D26H5-DAH4C-141579\r\n\r\nEvery notification email has a different unique Code.\r\nBut the probability of getting the right is very LOW.\r\nBut when we send 1000 email notifications to the victim(by fav and un-fav continuously on a particular tweet )  \r\nthe probability decreases a bit, and when the email notifications are increased the probability of getting the right code gets HIGH!\r\n\r\nchances of getting the right code \u221d number of notification emails.\r\n\r\nThis whole process can be simply automated using PHP or python, making it more easy.\r\n\r\nFaults in the system:\r\n\r\n1) a unique code is generated every time, 5 secs 5 notification emails = 5 different codes.\r\n      Fix suggested: The code generated should be the same for like next 1 hour\r\n\r\n2)  The code doesn't expire.  i dig'd into one of my old twitter notification emails and seen that the code is still active.\r\n        Fix suggested : Expire tokens ASAP!\r\n\r\n3)  Getting the right discloses the email. whenever i get the right code, the email is disclosed.\r\n              For example: for username @test entering the right code discloses\r\n              \"If you did not sign up for the Twitter account \"test\", please confirm so that we may remove your                  email address test@gmail.com from this account. \"\r\n      Fix suggested : use *** instead\r\nsomething like te****@gmail.com\r\n\r\n4) if a user removes an email , the code should immediately  get expired .\r\n    if we hit the right code it still discloses the old email.\r\nsomething like this:\r\n\"Your email has been removed.\r\nYour email (test@live.com) has been removed from the Twitter account \"test\".\r\n\r\nYou will no longer receive Twitter notifications intended for this account.\"\r\n\r\n\r\nThanks,\r\nKarthik\r\nwesecureapp", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://twitter.com", 
            "about": "Twitter helps you create and share ideas and information instantly, without barriers.", 
            "twitter_handle": "twittersecurity", 
            "name": "Twitter"
        }, 
        "handle": "twitter", 
        "url": "https://hackerone.com/twitter", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/061/4acfe72859c5e9cb48a152edb4e498e13fa28df2_small.?1439954730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/061/e78ef26a3191adcabe7311daa107bd9e152d3b5c_medium.?1439954730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 61, 
        "default_currency": "usd"
    }, 
    "is_published": false
}