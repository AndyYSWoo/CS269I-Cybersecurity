{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "duplicate", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-17T20:16:27.760Z", 
    "voters": [
        "eveeez", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": 181232, 
    "id": 183696, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-17T20:51:10.024Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Invalid memory access while freeing memory, caused by invalid type passed to mrb_ary_unshift", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Duplicate", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/135/711/6e6a264a5a3fcce853239a6452274e13e8000c87/crash-183696.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWYI2GPWO%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224536Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDGZ9hZPNXy0op0dbUCK3A2FIHB%2BibDXwZCFl83WTNlShweklDkKhtUNsdiH1ZDSlGSdLObBpyGJdCeuHTlImqCYdt8f2yBKifOTf2TivYpJrNHupdtHvnqAWi7W9%2BjwJ%2BTCwiOrcStmIDnFCyyqwY6TAI5WG5MrEEDv8wrLdp996xp151lj%2F4um2Zv496W8ro76jvQ88joGdHpQVXnNfV1GVszM9x2MSCQxnQNnSXcnSWseYTKLzyFp0ZHOTPrPzq2uSlVkK%2F3QymE%2FxPIDTGw0YAH0dkxUT6j5w6dpcr%2BrzhYkptWupenUAF0MVqKJxNJZkBP3vJojReAQxLLf6Q5HsYqGm6jhS4748ZyTRZgChKL9lshIjpbjIu5MbLvwX%2F27PaXT7zSgwK903viGfy%2Bho9qoZUssvAToQJIzp0gqB8TNCETjgLLeFaQk13faNP%2Bs6DczQQAjcVHP0T4iXvprpJ7WF4Lgvdg6C%2FwSgLkD8N%2BofGZQflIFdduF6tbfUDe6RZqExPuAHXZR8zPF7DVwtnOckvWNNJFfV2j3cG1J4PetkJkxnwBNpnZP4nCyTKbwMPXXPODGNKYyXAqp3Qy95YBxWsTYos6qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6c8a9ef06ecb78a50d14bbec1179a73c26e35396650a2dfdd6f1bfb1cb3b6bf8", 
                    "type": "text/plain", 
                    "id": 135711, 
                    "filename": "crash-183696.rb"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/135/710/c35e6c4b91c143ff999f9beeb049aa21c38e3187/bug-183696.patch?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWYI2GPWO%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224536Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDGZ9hZPNXy0op0dbUCK3A2FIHB%2BibDXwZCFl83WTNlShweklDkKhtUNsdiH1ZDSlGSdLObBpyGJdCeuHTlImqCYdt8f2yBKifOTf2TivYpJrNHupdtHvnqAWi7W9%2BjwJ%2BTCwiOrcStmIDnFCyyqwY6TAI5WG5MrEEDv8wrLdp996xp151lj%2F4um2Zv496W8ro76jvQ88joGdHpQVXnNfV1GVszM9x2MSCQxnQNnSXcnSWseYTKLzyFp0ZHOTPrPzq2uSlVkK%2F3QymE%2FxPIDTGw0YAH0dkxUT6j5w6dpcr%2BrzhYkptWupenUAF0MVqKJxNJZkBP3vJojReAQxLLf6Q5HsYqGm6jhS4748ZyTRZgChKL9lshIjpbjIu5MbLvwX%2F27PaXT7zSgwK903viGfy%2Bho9qoZUssvAToQJIzp0gqB8TNCETjgLLeFaQk13faNP%2Bs6DczQQAjcVHP0T4iXvprpJ7WF4Lgvdg6C%2FwSgLkD8N%2BofGZQflIFdduF6tbfUDe6RZqExPuAHXZR8zPF7DVwtnOckvWNNJFfV2j3cG1J4PetkJkxnwBNpnZP4nCyTKbwMPXXPODGNKYyXAqp3Qy95YBxWsTYos6qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=941ee40be9b5a728efea4fe1b331106949b9b5101fcc58716f45494002673d9c", 
                    "type": "text/x-diff", 
                    "id": 135710, 
                    "filename": "bug-183696.patch"
                }
            ], 
            "automated_response": false, 
            "created_at": "2016-11-21T04:58:43.896Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-21T04:58:43.896Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Added patch and crashfile.", 
            "markdown_message": "<p>Added patch and crashfile.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1309097, 
            "genius_execution_id": null
        }, 
        {
            "original_report_id": 181232, 
            "automated_response": false, 
            "created_at": "2016-11-21T15:18:53.412Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-21T15:18:53.412Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report.\n\nEven though the crash is in a different place, this issue has the same root cause as #181232 and #183667 (a bug in the code generator), and our patch for that issue fixed all three crashes. Thus, I'm closing this as a duplicate.", 
            "markdown_message": "<p>Thank you for your report.</p>\n\n<p>Even though the crash is in a different place, this issue has the same root cause as <a href=\"/reports/181232\">#181232</a> and <a href=\"/reports/183667\">#183667</a> (a bug in the code generator), and our patch for that issue fixed all three crashes. Thus, I&#39;m closing this as a duplicate.</p>\n", 
            "type": "Activities::BugDuplicate", 
            "id": 1309893, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-21T19:52:25.751Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-21T19:52:25.751Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Ah yeh, so you fixed it in the parser. Do you mind sharing the patch you applied so i can apply that to my fuzzing?", 
            "markdown_message": "<p>Ah yeh, so you fixed it in the parser. Do you mind sharing the patch you applied so i can apply that to my fuzzing?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1310557, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-21T20:05:47.944Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-21T20:05:47.944Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "The patch we ended up going with is this:\n```patch\ndiff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 744b2fd..2a5b10a 100644\n--- a/mrbgems/mruby-compiler/core/codegen.c\n+++ b/mrbgems/mruby-compiler/core/codegen.c\n@@ -2025,6 +2025,7 @@ codegen(codegen_scope *s, node *tree, int val)\n       }\n       genop(s, MKOP_sBx(OP_JMP, s->loop->pc2 - s->pc));\n     }\n+    if (val) push();\n     break;\n \n   case NODE_RETRY:\n@@ -2059,6 +2060,7 @@ codegen(codegen_scope *s, node *tree, int val)\n           genop(s, MKOP_sBx(OP_JMP, lp->pc1 - s->pc));\n         }\n       }\n+      if (val) push();\n     }\n     break;\n \ndiff --git a/test/t/codegen.rb b/test/t/codegen.rb\nindex 99d6dbe..d28d339 100644\n--- a/test/t/codegen.rb\n+++ b/test/t/codegen.rb\n@@ -4,3 +4,21 @@\n assert('empty condition in ternary expression parses correctly') do\n   assert_equal () ? 1 : 2, 2\n end\n+\n+assert('codegen absorbs arguments to redo and retry if they are the argument of a call') do\n+  assert_nothing_raised do\n+    a=*\"1\", case nil\n+    when 1\n+      redo |\n+      1\n+    end\n+  end\n+\n+  assert_nothing_raised do\n+    a=*\"1\", case nil\n+    when 1\n+      retry |\n+      1\n+    end\n+  end\n+end\n ```", 
            "markdown_message": "<p>The patch we ended up going with is this:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\nindex 744b2fd..2a5b10a 100644\n</span><span class=\"gd\">--- a/mrbgems/mruby-compiler/core/codegen.c\n</span><span class=\"gi\">+++ b/mrbgems/mruby-compiler/core/codegen.c\n</span><span class=\"gu\">@@ -2025,6 +2025,7 @@ codegen(codegen_scope *s, node *tree, int val)\n</span>       }\n       genop(s, MKOP_sBx(OP_JMP, s-&gt;loop-&gt;pc2 - s-&gt;pc));\n     }\n<span class=\"gi\">+    if (val) push();\n</span>     break;\n\n   case NODE_RETRY:\n<span class=\"gu\">@@ -2059,6 +2060,7 @@ codegen(codegen_scope *s, node *tree, int val)\n</span>           genop(s, MKOP_sBx(OP_JMP, lp-&gt;pc1 - s-&gt;pc));\n         }\n       }\n<span class=\"gi\">+      if (val) push();\n</span>     }\n     break;\n\n<span class=\"gh\">diff --git a/test/t/codegen.rb b/test/t/codegen.rb\nindex 99d6dbe..d28d339 100644\n</span><span class=\"gd\">--- a/test/t/codegen.rb\n</span><span class=\"gi\">+++ b/test/t/codegen.rb\n</span><span class=\"gu\">@@ -4,3 +4,21 @@\n</span> assert(&#39;empty condition in ternary expression parses correctly&#39;) do\n   assert_equal () ? 1 : 2, 2\n end\n<span class=\"gi\">+\n+assert(&#39;codegen absorbs arguments to redo and retry if they are the argument of a call&#39;) do\n+  assert_nothing_raised do\n+    a=*&quot;1&quot;, case nil\n+    when 1\n+      redo |\n+      1\n+    end\n+  end\n+\n+  assert_nothing_raised do\n+    a=*&quot;1&quot;, case nil\n+    when 1\n+      retry |\n+      1\n+    end\n+  end\n+end\n</span></code></pre>", 
            "type": "Activities::Comment", 
            "id": 1310619, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-21T20:20:27.814Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-21T20:20:27.814Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks! Would have never tried anything in the code gen. Will test later tonight some of my backlog to avoid more dups", 
            "markdown_message": "<p>Thanks! Would have never tried anything in the code gen. Will test later tonight some of my backlog to avoid more dups</p>\n", 
            "type": "Activities::Comment", 
            "id": 1310658, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-23T01:48:25.271Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-23T01:48:25.271Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Cool, the top of my backlog isn't fixed by this, so will send through some more reports in the next few days.\n\nCheers,\n\nHugh", 
            "markdown_message": "<p>Cool, the top of my backlog isn&#39;t fixed by this, so will send through some more reports in the next few days.</p>\n\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
            "type": "Activities::Comment", 
            "id": 1314376, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-23T02:04:31.513Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-23T02:04:31.513Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "For future reports, would you prefer a fix in the codegen like yours, or in the code raising an error like mine?", 
            "markdown_message": "<p>For future reports, would you prefer a fix in the codegen like yours, or in the code raising an error like mine?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1314391, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-23T03:45:54.077Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-23T03:45:54.077Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "We're trying to fix the root cause and not the symptoms; but not all bugs will have their root  cause in codegen.", 
            "markdown_message": "<p>We&#39;re trying to fix the root cause and not the symptoms; but not all bugs will have their root  cause in codegen.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1314461, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:16:27.778Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:16:27.778Z", 
            "actor": {
                "username": "haquaman", 
                "url": "/haquaman", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/646/00e8f30e9c2903d8cd0fc7e31caadc141a3a9841_medium.png?1424925238"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "Care to disclose?", 
            "markdown_message": "<p>Care to disclose?</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1371671, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:51:10.050Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:51:10.050Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1371708, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T20:51:10.094Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T20:51:10.094Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1371709, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "haquaman", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/haquaman", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/646/dc284cea5e3d18b7d17719465c17723a8349a967_small.png?1424925238"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2016-12-17T20:51:10.069Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/183696", 
    "created_at": "2016-11-21T04:57:52.137Z", 
    "original_report_url": "https://hackerone.com/reports/181232", 
    "vulnerability_information_html": "<p>Hi,</p>\n\n<p>Phew, this was a tricky one as the cause wasn&#39;t next door to where the dereference happened!</p>\n\n<p>The file causing this is:</p>\n<pre class=\"highlight plaintext\"><code>a *case\n  when nil\n  redo\nend\n</code></pre><pre class=\"highlight plaintext\"><code>$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n</code></pre><pre class=\"highlight plaintext\"><code>$ ./dev/bin/mruby crash.rb\ncrash.rb:1:3: &#39;*&#39; interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method &#39;a&#39; for main (NoMethodError)\nSegmentation fault: 11\n</code></pre><pre class=\"highlight plaintext\"><code>(lldb) target create &quot;./dev/bin/mruby&quot;\nCurrent executable set to &#39;./dev/bin/mruby&#39; (x86_64).\n(lldb) settings set -- target.run-args  &quot;crash.rb&quot;\n(lldb) r\nProcess 47144 launched: &#39;./dev/bin/mruby&#39; (x86_64)\ncrash.rb:1:3: &#39;*&#39; interpreted as argument prefix\ntrace:\n    [0] crash.rb:3\ncrash.rb:3: undefined method &#39;a&#39; for main (NoMethodError)\nProcess 47144 stopped\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n    frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\nmruby`kh_destroy_iv:\n-&gt;  0x100037533 &lt;+35&gt;: movq   0x18(%rax), %rax\n    0x100037537 &lt;+39&gt;: movq   %rax, %rsi\n    0x10003753a &lt;+42&gt;: callq  0x100017740               ; mrb_free\n    0x10003753f &lt;+47&gt;: movq   -0x8(%rbp), %rdi\n(lldb) bt\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n  * frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\n    frame #1: 0x0000000100037d9d mruby`iv_free + 29\n    frame #2: 0x0000000100037e90 mruby`mrb_gc_free_iv + 48\n    frame #3: 0x0000000100017a76 mruby`obj_free + 86\n    frame #4: 0x00000001000179e7 mruby`free_heap + 135\n    frame #5: 0x0000000100017dfd mruby`mrb_gc_destroy + 29\n    frame #6: 0x000000010002b2a2 mruby`mrb_close + 210\n    frame #7: 0x0000000100001475 mruby`cleanup + 133\n    frame #8: 0x0000000100000e6b mruby`main + 1147\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000001\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000006\n       rdx = 0x0000000100017a66  mruby`obj_free + 70\n       rdi = 0x0000000100300390\n       rsi = 0x0000000000000001\n       rbp = 0x00007fff5fbfd870\n       rsp = 0x00007fff5fbfd860\n        r8 = 0x000000000000000d\n        r9 = 0x000000010030f950\n       r10 = 0x00000000013292e2\n       r11 = 0x0000000100300000\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100037533  mruby`kh_destroy_iv + 35\n    rflags = 0x0000000000010202\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n</code></pre>\n<p>The cause for this was that a non-array type was getting passed to <code>mrb_ary_unshift</code>, which then treated it like an <code>RArray</code> struct, and incremented the <code>len</code>, which accidentally incremented the <code>iv</code> field on the <code>RObject</code> struct it actually was. This was then used when trying to free the object in <code>mrb_gc_free_iv</code>, which just checks <code>if (obj-&gt;iv)</code> (<code>src/variable.c:435</code>), which is true (it is <code>0x01</code>), so calls <code>iv_free</code> (<code>src/variable.c:385</code>), which dereferences the table which is an invalid memory address of <code>0x01</code>.</p>\n\n<p>To show this in action, here is a gdb output with symbols (on a different system). I started the program and ran til the crash, then went up the stack until we could see the parent <code>obj</code> struct, then set a watchpoint on the <code>iv</code> field. Restarted, then continued until the <code>iv</code> field was set to <code>0x0</code> again, then set a breakpoint for <code>mrb_ary_unshift</code>. Stepped through until the <code>a</code> variable wasn&#39;t &quot;optimized out&quot; (happens on my fuzzing box due to setup), and then set a watchpoint on <code>a-&gt;len</code>, then continued. It stops showing both the <code>iv</code> and the <code>len</code> value changes to 1 at the same time showing the bug.</p>\n<pre class=\"highlight plaintext\"><code>$ gdb --args ./bin/mruby crash.rb\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;\nand &quot;show warranty&quot; for details.\nThis GDB was configured as &quot;x86_64-linux-gnu&quot;.\nType &quot;show configuration&quot; for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\nFor help, type &quot;help&quot;.\nType &quot;apropos word&quot; to search for commands related to &quot;word&quot;...\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.\ncrash.rb:1:3: &#39;*&#39; interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method &#39;a&#39; for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) up\n#1  iv_free (t=0x1, mrb=0x602e0001fc60) at /root/mruby-fixes/src/variable.c:387\n387       kh_destroy(iv, mrb, &amp;t-&gt;h);\n(gdb)\n#2  mrb_gc_free_iv (mrb=0x602e0001fc60, obj=0x609a00007870)\n    at /root/mruby-fixes/src/variable.c:436\n436         iv_free(mrb, obj-&gt;iv);\n(gdb) watch -location obj-&gt;iv\nHardware watchpoint 1: -location obj-&gt;iv\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\n\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.\nHardware watchpoint 1: -location obj-&gt;iv\n\nOld value = &lt;unreadable&gt;\nNew value = (struct iv_tbl *) 0x0\nmemset () at ../sysdeps/x86_64/memset.S:94\n94      ../sysdeps/x86_64/memset.S: No such file or directory.\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-&gt;iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x609a00007840\nadd_heap (gc=0x602e0001fd38, mrb=0x609a00000400) at /root/mruby-fixes/src/gc.c:328\n328       for (p = objects(page), e=p+MRB_HEAP_PAGE_SIZE; p&lt;e; p++) {\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-&gt;iv\n\nOld value = (struct iv_tbl *) 0x609a00007840\nNew value = (struct iv_tbl *) 0x0\nmrb_obj_alloc (mrb=mrb@entry=0x602e0001fc60, ttype=ttype@entry=MRB_TT_OBJECT,\n    cls=0x609a0000c3d0) at /root/mruby-fixes/src/gc.c:500\n500       *(RVALUE *)p = RVALUE_zero;\n(gdb) break mrb_ary_unshift\nBreakpoint 2 at 0x41e000: file /root/mruby-fixes/src/array.c, line 485.\n(gdb) c\nContinuing.\ncrash.rb:1:3: &#39;*&#39; interpreted as argument prefix\n\nBreakpoint 2, mrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:485\n485     {\n(gdb) n\n&lt;snip while getting to a point where a isn&#39;t &quot;optimized out&quot;&gt;\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:496\n496         if (a-&gt;aux.capa &lt; a-&gt;len + 1)\n(gdb) p *a\n$1 = {tt = MRB_TT_OBJECT, color = 1, flags = 0, c = 0x609a00007840,\n  gcnext = 0x609a0000c3d0, len = 0, aux = {capa = 0, shared = 0x0}, ptr = 0x0}\n(gdb) watch -location a-&gt;len\nHardware watchpoint 3: -location a-&gt;len\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj-&gt;iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x1\nHardware watchpoint 3: -location a-&gt;len\n\nOld value = 0\nNew value = 1\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:502\n502       mrb_field_write_barrier_value(mrb, (struct RBasic*)a, item);\n(gdb) d br\nDelete all breakpoints? (y or n) y\n(gdb) c\nContinuing.\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method &#39;a&#39; for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 31010] will be killed.\n\nQuit anyway? (y or n) y\n\n</code></pre>\n<p>A fix for this would be similar as follows:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/src/array.c b/src/array.c\nindex 838f6e4..bd44c7f 100644\n</span><span class=\"gd\">--- a/src/array.c\n</span><span class=\"gi\">+++ b/src/array.c\n</span><span class=\"gu\">@@ -483,6 +483,11 @@ mrb_ary_shift(mrb_state *mrb, mrb_value self)\n</span> MRB_API mrb_value\n mrb_ary_unshift(mrb_state *mrb, mrb_value self, mrb_value item)\n {\n<span class=\"gi\">+  if (!mrb_array_p(self)) {\n+    mrb_raisef(mrb, E_TYPE_ERROR, &quot;expecting Array, got %S&quot;, mrb_obj_value(mrb_obj_class(mrb, self)));\n+    return mrb_nil_value();\n+  }\n+\n</span>   struct RArray *a = mrb_ary_ptr(self);\n\n   if (ARY_SHARED_P(a)\n</code></pre>\n<p>As mentioned above, this affects mruby-engine:</p>\n<pre class=\"highlight plaintext\"><code>./bin/sandbox:20:in `sandbox_eval&#39;: undefined method &#39;a&#39; for main (MRubyEngine::EngineRuntimeError)\n    from ./bin/sandbox:20:in `&lt;main&gt;&#39;\n./bin/sandbox: [BUG] Segmentation fault at 0x00000000000019\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon&#39;t forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0001 p:0000 s:0002 E:0013d0 (none) [FINISH]\n\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000108 rbx: 0x0000000000000001 rcx: 0x00000001017eca32\n rdx: 0x00000001017ecbe0 rdi: 0x00000001018fc440 rsi: 0x0000000101903d30\n rbp: 0x00007fff5ed50660 rsp: 0x00007fff5ed50650  r8: 0x0000000101929e70\n  r9: 0x000000010191cad0 r10: 0x000000010191c830 r11: 0x00007fd4ad300000\n r12: 0x0000000101903d30 r13: 0x0000000000000000 r14: 0x00000001018fc440\n r15: 0x00000001018fc920 rip: 0x00000001018034f3 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010104c5d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100eee023 rb_bug_context + 483\n2   ruby                                0x0000000100fc1653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001018034f3 mrb_gc_free_iv + 19\n5   ???                                 0x0000000101903d30 0x0 + 4321197360\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n&lt;snip various gems&gt;\n  185 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/&lt;snip&gt;/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\n</code></pre>\n<p>Applying the patch above to <code>ext/mruby_engine/mruby</code> and recompiling fixes the issue.</p>\n<pre class=\"highlight plaintext\"><code>$ ./bin/mruby ../crash.rb\n../crash.rb:1:3: &#39;*&#39; interpreted as argument prefix\ntrace:\n        [0] ../crash.rb:3\nTypeError: expecting Array, got Object\n</code></pre><pre class=\"highlight plaintext\"><code>$ ./bin/sandbox crash.rb\n./bin/sandbox:20:in `sandbox_eval&#39;: expecting Array, got Object (MRubyEngine::EngineRuntimeError)\n        from ./bin/sandbox:20:in `&lt;main&gt;&#39;\n</code></pre>\n<p>Cheers,</p>\n\n<p>Hugh</p>\n", 
    "vulnerability_information": "Hi,\n\nPhew, this was a tricky one as the cause wasn't next door to where the dereference happened!\n\nThe file causing this is:\n```\na *case\n  when nil\n  redo\nend\n```\n\n```\n$ ./dev/bin/mruby --version\nmruby 1.2.0 (2015-11-17)\n```\n\n```\n$ ./dev/bin/mruby crash.rb\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\nSegmentation fault: 11\n```\n\n```\n(lldb) target create \"./dev/bin/mruby\"\nCurrent executable set to './dev/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 47144 launched: './dev/bin/mruby' (x86_64)\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n\t[0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\nProcess 47144 stopped\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n    frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\nmruby`kh_destroy_iv:\n->  0x100037533 <+35>: movq   0x18(%rax), %rax\n    0x100037537 <+39>: movq   %rax, %rsi\n    0x10003753a <+42>: callq  0x100017740               ; mrb_free\n    0x10003753f <+47>: movq   -0x8(%rbp), %rdi\n(lldb) bt\n* thread #1: tid = 0x5aab878, 0x0000000100037533 mruby`kh_destroy_iv + 35, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x19)\n  * frame #0: 0x0000000100037533 mruby`kh_destroy_iv + 35\n    frame #1: 0x0000000100037d9d mruby`iv_free + 29\n    frame #2: 0x0000000100037e90 mruby`mrb_gc_free_iv + 48\n    frame #3: 0x0000000100017a76 mruby`obj_free + 86\n    frame #4: 0x00000001000179e7 mruby`free_heap + 135\n    frame #5: 0x0000000100017dfd mruby`mrb_gc_destroy + 29\n    frame #6: 0x000000010002b2a2 mruby`mrb_close + 210\n    frame #7: 0x0000000100001475 mruby`cleanup + 133\n    frame #8: 0x0000000100000e6b mruby`main + 1147\n    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb register read\nGeneral Purpose Registers:\n       rax = 0x0000000000000001\n       rbx = 0x0000000000000000\n       rcx = 0x0000000000000006\n       rdx = 0x0000000100017a66  mruby`obj_free + 70\n       rdi = 0x0000000100300390\n       rsi = 0x0000000000000001\n       rbp = 0x00007fff5fbfd870\n       rsp = 0x00007fff5fbfd860\n        r8 = 0x000000000000000d\n        r9 = 0x000000010030f950\n       r10 = 0x00000000013292e2\n       r11 = 0x0000000100300000\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x0000000100037533  mruby`kh_destroy_iv + 35\n    rflags = 0x0000000000010202\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n```\n\nThe cause for this was that a non-array type was getting passed to `mrb_ary_unshift`, which then treated it like an `RArray` struct, and incremented the `len`, which accidentally incremented the `iv` field on the `RObject` struct it actually was. This was then used when trying to free the object in `mrb_gc_free_iv`, which just checks `if (obj->iv)` (`src/variable.c:435`), which is true (it is `0x01`), so calls `iv_free` (`src/variable.c:385`), which dereferences the table which is an invalid memory address of `0x01`.\n\nTo show this in action, here is a gdb output with symbols (on a different system). I started the program and ran til the crash, then went up the stack until we could see the parent `obj` struct, then set a watchpoint on the `iv` field. Restarted, then continued until the `iv` field was set to `0x0` again, then set a breakpoint for `mrb_ary_unshift`. Stepped through until the `a` variable wasn't \"optimized out\" (happens on my fuzzing box due to setup), and then set a watchpoint on `a->len`, then continued. It stops showing both the `iv` and the `len` value changes to 1 at the same time showing the bug.\n\n```\n$ gdb --args ./bin/mruby crash.rb\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\ncrash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) up\n#1  iv_free (t=0x1, mrb=0x602e0001fc60) at /root/mruby-fixes/src/variable.c:387\n387       kh_destroy(iv, mrb, &t->h);\n(gdb)\n#2  mrb_gc_free_iv (mrb=0x602e0001fc60, obj=0x609a00007870)\n    at /root/mruby-fixes/src/variable.c:436\n436         iv_free(mrb, obj->iv);\n(gdb) watch -location obj->iv\nHardware watchpoint 1: -location obj->iv\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\n\nStarting program: /root/mruby-fixes/bin/mruby crash.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nHardware watchpoint 1: -location obj->iv\n\nOld value = <unreadable>\nNew value = (struct iv_tbl *) 0x0\nmemset () at ../sysdeps/x86_64/memset.S:94\n94      ../sysdeps/x86_64/memset.S: No such file or directory.\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj->iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x609a00007840\nadd_heap (gc=0x602e0001fd38, mrb=0x609a00000400) at /root/mruby-fixes/src/gc.c:328\n328       for (p = objects(page), e=p+MRB_HEAP_PAGE_SIZE; p<e; p++) {\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj->iv\n\nOld value = (struct iv_tbl *) 0x609a00007840\nNew value = (struct iv_tbl *) 0x0\nmrb_obj_alloc (mrb=mrb@entry=0x602e0001fc60, ttype=ttype@entry=MRB_TT_OBJECT,\n    cls=0x609a0000c3d0) at /root/mruby-fixes/src/gc.c:500\n500       *(RVALUE *)p = RVALUE_zero;\n(gdb) break mrb_ary_unshift\nBreakpoint 2 at 0x41e000: file /root/mruby-fixes/src/array.c, line 485.\n(gdb) c\nContinuing.\ncrash.rb:1:3: '*' interpreted as argument prefix\n\nBreakpoint 2, mrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:485\n485     {\n(gdb) n\n<snip while getting to a point where a isn't \"optimized out\">\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:496\n496         if (a->aux.capa < a->len + 1)\n(gdb) p *a\n$1 = {tt = MRB_TT_OBJECT, color = 1, flags = 0, c = 0x609a00007840,\n  gcnext = 0x609a0000c3d0, len = 0, aux = {capa = 0, shared = 0x0}, ptr = 0x0}\n(gdb) watch -location a->len\nHardware watchpoint 3: -location a->len\n(gdb) c\nContinuing.\nHardware watchpoint 1: -location obj->iv\n\nOld value = (struct iv_tbl *) 0x0\nNew value = (struct iv_tbl *) 0x1\nHardware watchpoint 3: -location a->len\n\nOld value = 0\nNew value = 1\nmrb_ary_unshift (mrb=mrb@entry=0x602e0001fc60, self=..., item=...)\n    at /root/mruby-fixes/src/array.c:502\n502       mrb_field_write_barrier_value(mrb, (struct RBasic*)a, item);\n(gdb) d br\nDelete all breakpoints? (y or n) y\n(gdb) c\nContinuing.\ntrace:\n        [0] crash.rb:3\ncrash.rb:3: undefined method 'a' for main (NoMethodError)\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004cd59c in kh_destroy_iv (h=0x1, mrb=0x602e0001fc60)\n    at /root/mruby-fixes/src/variable.c:292\n292     KHASH_DEFINE(iv, mrb_sym, mrb_value, TRUE, kh_int_hash_func, kh_int_hash_equal)\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 31010] will be killed.\n\nQuit anyway? (y or n) y\n\n```\n\nA fix for this would be similar as follows:\n\n```\ndiff --git a/src/array.c b/src/array.c\nindex 838f6e4..bd44c7f 100644\n--- a/src/array.c\n+++ b/src/array.c\n@@ -483,6 +483,11 @@ mrb_ary_shift(mrb_state *mrb, mrb_value self)\n MRB_API mrb_value\n mrb_ary_unshift(mrb_state *mrb, mrb_value self, mrb_value item)\n {\n+  if (!mrb_array_p(self)) {\n+    mrb_raisef(mrb, E_TYPE_ERROR, \"expecting Array, got %S\", mrb_obj_value(mrb_obj_class(mrb, self)));\n+    return mrb_nil_value();\n+  }\n+\n   struct RArray *a = mrb_ary_ptr(self);\n \n   if (ARY_SHARED_P(a)\n```\n\nAs mentioned above, this affects mruby-engine:\n\n```\n./bin/sandbox:20:in `sandbox_eval': undefined method 'a' for main (MRubyEngine::EngineRuntimeError)\n\tfrom ./bin/sandbox:20:in `<main>'\n./bin/sandbox: [BUG] Segmentation fault at 0x00000000000019\nruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n\n-- Crash Report log information --------------------------------------------\n   See Crash Report log file under the one of following:\n     * ~/Library/Logs/CrashReporter\n     * /Library/Logs/CrashReporter\n     * ~/Library/Logs/DiagnosticReports\n     * /Library/Logs/DiagnosticReports\n   for more details.\nDon't forget to include the above Crash Report log file in bug reports.\n\n-- Control frame information -----------------------------------------------\nc:0001 p:0000 s:0002 E:0013d0 (none) [FINISH]\n\n\n-- Machine register context ------------------------------------------------\n rax: 0x0000000000000108 rbx: 0x0000000000000001 rcx: 0x00000001017eca32\n rdx: 0x00000001017ecbe0 rdi: 0x00000001018fc440 rsi: 0x0000000101903d30\n rbp: 0x00007fff5ed50660 rsp: 0x00007fff5ed50650  r8: 0x0000000101929e70\n  r9: 0x000000010191cad0 r10: 0x000000010191c830 r11: 0x00007fd4ad300000\n r12: 0x0000000101903d30 r13: 0x0000000000000000 r14: 0x00000001018fc440\n r15: 0x00000001018fc920 rip: 0x00000001018034f3 rfl: 0x0000000000010202\n\n-- C level backtrace information -------------------------------------------\n0   ruby                                0x000000010104c5d4 rb_vm_bugreport + 388\n1   ruby                                0x0000000100eee023 rb_bug_context + 483\n2   ruby                                0x0000000100fc1653 sigsegv + 83\n3   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n4   mruby_engine.bundle                 0x00000001018034f3 mrb_gc_free_iv + 19\n5   ???                                 0x0000000101903d30 0x0 + 4321197360\n\n-- Other runtime information -----------------------------------------------\n\n* Loaded script: ./bin/sandbox\n\n* Loaded features:\n\n    0 enumerator.so\n    1 thread.rb\n    2 rational.so\n    3 complex.so\n<snip various gems>\n  185 /Users/<snip>/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n  186 /Users/<snip>/mruby-engine/lib/mruby_engine.rb\n\n[NOTE]\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\nBug reports are welcome.\nFor details: http://www.ruby-lang.org/bugreport.html\n\n```\n\nApplying the patch above to `ext/mruby_engine/mruby` and recompiling fixes the issue.\n\n```\n$ ./bin/mruby ../crash.rb\n../crash.rb:1:3: '*' interpreted as argument prefix\ntrace:\n        [0] ../crash.rb:3\nTypeError: expecting Array, got Object\n```\n\n```\n$ ./bin/sandbox crash.rb\n./bin/sandbox:20:in `sandbox_eval': expecting Array, got Object (MRubyEngine::EngineRuntimeError)\n        from ./bin/sandbox:20:in `<main>'\n```\n\nCheers,\n\nHugh", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}