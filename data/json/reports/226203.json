{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "eveeez", 
        "spetr0x", 
        "pahan1234", 
        "freddiedsilva"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "50.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 226203, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-05-05T20:50:04.010Z", 
    "vulnerability_information": "step:\n1: goto https://bridge.cspr.ng/my/account of your account\n2. in \"Custom Profile field option\" check the box and enter xss payload in \"display name\" field\n       payload: \"p<script>alert('xss')</script>\"\n3. update the information \n4. open the account in INTERNET EXPLORER 11 and xss will executed\n\nnote: here server is not sanitize the user input properly,\n         payload will not work in firefox,chrome browser due to \"content-security-policy\"\n         But internet explorer does not Support \"Content-Security-Policy\"  so xss will execut\n\nthis is stored xss and the display name will visible to everywhere, so its possible to account takeover of ther user", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "Team"
    }, 
    "title": "Cross-site-Scripting", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-06-04T20:50:04.059Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$50", 
    "attachments": [
        {
            "file_name": "payload.png", 
            "type": "image/png", 
            "id": 181936, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/936/649779ba9720a83632cdb6a39e7b70e9008ce7f5/payload.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=72392d31556961520f7bdd089bfd9f265ec3b84c65d017be20ef031db7c2500e"
        }, 
        {
            "file_name": "source_code.png", 
            "type": "image/png", 
            "id": 181937, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/937/e4543e66f4dfdae30ea0a84398f641754ab5e75f/source_code.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1a180b054c928fa1e43761bfe7022b942e5484e324c49d8a9890a9205ac46d80"
        }, 
        {
            "file_name": "xss3.png", 
            "type": "image/png", 
            "id": 181938, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/938/d3ec67dc8d7ac402358e137444abb9e974893897/xss3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9f1b32427e1d2bacd57de9228afee866b1bf6b037422c7fbfff2b835a6033d28"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-05-04T21:48:53.146Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T21:48:53.146Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "I'm not able to replicate this behavior.\n\nIn particular, v1.4.2 (which CSPR.NG currently runs) properly escapes as an HTML attribute. The source code is here: https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8", 
            "markdown_message": "<p>I&#39;m not able to replicate this behavior.</p>\n\n<p>In particular, v1.4.2 (which CSPR.NG currently runs) properly escapes as an HTML attribute. The source code is here: <a title=\"https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8\" href=\"/redirect?signature=6f7304c188f14a935ccadb4ba8128b7250330bb1&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F32c41962c4229b64483a2a3bcedd17d3ba6df526%2Fsrc%2FCabin%2FBridge%2FLens%2Fcargo%2Fbridge_home.twig%23L8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1655254, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-04T21:56:01.161Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T21:56:01.161Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "i just reproduced the issue,\nand remember to use INTERNET EXPLORER   11  because it does not support CSP\ni will send u also a video ", 
            "markdown_message": "<p>i just reproduced the issue,<br>\nand remember to use INTERNET EXPLORER   11  because it does not support CSP<br>\ni will send u also a video </p>\n", 
            "type": "Activities::Comment", 
            "id": 1655269, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/943/b416eaae5068145a66ca01ade6a9f210211e00bb/xss-not-working.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e8140bcae5823b58e4a78d77e17307b979e668764956add1bff8d443c1b7e038", 
                    "type": "image/png", 
                    "id": 181943, 
                    "filename": "xss-not-working.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-04T21:58:30.410Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T21:58:30.410Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "The CSP isn't the issue here. It's not the case that the code is injected and then being blocked by the CSP headers.\n\nInstead, I see it like this:\n", 
            "markdown_message": "<p>The CSP isn&#39;t the issue here. It&#39;s not the case that the code is injected and then being blocked by the CSP headers.</p>\n\n<p>Instead, I see it like this:</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655277, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-04T22:00:09.264Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T22:00:09.264Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "wait 5 minute, i am going to  make a video", 
            "markdown_message": "<p>wait 5 minute, i am going to  make a video</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655284, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/945/dd2bca3d455d851b08696c8c08910f4393d223f0/source_code.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=30f3f2b6d099bb9eeab43af2e63385a1dfac9d68449d8abd542737c4eeafd370", 
                    "type": "image/png", 
                    "id": 181945, 
                    "filename": "source_code.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-04T22:02:15.706Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T22:02:15.706Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "also did you saw the source code,?", 
            "markdown_message": "<p>also did you saw the source code,?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655292, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/947/8fdbc787a26e1ecdec364eafd96f5a1126a94897/bandicam_2017-05-05_07-45-00-293.avi?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=dc0251d883d7f6ede66bfa4254e867ce69222c0d2de5415cb42813965501df62", 
                    "type": "video/x-msvideo", 
                    "id": 181947, 
                    "filename": "bandicam_2017-05-05_07-45-00-293.avi"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-04T22:12:24.801Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T22:12:24.801Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Video POC", 
            "markdown_message": "<p>Video POC</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655308, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/949/96a1cb00495736172abc677f559830be4afe232c/final_POC.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f49019d6f9afa6bd74190e40258414244e33cdd4d5636cdc52f516470f84ee87", 
                    "type": "video/mp4", 
                    "id": 181949, 
                    "filename": "final_POC.mp4"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-04T22:22:01.387Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T22:22:01.387Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "FINAL VIDEO POC", 
            "markdown_message": "<p>FINAL VIDEO POC</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655327, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-04T22:26:28.839Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T22:26:28.839Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "if u still unable to reproduce use my login id but keep it private\nid=pahan12\npassword=ramkrishna12@\n\n", 
            "markdown_message": "<p>if u still unable to reproduce use my login id but keep it private<br>\nid=pahan12<br>\npassword=ramkrishna12@</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655338, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/181/961/76a9d282e7f0b60ccc9feca35d1d8a9da4ecb612/xss-not-working-2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223940Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7b53f06796d7fa0b9ef5362c8e6abdc9d949d16935d5152ebeeeb4088b5421a9", 
                    "type": "image/png", 
                    "id": 181961, 
                    "filename": "xss-not-working-2.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-05-04T23:44:22.917Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-04T23:44:22.917Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "No dice, but I'm thinking about passing the user's display name through HTML Purifier anyway, just in case I'm missing something.", 
            "markdown_message": "<p>No dice, but I&#39;m thinking about passing the user&#39;s display name through HTML Purifier anyway, just in case I&#39;m missing something.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655468, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T00:08:48.335Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T00:08:48.335Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "ok... now i got it, where you mistaking \nhttps://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/header.twig#L12\n\nalso you can  goto my account  top right corner you will see \"Hello, pahan\" -> open it with \"inspect element \"\nand see user input are not sanitize", 
            "markdown_message": "<p>ok... now i got it, where you mistaking <br>\n<a title=\"https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/header.twig#L12\" href=\"/redirect?signature=0fbc529b13dc6e5179d6ac715ab6ff09f9abd74e&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F32c41962c4229b64483a2a3bcedd17d3ba6df526%2Fsrc%2FCabin%2FBridge%2FLens%2Fcargo%2Fheader.twig%23L12\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/header.twig#L12</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>also you can  goto my account  top right corner you will see &quot;Hello, pahan&quot; -&gt; open it with &quot;inspect element &quot;<br>\nand see user input are not sanitize</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655516, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T00:30:00.931Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T00:30:00.931Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "It's actually happening here: https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/global_functions.php#L75-L77\n\nWhat I think *could* be happening, although I still have not been able to reproduce the behavior on my end, is that somehow `<script>` is encoded as `&lt;script&gt;` but the behavior of Twig's `|raw` filter changed from lazy evaluation to greedy evaluation at some point. That, or your particular flavor of Internet Explorer 11 is especially prone to XSS. But let's proceed with the assumption that there's a Twig issue for now.\n\nFrom https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8 we see:\n\n```\n(\"<strong title=\\\"Public ID: \" ~ user_unique_id()|e('html_attr') ~ \"\\\">\" ~ user_display_name()|e('html') ~ \"</strong>\")|raw\n```\n\nIf we add a little whitespace:\n\n```\n(\n    \"<strong title=\\\"Public ID: \" ~ \n    user_unique_id()|e('html_attr') ~\n    \"\\\">\" ~\n    user_display_name()|e('html') ~\n    \"</strong>\"\n) | raw\n```\n\nIn Twig, `~` means concatenate. What this is supposed to be doing is:\n\n1. Escape the user's display name (in an HTML context, which is supposed to prevent XSS but allow some HTML).\n2. Concatenate the escaped output with other data all as one string.\n3. Print the final string without further escaping.\n\nIf Twig's behavior had changed to cancel out the `|e('html')` because of the outer `|raw`, then that would indeed create a vulnerability (and I would need to evaluate our entire codebase to identify/purge all sources of code injection). I'm going to earmark this for a deeper investigation. I'll let you know in a few hours what I find.", 
            "markdown_message": "<p>It&#39;s actually happening here: <a title=\"https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/global_functions.php#L75-L77\" href=\"/redirect?signature=c37f828e93085da38de291c8a97def484d09140d&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F32c41962c4229b64483a2a3bcedd17d3ba6df526%2Fsrc%2Fglobal_functions.php%23L75-L77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/global_functions.php#L75-L77</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>What I think <em>could</em> be happening, although I still have not been able to reproduce the behavior on my end, is that somehow <code>&lt;script&gt;</code> is encoded as <code>&amp;lt;script&amp;gt;</code> but the behavior of Twig&#39;s <code>|raw</code> filter changed from lazy evaluation to greedy evaluation at some point. That, or your particular flavor of Internet Explorer 11 is especially prone to XSS. But let&#39;s proceed with the assumption that there&#39;s a Twig issue for now.</p>\n\n<p>From <a title=\"https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8\" href=\"/redirect?signature=6f7304c188f14a935ccadb4ba8128b7250330bb1&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F32c41962c4229b64483a2a3bcedd17d3ba6df526%2Fsrc%2FCabin%2FBridge%2FLens%2Fcargo%2Fbridge_home.twig%23L8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/32c41962c4229b64483a2a3bcedd17d3ba6df526/src/Cabin/Bridge/Lens/cargo/bridge_home.twig#L8</span><i class=\"icon-external-link\"></i></a> we see:</p>\n<pre class=\"highlight plaintext\"><code>(&quot;&lt;strong title=\\&quot;Public ID: &quot; ~ user_unique_id()|e(&#39;html_attr&#39;) ~ &quot;\\&quot;&gt;&quot; ~ user_display_name()|e(&#39;html&#39;) ~ &quot;&lt;/strong&gt;&quot;)|raw\n</code></pre>\n<p>If we add a little whitespace:</p>\n<pre class=\"highlight plaintext\"><code>(\n    &quot;&lt;strong title=\\&quot;Public ID: &quot; ~ \n    user_unique_id()|e(&#39;html_attr&#39;) ~\n    &quot;\\&quot;&gt;&quot; ~\n    user_display_name()|e(&#39;html&#39;) ~\n    &quot;&lt;/strong&gt;&quot;\n) | raw\n</code></pre>\n<p>In Twig, <code>~</code> means concatenate. What this is supposed to be doing is:</p>\n\n<ol>\n<li>Escape the user&#39;s display name (in an HTML context, which is supposed to prevent XSS but allow some HTML).</li>\n<li>Concatenate the escaped output with other data all as one string.</li>\n<li>Print the final string without further escaping.</li>\n</ol>\n\n<p>If Twig&#39;s behavior had changed to cancel out the <code>|e(&#39;html&#39;)</code> because of the outer <code>|raw</code>, then that would indeed create a vulnerability (and I would need to evaluate our entire codebase to identify/purge all sources of code injection). I&#39;m going to earmark this for a deeper investigation. I&#39;ll let you know in a few hours what I find.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655540, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T00:36:03.921Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T00:36:03.921Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Wait, this doesn't make sense. `__()` is running the input through HTML Purifier anyway.", 
            "markdown_message": "<p>Wait, this doesn&#39;t make sense. <code>__()</code> is running the input through HTML Purifier anyway.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655543, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T00:58:31.902Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T00:58:31.902Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Low", 
                "old_severity": null
            }, 
            "team_handle": "paragonie", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1655566, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T00:59:25.344Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T00:59:25.344Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "I found the problem: I'm confusing two different places in the code, based on the original report of going to the home page of Bridge.\n\nThis could only be used to XSS oneself, rather than other users, but the avenue for exploitation is nonzero. Get access to their account, if they use a browser that doesn't support CSP, you might be able to exploit the browser.", 
            "markdown_message": "<p>I found the problem: I&#39;m confusing two different places in the code, based on the original report of going to the home page of Bridge.</p>\n\n<p>This could only be used to XSS oneself, rather than other users, but the avenue for exploitation is nonzero. Get access to their account, if they use a browser that doesn&#39;t support CSP, you might be able to exploit the browser.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1655571, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T01:09:50.087Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T01:09:50.087Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugNew", 
            "id": 1655584, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T04:55:54.922Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T05:01:31.689Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "yes, this is only possible in INTERNET  EXPLORER 11 to exploit because you set CSP in every request. all modern browser  except will block it.\nbut i really confuse why you are getting  <script> is encoded \nnow i am seeing you fixed it and unable reproduce the issue.\nnow all the user input is sanizited.\nand user input if it is <script> then it is render as encoded format, to top right-corner.", 
            "markdown_message": "<p>yes, this is only possible in INTERNET  EXPLORER 11 to exploit because you set CSP in every request. all modern browser  except will block it.<br>\nbut i really confuse why you are getting  &lt;script&gt; is encoded <br>\nnow i am seeing you fixed it and unable reproduce the issue.<br>\nnow all the user input is sanizited.<br>\nand user input if it is &lt;script&gt; then it is render as encoded format, to top right-corner.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655717, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T05:31:37.272Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T05:31:37.272Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "> but i really confuse why you are getting <script> is encoded\n\nThat too is puzzling me.\n\n> now i am seeing you fixed it and unable reproduce the issue.\n\nErr, yeah. I should probably clarify: cspr.ng is mostly a public testing site for the open source project. I made a change there while testing and forgot to revert it, but it hadn't been committed yet.\n\nIf you setup Airship 1.4.2 locally, you'd still be able to reproduce it. I'm going to get a complete patch ready soon and release 1.4.3.", 
            "markdown_message": "<blockquote>\n<p>but i really confuse why you are getting &lt;script&gt; is encoded</p>\n</blockquote>\n\n<p>That too is puzzling me.</p>\n\n<blockquote>\n<p>now i am seeing you fixed it and unable reproduce the issue.</p>\n</blockquote>\n\n<p>Err, yeah. I should probably clarify: cspr.ng is mostly a public testing site for the open source project. I made a change there while testing and forgot to revert it, but it hadn&#39;t been committed yet.</p>\n\n<p>If you setup Airship 1.4.2 locally, you&#39;d still be able to reproduce it. I&#39;m going to get a complete patch ready soon and release 1.4.3.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655745, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T06:00:04.627Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T06:00:04.627Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "ok.. \nthanks..", 
            "markdown_message": "<p>ok.. <br>\nthanks..</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655770, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T08:36:30.936Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T08:36:30.936Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "hello, few hours ago i checked that bug has been fixed..\nbut now i checking that it is still reproducable and input is not sanitizing...\n", 
            "markdown_message": "<p>hello, few hours ago i checked that bug has been fixed..<br>\nbut now i checking that it is still reproducable and input is not sanitizing...</p>\n", 
            "type": "Activities::Comment", 
            "id": 1655972, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T13:31:43.419Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T13:31:43.419Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "In my previous comment, I had said:\n\n>  I made a change there while testing and forgot to revert it, but it hadn't been committed yet.\n\nI reverted the fix on cspr.ng that hadn't yet made it to the codebase after I wrote that comment.\n\nTo be clear, the thing in the scope for HackerOne isn't cspr.ng. We don't care if that site gets `rm -rf /`'d six days a week. The thing we do care about is *the code that powers cspr.ng* (and our other open source projects on Github), because it's something that other people might use. This issue isn't resolved if cspr.ng is fixed, because that doesn't help anyone who uses CMS Airship.", 
            "markdown_message": "<p>In my previous comment, I had said:</p>\n\n<blockquote>\n<p>I made a change there while testing and forgot to revert it, but it hadn&#39;t been committed yet.</p>\n</blockquote>\n\n<p>I reverted the fix on cspr.ng that hadn&#39;t yet made it to the codebase after I wrote that comment.</p>\n\n<p>To be clear, the thing in the scope for HackerOne isn&#39;t cspr.ng. We don&#39;t care if that site gets <code>rm -rf /</code>&#39;d six days a week. The thing we do care about is <em>the code that powers cspr.ng</em> (and our other open source projects on Github), because it&#39;s something that other people might use. This issue isn&#39;t resolved if cspr.ng is fixed, because that doesn&#39;t help anyone who uses CMS Airship.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1656437, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T13:38:38.403Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T13:38:38.403Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "ok...then\nafter  when you release final patch  against this report  you can ping ", 
            "markdown_message": "<p>ok...then<br>\nafter  when you release final patch  against this report  you can ping </p>\n", 
            "type": "Activities::Comment", 
            "id": 1656447, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "pahan1234", 
                "url": "/pahan1234"
            }, 
            "created_at": "2017-05-05T19:36:40.367Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T19:36:40.367Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Fixed in https://github.com/paragonie/airship/releases/tag/v1.4.3, and cspr.ng self-updated.", 
            "markdown_message": "<p>Fixed in <a title=\"https://github.com/paragonie/airship/releases/tag/v1.4.3\" href=\"/redirect?signature=913392a34e936613c42be618e29761aafe9c059b&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Freleases%2Ftag%2Fv1.4.3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/releases/tag/v1.4.3</span><i class=\"icon-external-link\"></i></a>, and cspr.ng self-updated.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1657183, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-05-05T20:49:55.978Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T20:49:55.978Z", 
            "actor": {
                "url": "/paragonie", 
                "profile": {
                    "name": "Paragon Initiative Enterprises"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
                }
            }, 
            "team_handle": "paragonie", 
            "bonus_amount": "0.0", 
            "bounty_amount": "50.0", 
            "collaborator": {
                "username": "pahan1234", 
                "url": "/pahan1234"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1657337, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T20:50:04.030Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T20:50:04.030Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1657339, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T20:50:29.028Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T20:50:29.028Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Fixed, and the fix should be deployed automatically everywhere.", 
            "markdown_message": "<p>Fixed, and the fix should be deployed automatically everywhere.</p>\n", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1657343, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-05T21:16:01.120Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T21:16:01.120Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "thanks for  bounty.....", 
            "markdown_message": "<p>thanks for  bounty.....</p>\n", 
            "type": "Activities::Comment", 
            "id": 1657424, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-10T19:30:40.220Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-10T19:30:40.220Z", 
            "actor": {
                "username": "pahan1234", 
                "url": "/pahan1234", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "hello,  i saw every user input is passed through e('html_attr') function in twig file\nso, where i get the code for e('html_attr') ?", 
            "markdown_message": "<p>hello,  i saw every user input is passed through e(&#39;html_attr&#39;) function in twig file<br>\nso, where i get the code for e(&#39;html_attr&#39;) ?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1666515, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-10T19:32:58.046Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-10T19:32:58.046Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "https://twig.sensiolabs.org/doc/2.x/filters/escape.html\n\nIt's a Twig filter, which escapes data as if it were in an HTML attribute context. It's specifically useful for disallowing HTML.", 
            "markdown_message": "<p><a title=\"https://twig.sensiolabs.org/doc/2.x/filters/escape.html\" href=\"/redirect?signature=bc3b4b74cea2986ae3d620aa7f4d846f9ccc7ad2&amp;url=https%3A%2F%2Ftwig.sensiolabs.org%2Fdoc%2F2.x%2Ffilters%2Fescape.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://twig.sensiolabs.org/doc/2.x/filters/escape.html</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>It&#39;s a Twig filter, which escapes data as if it were in an HTML attribute context. It&#39;s specifically useful for disallowing HTML.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1666521, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "pahan1234", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/pahan1234", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 62, 
        "name": "Cross-site Scripting (XSS) - Stored"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -47526576.47626282, 
    "disclosed_at": "2017-05-05T20:50:29.077Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/226203", 
    "created_at": "2017-05-04T21:39:30.322Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>step:<br>\n1: goto <a title=\"https://bridge.cspr.ng/my/account\" href=\"/redirect?signature=fc1f535af7835c4788abee184c61e1cc5719f9e7&amp;url=https%3A%2F%2Fbridge.cspr.ng%2Fmy%2Faccount\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bridge.cspr.ng/my/account</span><i class=\"icon-external-link\"></i></a> of your account</p>\n\n<ol>\n<li>in &quot;Custom Profile field option&quot; check the box and enter xss payload in &quot;display name&quot; field\n   payload: &quot;p&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&quot;</li>\n<li>update the information </li>\n<li>open the account in INTERNET EXPLORER 11 and xss will executed</li>\n</ol>\n\n<p>note: here server is not sanitize the user input properly,<br>\n         payload will not work in firefox,chrome browser due to &quot;content-security-policy&quot;<br>\n         But internet explorer does not Support &quot;Content-Security-Policy&quot;  so xss will execut</p>\n\n<p>this is stored xss and the display name will visible to everywhere, so its possible to account takeover of ther user</p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://github.com/paragonie", 
            "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries", 
            "twitter_handle": "ParagonIE", 
            "name": "Paragon Initiative Enterprises"
        }, 
        "handle": "paragonie", 
        "url": "https://hackerone.com/paragonie", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/539/a041268a04bb7a5c3d3a88a9dccc6b5955eff4d7_small.?1453010804", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8539, 
        "default_currency": "usd"
    }, 
    "is_published": false
}