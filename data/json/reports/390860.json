{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "tulswani", 
        "babayaga_", 
        "mygf", 
        "sameerphad72"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 390860, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-10-31T06:21:24.149Z", 
    "vulnerability_information": "I would like to report prototype pollution vulnerability in mpath.\nIt allows an attacker to inject arbitrary properties on Object.prototype.\n\n# Module\n\n**module name:** mpath\n**version:** 0.4.1\n**npm page:** `https://www.npmjs.com/package/mpath`\n\n## Module Description\n\n{G,S}et javascript object values using MongoDB-like path notatio\n\n## Module Stats\n\n305,874 downloads in the last week\n\n# Vulnerability\n\n## Vulnerability Description\n\nAn attacker can specify a path that include the prototype object, and thus overwrite important properties on Object.prototype or add new ones.\n\n## Steps To Reproduce:\n\n```js\nvar mpath = require(\"mpath\");\nvar obj = {\n    comments: [\n        { title: 'funny' },\n        { title: 'exciting!' }\n    ]\n}\nmpath.set('__proto__.x', ['hilarious', 'fruity'], obj);\nconsole.log({}.x); \n```\n\n## Patch\n\nN/A validate property names before overwriting them and prevent write to certain paths.\n\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N\n- I opened an issue in the related repository: N\n\n## Impact\n\nThis may be an intended behaviour of this module, but it needs to be better documented. Moreover, to properly analyse the impact of this vulnerability one must look at the clients of this module, such as mongoose and see if attackers can realistically control the path value.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "low", 
            "privileges_required": "none", 
            "user_interaction": "none", 
            "attack_vector": "adjacent", 
            "attack_complexity": "low", 
            "scope": "unchanged", 
            "integrity": "high", 
            "availability": "low"
        }, 
        "rating": "high", 
        "score": 7.6, 
        "author_type": "User"
    }, 
    "title": "Prototype Pollution Vulnerability in mpath Package", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "Other module", 
        "max_severity": "critical", 
        "databaseId": 2986, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-11-30T06:21:24.223Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-08-06T10:40:32.675Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-06T10:40:32.675Z", 
            "actor": {
                "username": "cris_semmle", 
                "url": "/cris_semmle", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/320/894/26bc71d47ebdb7f487af851b15e6cb8b6bbedadb_medium.jpg?1533201754"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Prototype Pollution Vulnerability in mpath Package", 
                "old_title": "Prototype Pollution Vulnerability in mpatch Package"
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 3150389, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-06T11:11:54.017Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-06T11:11:54.017Z", 
            "actor": {
                "username": "dukefleed", 
                "url": "/dukefleed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/179/358/a82d26aef185c3dd8cba1d1021835dafa48dc2e6_medium.jpg?1499109227"
                }, 
                "hackerone_triager": true
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hello @cris_semmle,\n\nThank you for the report. We are currently reviewing this and will get in touch with you once our review is complete. \n\nRegards,\n@dukefleed", 
            "markdown_message": "<p>Hello <a href=\"/cris_semmle\">@cris_semmle</a>,</p>\n\n<p>Thank you for the report. We are currently reviewing this and will get in touch with you once our review is complete. </p>\n\n<p>Regards,<br>\n<a href=\"/dukefleed\">@dukefleed</a></p>\n", 
            "type": "Activities::Comment", 
            "id": 3150469, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-29T10:21:59.702Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-29T10:21:59.702Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi\u00a0<HACKER>,\n\nThanks for reporting this issue.\n\nI was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.\nI will invite the package maintainer to this issue.\n", 
            "markdown_message": "<p>Hi\u00a0&lt;HACKER&gt;,</p>\n\n<p>Thanks for reporting this issue.</p>\n\n<p>I was able to reproduce and confirm the issue as you described and will triage this report as vulnerability.<br>\nI will invite the package maintainer to this issue.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 3263195, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-29T14:29:06.303Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-29T14:29:06.303Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 3264229, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-29T14:42:15.756Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-29T14:42:15.756Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Confirmed, I'll fix this later today and release a fix tomorrow. mpath should throw an error if proto is in the path. This issue _only_ affects Mongoose if strict mode is explicitly set to false:\n\n```javascript\nconst mongoose = require('mongoose');\n\nconst schema = new mongoose.Schema({\n  name: String\n}, { strict: false }); // Only works if this is `false`. If `true` or `'throw'`, mongoose will strip out __proto__\n\nconst Model = mongoose.model('Test', schema);\n\nconst doc = new Model({ '__proto__.x': 'foo' });\n\nconsole.log(Model);\nconsole.log(Model.x); // 'foo' as long as `strict: false` is set on the schema\n```\n", 
            "markdown_message": "<p>Confirmed, I&#39;ll fix this later today and release a fix tomorrow. mpath should throw an error if proto is in the path. This issue <u>only</u> affects Mongoose if strict mode is explicitly set to false:</p>\n<pre class=\"highlight javascript\"><code><span class=\"kr\">const</span> <span class=\"nx\">mongoose</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;mongoose&#39;</span><span class=\"p\">);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">schema</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">mongoose</span><span class=\"p\">.</span><span class=\"nx\">Schema</span><span class=\"p\">({</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nb\">String</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"na\">strict</span><span class=\"p\">:</span> <span class=\"kc\">false</span> <span class=\"p\">});</span> <span class=\"c1\">// Only works if this is `false`. If `true` or `&#39;throw&#39;`, mongoose will strip out __proto__</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">Model</span> <span class=\"o\">=</span> <span class=\"nx\">mongoose</span><span class=\"p\">.</span><span class=\"nx\">model</span><span class=\"p\">(</span><span class=\"s1\">&#39;Test&#39;</span><span class=\"p\">,</span> <span class=\"nx\">schema</span><span class=\"p\">);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">doc</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Model</span><span class=\"p\">({</span> <span class=\"s1\">&#39;__proto__.x&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;foo&#39;</span> <span class=\"p\">});</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">Model</span><span class=\"p\">);</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">Model</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">);</span> <span class=\"c1\">// &#39;foo&#39; as long as `strict: false` is set on the schema</span>\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 3264288, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-30T07:44:42.918Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-30T07:44:42.918Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@vkarpov15 , thanks for your quick response. Please let me know when you have the fix published.", 
            "markdown_message": "<p><a href=\"/vkarpov15\">@vkarpov15</a> , thanks for your quick response. Please let me know when you have the fix published.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3267248, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-30T15:38:30.474Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-30T15:38:30.474Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@e_lexy I just published mpath 0.5.0 and Mongoose 5.2.11 + 4.13.16 with the fix. Do you have any recommendations on how to best communicate this?", 
            "markdown_message": "<p><a href=\"/e_lexy\">@e_lexy</a> I just published mpath 0.5.0 and Mongoose 5.2.11 + 4.13.16 with the fix. Do you have any recommendations on how to best communicate this?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3270268, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-08-30T17:05:03.007Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-08-30T17:05:03.007Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "We also found a similar issue with using 'constructor' instead of '__proto__' that one of our community members pointed out. Released mpath 0.5.1, Mongoose 5.2.12, and Mongoose 4.13.17 with the fix.", 
            "markdown_message": "<p>We also found a similar issue with using &#39;constructor&#39; instead of &#39;<strong>proto</strong>&#39; that one of our community members pointed out. Released mpath 0.5.1, Mongoose 5.2.12, and Mongoose 4.13.17 with the fix.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3270668, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-30T12:48:21.166Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-30T12:48:21.166Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@vkarpov15 When you have a fixed version published I would at least mention it in the changelog.\nWhether you want to mention this is the readme is up to you.\nAs soon as this report id public, scanners like `npm audit` and `snyk` will flag the vulnerability.\nif users choose to ignore, it's up to them.", 
            "markdown_message": "<p><a href=\"/vkarpov15\">@vkarpov15</a> When you have a fixed version published I would at least mention it in the changelog.<br>\nWhether you want to mention this is the readme is up to you.<br>\nAs soon as this report id public, scanners like <code>npm audit</code> and <code>snyk</code> will flag the vulnerability.<br>\nif users choose to ignore, it&#39;s up to them.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3554970, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-30T12:50:30.072Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-30T12:50:30.072Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@cris_semmle can you confirm the new release fixes this? For me it works -> the result is now `undefined`!", 
            "markdown_message": "<p><a href=\"/cris_semmle\">@cris_semmle</a> can you confirm the new release fixes this? For me it works -&gt; the result is now <code>undefined</code>!</p>\n", 
            "type": "Activities::Comment", 
            "id": 3554978, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-30T22:21:45.006Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-30T22:21:45.006Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@e_lexy I added a note to the changelog here: https://github.com/aheckmann/mpath/blob/master/History.md#051--2018-08-30 I didn't want to mention that this was explicitly a security fix because I wasn't sure about whether that was disclosure or not. How do you recommend we proceed? I was just planning on posting a new page on mongoosejs.com with security disclosures, including this one, in November after people had some time to upgrade.", 
            "markdown_message": "<p><a href=\"/e_lexy\">@e_lexy</a> I added a note to the changelog here: <a title=\"https://github.com/aheckmann/mpath/blob/master/History.md#051--2018-08-30\" href=\"/redirect?signature=f11ddd165feab04e3e38c801a1d53a48d8431606&amp;url=https%3A%2F%2Fgithub.com%2Faheckmann%2Fmpath%2Fblob%2Fmaster%2FHistory.md%23051--2018-08-30\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/aheckmann/mpath/blob/master/History.md#051--2018-08-30</span><i class=\"icon-external-link\"></i></a> I didn&#39;t want to mention that this was explicitly a security fix because I wasn&#39;t sure about whether that was disclosure or not. How do you recommend we proceed? I was just planning on posting a new page on mongoosejs.com with security disclosures, including this one, in November after people had some time to upgrade.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3558329, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-31T01:40:37.929Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-31T01:40:37.929Z", 
            "actor": {
                "username": "cris_semmle", 
                "url": "/cris_semmle", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/320/894/26bc71d47ebdb7f487af851b15e6cb8b6bbedadb_medium.jpg?1533201754"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Yes, I can confirm that this appears to be fixed.", 
            "markdown_message": "<p>Yes, I can confirm that this appears to be fixed.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3560102, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "cris_semmle", 
                "url": "/cris_semmle"
            }, 
            "created_at": "2018-10-31T06:18:37.831Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-31T06:18:37.831Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@cris_semmle and @vkarpov15 first of all thanks for your swift responses in squsahing this one!\n@vkarpov15 your plan to expose this and possibly other security fixes on the mongoose page sounds good to me. We don't really have a protocol we can hand to maintainers. I will create an issue with our team to talk about that and see if we want to prepare one to hand out in case a maintainer asks for guidance.\n\nMoving to close this one then. requesting a CVE as well.", 
            "markdown_message": "<p><a href=\"/cris_semmle\">@cris_semmle</a> and <a href=\"/vkarpov15\">@vkarpov15</a> first of all thanks for your swift responses in squsahing this one!<br>\n<a href=\"/vkarpov15\">@vkarpov15</a> your plan to expose this and possibly other security fixes on the mongoose page sounds good to me. We don&#39;t really have a protocol we can hand to maintainers. I will create an issue with our team to talk about that and see if we want to prepare one to hand out in case a maintainer asks for guidance.</p>\n\n<p>Moving to close this one then. requesting a CVE as well.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 3560761, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-31T06:21:24.165Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-31T06:21:24.165Z", 
            "actor": {
                "username": "e_lexy", 
                "url": "/e_lexy", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "first_to_agree": true, 
            "message": "the new version 0.5.1 fixes this issue. ", 
            "markdown_message": "<p>the new version 0.5.1 fixes this issue. </p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3560771, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-30T06:21:32.449Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-30T06:21:32.449Z", 
            "actor": {
                "url": "/nodejs-ecosystem", 
                "profile": {
                    "name": "Node.js third-party modules"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
                }
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3737024, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-03T21:54:27.398Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-03T21:54:27.398Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Published this on my blog: http://thecodebarbarian.com/mongoose-prototype-pollution-vulnerability-disclosure.html", 
            "markdown_message": "<p>Published this on my blog: <a title=\"http://thecodebarbarian.com/mongoose-prototype-pollution-vulnerability-disclosure.html\" href=\"/redirect?signature=35d015a6ffad91e41f65947cb426daee661e8c2f&amp;url=http%3A%2F%2Fthecodebarbarian.com%2Fmongoose-prototype-pollution-vulnerability-disclosure.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://thecodebarbarian.com/mongoose-prototype-pollution-vulnerability-disclosure.html</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 3754898, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-04T07:59:53.426Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-04T07:59:53.426Z", 
            "actor": {
                "username": "cris_semmle", 
                "url": "/cris_semmle", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/320/894/26bc71d47ebdb7f487af851b15e6cb8b6bbedadb_medium.jpg?1533201754"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Nice! One question, though: you credit the vulnerability to the Node.js Security Group; did I miss something about them reporting this bug before us? (I'm with the Semmle Security Research Team, not the Node.js Security Group.)", 
            "markdown_message": "<p>Nice! One question, though: you credit the vulnerability to the Node.js Security Group; did I miss something about them reporting this bug before us? (I&#39;m with the Semmle Security Research Team, not the Node.js Security Group.)</p>\n", 
            "type": "Activities::Comment", 
            "id": 3756458, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-04T08:00:38.109Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-04T08:00:38.109Z", 
            "actor": {
                "username": "cris_semmle", 
                "url": "/cris_semmle", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/320/894/26bc71d47ebdb7f487af851b15e6cb8b6bbedadb_medium.jpg?1533201754"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Btw, @e_lexy, you said you'd request a CVE, how is that going?", 
            "markdown_message": "<p>Btw, <a href=\"/e_lexy\">@e_lexy</a>, you said you&#39;d request a CVE, how is that going?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3756460, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-04T13:49:41.675Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-04T13:49:41.675Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@cris_semmle that's my mistake. @e_lexy was the one that originally reached out to me and said he was from the Node.js Security Group, so I assumed you were part of that organization as well. I'm happy to update the blog post to link to your site. Is this the correct one? https://semmle.com/security", 
            "markdown_message": "<p><a href=\"/cris_semmle\">@cris_semmle</a> that&#39;s my mistake. <a href=\"/e_lexy\">@e_lexy</a> was the one that originally reached out to me and said he was from the Node.js Security Group, so I assumed you were part of that organization as well. I&#39;m happy to update the blog post to link to your site. Is this the correct one? <a title=\"https://semmle.com/security\" href=\"/redirect?signature=4ac1f3813aa1986f0b6467e5a1cd8da55b460586&amp;url=https%3A%2F%2Fsemmle.com%2Fsecurity\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://semmle.com/security</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 3758593, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-04T14:05:53.026Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-04T14:05:53.026Z", 
            "actor": {
                "username": "cris_semmle", 
                "url": "/cris_semmle", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/320/894/26bc71d47ebdb7f487af851b15e6cb8b6bbedadb_medium.jpg?1533201754"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "That's right, yes. Thanks, Valeri!", 
            "markdown_message": "<p>That&#39;s right, yes. Thanks, Valeri!</p>\n", 
            "type": "Activities::Comment", 
            "id": 3758682, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-12-04T20:57:59.323Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-12-04T20:57:59.323Z", 
            "actor": {
                "username": "vkarpov15", 
                "url": "/vkarpov15", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "I updated the blog post @cris_semmle , thanks for pointing that out and thanks for finding this issue.", 
            "markdown_message": "<p>I updated the blog post <a href=\"/cris_semmle\">@cris_semmle</a> , thanks for pointing that out and thanks for finding this issue.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3763454, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "cris_semmle", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/cris_semmle", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/320/894/7756d8c6707143ef492dd62bdc17abfc10ec9874_small.jpg?1533201754"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -575548.907944661, 
    "disclosed_at": "2018-11-30T06:21:32.425Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/390860", 
    "created_at": "2018-08-06T10:40:21.199Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I would like to report prototype pollution vulnerability in mpath.<br>\nIt allows an attacker to inject arbitrary properties on Object.prototype.</p>\n\n<h1 id=\"module\">Module</h1>\n\n<p><strong>module name:</strong> mpath<br>\n<strong>version:</strong> 0.4.1<br>\n<strong>npm page:</strong> <code>https://www.npmjs.com/package/mpath</code></p>\n\n<h2 id=\"module-description\">Module Description</h2>\n\n<p>{G,S}et javascript object values using MongoDB-like path notatio</p>\n\n<h2 id=\"module-stats\">Module Stats</h2>\n\n<p>305,874 downloads in the last week</p>\n\n<h1 id=\"vulnerability\">Vulnerability</h1>\n\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n\n<p>An attacker can specify a path that include the prototype object, and thus overwrite important properties on Object.prototype or add new ones.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce:</h2>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">mpath</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">&quot;mpath&quot;</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">comments</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span> <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"s1\">&#39;funny&#39;</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"s1\">&#39;exciting!&#39;</span> <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">mpath</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;__proto__.x&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;hilarious&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fruity&#39;</span><span class=\"p\">],</span> <span class=\"nx\">obj</span><span class=\"p\">);</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">({}.</span><span class=\"nx\">x</span><span class=\"p\">);</span> \n</code></pre>\n<h2 id=\"patch\">Patch</h2>\n\n<p>N/A validate property names before overwriting them and prevent write to certain paths.</p>\n\n<h1 id=\"wrap-up\">Wrap up</h1>\n\n<ul>\n<li>I contacted the maintainer to let them know: [N</li>\n<li>I opened an issue in the related repository: N</li>\n</ul>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>This may be an intended behaviour of this module, but it needs to be better documented. Moreover, to properly analyse the impact of this vulnerability one must look at the clients of this module, such as mongoose and see if attackers can realistically control the path value.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://nodejs.org/en/security/", 
            "about": "This program is used to handle vulnerabilities in the Node.js ecosystem.", 
            "twitter_handle": "", 
            "name": "Node.js third-party modules"
        }, 
        "handle": "nodejs-ecosystem", 
        "url": "https://hackerone.com/nodejs-ecosystem", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/023/949/309112251b444244d95977d1299148aae6482789_small.?1508679627", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 23949, 
        "default_currency": "usd"
    }, 
    "is_published": false
}