{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "bl4de", 
        "ysx", 
        "eveeez", 
        "fa1rlight", 
        "c1231665", 
        "ykw1337", 
        "niced4y", 
        "martijn", 
        "deije", 
        "sonalkr132"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 243156, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-08-28T16:42:06.012Z", 
    "vulnerability_information": "There is no check for `name` field in `metadata.gz`.  By assigning a maliciously crafted string like `../../../../../any/where` to the field, an attacker can create an arbitrary file out of the directory of the gem, or even replace an existing file with a malicious file.\n\n## Proof of Concept 1: Create a file anywhere\n\nThis PoC attempts to create a file `/tmp/malicious-0/BOOOOM`.\n\n1) Download the attached file `malicious.gem`.\n2) Run `gem install malicious.gem --no-doc`.\n3) `/tmp/malicious-0/BOOOOM` should be created.\n\n`malicious.gem` assigns `../../../../../../../../../../tmp/malicious` as `name` field.  This attack is relatively weak since the path must include a directory named `<name>-<version>`, such as `malicious-0`.  Still, there are many chances that cause a catastrophe.  For example, think of replacing a file in `/etc/dbus-1/`.\n\n## Proof of Concept 2: Replace `rackup` command\n\nThis PoC attempts to replace `gems/rack-2.0.3/bin/rackup` with a malicious file.\n\n1) Download the attached file `replace-rackup.gem`.\n2) Run `gem install rack -v 2.0.3`.\n3) Run `gem install replace-rackup.gem --no-doc`.\n4) Run `rackup`.  It will emit just `BOOOOM!`.\n\n`replace-rackup.gem` assigns `../gems/rack` as `name` field, and contains a malicious file `bin/rackup`.  This is really exploitable for attackers.\n\n## Note\n\nFor how to create the malicious gems, see the attached file `src.tar.gz`.\n\nIn my opinion, **this attack is much more dangerous** than the issues I reported recently.  I hope you could fix this issue ASAP.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "Team"
    }, 
    "title": "Installing a crafted gem package may create or overwrite files", 
    "is_member_of_team?": null, 
    "vote_count": 10, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-09-27T16:42:06.080Z", 
    "state": "Closed", 
    "cve_ids": [
        "CVE-2017-0901"
    ], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "attachments": [
        {
            "file_name": "src.tar.gz", 
            "type": "application/gzip", 
            "id": 197576, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/197/576/f644ee200cb7c42b92d5167f60cdaafff78895dc/src.tar.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223319Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d2c9bdae78ac4ba29023fe353f92acca758b50bc58f09ac65f9d946d1ae46ae3"
        }, 
        {
            "file_name": "create-file.gem", 
            "type": "application/x-tar", 
            "id": 197577, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/197/577/ed0a95dae139d74ceb75725ea0c65945a535e719/create-file.gem?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223319Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ff07ae4fea5d96361b4db8a3449395dc76e7cbbaf6a6c17fc69ada836692812f"
        }, 
        {
            "file_name": "replace-rackup.gem", 
            "type": "application/x-tar", 
            "id": 197578, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/197/578/36ab22bc7882a9d315d2944830191bf7c6ade6b0/replace-rackup.gem?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223319Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=239aba5cb3a400540f6e97aa7c4277bc60ecdaf6ee362aa7246d9380bf701093"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-06-26T09:14:49.166Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-26T09:14:49.166Z", 
            "actor": {
                "url": "/rubygems", 
                "profile": {
                    "name": "RubyGems"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
                }
            }, 
            "team_handle": "rubygems", 
            "message": "Thanks for submitting this report to RubyGems. Our team will review and investigate the issue. Please note that only issues in the rubygems library are eligible for our bug bounty program.", 
            "markdown_message": "<p>Thanks for submitting this report to RubyGems. Our team will review and investigate the issue. Please note that only issues in the rubygems library are eligible for our bug bounty program.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1780200, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-02T13:18:55.983Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-02T13:18:55.983Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "To make sure: `gem install replace-rackup.gem` does not simply install a new `rackup` command, but actually overwrites the existing `rackup` command **without prompt**.  I'd like you to check this issue ASAP.", 
            "markdown_message": "<p>To make sure: <code>gem install replace-rackup.gem</code> does not simply install a new <code>rackup</code> command, but actually overwrites the existing <code>rackup</code> command <strong>without prompt</strong>.  I&#39;d like you to check this issue ASAP.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1797653, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-03T12:22:21.562Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-03T12:23:07.719Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "I believe this should fix both issues, though it requires test coverage:\n\n```diff\ndiff --git a/lib/rubygems/installer.rb b/lib/rubygems/installer.rb\nindex 913db819..de169240 100644\n--- a/lib/rubygems/installer.rb\n+++ b/lib/rubygems/installer.rb\n@@ -700,6 +700,12 @@ class Gem::Installer\n       unpack or File.writable?(gem_home)\n   end\n \n+  def verify_spec_name\n+    illegal_characters = spec.name.scan(Regexp.union(File::SEPARATOR)).uniq\n+    return if illegal_characters.empty?\n+    raise Gem::InstallError, \"#{spec} contains illegal characters in its name #{illegal_characters.inspect}\"\n+  end\n+\n   ##\n   # Return the text for an application file.\n \n@@ -826,6 +832,8 @@ TEXT\n \n     ensure_loadable_spec\n \n+    verify_spec_name\n+\n     if options[:install_as_default]\n       Gem.ensure_default_gem_subdirectories gem_home\n     else\n```", 
            "markdown_message": "<p>I believe this should fix both issues, though it requires test coverage:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/lib/rubygems/installer.rb b/lib/rubygems/installer.rb\nindex 913db819..de169240 100644\n</span><span class=\"gd\">--- a/lib/rubygems/installer.rb\n</span><span class=\"gi\">+++ b/lib/rubygems/installer.rb\n</span><span class=\"gu\">@@ -700,6 +700,12 @@ class Gem::Installer\n</span>       unpack or File.writable?(gem_home)\n   end\n\n<span class=\"gi\">+  def verify_spec_name\n+    illegal_characters = spec.name.scan(Regexp.union(File::SEPARATOR)).uniq\n+    return if illegal_characters.empty?\n+    raise Gem::InstallError, &quot;#{spec} contains illegal characters in its name #{illegal_characters.inspect}&quot;\n+  end\n+\n</span>   ##\n   # Return the text for an application file.\n\n<span class=\"gu\">@@ -826,6 +832,8 @@ TEXT\n</span>\n     ensure_loadable_spec\n\n<span class=\"gi\">+    verify_spec_name\n+\n</span>     if options[:install_as_default]\n       Gem.ensure_default_gem_subdirectories gem_home\n     else\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1799130, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-03T13:12:24.134Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-03T13:12:24.134Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Below, I have a patch with test coverage for validating the package when installing, as well as validating the name in the gemspec which should make unintentional errors more discoverable:\n\n```diff\ndiff --git a/lib/rubygems/installer.rb b/lib/rubygems/installer.rb\nindex 913db819..a04fc354 100644\n--- a/lib/rubygems/installer.rb\n+++ b/lib/rubygems/installer.rb\n@@ -700,6 +700,11 @@ class Gem::Installer\n       unpack or File.writable?(gem_home)\n   end\n \n+  def verify_spec_name\n+    return if spec.name =~ Gem::Specification::VALID_NAME_PATTERN\n+    raise Gem::InstallError, \"#{spec} has an invalid name\"\n+  end\n+\n   ##\n   # Return the text for an application file.\n \n@@ -826,6 +831,8 @@ TEXT\n \n     ensure_loadable_spec\n \n+    verify_spec_name\n+\n     if options[:install_as_default]\n       Gem.ensure_default_gem_subdirectories gem_home\n     else\ndiff --git a/lib/rubygems/specification.rb b/lib/rubygems/specification.rb\nindex 2b3eb3e3..13039566 100644\n--- a/lib/rubygems/specification.rb\n+++ b/lib/rubygems/specification.rb\n@@ -108,6 +108,8 @@ class Gem::Specification < Gem::BasicSpecification\n \n   private_constant :LOAD_CACHE if defined? private_constant\n \n+  VALID_NAME_PATTERN = /\\A[a-zA-Z0-9\\.\\-\\_]+\\z/ # :nodoc:\n+\n   # :startdoc:\n \n   ##\n@@ -2698,9 +2700,15 @@ class Gem::Specification < Gem::BasicSpecification\n       end\n     end\n \n-    unless String === name then\n+    if !name.is_a?(String) then\n+      raise Gem::InvalidSpecificationException,\n+            \"invalid value for attribute name: \\\"#{name.inspect}\\\" must be a string\"\n+    elsif name !~ /[a-zA-Z]/ then\n+      raise Gem::InvalidSpecificationException,\n+            \"invalid value for attribute name: #{name.dump} must include at least one letter\"\n+    elsif name !~ VALID_NAME_PATTERN then\n       raise Gem::InvalidSpecificationException,\n-            \"invalid value for attribute name: \\\"#{name.inspect}\\\"\"\n+            \"invalid value for attribute name: #{name.dump} can only include letters, numbers, dashes, and underscores\"\n     end\n \n     if raw_require_paths.empty? then\ndiff --git a/test/rubygems/test_gem_installer.rb b/test/rubygems/test_gem_installer.rb\nindex f941c240..39095c7d 100644\n--- a/test/rubygems/test_gem_installer.rb\n+++ b/test/rubygems/test_gem_installer.rb\n@@ -1450,6 +1450,26 @@ gem 'other', version\n     end\n   end\n \n+  def test_pre_install_checks_malicious_name\n+    spec = util_spec '../malicious', '1'\n+    def spec.full_name # so the spec is buildable\n+      \"malicious-1\"\n+    end\n+    def spec.validate; end\n+\n+    util_build_gem spec\n+\n+    gem = File.join(@gemhome, 'cache', spec.file_name)\n+\n+    use_ui @ui do\n+      @installer = Gem::Installer.at gem\n+      e = assert_raises Gem::InstallError do\n+        @installer.pre_install_checks\n+      end\n+      assert_equal '#<Gem::Specification name=../malicious version=1> has an invalid name', e.message\n+    end\n+  end\n+\n   def test_shebang\n     util_make_exec @spec, \"#!/usr/bin/ruby\"\n \ndiff --git a/test/rubygems/test_gem_specification.rb b/test/rubygems/test_gem_specification.rb\nindex ae39a6d0..bb6acbc7 100644\n--- a/test/rubygems/test_gem_specification.rb\n+++ b/test/rubygems/test_gem_specification.rb\n@@ -3014,7 +3014,37 @@ Did you mean 'Ruby'?\n       @a1.validate\n     end\n \n-    assert_equal 'invalid value for attribute name: \":json\"', e.message\n+    assert_equal 'invalid value for attribute name: \":json\" must be a string', e.message\n+\n+    @a1.name = []\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      @a1.validate\n+    end\n+    assert_equal \"invalid value for attribute name: \\\"[]\\\" must be a string\", e.message\n+\n+    @a1.name = \"\"\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      @a1.validate\n+    end\n+    assert_equal \"invalid value for attribute name: \\\"\\\" must include at least one letter\", e.message\n+\n+    @a1.name = \"12345\"\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      @a1.validate\n+    end\n+    assert_equal \"invalid value for attribute name: \\\"12345\\\" must include at least one letter\", e.message\n+\n+    @a1.name = \"../malicious\"\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      @a1.validate\n+    end\n+    assert_equal \"invalid value for attribute name: \\\"../malicious\\\" can only include letters, numbers, dashes, and underscores\", e.message\n+\n+    @a1.name = \"\\ba\\t\"\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      @a1.validate\n+    end\n+    assert_equal \"invalid value for attribute name: \\\"\\\\ba\\\\t\\\" can only include letters, numbers, dashes, and underscores\", e.message\n   end\n \n   def test_validate_non_nil\n\n```", 
            "markdown_message": "<p>Below, I have a patch with test coverage for validating the package when installing, as well as validating the name in the gemspec which should make unintentional errors more discoverable:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/lib/rubygems/installer.rb b/lib/rubygems/installer.rb\nindex 913db819..a04fc354 100644\n</span><span class=\"gd\">--- a/lib/rubygems/installer.rb\n</span><span class=\"gi\">+++ b/lib/rubygems/installer.rb\n</span><span class=\"gu\">@@ -700,6 +700,11 @@ class Gem::Installer\n</span>       unpack or File.writable?(gem_home)\n   end\n\n<span class=\"gi\">+  def verify_spec_name\n+    return if spec.name =~ Gem::Specification::VALID_NAME_PATTERN\n+    raise Gem::InstallError, &quot;#{spec} has an invalid name&quot;\n+  end\n+\n</span>   ##\n   # Return the text for an application file.\n\n<span class=\"gu\">@@ -826,6 +831,8 @@ TEXT\n</span>\n     ensure_loadable_spec\n\n<span class=\"gi\">+    verify_spec_name\n+\n</span>     if options[:install_as_default]\n       Gem.ensure_default_gem_subdirectories gem_home\n     else\n<span class=\"gh\">diff --git a/lib/rubygems/specification.rb b/lib/rubygems/specification.rb\nindex 2b3eb3e3..13039566 100644\n</span><span class=\"gd\">--- a/lib/rubygems/specification.rb\n</span><span class=\"gi\">+++ b/lib/rubygems/specification.rb\n</span><span class=\"gu\">@@ -108,6 +108,8 @@ class Gem::Specification &lt; Gem::BasicSpecification\n</span>\n   private_constant :LOAD_CACHE if defined? private_constant\n\n<span class=\"gi\">+  VALID_NAME_PATTERN = /\\A[a-zA-Z0-9\\.\\-\\_]+\\z/ # :nodoc:\n+\n</span>   # :startdoc:\n\n   ##\n<span class=\"gu\">@@ -2698,9 +2700,15 @@ class Gem::Specification &lt; Gem::BasicSpecification\n</span>       end\n     end\n\n<span class=\"gd\">-    unless String === name then\n</span><span class=\"gi\">+    if !name.is_a?(String) then\n+      raise Gem::InvalidSpecificationException,\n+            &quot;invalid value for attribute name: \\&quot;#{name.inspect}\\&quot; must be a string&quot;\n+    elsif name !~ /[a-zA-Z]/ then\n+      raise Gem::InvalidSpecificationException,\n+            &quot;invalid value for attribute name: #{name.dump} must include at least one letter&quot;\n+    elsif name !~ VALID_NAME_PATTERN then\n</span>       raise Gem::InvalidSpecificationException,\n<span class=\"gd\">-            &quot;invalid value for attribute name: \\&quot;#{name.inspect}\\&quot;&quot;\n</span><span class=\"gi\">+            &quot;invalid value for attribute name: #{name.dump} can only include letters, numbers, dashes, and underscores&quot;\n</span>     end\n\n     if raw_require_paths.empty? then\n<span class=\"gh\">diff --git a/test/rubygems/test_gem_installer.rb b/test/rubygems/test_gem_installer.rb\nindex f941c240..39095c7d 100644\n</span><span class=\"gd\">--- a/test/rubygems/test_gem_installer.rb\n</span><span class=\"gi\">+++ b/test/rubygems/test_gem_installer.rb\n</span><span class=\"gu\">@@ -1450,6 +1450,26 @@ gem &#39;other&#39;, version\n</span>     end\n   end\n\n<span class=\"gi\">+  def test_pre_install_checks_malicious_name\n+    spec = util_spec &#39;../malicious&#39;, &#39;1&#39;\n+    def spec.full_name # so the spec is buildable\n+      &quot;malicious-1&quot;\n+    end\n+    def spec.validate; end\n+\n+    util_build_gem spec\n+\n+    gem = File.join(@gemhome, &#39;cache&#39;, spec.file_name)\n+\n+    use_ui [@ui](/ui) do\n+      [@installer](/installer) = Gem::Installer.at gem\n+      e = assert_raises Gem::InstallError do\n+        [@installer](/installer).pre_install_checks\n+      end\n+      assert_equal &#39;#&lt;Gem::Specification name=../malicious version=1&gt; has an invalid name&#39;, e.message\n+    end\n+  end\n+\n</span>   def test_shebang\n     util_make_exec [@spec](/spec), &quot;#!/usr/bin/ruby&quot;\n\n<span class=\"gh\">diff --git a/test/rubygems/test_gem_specification.rb b/test/rubygems/test_gem_specification.rb\nindex ae39a6d0..bb6acbc7 100644\n</span><span class=\"gd\">--- a/test/rubygems/test_gem_specification.rb\n</span><span class=\"gi\">+++ b/test/rubygems/test_gem_specification.rb\n</span><span class=\"gu\">@@ -3014,7 +3014,37 @@ Did you mean &#39;Ruby&#39;?\n</span>       [@a1](/a1).validate\n     end\n\n<span class=\"gd\">-    assert_equal &#39;invalid value for attribute name: &quot;:json&quot;&#39;, e.message\n</span><span class=\"gi\">+    assert_equal &#39;invalid value for attribute name: &quot;:json&quot; must be a string&#39;, e.message\n+\n+    [@a1](/a1).name = []\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      [@a1](/a1).validate\n+    end\n+    assert_equal &quot;invalid value for attribute name: \\&quot;[]\\&quot; must be a string&quot;, e.message\n+\n+    [@a1](/a1).name = &quot;&quot;\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      [@a1](/a1).validate\n+    end\n+    assert_equal &quot;invalid value for attribute name: \\&quot;\\&quot; must include at least one letter&quot;, e.message\n+\n+    [@a1](/a1).name = &quot;12345&quot;\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      [@a1](/a1).validate\n+    end\n+    assert_equal &quot;invalid value for attribute name: \\&quot;12345\\&quot; must include at least one letter&quot;, e.message\n+\n+    [@a1](/a1).name = &quot;../malicious&quot;\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      [@a1](/a1).validate\n+    end\n+    assert_equal &quot;invalid value for attribute name: \\&quot;../malicious\\&quot; can only include letters, numbers, dashes, and underscores&quot;, e.message\n+\n+    [@a1](/a1).name = &quot;\\ba\\t&quot;\n+    e = assert_raises Gem::InvalidSpecificationException do\n+      [@a1](/a1).validate\n+    end\n+    assert_equal &quot;invalid value for attribute name: \\&quot;\\\\ba\\\\t\\&quot; can only include letters, numbers, dashes, and underscores&quot;, e.message\n</span>   end\n\n   def test_validate_non_nil\n\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1799252, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-04T21:51:29.715Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-04T21:51:29.715Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "@mame can you confirm if this patch fixes the issue?", 
            "markdown_message": "<p><a href=\"/mame\">@mame</a> can you confirm if this patch fixes the issue?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1802713, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-26T00:47:27.131Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-26T00:47:27.131Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "I confirmed that it fixes the issue.  Also, I confirmed that it allows some of my gems whose name is strange, such as [`_`](http://rubygems.org/gems/_) and [`1234567890_`](https://rubygems.org/gems/1234567890_).\n\n Thank you and sorry for the late reply!", 
            "markdown_message": "<p>I confirmed that it fixes the issue.  Also, I confirmed that it allows some of my gems whose name is strange, such as <a href=\"/redirect?signature=2dc81879bd4278254aa547830ba3927953e6e4cf&amp;url=http%3A%2F%2Frubygems.org%2Fgems%2F_\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span><code>_</code></span><i class=\"icon-external-link\"></i></a> and <a href=\"/redirect?signature=6a532982c2d8bc4387ba49dca9502b18bf90b3be&amp;url=https%3A%2F%2Frubygems.org%2Fgems%2F1234567890_\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span><code>1234567890_</code></span><i class=\"icon-external-link\"></i></a>.</p>\n\n<p>Thank you and sorry for the late reply!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1956254, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "mame", 
                "url": "/mame"
            }, 
            "created_at": "2017-08-28T02:09:12.250Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-28T02:09:12.250Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Fix released in http://blog.rubygems.org/2017/08/27/2.6.13-released.html", 
            "markdown_message": "<p>Fix released in <a title=\"http://blog.rubygems.org/2017/08/27/2.6.13-released.html\" href=\"/redirect?signature=ac71d7eadf4bdf64e886fe7e2e57f6393ebdec56&amp;url=http%3A%2F%2Fblog.rubygems.org%2F2017%2F08%2F27%2F2.6.13-released.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://blog.rubygems.org/2017/08/27/2.6.13-released.html</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1958769, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-28T16:42:06.040Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-28T16:42:06.040Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1960608, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:25:29.723Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:25:29.723Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "cve_ids": [
                "CVE-2017-0901"
            ], 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::CveIdAdded", 
            "id": 1967699, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-08-30T23:29:44.061Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:36:09.277Z", 
            "actor": {
                "url": "/rubygems", 
                "profile": {
                    "name": "RubyGems"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
                }
            }, 
            "team_handle": "rubygems", 
            "bonus_amount": "0.0", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "mame", 
                "url": "/mame"
            }, 
            "message": "Thank you for your report! Based on the [guidelines posted on the RubyGems HackerOne project](https://hackerone.com/rubygems), this report is considered medium impact: allows likely remote code execution, but does not guarantee it. ", 
            "markdown_message": "<p>Thank you for your report! Based on the <a href=\"https://hackerone.com/rubygems\">guidelines posted on the RubyGems HackerOne project</a>, this report is considered medium impact: allows likely remote code execution, but does not guarantee it. </p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1967701, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:33:42.489Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:33:42.489Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium", 
                "old_severity": "Critical (9.0)"
            }, 
            "team_handle": "rubygems", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1967707, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:34:45.563Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:34:45.563Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High", 
                "old_severity": "Medium"
            }, 
            "team_handle": "rubygems", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1967708, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-31T23:17:55.581Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-31T23:17:55.581Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "I agree to disclose this ticket.  Thank you very much!", 
            "markdown_message": "<p>I agree to disclose this ticket.  Thank you very much!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1969957, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-31T23:18:39.341Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-31T23:18:39.341Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1969960, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "mame", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/mame", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 19, 
        "name": "Path Traversal"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -37605073.15573197, 
    "disclosed_at": "2017-08-31T23:18:39.368Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/243156", 
    "created_at": "2017-06-26T09:14:48.920Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>There is no check for <code>name</code> field in <code>metadata.gz</code>.  By assigning a maliciously crafted string like <code>../../../../../any/where</code> to the field, an attacker can create an arbitrary file out of the directory of the gem, or even replace an existing file with a malicious file.</p>\n\n<h2 id=\"proof-of-concept-1-create-a-file-anywhere\">Proof of Concept 1: Create a file anywhere</h2>\n\n<p>This PoC attempts to create a file <code>/tmp/malicious-0/BOOOOM</code>.</p>\n\n<p>1) Download the attached file <code>malicious.gem</code>.<br>\n2) Run <code>gem install malicious.gem --no-doc</code>.<br>\n3) <code>/tmp/malicious-0/BOOOOM</code> should be created.</p>\n\n<p><code>malicious.gem</code> assigns <code>../../../../../../../../../../tmp/malicious</code> as <code>name</code> field.  This attack is relatively weak since the path must include a directory named <code>&lt;name&gt;-&lt;version&gt;</code>, such as <code>malicious-0</code>.  Still, there are many chances that cause a catastrophe.  For example, think of replacing a file in <code>/etc/dbus-1/</code>.</p>\n\n<h2 id=\"proof-of-concept-2-replace-rackup-command\">Proof of Concept 2: Replace <code>rackup</code> command</h2>\n\n<p>This PoC attempts to replace <code>gems/rack-2.0.3/bin/rackup</code> with a malicious file.</p>\n\n<p>1) Download the attached file <code>replace-rackup.gem</code>.<br>\n2) Run <code>gem install rack -v 2.0.3</code>.<br>\n3) Run <code>gem install replace-rackup.gem --no-doc</code>.<br>\n4) Run <code>rackup</code>.  It will emit just <code>BOOOOM!</code>.</p>\n\n<p><code>replace-rackup.gem</code> assigns <code>../gems/rack</code> as <code>name</code> field, and contains a malicious file <code>bin/rackup</code>.  This is really exploitable for attackers.</p>\n\n<h2 id=\"note\">Note</h2>\n\n<p>For how to create the malicious gems, see the attached file <code>src.tar.gz</code>.</p>\n\n<p>In my opinion, <strong>this attack is much more dangerous</strong> than the issues I reported recently.  I hope you could fix this issue ASAP.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://rubygems.org", 
            "about": "RubyGems.org is the Ruby community\u2019s gem hosting service.", 
            "twitter_handle": "rubygems_status", 
            "name": "RubyGems"
        }, 
        "handle": "rubygems", 
        "url": "https://hackerone.com/rubygems", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/212/0e820a45b51fb96fad86945c67150263527c69ed_small.png?1469676240", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8212, 
        "default_currency": "usd"
    }, 
    "is_published": false
}