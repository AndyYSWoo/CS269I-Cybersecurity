{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "paragonie-scott"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 168293, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-09-14T13:18:40.485Z", 
    "vulnerability_information": "All the sensitive information variables are zeroed from memory, expect the hex2bin value of \"validator\".\n\nhttps://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Security/Authentication.php#L223-L236\n\n```\n        $stored = \\Sodium\\hex2bin($record[$f['validator']]);\n        \\Sodium\\memzero($record[$f['validator']]);\n        if (!\\hash_equals($stored, $val)) {\n            throw new LongTermAuthAlert(\n                \\trk('errors.security.invalid_persistent_token')\n            );\n        }\n        $userID = (int) $record[$f['userid']];\n        $_SESSION['session_canary'] = $this->db->cell(\n            'SELECT session_canary FROM airship_users WHERE userid = ?',\n            $userID\n        );\n        return $userID;\n```\n\nThe encoded value of \"validator\" is zeroed from memory, but the **decoded** version is not.\nThe value of $stored is not returned anywhere, so it should be zeroed from memory.\n\nNote. As the exception throw stops the flow, it should *also* be cleared when the hash doesn't equal \ud83d\udc4d", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "none", 
            "privileges_required": "high", 
            "user_interaction": "none", 
            "attack_vector": "physical", 
            "attack_complexity": "high", 
            "scope": "unchanged", 
            "integrity": "none", 
            "availability": "none"
        }, 
        "rating": "none", 
        "score": 0.0, 
        "author_type": "Team"
    }, 
    "title": "Not clearing hex-decoded variable after usage in Authentication", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-09-14T12:15:48.400Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-14T12:15:48.400Z", 
            "actor": {
                "username": "sstok", 
                "url": "/sstok", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "May have found a similar problem in https://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Bolt/Security.php but exploiting this will require more work when (performed), as the session data needs to be changed.", 
            "markdown_message": "<p>May have found a similar problem in <a title=\"https://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Bolt/Security.php\" href=\"/redirect?signature=c59d041f7d2083bb8ae05be6c94845861b03f9de&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F8f04f071c414c3893cf66311839d20a343af1237%2Fsrc%2FEngine%2FBolt%2FSecurity.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Bolt/Security.php</span><i class=\"icon-external-link\"></i></a> but exploiting this will require more work when (performed), as the session data needs to be changed.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1193326, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-14T13:10:46.730Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-14T13:10:46.730Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "> but exploiting this will require more work\n\nStrictly speaking, neither is really exploitable with any reasonable threat model.\n\nIf you have even read-only access to the webserver's memory, you can already just grab the database credentials and dump all the data that's being handled. We're using memzero as a matter of good hygiene, and it's certainly true that we should do so consistently, but there's nothing remotely exploitable going on here.", 
            "markdown_message": "<blockquote>\n<p>but exploiting this will require more work</p>\n</blockquote>\n\n<p>Strictly speaking, neither is really exploitable with any reasonable threat model.</p>\n\n<p>If you have even read-only access to the webserver&#39;s memory, you can already just grab the database credentials and dump all the data that&#39;s being handled. We&#39;re using memzero as a matter of good hygiene, and it&#39;s certainly true that we should do so consistently, but there&#39;s nothing remotely exploitable going on here.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1193399, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-14T13:16:08.355Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-14T13:19:29.267Z", 
            "actor": {
                "username": "sstok", 
                "url": "/sstok", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Should have chosen my words more carefully, hehe.\nJust trying to be good person here, but I did not feel comfortable posting this on GitHub.", 
            "markdown_message": "<p>Should have chosen my words more carefully, hehe.<br>\nJust trying to be good person here, but I did not feel comfortable posting this on GitHub.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1193401, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-14T13:18:34.741Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-14T13:18:34.741Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "It's all good.\n\nThanks for taking the time to read our code and identify inconsistencies. I'll add more `\\Sodium\\memzero()` calls in the next release.", 
            "markdown_message": "<p>It&#39;s all good.</p>\n\n<p>Thanks for taking the time to read our code and identify inconsistencies. I&#39;ll add more <code>\\Sodium\\memzero()</code> calls in the next release.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1193403, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-14T13:18:40.522Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-14T13:18:40.522Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1193404, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-03T04:57:58.956Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-03T04:57:58.956Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1281704, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-04T03:08:53.953Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-04T03:08:53.953Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "None (0.0)", 
                "old_severity": null
            }, 
            "team_handle": "paragonie", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1283755, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-04T20:15:28.213Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-04T20:15:28.213Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "I forgot to add: v1.4.0 has more consistent use of memzero", 
            "markdown_message": "<p>I forgot to add: v1.4.0 has more consistent use of memzero</p>\n", 
            "type": "Activities::Comment", 
            "id": 1285130, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "sstok", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/sstok", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 57, 
        "name": "Violation of Secure Design Principles"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2016-11-03T04:57:58.979Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/168293", 
    "created_at": "2016-09-14T11:57:21.746Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>All the sensitive information variables are zeroed from memory, expect the hex2bin value of &quot;validator&quot;.</p>\n\n<p><a title=\"https://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Security/Authentication.php#L223-L236\" href=\"/redirect?signature=7d183d0b93264ca00c7bd2933eaf131e611c2a5d&amp;url=https%3A%2F%2Fgithub.com%2Fparagonie%2Fairship%2Fblob%2F8f04f071c414c3893cf66311839d20a343af1237%2Fsrc%2FEngine%2FSecurity%2FAuthentication.php%23L223-L236\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/paragonie/airship/blob/8f04f071c414c3893cf66311839d20a343af1237/src/Engine/Security/Authentication.php#L223-L236</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code>        $stored = \\Sodium\\hex2bin($record[$f[&#39;validator&#39;]]);\n        \\Sodium\\memzero($record[$f[&#39;validator&#39;]]);\n        if (!\\hash_equals($stored, $val)) {\n            throw new LongTermAuthAlert(\n                \\trk(&#39;errors.security.invalid_persistent_token&#39;)\n            );\n        }\n        $userID = (int) $record[$f[&#39;userid&#39;]];\n        $_SESSION[&#39;session_canary&#39;] = $this-&gt;db-&gt;cell(\n            &#39;SELECT session_canary FROM airship_users WHERE userid = ?&#39;,\n            $userID\n        );\n        return $userID;\n</code></pre>\n<p>The encoded value of &quot;validator&quot; is zeroed from memory, but the <strong>decoded</strong> version is not.<br>\nThe value of $stored is not returned anywhere, so it should be zeroed from memory.</p>\n\n<p>Note. As the exception throw stops the flow, it should <em>also</em> be cleared when the hash doesn&#39;t equal \ud83d\udc4d</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://github.com/paragonie", 
            "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries", 
            "twitter_handle": "ParagonIE", 
            "name": "Paragon Initiative Enterprises"
        }, 
        "handle": "paragonie", 
        "url": "https://hackerone.com/paragonie", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/539/a041268a04bb7a5c3d3a88a9dccc6b5955eff4d7_small.?1453010804", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8539, 
        "default_currency": "usd"
    }, 
    "is_published": false
}