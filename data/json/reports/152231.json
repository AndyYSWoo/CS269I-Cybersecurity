{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "rc0r", 
        "yaworsk", 
        "youssefmahmoud", 
        "gopi", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 152231, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-31T18:48:43.856Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Out of bound read in exif_process_IFD_in_MAKERNOTE", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-08-30T18:48:43.913Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-07-19T07:56:53.941Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-19T07:56:53.941Z", 
            "actor": {
                "username": "hoangnguyen", 
                "url": "/hoangnguyen", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/074/688/06f58ae982f76d50ccc73340a79d0ac0848629b4_medium.png?1462527776"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "I missed when posting this report. Here my bug was verified by php security bug : https://bugs.php.net/bug.php?id=72603", 
            "markdown_message": "<p>I missed when posting this report. Here my bug was verified by php security bug : <a title=\"https://bugs.php.net/bug.php?id=72603\" href=\"/redirect?signature=78783f5ccdeb4ea9b93cda778be4dbcb9504ed4b&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D72603\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bugs.php.net/bug.php?id=72603</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1075420, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "hoangnguyen", 
                "url": "/hoangnguyen"
            }, 
            "created_at": "2016-07-31T18:48:29.825Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:48:29.825Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1098498, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-07-31T18:48:38.302Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:48:38.302Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "hoangnguyen", 
                "url": "/hoangnguyen"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1098499, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-31T18:48:43.889Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-31T18:48:43.889Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1098500, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-08-30T18:48:55.777Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-08-30T18:48:55.777Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1163041, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "hoangnguyen", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/hoangnguyen", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/074/688/20accc167d39b53abd1c87ec31f7ac0e887e3819_small.png?1462527776"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 2, 
        "name": "Memory Corruption - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -71553656.1550458, 
    "disclosed_at": "2016-08-30T18:48:55.696Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/152231", 
    "created_at": "2016-07-19T07:52:42.525Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I have found some vulnerable code that lacks check size of buffer may lead to memory out of read or write.</p>\n\n<p>Take a look at : </p>\n<pre class=\"highlight plaintext\"><code>static int exif_process_IFD_in_MAKERNOTE(image_info_type *ImageInfo, char * value_ptr, int value_len, char *offset_base, size_t IFDlength, size_t displacement)\n{\n*****SNIP*******\n    switch (maker_note-&gt;offset_mode) {\n        case MN_OFFSET_MAKER:\n            offset_base = value_ptr;\n            break;\n        case MN_OFFSET_GUESS:\n            offset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-&gt;motorola_intel);\n#ifdef EXIF_DEBUG\n            exif_error_docref(NULL EXIFERR_CC, ImageInfo, E_NOTICE, &quot;Using automatic offset correction: 0x%04X&quot;, ((int)dir_start-(int)offset_base+maker_note-&gt;offset+displacement) + offset_diff);\n#endif\n            offset_base = value_ptr + offset_diff;\n            break;\n        default:\n        case MN_OFFSET_NORMAL:\n            break;\n    }\n\n    if ((2+NumDirEntries*12) &gt; value_len)\n*****SNIP*******\n}\n</code></pre>\n<p>As you can see this line while processing markernote of &quot;Cannon&quot;</p>\n<pre class=\"highlight plaintext\"><code>offset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-&gt;motorola_intel);\n</code></pre>\n<p>Because no checking the value return from php_ifd_get32u(dir_start+10, ImageInfo-&gt;motorola_intel); and weak check value of NumDirEntries, so attacker can control both value to make offset_diff may out of size offset_base.</p>\n\n<p>That result may lead to information leak or memory corruption.</p>\n\n<p>Here jpeg image link to lead to this problem : <a title=\"https://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing\" href=\"/redirect?signature=5e638f038a8a0842ae4bd0b121924718485628c2&amp;url=https%3A%2F%2Fdrive.google.com%2Ffile%2Fd%2F0B0D1DYQpkA9UZmVOMzYwQlBnSGM%2Fview%3Fusp%3Dsharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing</span><i class=\"icon-external-link\"></i></a></p>\n\n<h2 id=\"test-script\">Test script:</h2>\n<pre class=\"highlight plaintext\"><code>&lt;?php\n    $exif = exif_read_data(&#39;exif/gen.jpg&#39;);\n    var_dump($exif);\n?&gt;\n</code></pre>\n<p>I will show you the variable of offset_diff, offset_base before and after hitting that code path.</p>\n<pre class=\"highlight plaintext\"><code>[----------------------------------registers-----------------------------------]\nRAX: 0x0\nRBX: 0x18\nRCX: 0x0\nRDX: 0x7ffff3e7607e --&gt; 0x29286fffffa92\nRSI: 0x0\nRDI: 0x7ffff3e7607e --&gt; 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --&gt; 0x7fffffffa9d0 --&gt; 0x7fffffffaa30 --&gt; 0x7fffffffab60 --&gt; 0x7fffffffabc0 --&gt; 0x7fffffffac00 --&gt; 0x7fffffffac30 --&gt; 0x7fffffffacd0 --&gt; 0x7fffffffad10 --&gt; 0x7fffffffadf0 --&gt; 0x7fffffffb0d0 --&gt; 0x7fffffffb100 --&gt; 0x7fffffffb130 --&gt; 0x7fffffffb170 --&gt; 0x7fffffffb280 --&gt; 0x7fffffffd580 --&gt; 0x7fffffffe900 --&gt; 0x7fffffffea50 --&gt; 0xa15f90 (&lt;__libc_csu_init&gt;: push   r15)\nRSP: 0x7fffffffa830 --&gt; 0xc (&#39;\\x0c&#39;)\nRIP: 0x613c3d (&lt;exif_process_IFD_in_MAKERNOTE+489&gt;: call   0x610603 &lt;php_ifd_get32u&gt;)\nR8 : 0x594\nR9 : 0xc (&#39;\\x0c&#39;)\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (&lt;_start&gt;:    xor    ebp,ebp)\nR13: 0x7fffffffeb30 --&gt; 0x2\nR14: 0x7ffff3e14030 --&gt; 0x7ffff3e5fb80 --&gt; 0x9a28f2 (&lt;ZEND_DO_ICALL_SPEC_HANDLER&gt;:  push   rbp)\nR15: 0x7ffff3e5fb80 --&gt; 0x9a28f2 (&lt;ZEND_DO_ICALL_SPEC_HANDLER&gt;: push   rbp)\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c34 &lt;exif_process_IFD_in_MAKERNOTE+480&gt;:    add    rdx,0xa\n   0x613c38 &lt;exif_process_IFD_in_MAKERNOTE+484&gt;:    mov    esi,eax\n   0x613c3a &lt;exif_process_IFD_in_MAKERNOTE+486&gt;:    mov    rdi,rdx\n=&gt; 0x613c3d &lt;exif_process_IFD_in_MAKERNOTE+489&gt;:    call   0x610603 &lt;php_ifd_get32u&gt;\n   0x613c42 &lt;exif_process_IFD_in_MAKERNOTE+494&gt;:    sub    ebx,eax\n   0x613c44 &lt;exif_process_IFD_in_MAKERNOTE+496&gt;:    mov    eax,ebx\n   0x613c46 &lt;exif_process_IFD_in_MAKERNOTE+498&gt;:    add    eax,0x6\n   0x613c49 &lt;exif_process_IFD_in_MAKERNOTE+501&gt;:    mov    DWORD PTR [rbp-0x24],eax\nGuessed arguments:\narg[0]: 0x7ffff3e7607e --&gt; 0x29286fffffa92\narg[1]: 0x0\narg[2]: 0x7ffff3e7607e --&gt; 0x29286fffffa92\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --&gt; 0xc (&#39;\\x0c&#39;)\n0008| 0x7fffffffa838 --&gt; 0x594\n0016| 0x7fffffffa840 --&gt; 0x7ffff3e76008 --&gt; 0x8002a4949\n0024| 0x7fffffffa848 --&gt; 0x1c006117bc\n0032| 0x7fffffffa850 --&gt; 0x7ffff3e76074 --&gt; 0x1000202080002\n0040| 0x7fffffffa858 --&gt; 0x7fffffffae50 --&gt; 0x7ffff3e5fa00 --&gt; 0x12b9700 --&gt; 0x8d43d1 (&lt;php_stdiop_write&gt;:  push   rbp)\n0048| 0x7fffffffa860 --&gt; 0x7fffffffa8a0 --&gt; 0x7fffffffa9d0 --&gt; 0x7fffffffaa30 --&gt; 0x7fffffffab60 --&gt; 0x7fffffffabc0 --&gt; 0x7fffffffac00 --&gt; 0x7fffffffac30 --&gt; 0x7fffffffacd0 --&gt; 0x7fffffffad10 --&gt; 0x7fffffffadf0 --&gt; 0x7fffffffb0d0 --&gt; 0x7fffffffb100 --&gt; 0x7fffffffb130 --&gt; 0x7fffffffb170 --&gt; 0x7fffffffb280 --&gt; 0x7fffffffd580 --&gt; 0x7fffffffe900 --&gt; 0x7fffffffea50 --&gt; 0xa15f90 (&lt;__libc_csu_init&gt;: push   r15)\n0056| 0x7fffffffa868 --&gt; 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 5, 0x0000000000613c3d in exif_process_IFD_in_MAKERNOTE (\n    ImageInfo=0x7fffffffae50, value_ptr=0x7ffff3e76074 &quot;\\002&quot;, value_len=0x1c,\n    offset_base=0x7ffff3e76008 &quot;II*&quot;, IFDlength=0x594, displacement=0xc)\n    at /home/vagrant/Sources_Ext/audit/src/php7.0-7.0.4/ext/exif/exif.c:2754\n2754                offset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo-&gt;motorola_intel);\ngdb-peda$ x/80gx offset_base\n0x7ffff3e76008: 0x00000008002a4949  0x00010005011a0002\n0x7ffff3e76018: 0x8769000004000000  0x0022000000010004\n0x7ffff3e76028: 0x0005829a00060000  0x0000041200000001\n0x7ffff3e76038: 0x000000010005829d  0x0002928600000444\n0x7ffff3e76048: 0x00000da6000000a8  0x0000002c00028298\n0x7ffff3e76058: 0x0002010f00000e4e  0x00000e7a00000005\n0x7ffff3e76068: 0x000000070004927c  0x020800020000006c\n0x7ffff3e76078: 0xfa92000000010002  0x00ff00029286ffff\n0x7ffff3e76088: 0x5252000000000000  0x5252525252525252\n0x7ffff3e76098: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760a8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760b8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760c8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760d8: 0x5252525252525252  0x5252525252525252\n0x7ffff3e760e8: 0x5252525252525252  0x00f2525252525252\n.....\n0x7ffff3e76568: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76578: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76588: 0x5454545454545454  0x5454545454545454\n0x7ffff3e76598: 0x00000000d9ff5454  0x0000000000000000\n0x7ffff3e765a8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765b8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765c8: 0x0000000000000000  0x0000000000000000\n0x7ffff3e765d8: 0x0000000000000000  0x000000000000059d\n0x7ffff3e765e8: 0x0000000000b12b88  0x0000000000f774a0\n0x7ffff3e765f8: 0x000009ce00000646  0x00007ffff3e76c00\n</code></pre>\n<p>As you see above at address <em>0x7ffff3e76598</em> is the end of offset_base.<br>\nNext i hit next to execute <em>offset_base = value_ptr + offset_diff;</em></p>\n<pre class=\"highlight plaintext\"><code>[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff3e76600 --&gt; 0x7ffff3e76c00 --&gt; 0x7ffff3e77200 --&gt; 0x7ffff3e77800 --&gt; 0x7ffff3e77e00 --&gt; 0x7ffff3e78400 --&gt; 0x7ffff3e78a00 --&gt; 0x0\nRBX: 0x586\nRCX: 0x0\nRDX: 0x58c\nRSI: 0x0\nRDI: 0x7ffff3e7607e --&gt; 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --&gt; 0x7fffffffa9d0 --&gt; 0x7fffffffaa30 --&gt; 0x7fffffffab60 --&gt; 0x7fffffffabc0 --&gt; 0x7fffffffac00 --&gt; 0x7fffffffac30 --&gt; 0x7fffffffacd0 --&gt; 0x7fffffffad10 --&gt; 0x7fffffffadf0 --&gt; 0x7fffffffb0d0 --&gt; 0x7fffffffb100 --&gt; 0x7fffffffb130 --&gt; 0x7fffffffb170 --&gt; 0x7fffffffb280 --&gt; 0x7fffffffd580 --&gt; 0x7fffffffe900 --&gt; 0x7fffffffea50 --&gt; 0xa15f90 (&lt;__libc_csu_init&gt;: push   r15)\nRSP: 0x7fffffffa830 --&gt; 0xc (&#39;\\x0c&#39;)\nRIP: 0x613c5d (&lt;exif_process_IFD_in_MAKERNOTE+521&gt;: nop)\nR8 : 0x594\nR9 : 0xc (&#39;\\x0c&#39;)\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (&lt;_start&gt;:    xor    ebp,ebp)\nR13: 0x7fffffffeb30 --&gt; 0x2\nR14: 0x7ffff3e14030 --&gt; 0x7ffff3e5fb80 --&gt; 0x9a28f2 (&lt;ZEND_DO_ICALL_SPEC_HANDLER&gt;:  push   rbp)\nR15: 0x7ffff3e5fb80 --&gt; 0x9a28f2 (&lt;ZEND_DO_ICALL_SPEC_HANDLER&gt;: push   rbp)\nEFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c52 &lt;exif_process_IFD_in_MAKERNOTE+510&gt;:    mov    rax,QWORD PTR [rbp-0x50]\n   0x613c56 &lt;exif_process_IFD_in_MAKERNOTE+514&gt;:    add    rax,rdx\n   0x613c59 &lt;exif_process_IFD_in_MAKERNOTE+517&gt;:    mov    QWORD PTR [rbp-0x60],rax\n=&gt; 0x613c5d &lt;exif_process_IFD_in_MAKERNOTE+521&gt;:    nop\n   0x613c5e &lt;exif_process_IFD_in_MAKERNOTE+522&gt;:    mov    edx,DWORD PTR [rbp-0x28]\n   0x613c61 &lt;exif_process_IFD_in_MAKERNOTE+525&gt;:    mov    eax,edx\n   0x613c63 &lt;exif_process_IFD_in_MAKERNOTE+527&gt;:    add    eax,eax\n   0x613c65 &lt;exif_process_IFD_in_MAKERNOTE+529&gt;:    add    eax,edx\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --&gt; 0xc (&#39;\\x0c&#39;)\n0008| 0x7fffffffa838 --&gt; 0x594\n0016| 0x7fffffffa840 --&gt; 0x7ffff3e76600 --&gt; 0x7ffff3e76c00 --&gt; 0x7ffff3e77200 --&gt; 0x7ffff3e77800 --&gt; 0x7ffff3e77e00 --&gt; 0x7ffff3e78400 --&gt; 0x7ffff3e78a00 --&gt; 0x0\n0024| 0x7fffffffa848 --&gt; 0x1c006117bc\n0032| 0x7fffffffa850 --&gt; 0x7ffff3e76074 --&gt; 0x1000202080002\n0040| 0x7fffffffa858 --&gt; 0x7fffffffae50 --&gt; 0x7ffff3e5fa00 --&gt; 0x12b9700 --&gt; 0x8d43d1 (&lt;php_stdiop_write&gt;:  push   rbp)\n0048| 0x7fffffffa860 --&gt; 0x7fffffffa8a0 --&gt; 0x7fffffffa9d0 --&gt; 0x7fffffffaa30 --&gt; 0x7fffffffab60 --&gt; 0x7fffffffabc0 --&gt; 0x7fffffffac00 --&gt; 0x7fffffffac30 --&gt; 0x7fffffffacd0 --&gt; 0x7fffffffad10 --&gt; 0x7fffffffadf0 --&gt; 0x7fffffffb0d0 --&gt; 0x7fffffffb100 --&gt; 0x7fffffffb130 --&gt; 0x7fffffffb170 --&gt; 0x7fffffffb280 --&gt; 0x7fffffffd580 --&gt; 0x7fffffffe900 --&gt; 0x7fffffffea50 --&gt; 0xa15f90 (&lt;__libc_csu_init&gt;: push   r15)\n0056| 0x7fffffffa868 --&gt; 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n2759                break;\ngdb-peda$ p offset_base\n$86 = 0x7ffff3e76600 &quot;&quot;\ngdb-peda$ x/40gx offset_base\n0x7ffff3e76600: 0x00007ffff3e76c00  0x0000000000000000\n0x7ffff3e76610: 0x0000000000000000  0x0000000000000000\n0x7ffff3e76620: 0x0000000000000000  0x0000000000000000\n</code></pre>\n<p>After calculate offset_base, you can see that address is out of own buffer</p>\n", 
    "vulnerability_information": "I have found some vulnerable code that lacks check size of buffer may lead to memory out of read or write.\n\nTake a look at : \n```\nstatic int exif_process_IFD_in_MAKERNOTE(image_info_type *ImageInfo, char * value_ptr, int value_len, char *offset_base, size_t IFDlength, size_t displacement)\n{\n*****SNIP*******\n\tswitch (maker_note->offset_mode) {\n\t\tcase MN_OFFSET_MAKER:\n\t\t\toffset_base = value_ptr;\n\t\t\tbreak;\n\t\tcase MN_OFFSET_GUESS:\n\t\t\toffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo->motorola_intel);\n#ifdef EXIF_DEBUG\n\t\t\texif_error_docref(NULL EXIFERR_CC, ImageInfo, E_NOTICE, \"Using automatic offset correction: 0x%04X\", ((int)dir_start-(int)offset_base+maker_note->offset+displacement) + offset_diff);\n#endif\n\t\t\toffset_base = value_ptr + offset_diff;\n\t\t\tbreak;\n\t\tdefault:\n\t\tcase MN_OFFSET_NORMAL:\n\t\t\tbreak;\n\t}\n\n\tif ((2+NumDirEntries*12) > value_len)\n*****SNIP*******\n}\n```\nAs you can see this line while processing markernote of \"Cannon\"\n```\noffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo->motorola_intel);\n```\nBecause no checking the value return from php_ifd_get32u(dir_start+10, ImageInfo->motorola_intel); and weak check value of NumDirEntries, so attacker can control both value to make offset_diff may out of size offset_base.\n\nThat result may lead to information leak or memory corruption.\n\nHere jpeg image link to lead to this problem : https://drive.google.com/file/d/0B0D1DYQpkA9UZmVOMzYwQlBnSGM/view?usp=sharing\n\nTest script:\n---------------\n```\n<?php\n\t$exif = exif_read_data('exif/gen.jpg');\n\tvar_dump($exif);\n?>\n```\nI will show you the variable of offset_diff, offset_base before and after hitting that code path.\n```\n[----------------------------------registers-----------------------------------]\nRAX: 0x0\nRBX: 0x18\nRCX: 0x0\nRDX: 0x7ffff3e7607e --> 0x29286fffffa92\nRSI: 0x0\nRDI: 0x7ffff3e7607e --> 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --> 0x7fffffffa9d0 --> 0x7fffffffaa30 --> 0x7fffffffab60 --> 0x7fffffffabc0 --> 0x7fffffffac00 --> 0x7fffffffac30 --> 0x7fffffffacd0 --> 0x7fffffffad10 --> 0x7fffffffadf0 --> 0x7fffffffb0d0 --> 0x7fffffffb100 --> 0x7fffffffb130 --> 0x7fffffffb170 --> 0x7fffffffb280 --> 0x7fffffffd580 --> 0x7fffffffe900 --> 0x7fffffffea50 --> 0xa15f90 (<__libc_csu_init>:\tpush   r15)\nRSP: 0x7fffffffa830 --> 0xc ('\\x0c')\nRIP: 0x613c3d (<exif_process_IFD_in_MAKERNOTE+489>:\tcall   0x610603 <php_ifd_get32u>)\nR8 : 0x594\nR9 : 0xc ('\\x0c')\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (<_start>:\txor    ebp,ebp)\nR13: 0x7fffffffeb30 --> 0x2\nR14: 0x7ffff3e14030 --> 0x7ffff3e5fb80 --> 0x9a28f2 (<ZEND_DO_ICALL_SPEC_HANDLER>:\tpush   rbp)\nR15: 0x7ffff3e5fb80 --> 0x9a28f2 (<ZEND_DO_ICALL_SPEC_HANDLER>:\tpush   rbp)\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c34 <exif_process_IFD_in_MAKERNOTE+480>:\tadd    rdx,0xa\n   0x613c38 <exif_process_IFD_in_MAKERNOTE+484>:\tmov    esi,eax\n   0x613c3a <exif_process_IFD_in_MAKERNOTE+486>:\tmov    rdi,rdx\n=> 0x613c3d <exif_process_IFD_in_MAKERNOTE+489>:\tcall   0x610603 <php_ifd_get32u>\n   0x613c42 <exif_process_IFD_in_MAKERNOTE+494>:\tsub    ebx,eax\n   0x613c44 <exif_process_IFD_in_MAKERNOTE+496>:\tmov    eax,ebx\n   0x613c46 <exif_process_IFD_in_MAKERNOTE+498>:\tadd    eax,0x6\n   0x613c49 <exif_process_IFD_in_MAKERNOTE+501>:\tmov    DWORD PTR [rbp-0x24],eax\nGuessed arguments:\narg[0]: 0x7ffff3e7607e --> 0x29286fffffa92\narg[1]: 0x0\narg[2]: 0x7ffff3e7607e --> 0x29286fffffa92\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --> 0xc ('\\x0c')\n0008| 0x7fffffffa838 --> 0x594\n0016| 0x7fffffffa840 --> 0x7ffff3e76008 --> 0x8002a4949\n0024| 0x7fffffffa848 --> 0x1c006117bc\n0032| 0x7fffffffa850 --> 0x7ffff3e76074 --> 0x1000202080002\n0040| 0x7fffffffa858 --> 0x7fffffffae50 --> 0x7ffff3e5fa00 --> 0x12b9700 --> 0x8d43d1 (<php_stdiop_write>:\tpush   rbp)\n0048| 0x7fffffffa860 --> 0x7fffffffa8a0 --> 0x7fffffffa9d0 --> 0x7fffffffaa30 --> 0x7fffffffab60 --> 0x7fffffffabc0 --> 0x7fffffffac00 --> 0x7fffffffac30 --> 0x7fffffffacd0 --> 0x7fffffffad10 --> 0x7fffffffadf0 --> 0x7fffffffb0d0 --> 0x7fffffffb100 --> 0x7fffffffb130 --> 0x7fffffffb170 --> 0x7fffffffb280 --> 0x7fffffffd580 --> 0x7fffffffe900 --> 0x7fffffffea50 --> 0xa15f90 (<__libc_csu_init>:\tpush   r15)\n0056| 0x7fffffffa868 --> 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 5, 0x0000000000613c3d in exif_process_IFD_in_MAKERNOTE (\n    ImageInfo=0x7fffffffae50, value_ptr=0x7ffff3e76074 \"\\002\", value_len=0x1c,\n    offset_base=0x7ffff3e76008 \"II*\", IFDlength=0x594, displacement=0xc)\n    at /home/vagrant/Sources_Ext/audit/src/php7.0-7.0.4/ext/exif/exif.c:2754\n2754\t\t\t\toffset_diff = 2 + NumDirEntries*12 + 4 - php_ifd_get32u(dir_start+10, ImageInfo->motorola_intel);\ngdb-peda$ x/80gx offset_base\n0x7ffff3e76008:\t0x00000008002a4949\t0x00010005011a0002\n0x7ffff3e76018:\t0x8769000004000000\t0x0022000000010004\n0x7ffff3e76028:\t0x0005829a00060000\t0x0000041200000001\n0x7ffff3e76038:\t0x000000010005829d\t0x0002928600000444\n0x7ffff3e76048:\t0x00000da6000000a8\t0x0000002c00028298\n0x7ffff3e76058:\t0x0002010f00000e4e\t0x00000e7a00000005\n0x7ffff3e76068:\t0x000000070004927c\t0x020800020000006c\n0x7ffff3e76078:\t0xfa92000000010002\t0x00ff00029286ffff\n0x7ffff3e76088:\t0x5252000000000000\t0x5252525252525252\n0x7ffff3e76098:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760a8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760b8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760c8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760d8:\t0x5252525252525252\t0x5252525252525252\n0x7ffff3e760e8:\t0x5252525252525252\t0x00f2525252525252\n.....\n0x7ffff3e76568:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76578:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76588:\t0x5454545454545454\t0x5454545454545454\n0x7ffff3e76598:\t0x00000000d9ff5454\t0x0000000000000000\n0x7ffff3e765a8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765b8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765c8:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e765d8:\t0x0000000000000000\t0x000000000000059d\n0x7ffff3e765e8:\t0x0000000000b12b88\t0x0000000000f774a0\n0x7ffff3e765f8:\t0x000009ce00000646\t0x00007ffff3e76c00\n```\nAs you see above at address *0x7ffff3e76598* is the end of offset_base.\nNext i hit next to execute *offset_base = value_ptr + offset_diff;*\n```\n[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff3e76600 --> 0x7ffff3e76c00 --> 0x7ffff3e77200 --> 0x7ffff3e77800 --> 0x7ffff3e77e00 --> 0x7ffff3e78400 --> 0x7ffff3e78a00 --> 0x0\nRBX: 0x586\nRCX: 0x0\nRDX: 0x58c\nRSI: 0x0\nRDI: 0x7ffff3e7607e --> 0x29286fffffa92\nRBP: 0x7fffffffa8a0 --> 0x7fffffffa9d0 --> 0x7fffffffaa30 --> 0x7fffffffab60 --> 0x7fffffffabc0 --> 0x7fffffffac00 --> 0x7fffffffac30 --> 0x7fffffffacd0 --> 0x7fffffffad10 --> 0x7fffffffadf0 --> 0x7fffffffb0d0 --> 0x7fffffffb100 --> 0x7fffffffb130 --> 0x7fffffffb170 --> 0x7fffffffb280 --> 0x7fffffffd580 --> 0x7fffffffe900 --> 0x7fffffffea50 --> 0xa15f90 (<__libc_csu_init>:\tpush   r15)\nRSP: 0x7fffffffa830 --> 0xc ('\\x0c')\nRIP: 0x613c5d (<exif_process_IFD_in_MAKERNOTE+521>:\tnop)\nR8 : 0x594\nR9 : 0xc ('\\x0c')\nR10: 0x1c\nR11: 0x206\nR12: 0x42c170 (<_start>:\txor    ebp,ebp)\nR13: 0x7fffffffeb30 --> 0x2\nR14: 0x7ffff3e14030 --> 0x7ffff3e5fb80 --> 0x9a28f2 (<ZEND_DO_ICALL_SPEC_HANDLER>:\tpush   rbp)\nR15: 0x7ffff3e5fb80 --> 0x9a28f2 (<ZEND_DO_ICALL_SPEC_HANDLER>:\tpush   rbp)\nEFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x613c52 <exif_process_IFD_in_MAKERNOTE+510>:\tmov    rax,QWORD PTR [rbp-0x50]\n   0x613c56 <exif_process_IFD_in_MAKERNOTE+514>:\tadd    rax,rdx\n   0x613c59 <exif_process_IFD_in_MAKERNOTE+517>:\tmov    QWORD PTR [rbp-0x60],rax\n=> 0x613c5d <exif_process_IFD_in_MAKERNOTE+521>:\tnop\n   0x613c5e <exif_process_IFD_in_MAKERNOTE+522>:\tmov    edx,DWORD PTR [rbp-0x28]\n   0x613c61 <exif_process_IFD_in_MAKERNOTE+525>:\tmov    eax,edx\n   0x613c63 <exif_process_IFD_in_MAKERNOTE+527>:\tadd    eax,eax\n   0x613c65 <exif_process_IFD_in_MAKERNOTE+529>:\tadd    eax,edx\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa830 --> 0xc ('\\x0c')\n0008| 0x7fffffffa838 --> 0x594\n0016| 0x7fffffffa840 --> 0x7ffff3e76600 --> 0x7ffff3e76c00 --> 0x7ffff3e77200 --> 0x7ffff3e77800 --> 0x7ffff3e77e00 --> 0x7ffff3e78400 --> 0x7ffff3e78a00 --> 0x0\n0024| 0x7fffffffa848 --> 0x1c006117bc\n0032| 0x7fffffffa850 --> 0x7ffff3e76074 --> 0x1000202080002\n0040| 0x7fffffffa858 --> 0x7fffffffae50 --> 0x7ffff3e5fa00 --> 0x12b9700 --> 0x8d43d1 (<php_stdiop_write>:\tpush   rbp)\n0048| 0x7fffffffa860 --> 0x7fffffffa8a0 --> 0x7fffffffa9d0 --> 0x7fffffffaa30 --> 0x7fffffffab60 --> 0x7fffffffabc0 --> 0x7fffffffac00 --> 0x7fffffffac30 --> 0x7fffffffacd0 --> 0x7fffffffad10 --> 0x7fffffffadf0 --> 0x7fffffffb0d0 --> 0x7fffffffb100 --> 0x7fffffffb130 --> 0x7fffffffb170 --> 0x7fffffffb280 --> 0x7fffffffd580 --> 0x7fffffffe900 --> 0x7fffffffea50 --> 0xa15f90 (<__libc_csu_init>:\tpush   r15)\n0056| 0x7fffffffa868 --> 0x5\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n2759\t\t\t\tbreak;\ngdb-peda$ p offset_base\n$86 = 0x7ffff3e76600 \"\"\ngdb-peda$ x/40gx offset_base\n0x7ffff3e76600:\t0x00007ffff3e76c00\t0x0000000000000000\n0x7ffff3e76610:\t0x0000000000000000\t0x0000000000000000\n0x7ffff3e76620:\t0x0000000000000000\t0x0000000000000000\n```\nAfter calculate offset_base, you can see that address is out of own buffer", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.php.net", 
            "about": "", 
            "twitter_handle": "", 
            "name": "PHP (IBB)"
        }, 
        "handle": "ibb-php", 
        "url": "https://hackerone.com/ibb-php", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/029/0a20311cece1ff1938eac3f9b09a6af056bc9e90_small.png?1385119730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 29, 
        "default_currency": "usd"
    }, 
    "is_published": false
}