{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-05-03T00:55:01.373Z", 
    "voters": [
        "eveeez", 
        "spetr0x", 
        "martijn", 
        "dyabla", 
        "cryptosector", 
        "pei"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 132777, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-05-03T01:00:20.401Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Labels created in private projects are leaked", 
    "is_member_of_team?": null, 
    "vote_count": 6, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-06-02T00:55:01.472Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "attachments": [
        {
            "file_name": "Screen_Shot_2016-04-19_at_20.42.27.png", 
            "type": "image/png", 
            "id": 88003, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/088/003/28a81e5485a11cde5256098d3e9f4ed60c32589a/Screen_Shot_2016-04-19_at_20.42.27.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWYI2GPWO%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T225450Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDGZ9hZPNXy0op0dbUCK3A2FIHB%2BibDXwZCFl83WTNlShweklDkKhtUNsdiH1ZDSlGSdLObBpyGJdCeuHTlImqCYdt8f2yBKifOTf2TivYpJrNHupdtHvnqAWi7W9%2BjwJ%2BTCwiOrcStmIDnFCyyqwY6TAI5WG5MrEEDv8wrLdp996xp151lj%2F4um2Zv496W8ro76jvQ88joGdHpQVXnNfV1GVszM9x2MSCQxnQNnSXcnSWseYTKLzyFp0ZHOTPrPzq2uSlVkK%2F3QymE%2FxPIDTGw0YAH0dkxUT6j5w6dpcr%2BrzhYkptWupenUAF0MVqKJxNJZkBP3vJojReAQxLLf6Q5HsYqGm6jhS4748ZyTRZgChKL9lshIjpbjIu5MbLvwX%2F27PaXT7zSgwK903viGfy%2Bho9qoZUssvAToQJIzp0gqB8TNCETjgLLeFaQk13faNP%2Bs6DczQQAjcVHP0T4iXvprpJ7WF4Lgvdg6C%2FwSgLkD8N%2BofGZQflIFdduF6tbfUDe6RZqExPuAHXZR8zPF7DVwtnOckvWNNJFfV2j3cG1J4PetkJkxnwBNpnZP4nCyTKbwMPXXPODGNKYyXAqp3Qy95YBxWsTYos6qm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9986db7ccc784ede9e7c5d5ca21905e0d663542f54f13dae499c8a8b42d625fc"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-04-21T02:22:31.356Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-21T02:22:31.356Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "@jobert Thanks, Jobert. I've cross-posted this to https://gitlab.com/gitlab-org/gitlab-ce/issues/15439 -- you won't be able to see it currently because it's marked Confidential, but I'll keep you updated here on its progress.", 
            "markdown_message": "<p><a href=\"/jobert\">@jobert</a> Thanks, Jobert. I&#39;ve cross-posted this to <a title=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/15439\" href=\"/redirect?signature=f3794491bee6031ff2fce1314ef9185a748aeebc&amp;url=https%3A%2F%2Fgitlab.com%2Fgitlab-org%2Fgitlab-ce%2Fissues%2F15439\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://gitlab.com/gitlab-org/gitlab-ce/issues/15439</span><i class=\"icon-external-link\"></i></a> -- you won&#39;t be able to see it currently because it&#39;s marked Confidential, but I&#39;ll keep you updated here on its progress.</p>\n", 
            "type": "Activities::Comment", 
            "id": 919376, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-21T16:50:08.838Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-21T16:50:08.838Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "A fix has been created and is undergoing review.", 
            "markdown_message": "<p>A fix has been created and is undergoing review.</p>\n", 
            "type": "Activities::Comment", 
            "id": 920658, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-21T18:51:22.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-21T18:51:22.530Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "Thanks for the update, @rspeicher! Let me know if you want me to check out the fix before it's merged back to develop.", 
            "markdown_message": "<p>Thanks for the update, <a href=\"/rspeicher\">@rspeicher</a>! Let me know if you want me to check out the fix before it&#39;s merged back to develop.</p>\n", 
            "type": "Activities::Comment", 
            "id": 921063, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-21T20:09:53.621Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-21T20:09:53.621Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "@jobert Here's the relevant diff (I left out some spec changes and a CHANGELOG entry) if you'd like to verify it's fixed:\n\n```diff\ndiff --git a/app/services/issuable_base_service.rb b/app/services/issuable_base_service.rb\nindex 18f76d3..2b16089 100644\n--- a/app/services/issuable_base_service.rb\n+++ b/app/services/issuable_base_service.rb\n@@ -37,8 +37,9 @@ class IssuableBaseService < BaseService\n   end\n \n   def filter_params(issuable_ability_name = :issue)\n-    params[:assignee_id]  = \"\" if params[:assignee_id] == IssuableFinder::NONE\n-    params[:milestone_id] = \"\" if params[:milestone_id] == IssuableFinder::NONE\n+    filter_assignee\n+    filter_milestone\n+    filter_labels\n \n     ability = :\"admin_#{issuable_ability_name}\"\n \n@@ -49,6 +50,29 @@ class IssuableBaseService < BaseService\n     end\n   end\n \n+  def filter_assignee\n+    if params[:assignee_id] == IssuableFinder::NONE\n+      params[:assignee_id] = ''\n+    end\n+  end\n+\n+  def filter_milestone\n+    milestone_id = params[:milestone_id]\n+    return unless milestone_id\n+\n+    if milestone_id == IssuableFinder::NONE ||\n+        project.milestones.find_by(id: milestone_id).nil?\n+      params[:milestone_id] = ''\n+    end\n+  end\n+\n+  def filter_labels\n+    return if params[:label_ids].to_a.empty?\n+\n+    params[:label_ids] =\n+      project.labels.where(id: params[:label_ids]).pluck(:id)\n+  end\n+\n   def update(issuable)\n     change_state(issuable)\n     filter_params\n```\n\nThanks!", 
            "markdown_message": "<p><a href=\"/jobert\">@jobert</a> Here&#39;s the relevant diff (I left out some spec changes and a CHANGELOG entry) if you&#39;d like to verify it&#39;s fixed:</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff --git a/app/services/issuable_base_service.rb b/app/services/issuable_base_service.rb\nindex 18f76d3..2b16089 100644\n</span><span class=\"gd\">--- a/app/services/issuable_base_service.rb\n</span><span class=\"gi\">+++ b/app/services/issuable_base_service.rb\n</span><span class=\"gu\">@@ -37,8 +37,9 @@ class IssuableBaseService &lt; BaseService\n</span>   end\n\n   def filter_params(issuable_ability_name = :issue)\n<span class=\"gd\">-    params[:assignee_id]  = &quot;&quot; if params[:assignee_id] == IssuableFinder::NONE\n-    params[:milestone_id] = &quot;&quot; if params[:milestone_id] == IssuableFinder::NONE\n</span><span class=\"gi\">+    filter_assignee\n+    filter_milestone\n+    filter_labels\n</span>\n     ability = :&quot;admin_#{issuable_ability_name}&quot;\n\n<span class=\"gu\">@@ -49,6 +50,29 @@ class IssuableBaseService &lt; BaseService\n</span>     end\n   end\n\n<span class=\"gi\">+  def filter_assignee\n+    if params[:assignee_id] == IssuableFinder::NONE\n+      params[:assignee_id] = &#39;&#39;\n+    end\n+  end\n+\n+  def filter_milestone\n+    milestone_id = params[:milestone_id]\n+    return unless milestone_id\n+\n+    if milestone_id == IssuableFinder::NONE ||\n+        project.milestones.find_by(id: milestone_id).nil?\n+      params[:milestone_id] = &#39;&#39;\n+    end\n+  end\n+\n+  def filter_labels\n+    return if params[:label_ids].to_a.empty?\n+\n+    params[:label_ids] =\n+      project.labels.where(id: params[:label_ids]).pluck(:id)\n+  end\n+\n</span>   def update(issuable)\n     change_state(issuable)\n     filter_params\n</code></pre>\n<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 921271, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-22T00:40:55.215Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-22T00:40:55.215Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "Yup, seems like this does the job! One think I noticed is that this requires everyone to use the `Issues::CreateService` class. This seems fine, but it might not be immediately clear to everyone. Hope code reviews catch this when this would happen in the future. The other option would be to add this constraint to the model, but I understand if you want to avoid adding business logic to the models. Nice job!", 
            "markdown_message": "<p>Yup, seems like this does the job! One think I noticed is that this requires everyone to use the <code>Issues::CreateService</code> class. This seems fine, but it might not be immediately clear to everyone. Hope code reviews catch this when this would happen in the future. The other option would be to add this constraint to the model, but I understand if you want to avoid adding business logic to the models. Nice job!</p>\n", 
            "type": "Activities::Comment", 
            "id": 921717, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-22T16:08:03.135Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-22T16:08:03.135Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 922788, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "jobert", 
                "url": "/jobert"
            }, 
            "created_at": "2016-05-03T00:53:07.601Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-03T00:53:07.601Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "@jobert The patches that include a fix for this issue [have been released](https://about.gitlab.com/2016/05/02/cve-2016-4340-patches/) and the [acknowledgements page](https://about.gitlab.com/vulnerability-acknowledgements/) has been updated.\n\nFeel free to request public disclosure for this report if you'd like.\n\nThank you again!", 
            "markdown_message": "<p><a href=\"/jobert\">@jobert</a> The patches that include a fix for this issue <a href=\"/redirect?signature=cc3e9965ea083a59971393b7447f5f02b9266a86&amp;url=https%3A%2F%2Fabout.gitlab.com%2F2016%2F05%2F02%2Fcve-2016-4340-patches%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>have been released</span><i class=\"icon-external-link\"></i></a> and the <a href=\"/redirect?signature=e4df4e4ab803154ff3a2f8736ff69952681595f1&amp;url=https%3A%2F%2Fabout.gitlab.com%2Fvulnerability-acknowledgements%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>acknowledgements page</span><i class=\"icon-external-link\"></i></a> has been updated.</p>\n\n<p>Feel free to request public disclosure for this report if you&#39;d like.</p>\n\n<p>Thank you again!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 937752, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-05-03T00:55:01.407Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-03T00:55:01.407Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 937766, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-05-03T01:00:20.421Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-03T01:00:20.421Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 937790, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-05-03T01:00:20.477Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-03T01:00:20.477Z", 
            "actor": {
                "username": "rspeicher", 
                "url": "/rspeicher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/070/800/71ae869ab45b05d47a2118c159952ebe3ceca17e_medium.jpg?1519748506"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "gitlab", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 937791, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "jobert", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/jobert", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/002/15c798072d48f06507cde4b11352a3338ae973fc_small.png?1410255083"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -79307989.35185973, 
    "disclosed_at": "2016-05-03T01:00:20.457Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/132777", 
    "created_at": "2016-04-20T03:52:17.524Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h1 id=\"vulnerability-details\">Vulnerability details</h1>\n\n<p>An insecure direct object reference vulnerability exists in the code that assigns labels to issues and merge requests, that allows an attack to read labels of private projects. This probably doesn&#39;t leak a lot of super confidential data, but since it&#39;s hard to predict how people use labels, it&#39;d be good to fix this issue.</p>\n\n<h1 id=\"proof-of-concept\">Proof of concept</h1>\n\n<p><strong>Note</strong>: this proof of concept demonstrates the attack with an issue, but the same issue exists when a merge request is created. To start off, sign in as a victim (<code>jane</code>) and create a project (<code>private-project</code>). Set the visibility level to private for this project. When this is set up, create a label at <a title=\"http://gitlab-instance/jane/private-project/labels\" href=\"/redirect?signature=45995f6ba3c93de95069f1fb04b89893c1084730&amp;url=http%3A%2F%2Fgitlab-instance%2Fjane%2Fprivate-project%2Flabels\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://gitlab-instance/jane/private-project/labels</span><i class=\"icon-external-link\"></i></a>. When I reproduced this issue for myself, I used <code>SomeCompany Secret feature</code> as label name. The label had ID <code>1</code>. Now sign in as the attacker (<code>john</code>). John wants access to the label that Jane created for her private program. John creates a new project called <code>random-project</code> and creates a new issue at <a title=\"http://gitlab-instance/john/random-project/issues\" href=\"/redirect?signature=f276e434e24a2d7814de1dd7fba96f8a5ec97c80&amp;url=http%3A%2F%2Fgitlab-instance%2Fjohn%2Frandom-project%2Fissues\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://gitlab-instance/john/random-project/issues</span><i class=\"icon-external-link\"></i></a>. No need to select a label in the New issue form.</p>\n\n<p>Now intercept the traffic before you click the &quot;Submit issue&quot; button. The request that is sent to the GitLab server looks something like this:</p>\n<pre class=\"highlight plaintext\"><code>POST /john/random-project/issues HTTP/1.1\nHost: 159.xxx.xxx.xxx\n...\n\nutf8=%E2%9C%93&amp;authenticity_token=zD0fqQphsFSNP6gl6KWhTw5iaTtk3cGlDz1Gn563roNyiSq2ACIXGp8%2FmBMo9q70ZP3M0mCWmsq7XJCmzkdADg%3D%3D&amp;issue%5Btitle%5D=a&amp;issue%5Bdescription%5D=a&amp;issue%5Bassignee_id%5D=&amp;issue%5Bmilestone_id%5D=&amp;issue%5Blabel_ids%5D%5B%5D=\n</code></pre>\n<p>Now add the label ID that you want access to as value to the <code>issue[label_ids][]</code> array. The request will now look something like this (note the appended <code>1</code>):</p>\n<pre class=\"highlight plaintext\"><code>POST /john/random-project/issues HTTP/1.1\nHost: 159.xxx.xxx.xxx\n...\n\nutf8=%E2%9C%93&amp;authenticity_token=zD0fqQphsFSNP6gl6KWhTw5iaTtk3cGlDz1Gn563roNyiSq2ACIXGp8%2FmBMo9q70ZP3M0mCWmsq7XJCmzkdADg%3D%3D&amp;issue%5Btitle%5D=a&amp;issue%5Bdescription%5D=a&amp;issue%5Bassignee_id%5D=&amp;issue%5Bmilestone_id%5D=&amp;issue%5Blabel_ids%5D%5B%5D=1\n</code></pre>\n<p>Forward the request and go back to the browser. You&#39;ll see that the label that belongs to the private project shows up as attached label:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"Screen_Shot_2016-04-19_at_20.42.27.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/088/003/28a81e5485a11cde5256098d3e9f4ed60c32589a/Screen_Shot_2016-04-19_at_20.42.27.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWYI2GPWO%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T225450Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDGZ9hZPNXy0op0dbUCK3A2FIHB%2BibDXwZCFl83WTNlShweklDkKhtUNsdiH1ZDSlGSdLObBpyGJdCeuHTlImqCYdt8f2yBKifOTf2TivYpJrNHupdtHvnqAWi7W9%2BjwJ%2BTCwiOrcStmIDnFCyyqwY6TAI5WG5MrEEDv8wrLdp996xp151lj%2F4um2Zv496W8ro76jvQ88joGdHpQVXnNfV1GVszM9x2MSCQxnQNnSXcnSWseYTKLzyFp0ZHOTPrPzq2uSlVkK%2F3QymE%2FxPIDTGw0YAH0dkxUT6j5w6dpcr%2BrzhYkptWupenUAF0MVqKJxNJZkBP3vJojReAQxLLf6Q5HsYqGm6jhS4748ZyTRZgChKL9lshIjpbjIu5MbLvwX%2F27PaXT7zSgwK903viGfy%2Bho9qoZUssvAToQJIzp0gqB8TNCETjgLLeFaQk13faNP%2Bs6DczQQAjcVHP0T4iXvprpJ7WF4Lgvdg6C%2FwSgLkD8N%2BofGZQflIFdduF6tbfUDe6RZqExPuAHXZR8zPF7DVwtnOckvWNNJFfV2j3cG1J4PetkJkxnwBNpnZP4nCyTKbwMPXXPODGNKYyXAqp3Qy95YBxWsTYos6qm4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=9986db7ccc784ede9e7c5d5ca21905e0d663542f54f13dae499c8a8b42d625fc\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/088/003/28a81e5485a11cde5256098d3e9f4ed60c32589a/Screen_Shot_2016-04-19_at_20.42.27.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQWYI2GPWO%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T225450Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDGZ9hZPNXy0op0dbUCK3A2FIHB%2BibDXwZCFl83WTNlShweklDkKhtUNsdiH1ZDSlGSdLObBpyGJdCeuHTlImqCYdt8f2yBKifOTf2TivYpJrNHupdtHvnqAWi7W9%2BjwJ%2BTCwiOrcStmIDnFCyyqwY6TAI5WG5MrEEDv8wrLdp996xp151lj%2F4um2Zv496W8ro76jvQ88joGdHpQVXnNfV1GVszM9x2MSCQxnQNnSXcnSWseYTKLzyFp0ZHOTPrPzq2uSlVkK%2F3QymE%2FxPIDTGw0YAH0dkxUT6j5w6dpcr%2BrzhYkptWupenUAF0MVqKJxNJZkBP3vJojReAQxLLf6Q5HsYqGm6jhS4748ZyTRZgChKL9lshIjpbjIu5MbLvwX%2F27PaXT7zSgwK903viGfy%2Bho9qoZUssvAToQJIzp0gqB8TNCETjgLLeFaQk13faNP%2Bs6DczQQAjcVHP0T4iXvprpJ7WF4Lgvdg6C%2FwSgLkD8N%2BofGZQflIFdduF6tbfUDe6RZqExPuAHXZR8zPF7DVwtnOckvWNNJFfV2j3cG1J4PetkJkxnwBNpnZP4nCyTKbwMPXXPODGNKYyXAqp3Qy95YBxWsTYos6qm4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=9986db7ccc784ede9e7c5d5ca21905e0d663542f54f13dae499c8a8b42d625fc\" class=\"markdown-inline-image\"></a></p>\n\n<h1 id=\"impact\">Impact</h1>\n\n<p>An attacker could easily iterate over all existing label IDs to attach all labels to an issue. This way potential confidential information (either in the name or description) is revealed to an attacker. Like said in the introduction, because you don&#39;t know how people use these labels, this can contain confidential information.</p>\n", 
    "vulnerability_information": "# Vulnerability details\nAn insecure direct object reference vulnerability exists in the code that assigns labels to issues and merge requests, that allows an attack to read labels of private projects. This probably doesn't leak a lot of super confidential data, but since it's hard to predict how people use labels, it'd be good to fix this issue.\n\n# Proof of concept\n**Note**: this proof of concept demonstrates the attack with an issue, but the same issue exists when a merge request is created. To start off, sign in as a victim (`jane`) and create a project (`private-project`). Set the visibility level to private for this project. When this is set up, create a label at http://gitlab-instance/jane/private-project/labels. When I reproduced this issue for myself, I used `SomeCompany Secret feature` as label name. The label had ID `1`. Now sign in as the attacker (`john`). John wants access to the label that Jane created for her private program. John creates a new project called `random-project` and creates a new issue at http://gitlab-instance/john/random-project/issues. No need to select a label in the New issue form.\n\nNow intercept the traffic before you click the \"Submit issue\" button. The request that is sent to the GitLab server looks something like this:\n\n```\nPOST /john/random-project/issues HTTP/1.1\nHost: 159.xxx.xxx.xxx\n...\n\nutf8=%E2%9C%93&authenticity_token=zD0fqQphsFSNP6gl6KWhTw5iaTtk3cGlDz1Gn563roNyiSq2ACIXGp8%2FmBMo9q70ZP3M0mCWmsq7XJCmzkdADg%3D%3D&issue%5Btitle%5D=a&issue%5Bdescription%5D=a&issue%5Bassignee_id%5D=&issue%5Bmilestone_id%5D=&issue%5Blabel_ids%5D%5B%5D=\n```\n\nNow add the label ID that you want access to as value to the `issue[label_ids][]` array. The request will now look something like this (note the appended `1`):\n\n```\nPOST /john/random-project/issues HTTP/1.1\nHost: 159.xxx.xxx.xxx\n...\n\nutf8=%E2%9C%93&authenticity_token=zD0fqQphsFSNP6gl6KWhTw5iaTtk3cGlDz1Gn563roNyiSq2ACIXGp8%2FmBMo9q70ZP3M0mCWmsq7XJCmzkdADg%3D%3D&issue%5Btitle%5D=a&issue%5Bdescription%5D=a&issue%5Bassignee_id%5D=&issue%5Bmilestone_id%5D=&issue%5Blabel_ids%5D%5B%5D=1\n```\n\nForward the request and go back to the browser. You'll see that the label that belongs to the private project shows up as attached label:\n\n{F88003}\n\n# Impact\nAn attacker could easily iterate over all existing label IDs to attach all labels to an issue. This way potential confidential information (either in the name or description) is revealed to an attacker. Like said in the introduction, because you don't know how people use these labels, this can contain confidential information.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://about.gitlab.com", 
            "about": "Open source software to collaborate on code", 
            "twitter_handle": "gitlab", 
            "name": "GitLab"
        }, 
        "handle": "gitlab", 
        "url": "https://hackerone.com/gitlab", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/264/338ec4b43393873324e3f1911f2f107d025d13f1_small.png?1454722206", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/264/f40e550269de1c8aef9adbdfe728c9aa8163a7e5_medium.png?1454722206"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 264, 
        "default_currency": "usd"
    }, 
    "is_published": false
}