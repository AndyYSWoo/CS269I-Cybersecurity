{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2014-03-10T15:39:37.969Z", 
    "voters": [
        "eveeez"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 3455, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "flash content type sniff vulnerability in api.slack.com", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-04-08T22:55:50.252Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "attachments": [
        {
            "file_name": "screenshot.PNG", 
            "type": "image/png", 
            "id": 4091, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/004/091/5b5bcb34a13fff76517a22396e04970e49c6ba85/screenshot.PNG?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230639Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=121572b6adce482214b284076bdb0a46e72d309368480d5c0f4ff2df4d246385"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-03-08T22:20:04.421Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-08T22:20:04.421Z", 
            "actor": {
                "username": "iamcal", 
                "url": "/iamcal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/138/8791978ab70ce1b1e1b7a9c70e393fcd58ea85a0_medium.jpg?1393562983"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "Please explain what's going on here", 
            "markdown_message": "<p>Please explain what&#39;s going on here</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 14506, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-03-08T23:30:41.212Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-08T23:30:41.212Z", 
            "actor": {
                "username": "netfuzzer", 
                "url": "/netfuzzer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/664/44b194951f253b8d335aa46cc86b293ca24dbbe5_medium.jpg?1501701860"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "hey,\n\ni'm reporting a flash content type sniff xss on page https://api.slack.com/api/users.list this vulnerabilities allows me do http requests in any pages of api.slack.com(where if visited by a logged user,  it has victim's teams tokens(used in slack api). The vulnerability occurs due the page prints the content of param \"callback\" so if the page is being embed like for exemple: <object data=\"https://api.slack.com/api/users.list?callback=<swf-file-content>\" type=\"type= application/x-shockwave-flash\"> , then flash will ignore the header \"content-type\" and will render the page as a flash file , so allowing go get/post requests in any pageof api.slack.com.\n\nwhen visiting api.slack.com is displayed user's team security tokens, using this vulnerability is possible get all user's security tokens.\n\n", 
            "markdown_message": "<p>hey,</p>\n\n<p>i&#39;m reporting a flash content type sniff xss on page <a title=\"https://api.slack.com/api/users.list\" href=\"/redirect?signature=a1afb823d7c8635d4fdf2d599f502a0391aa3d63&amp;url=https%3A%2F%2Fapi.slack.com%2Fapi%2Fusers.list\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://api.slack.com/api/users.list</span><i class=\"icon-external-link\"></i></a> this vulnerabilities allows me do http requests in any pages of api.slack.com(where if visited by a logged user,  it has victim&#39;s teams tokens(used in slack api). The vulnerability occurs due the page prints the content of param &quot;callback&quot; so if the page is being embed like for exemple: &lt;object data=&quot;https://api.slack.com/api/users.list?callback=&lt;swf-file-content&gt;&quot; type=&quot;type= application/x-shockwave-flash&quot;&gt; , then flash will ignore the header &quot;content-type&quot; and will render the page as a flash file , so allowing go get/post requests in any pageof api.slack.com.</p>\n\n<p>when visiting api.slack.com is displayed user&#39;s team security tokens, using this vulnerability is possible get all user&#39;s security tokens.</p>\n", 
            "type": "Activities::BugNew", 
            "id": 14543, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-03-09T23:51:26.332Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-09T23:51:26.332Z", 
            "actor": {
                "username": "iamcal", 
                "url": "/iamcal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/138/8791978ab70ce1b1e1b7a9c70e393fcd58ea85a0_medium.jpg?1393562983"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 14728, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "netfuzzer", 
                "url": "/netfuzzer"
            }, 
            "created_at": "2014-03-09T23:55:50.513Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-09T23:55:50.513Z", 
            "actor": {
                "username": "iamcal", 
                "url": "/iamcal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/138/8791978ab70ce1b1e1b7a9c70e393fcd58ea85a0_medium.jpg?1393562983"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "Thanks for finding and reporting this. We've rolled out a fix to validate the callback param and avoid the callback being the first byte (by inserting a JS comment first) so that an attacker has no control over the firs few bytes.", 
            "markdown_message": "<p>Thanks for finding and reporting this. We&#39;ve rolled out a fix to validate the callback param and avoid the callback being the first byte (by inserting a JS comment first) so that an attacker has no control over the firs few bytes.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 14730, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2014-03-09T23:55:59.149Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-09T23:55:59.149Z", 
            "actor": {
                "url": "/slack", 
                "profile": {
                    "name": "Slack"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/069/50cfd8e05b18bade214847ec5f61dcb9e6c85fa9_medium.png?1449082084"
                }
            }, 
            "team_handle": "slack", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "netfuzzer", 
                "url": "/netfuzzer"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 14731, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-03-10T15:35:42.782Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-10T15:35:42.782Z", 
            "actor": {
                "username": "netfuzzer", 
                "url": "/netfuzzer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/664/44b194951f253b8d335aa46cc86b293ca24dbbe5_medium.jpg?1501701860"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "Nice. Thanks for the fix and bounty! :)", 
            "markdown_message": "<p>Nice. Thanks for the fix and bounty! :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 14820, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-03-10T15:39:37.982Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-03-10T15:39:37.982Z", 
            "actor": {
                "username": "netfuzzer", 
                "url": "/netfuzzer", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/664/44b194951f253b8d335aa46cc86b293ca24dbbe5_medium.jpg?1501701860"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "slack", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 14822, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-04-08T23:56:03.931Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-08T23:56:03.931Z", 
            "actor": {
                "url": "/slack", 
                "profile": {
                    "name": "Slack"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/069/50cfd8e05b18bade214847ec5f61dcb9e6c85fa9_medium.png?1449082084"
                }
            }, 
            "team_handle": "slack", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 26998, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "netfuzzer", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/netfuzzer", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/664/8a0fdd0a2eef306a2948fb726fdf305647b75d50_small.jpg?1501701860"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 45, 
        "name": "Cross-Site Request Forgery (CSRF)"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -147139849.54283658, 
    "disclosed_at": "2014-04-08T23:56:03.546Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/3455", 
    "created_at": "2014-03-07T14:17:25.238Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,</p>\n\n<p>I have found a flash content type sniff vulnerability could allow attackers get user&#39;s team auth2 tokens. As the page lists user&#39;s teams and its security tokens, this could allow attackers to do csrf attacks.</p>\n\n<p>Steps to reproduce:</p>\n\n<ol>\n<li>Log in api.slack.com</li>\n<li>after go to <a title=\"http://netfuzzer.com/api-slack-vuln2.html\" href=\"/redirect?signature=588aa976b55bc20c39a981ef8f6109058a10c97a&amp;url=http%3A%2F%2Fnetfuzzer.com%2Fapi-slack-vuln2.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://netfuzzer.com/api-slack-vuln2.html</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>wait 5 seconds until the page finish load</li>\n<li>see your team&#39;s security tokens.</li>\n</ol>\n\n<p>Cheers,<br>\nMario</p>\n", 
    "vulnerability_information": "Hi,\r\n\r\nI have found a flash content type sniff vulnerability could allow attackers get user's team auth2 tokens. As the page lists user's teams and its security tokens, this could allow attackers to do csrf attacks.\r\n\r\nSteps to reproduce:\r\n1. Log in api.slack.com\r\n2. after go to http://netfuzzer.com/api-slack-vuln2.html\r\n3. wait 5 seconds until the page finish load\r\n4. see your team's security tokens.\r\n\r\nCheers,\r\nMario\r\n\r\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://slack.com", 
            "about": "All your team communication in one place, instantly searchable, and available wherever you go.", 
            "twitter_handle": "slackhq", 
            "name": "Slack"
        }, 
        "handle": "slack", 
        "url": "https://hackerone.com/slack", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/069/a44d7bfd843f514c723441a5a40daf5bac8e9e38_small.png?1449082084", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/069/50cfd8e05b18bade214847ec5f61dcb9e6c85fa9_medium.png?1449082084"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 69, 
        "default_currency": "usd"
    }, 
    "is_published": false
}