{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-05-09T02:45:12.933Z", 
    "voters": [
        "eveeez", 
        "geeknik", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "100.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 219870, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-05-09T12:43:12.815Z", 
    "vulnerability_information": "Triggered in `7e28510` (7 April 2017) with `mirb` only.\n\n`cat test013.rb | mirb`\n\n```\n==17976==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffeb477fb0 at pc 0x408c21 bp 0x7fffeb477a90 sp 0x7fffeb477a88\nWRITE of size 1 at 0x7fffeb477fb0 thread T0\n    #0 0x408c20 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7f96e4703b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40aefc (/root/mruby/bin/mirb+0x40aefc)\n\nAddress 0x7fffeb477fb0 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x40549f in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) 'args'\n    [96, 126) 'unexpected_end'\n    [160, 1184) 'last_code_line' <== Memory access at offset 1184 overflows this variable\n    [1216, 5312) 'ruby_code'\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\n```\n\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "User"
    }, 
    "title": "mirb only: stack-buffer-overflow (OOB write) in main()", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-06-08T02:45:12.988Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$100", 
    "attachments": [
        {
            "file_name": "test013.rb.gz", 
            "type": "application/gzip", 
            "id": 174583, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/174/583/be7957c1c560df369d47a0849020744fccad8e59/test013.rb.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223931Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=036505cd3a151d154ac108e680a33b14596b73a911c7b6d1248f9814543770a5"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-04-10T05:06:09.235Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-10T05:06:09.235Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for reporting this bug! This is an automated response to let you know that we've received your issue, and we'll process it as soon as possible.\n\nDue to the large volume of reports we have received, it may take us up to two weeks to respond. Thank you for your patience!", 
            "markdown_message": "<p>Thank you for reporting this bug! This is an automated response to let you know that we&#39;ve received your issue, and we&#39;ll process it as soon as possible.</p>\n\n<p>Due to the large volume of reports we have received, it may take us up to two weeks to respond. Thank you for your patience!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1601653, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T14:03:16.504Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T14:03:16.504Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report.\n\nI couldn't reproduce this at `7e28510` or the current master (`0fb05eb`). I just get:\n```\nmirb - Embeddable Interactive Ruby Shell\n\ninput string too long\n```\nNeither ASAN nor valgrind report any issues.\n\nCould you test this against the latest master, and let me know what your exact build environment is (operating system, compiler version, build flags, etc.)?", 
            "markdown_message": "<p>Thank you for your report.</p>\n\n<p>I couldn&#39;t reproduce this at <code>7e28510</code> or the current master (<code>0fb05eb</code>). I just get:</p>\n<pre class=\"highlight plaintext\"><code>mirb - Embeddable Interactive Ruby Shell\n\ninput string too long\n</code></pre>\n<p>Neither ASAN nor valgrind report any issues.</p>\n\n<p>Could you test this against the latest master, and let me know what your exact build environment is (operating system, compiler version, build flags, etc.)?</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1607154, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/175/300/533850feb8449c4ecf657cba0434cd66e4052391/test395.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223931Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=998c823228594a64f21159c3f73f05a07153107e4815693ade4bf9d5c5b983ab", 
                    "type": "text/plain", 
                    "id": 175300, 
                    "filename": "test395.rb"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-04-12T15:31:19.273Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T15:31:19.273Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Debian 8 x64\ngcc 4.9.2-10\nCC=afl-gcc CFLAGS=\"-fsanitize=address\" LDFLAGS=\"-fsanitize=address\" make\n\nWith `6dd1a57` I'm able to trigger this again.\n\n```\n./mirb < test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n> =================================================================\n==24695==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffc76be760 at pc 0x4087c9 bp 0x7fffc76be240 sp 0x7fffc76be238\nWRITE of size 1 at 0x7fffc76be760 thread T0\n    #0 0x4087c8 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7fa743de6b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40a9fc (/root/mruby/bin/mirb+0x40a9fc)\n\nAddress 0x7fffc76be760 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x4050af in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) 'args'\n    [96, 126) 'unexpected_end'\n    [160, 1184) 'last_code_line' <== Memory access at offset 1184 overflows this variable\n    [1216, 5312) 'ruby_code'\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\nShadow bytes around the buggy address:\n  0x100078ecfc90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x100078ecfce0: 00 00 00 00 00 00 00 00 00 00 00 00[f2]f2 f2 f2\n  0x100078ecfcf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Contiguous container OOB:fc\n  ASan internal:           fe\n==24695==ABORTING\n```\n\n```\nod -tx1 ./test395.rb\n0000000 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30\n*\n0001760 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 0a\n0002000\n```\n\nAnd with `0fb05eb5` I'm able to reproduce it, same OS (different machine), same gcc, etc:\n\n```\n~/mruby/bin/mirb < test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n> =================================================================\n==8874==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffca7b2c380 at pc 0x408801 bp 0x7ffca7b2be60 sp 0x7ffca7b2be58\nWRITE of size 1 at 0x7ffca7b2c380 thread T0\n    #0 0x408800 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7fa979e67b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40ab55 (/root/mruby/bin/mirb+0x40ab55)\n\nAddress 0x7ffca7b2c380 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x404fff in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) 'args'\n    [96, 126) 'unexpected_end'\n    [160, 1184) 'last_code_line' <== Memory access at offset 1184 overflows this variable\n    [1216, 5312) 'ruby_code'\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\nShadow bytes around the buggy address:\n  0x100014f5d820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x100014f5d870:[f2]f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Contiguous container OOB:fc\n  ASan internal:           fe\n```", 
            "markdown_message": "<p>Debian 8 x64<br>\ngcc 4.9.2-10<br>\nCC=afl-gcc CFLAGS=&quot;-fsanitize=address&quot; LDFLAGS=&quot;-fsanitize=address&quot; make</p>\n\n<p>With <code>6dd1a57</code> I&#39;m able to trigger this again.</p>\n<pre class=\"highlight plaintext\"><code>./mirb &lt; test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt; =================================================================\n==24695==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffc76be760 at pc 0x4087c9 bp 0x7fffc76be240 sp 0x7fffc76be238\nWRITE of size 1 at 0x7fffc76be760 thread T0\n    #0 0x4087c8 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7fa743de6b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40a9fc (/root/mruby/bin/mirb+0x40a9fc)\n\nAddress 0x7fffc76be760 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x4050af in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) &#39;args&#39;\n    [96, 126) &#39;unexpected_end&#39;\n    [160, 1184) &#39;last_code_line&#39; &lt;== Memory access at offset 1184 overflows this variable\n    [1216, 5312) &#39;ruby_code&#39;\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\nShadow bytes around the buggy address:\n  0x100078ecfc90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfcd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=&gt;0x100078ecfce0: 00 00 00 00 00 00 00 00 00 00 00 00[f2]f2 f2 f2\n  0x100078ecfcf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100078ecfd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Contiguous container OOB:fc\n  ASan internal:           fe\n==24695==ABORTING\n</code></pre><pre class=\"highlight plaintext\"><code>od -tx1 ./test395.rb\n0000000 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30\n*\n0001760 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 0a\n0002000\n</code></pre>\n<p>And with <code>0fb05eb5</code> I&#39;m able to reproduce it, same OS (different machine), same gcc, etc:</p>\n<pre class=\"highlight plaintext\"><code>~/mruby/bin/mirb &lt; test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt; =================================================================\n==8874==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffca7b2c380 at pc 0x408801 bp 0x7ffca7b2be60 sp 0x7ffca7b2be58\nWRITE of size 1 at 0x7ffca7b2c380 thread T0\n    #0 0x408800 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7fa979e67b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40ab55 (/root/mruby/bin/mirb+0x40ab55)\n\nAddress 0x7ffca7b2c380 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x404fff in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) &#39;args&#39;\n    [96, 126) &#39;unexpected_end&#39;\n    [160, 1184) &#39;last_code_line&#39; &lt;== Memory access at offset 1184 overflows this variable\n    [1216, 5312) &#39;ruby_code&#39;\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\nShadow bytes around the buggy address:\n  0x100014f5d820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=&gt;0x100014f5d870:[f2]f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100014f5d8c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Contiguous container OOB:fc\n  ASan internal:           fe\n</code></pre>", 
            "type": "Activities::BugNew", 
            "id": 1607327, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T15:34:43.380Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T15:34:43.380Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Also, do you still get a crash if you use the ordinary gcc instead of afl-gcc?", 
            "markdown_message": "<p>Also, do you still get a crash if you use the ordinary gcc instead of afl-gcc?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607335, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T15:47:45.573Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T15:47:45.573Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "With `3123549` I see this:\n\n```\n~/mruby-no-asan/bin/mirb < test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n> Segmentation fault\n```\n\n```\nvalgrind -q ~/mruby-no-asan/bin/mirb < test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n> ==9568== Invalid write of size 1\n==9568==    at 0x4C2C2A0: strcpy (vg_replace_strmem.c:458)\n==9568==    by 0x402847: main (mirb.c:508)\n==9568==  Address 0xfff001000 is not stack'd, malloc'd or (recently) free'd\n==9568==\n==9568==\n==9568== Process terminating with default action of signal 11 (SIGSEGV)\n==9568==  Access not within mapped region at address 0xFFF001000\n==9568==    at 0x4C2C2A0: strcpy (vg_replace_strmem.c:458)\n==9568==    by 0x402847: main (mirb.c:508)\n==9568==  If you believe this happened as a result of a stack\n==9568==  overflow in your program's main thread (unlikely but\n==9568==  possible), you can try to increase the size of the\n==9568==  main thread stack using the --main-stacksize= flag.\n==9568==  The main thread stack size used in this run was 8388608.\nSegmentation fault\n```\n\n```\n(gdb) r < test395.rb\nStarting program: /root/mruby-no-asan/bin/mirb < test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n>\nProgram received signal SIGSEGV, Segmentation fault.\n__strcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:232\n232     ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S: No such file or directory.\n(gdb) bt\n#0  __strcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:232\n#1  0x0000000000402848 in main (argc=1, argv=0x7fffffffec78) at /root/mruby-no-asan/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:508\n```\n\n```\ndpkg --list | grep gcc\nii  gcc                            4:4.9.2-2                          amd64        GNU C compiler\nii  gcc-4.9                        4.9.2-10                           amd64        GNU C compiler\nii  gcc-4.9-base:amd64             4.9.2-10                           amd64        GCC, the GNU Compiler Collection (base package)\nii  libgcc-4.9-dev:amd64           4.9.2-10                           amd64        GCC support library (development files)\nii  libgcc1:amd64                  1:4.9.2-10                         amd64        GCC support library\n```\n\n```\ngcc --version\ngcc (Debian 4.9.2-10) 4.9.2\n```\n\n```\nLinux debian-nyc3-07 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1 (2016-12-30) x86_64 GNU/Linux\n```\n\nI have a few hundred testcases that exhibit this behavior.\n", 
            "markdown_message": "<p>With <code>3123549</code> I see this:</p>\n<pre class=\"highlight plaintext\"><code>~/mruby-no-asan/bin/mirb &lt; test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt; Segmentation fault\n</code></pre><pre class=\"highlight plaintext\"><code>valgrind -q ~/mruby-no-asan/bin/mirb &lt; test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt; ==9568== Invalid write of size 1\n==9568==    at 0x4C2C2A0: strcpy (vg_replace_strmem.c:458)\n==9568==    by 0x402847: main (mirb.c:508)\n==9568==  Address 0xfff001000 is not stack&#39;d, malloc&#39;d or (recently) free&#39;d\n==9568==\n==9568==\n==9568== Process terminating with default action of signal 11 (SIGSEGV)\n==9568==  Access not within mapped region at address 0xFFF001000\n==9568==    at 0x4C2C2A0: strcpy (vg_replace_strmem.c:458)\n==9568==    by 0x402847: main (mirb.c:508)\n==9568==  If you believe this happened as a result of a stack\n==9568==  overflow in your program&#39;s main thread (unlikely but\n==9568==  possible), you can try to increase the size of the\n==9568==  main thread stack using the --main-stacksize= flag.\n==9568==  The main thread stack size used in this run was 8388608.\nSegmentation fault\n</code></pre><pre class=\"highlight plaintext\"><code>(gdb) r &lt; test395.rb\nStarting program: /root/mruby-no-asan/bin/mirb &lt; test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt;\nProgram received signal SIGSEGV, Segmentation fault.\n__strcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:232\n232     ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S: No such file or directory.\n(gdb) bt\n#0  __strcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcpy-sse2-unaligned.S:232\n#1  0x0000000000402848 in main (argc=1, argv=0x7fffffffec78) at /root/mruby-no-asan/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:508\n</code></pre><pre class=\"highlight plaintext\"><code>dpkg --list | grep gcc\nii  gcc                            4:4.9.2-2                          amd64        GNU C compiler\nii  gcc-4.9                        4.9.2-10                           amd64        GNU C compiler\nii  gcc-4.9-base:amd64             4.9.2-10                           amd64        GCC, the GNU Compiler Collection (base package)\nii  libgcc-4.9-dev:amd64           4.9.2-10                           amd64        GCC support library (development files)\nii  libgcc1:amd64                  1:4.9.2-10                         amd64        GCC support library\n</code></pre><pre class=\"highlight plaintext\"><code>gcc --version\ngcc (Debian 4.9.2-10) 4.9.2\n</code></pre><pre class=\"highlight plaintext\"><code>Linux debian-nyc3-07 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1 (2016-12-30) x86_64 GNU/Linux\n</code></pre>\n<p>I have a few hundred testcases that exhibit this behavior.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607403, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T15:59:50.361Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T15:59:50.361Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I thought maybe it was due to memory pressure as my normal fuzzing boxen only have 512MB of RAM, but I just tested on a local Debian 8 x64 VM with 4GB of RAM and I get the same result.", 
            "markdown_message": "<p>I thought maybe it was due to memory pressure as my normal fuzzing boxen only have 512MB of RAM, but I just tested on a local Debian 8 x64 VM with 4GB of RAM and I get the same result.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607439, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T16:11:45.379Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T16:11:45.379Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I'm also able to reproduce this with the latest master (c0a4b1a) on Kali (a Debian clone) and gcc 6.3.0 20170124 (no asan).", 
            "markdown_message": "<p>I&#39;m also able to reproduce this with the latest master (c0a4b1a) on Kali (a Debian clone) and gcc 6.3.0 20170124 (no asan).</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607470, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/175/306/4e0bae9414946f2fbe8c1c929b355b68425c00c7/test417.rb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223931Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bfc952855ddbf838bfda36157a9ee6acd509030adcc19b59f024fad027d2bb0a", 
                    "type": "application/octet-stream", 
                    "id": 175306, 
                    "filename": "test417.rb"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-04-12T16:29:14.429Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T16:29:14.429Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Maybe you'll have more luck with this non-minimized testcase? test417.rb", 
            "markdown_message": "<p>Maybe you&#39;ll have more luck with this non-minimized testcase? test417.rb</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607506, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T17:13:20.257Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T17:13:20.257Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I still can't reproduce. Are you sure you're building without AFL and without doing anything else unusual?", 
            "markdown_message": "<p>I still can&#39;t reproduce. Are you sure you&#39;re building without AFL and without doing anything else unusual?</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 1607622, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T17:49:26.833Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T17:50:16.633Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Yes. I am sure. There is nothing unsual going on, these are normal installs of Debian 8 x64 or a variant thereof (Kali). In the case of Kali, I just ran `git clone https://github.com/mruby/mruby` and then `cd mruby && make` and then ran it against my testcases. What platform are you testing on so that I can replicate it? I can give you SSH access to one of the Debian machines so you can see what I see.", 
            "markdown_message": "<p>Yes. I am sure. There is nothing unsual going on, these are normal installs of Debian 8 x64 or a variant thereof (Kali). In the case of Kali, I just ran <code>git clone https://github.com/mruby/mruby</code> and then <code>cd mruby &amp;&amp; make</code> and then ran it against my testcases. What platform are you testing on so that I can replicate it? I can give you SSH access to one of the Debian machines so you can see what I see.</p>\n", 
            "type": "Activities::BugNew", 
            "id": 1607682, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-12T18:03:40.406Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T18:03:40.406Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "I'm testing with OS X 10.12.4 (clang + ASAN) and Ubuntu 14.04 (gcc). I can try testing with other operating systems and compilers but I might not be able to get to that until next week.", 
            "markdown_message": "<p>I&#39;m testing with OS X 10.12.4 (clang + ASAN) and Ubuntu 14.04 (gcc). I can try testing with other operating systems and compilers but I might not be able to get to that until next week.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607723, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/175/343/84c64491d07fc4ceafe12fa10d89b3e368c8fdd1/core.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTRM4X5HG%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T223932Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDDs%2B%2FH8tFp9eaL3SuyK3A4v0Gz1Pk4vLeyx%2Fa%2BOUYIBLln%2BHhEjo8aKsDgcWA0AVPWHQ1CqE69K0fwPJtemp0NnMHwpItZaKfQu2ndzpg6QamoxmJU6CxIEWtJEY3Xtdf2COsdrDtLDojEJ9Bsgq2dXSYC00tKxrlTs4yvW6oAYTu01sZU0MCDpTX84p3oRDZuLOTobhBvHMBRwkOe5yM9PnearXzpjHD9w6d9G0IdijQ15s%2Br%2FCrRq1RQ6%2FGlZaDOuMAFvLZ%2BDU%2BQ4elR42FJO7oqNOhTb7xFUKWMGUZD2l9vrtaQYBWgy8vLJL1PHKNL79uTgKO2gWJuruy5%2FR7g8iF%2F%2BDA%2FXyg6nD5MjJy8mSf4BsfZTsJ7bQ%2BmI19CRcsvBZU%2BD1gUjQkVgOsXdeI4LcCwhSIkIHIAnZLc3YhPCinZgj4lT9UYAmI6j6Ig003H%2B2wt4Gf4YVmv60G6zU1H8wWbJ%2Fm9tXcPEMDdtt2yoQpjl%2FLHFVDNhvjZwxcRsctZU64Qaim%2FPjSts6oYmu4TCHG6yWfeMPRxHXWIQV8xe%2BCLaMnof047dAbkRq5Dx8XgGLGEXX%2FVUX%2F8kf%2FiekmYRSZTqEyMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=327daca24e1ba0df896a7e311f7dd78cab055324a9ebe46fc17bd0a62cf77f6d", 
                    "type": "application/gzip", 
                    "id": 175343, 
                    "filename": "core.gz"
                }
            ], 
            "automated_response": false, 
            "created_at": "2017-04-12T18:45:14.431Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-12T18:45:14.431Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Alright, I've deployed a 32-bit Ubuntu 16.10 VM and I'm able to replicate the same issue using the same testcases I provided. \n\n`gcc (Ubuntu 6.2.0-5ubuntu12) 6.2.0 20161005`\n`Linux vultr.guest 4.8.0-45-generic #48-Ubuntu SMP Fri Mar 24 11:44:57 UTC 2017 i686 i686 i686 GNU/Linux`\n\n```\nroot@vultr:~/mruby# valgrind -q bin/mirb < ../test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n> ==8046== Invalid write of size 1\n==8046==    at 0x4031466: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==8046==    by 0x8049EBD: main (mirb.c:508)\n==8046==  Address 0xbeb6e000 is not stack'd, malloc'd or (recently) free'd\n==8046==\n==8046==\n==8046== Process terminating with default action of signal 11 (SIGSEGV): dumping core\n==8046==  Access not within mapped region at address 0xBEB6E000\n==8046==    at 0x4031466: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==8046==    by 0x8049EBD: main (mirb.c:508)\n==8046==  If you believe this happened as a result of a stack\n==8046==  overflow in your program's main thread (unlikely but\n==8046==  possible), you can try to increase the size of the\n==8046==  main thread stack using the --main-stacksize= flag.\n==8046==  The main thread stack size used in this run was 8388608.\nSegmentation fault (core dumped)\n```\n\n```\n(gdb) r < ../test395.rb\nStarting program: /root/mruby/bin/mirb < ../test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n>\nProgram received signal SIGSEGV, Segmentation fault.\n__strcpy_sse2 () at ../sysdeps/i386/i686/multiarch/strcpy-sse2.S:1745\n1745    ../sysdeps/i386/i686/multiarch/strcpy-sse2.S: No such file or directory.\n(gdb) bt\n#0  __strcpy_sse2 () at ../sysdeps/i386/i686/multiarch/strcpy-sse2.S:1745\n#1  0x08049ebe in main (argc=<error reading variable: Cannot access memory at address 0x30303030>, argv=0xbffff744) at /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:508\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\n```\n\nThis was just `git clone https://github.com/mruby/mruby && cd mruby && make`. No ASAN, no AFL, nothing special. I've attached the core dump.\n\n", 
            "markdown_message": "<p>Alright, I&#39;ve deployed a 32-bit Ubuntu 16.10 VM and I&#39;m able to replicate the same issue using the same testcases I provided. </p>\n\n<p><code>gcc (Ubuntu 6.2.0-5ubuntu12) 6.2.0 20161005</code><br>\n<code>Linux vultr.guest 4.8.0-45-generic #48-Ubuntu SMP Fri Mar 24 11:44:57 UTC 2017 i686 i686 i686 GNU/Linux</code></p>\n<pre class=\"highlight plaintext\"><code>root@vultr:~/mruby# valgrind -q bin/mirb &lt; ../test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt; ==8046== Invalid write of size 1\n==8046==    at 0x4031466: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==8046==    by 0x8049EBD: main (mirb.c:508)\n==8046==  Address 0xbeb6e000 is not stack&#39;d, malloc&#39;d or (recently) free&#39;d\n==8046==\n==8046==\n==8046== Process terminating with default action of signal 11 (SIGSEGV): dumping core\n==8046==  Access not within mapped region at address 0xBEB6E000\n==8046==    at 0x4031466: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\n==8046==    by 0x8049EBD: main (mirb.c:508)\n==8046==  If you believe this happened as a result of a stack\n==8046==  overflow in your program&#39;s main thread (unlikely but\n==8046==  possible), you can try to increase the size of the\n==8046==  main thread stack using the --main-stacksize= flag.\n==8046==  The main thread stack size used in this run was 8388608.\nSegmentation fault (core dumped)\n</code></pre><pre class=\"highlight plaintext\"><code>(gdb) r &lt; ../test395.rb\nStarting program: /root/mruby/bin/mirb &lt; ../test395.rb\nmirb - Embeddable Interactive Ruby Shell\n\n&gt;\nProgram received signal SIGSEGV, Segmentation fault.\n__strcpy_sse2 () at ../sysdeps/i386/i686/multiarch/strcpy-sse2.S:1745\n1745    ../sysdeps/i386/i686/multiarch/strcpy-sse2.S: No such file or directory.\n(gdb) bt\n#0  __strcpy_sse2 () at ../sysdeps/i386/i686/multiarch/strcpy-sse2.S:1745\n#1  0x08049ebe in main (argc=&lt;error reading variable: Cannot access memory at address 0x30303030&gt;, argv=0xbffff744) at /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:508\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\n</code></pre>\n<p>This was just <code>git clone https://github.com/mruby/mruby &amp;&amp; cd mruby &amp;&amp; make</code>. No ASAN, no AFL, nothing special. I&#39;ve attached the core dump.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1607816, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-04-13T14:58:30.212Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-13T14:58:30.212Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks for the additional information. I was eventually able to reproduce the problem. The key is that the libreadline headers must not be installed when MRuby is built. I've opened a pull request upstream: https://github.com/mruby/mruby/pull/3608", 
            "markdown_message": "<p>Thanks for the additional information. I was eventually able to reproduce the problem. The key is that the libreadline headers must not be installed when MRuby is built. I&#39;ve opened a pull request upstream: <a title=\"https://github.com/mruby/mruby/pull/3608\" href=\"/redirect?signature=2fa90b98d0aa677d32477aa2fb295aaf4e96aaf8&amp;url=https%3A%2F%2Fgithub.com%2Fmruby%2Fmruby%2Fpull%2F3608\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/mruby/mruby/pull/3608</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1609774, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "geeknik", 
                "url": "/geeknik"
            }, 
            "created_at": "2017-04-17T17:47:13.625Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-04-17T17:47:13.625Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks again for your report. This issue has been addressed upstream. The bug was only in mirb (and only when built in an unusual way) so this issue had no effect on Shopify Scripts.\n\nOur next round of bounty decisions will take place within two weeks, so we'll be in touch with you again soon.", 
            "markdown_message": "<p>Thanks again for your report. This issue has been addressed upstream. The bug was only in mirb (and only when built in an unusual way) so this issue had no effect on Shopify Scripts.</p>\n\n<p>Our next round of bounty decisions will take place within two weeks, so we&#39;ll be in touch with you again soon.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1615967, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-05-02T22:07:57.654Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-02T22:07:57.654Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bonus_amount": "0.0", 
            "bounty_amount": "100.0", 
            "collaborator": {
                "username": "geeknik", 
                "url": "/geeknik"
            }, 
            "message": "Thanks for helping improve the security of Shopify!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1650286, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-09T02:45:12.954Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-09T02:45:12.954Z", 
            "actor": {
                "username": "geeknik", 
                "url": "/geeknik", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/276/9b441990828d1a89d32990f39813a18ffb68da86_medium.jpg?1532034474"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1662070, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-09T12:43:12.833Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-09T12:43:12.833Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1663018, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-09T12:43:12.869Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-09T12:43:12.869Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1663019, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "geeknik", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/geeknik", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/012/276/a940a20d5207bd6044c795859801e3b1e1828604_small.jpg?1532034474"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 4, 
        "name": "Stack Overflow"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -47246058.89328897, 
    "disclosed_at": "2017-05-09T12:43:12.853Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/219870", 
    "created_at": "2017-04-10T05:06:09.058Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Triggered in <code>7e28510</code> (7 April 2017) with <code>mirb</code> only.</p>\n\n<p><code>cat test013.rb | mirb</code></p>\n<pre class=\"highlight plaintext\"><code>==17976==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffeb477fb0 at pc 0x408c21 bp 0x7fffeb477a90 sp 0x7fffeb477a88\nWRITE of size 1 at 0x7fffeb477fb0 thread T0\n    #0 0x408c20 in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466\n    #1 0x7f96e4703b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\n    #2 0x40aefc (/root/mruby/bin/mirb+0x40aefc)\n\nAddress 0x7fffeb477fb0 is located in stack of thread T0 at offset 1184 in frame\n    #0 0x40549f in main /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:361\n\n  This frame has 4 object(s):\n    [32, 56) &#39;args&#39;\n    [96, 126) &#39;unexpected_end&#39;\n    [160, 1184) &#39;last_code_line&#39; &lt;== Memory access at offset 1184 overflows this variable\n    [1216, 5312) &#39;ruby_code&#39;\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /root/mruby/mrbgems/mruby-bin-mirb/tools/mirb/mirb.c:466 main\n</code></pre>", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}