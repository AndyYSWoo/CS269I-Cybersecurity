{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "apapedulimu", 
        "iheb_hamad", 
        "amjamjamj", 
        "sneakysnake", 
        "takeshy"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 356763, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-05-24T15:06:38.217Z", 
    "vulnerability_information": "Quick Overview\n\n \n\nI have found a Buffer Overflow OutOfBand vulnerability in the code where a buffer used is not properly verified before writing data to the buffer.\n\n \n\nIntroduction\n\n \n\nBuffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.  \n\n \n\nSeverity : High\n\n \n\nVulnerable Parameter : Server\n\n \n\nPoC\n\n \n\nPage1: core-master\\src\\lib\\sha3.c\n\n \n\nLine no. : 73        static void\n\nkeccakf(uint64_t s[25])\n\n{\n\n                                int i, j, round;\n\n                                uint64_t t, bc[5];\n\n#define KECCAK_ROUNDS 24\n\n                                for(round = 0; round < KECCAK_ROUNDS; round++) {\n\n                                /* Theta */\n\n                                for(i = 0; i < 5; i++)\n\n                                bc[i] = s[i] ^ s[i + 5] ^ s[i + 10] ^ s[i + 15] ^ s[i + 20];\n\n                                for(i = 0; i < 5; i++) {\n\n                                t = bc[(i + 4) % 5] ^ SHA3_ROTL64(bc[(i + 1) % 5], 1);\n\n                                for(j = 0; j < 25; j += 5)\n\n                                s[j + i] ^= t;\n\n                                }\n\n                                /* Rho Pi */\n\n                                t = s[1];\n\n                                for(i = 0; i < 24; i++) {\n\n                                j = keccakf_piln[i];\n\n                                bc[0] = s[j];\n\n                                s[j] = SHA3_ROTL64(t, keccakf_rotc[i]);\n\n                                t = bc[0];\n\n                                }\n\n                                /* Chi */\n\n                                for(j = 0; j < 25; j += 5) {\n\n                                for(i = 0; i < 5; i++)\n\n                                bc[i] = s[j + i];\n\n                                for(i = 0; i < 5; i++)\n\n                                s[j + i] ^= (~bc[(i + 1) % 5]) & bc[(i + 2) % 5];\n\n                                }\n\n                                /* Iota */\n\n                                s[0] ^= keccakf_rndc[round];\n\n                                }\n\n}\n\n \n\nIn the above code, the size of the buffer used by keccakf in j, at line 73 of core-master\\src\\lib\\sha3.c, is not properly verified before writing data to the buffer. This can enable a buffer overflow attack, using the source buffer that keccakf passes to bc, at line 73 of core-master\\src\\lib\\sha3.c, to overwrite the target buffer. \n \n\nAlternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms. \n\n \n\nKindly confirm and revert in case of any queries.\n\n## Impact\n\nImpact:\n\n \n\nBuffer Overflows can manifest in numerous different variations. In its most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "none", 
        "author_type": "Team"
    }, 
    "title": "Buffer overflow in sha3", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "https://github.com/dovecot/core", 
        "max_severity": "critical", 
        "databaseId": 6273, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-05-24T13:15:21.412Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T13:15:21.412Z", 
            "actor": {
                "username": "tss", 
                "url": "/tss", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "This is rather specialized SHA3 code that isn't very easily readable, but hash algorithms' code rarely is, especially because it often is rather performance critical. The given \"s\" parameter always comes from struct sha3_ctx.s so it's always size of [25]. It's not possible for buffer overflow there. I don't think we can much improve the code without unnecessarily making it slower. Perhaps we could change s[25] to s[STATIC_ARRAY SHA3_KECCAK_SPONGE_WORDS] to make it clearer it must be the same as sha3_ctx.s[] but then again that makes it less clear that its size must always be 25.\n", 
            "markdown_message": "<p>This is rather specialized SHA3 code that isn&#39;t very easily readable, but hash algorithms&#39; code rarely is, especially because it often is rather performance critical. The given &quot;s&quot; parameter always comes from struct sha3_ctx.s so it&#39;s always size of [25]. It&#39;s not possible for buffer overflow there. I don&#39;t think we can much improve the code without unnecessarily making it slower. Perhaps we could change s[25] to s[STATIC_ARRAY SHA3_KECCAK_SPONGE_WORDS] to make it clearer it must be the same as sha3_ctx.s[] but then again that makes it less clear that its size must always be 25.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2791311, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T13:48:06.649Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T13:48:06.649Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "None", 
                "old_severity": "High (7.1)"
            }, 
            "team_handle": "dovecot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2791395, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T13:51:21.277Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T13:51:21.277Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "Based on your initial description, there do not appear to be any security implications as a direct result of this behavior. If you disagree, please reply with additional information describing your reasoning. Including a working proof-of-concept can be incredibly helpful in our assessment of these claims.\n", 
            "markdown_message": "<p>Based on your initial description, there do not appear to be any security implications as a direct result of this behavior. If you disagree, please reply with additional information describing your reasoning. Including a working proof-of-concept can be incredibly helpful in our assessment of these claims.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 2791407, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T13:55:42.803Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T13:55:42.803Z", 
            "actor": {
                "username": "knk", 
                "url": "/knk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/178/253/f6938b542ce9d9609848a62a244767abe9649202_medium.jpg?1516638081"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "not agree with your decision this is not informative bug. please check once again\n\n", 
            "markdown_message": "<p>not agree with your decision this is not informative bug. please check once again</p>\n", 
            "type": "Activities::Comment", 
            "id": 2791421, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T14:08:51.307Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T14:08:51.307Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "Then you are probably able to provide more details why you believe this is the case?", 
            "markdown_message": "<p>Then you are probably able to provide more details why you believe this is the case?</p>\n", 
            "type": "Activities::Comment", 
            "id": 2791465, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T15:06:28.140Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T15:06:28.140Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Buffer overflow", 
                "old_title": "Buffur overflow"
            }, 
            "team_handle": "dovecot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 2792194, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T15:06:38.249Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T15:06:38.249Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2792196, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-24T15:09:56.836Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-24T15:09:56.836Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Buffer overflow in sha3", 
                "old_title": "Buffer overflow"
            }, 
            "team_handle": "dovecot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 2792413, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-27T05:49:11.289Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-27T05:49:11.289Z", 
            "actor": {
                "username": "knk", 
                "url": "/knk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/178/253/f6938b542ce9d9609848a62a244767abe9649202_medium.jpg?1516638081"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "disclose this report publicly.", 
            "markdown_message": "<p>disclose this report publicly.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2802192, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-27T06:37:48.787Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-27T06:37:48.787Z", 
            "actor": {
                "username": "akituomi", 
                "url": "/akituomi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/060/216/b4349eaf357a8d5dc8efd3e359fd41cb2af247c0_medium.jpg?1461137575"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "dovecot", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2802238, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "knk", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/knk", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/178/253/199c91ad581b62f84ba183e6385f1ad4cc878bcc_small.jpg?1516638081"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 3, 
        "name": "Classic Buffer Overflow"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2018-05-27T06:37:48.894Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/356763", 
    "created_at": "2018-05-24T10:58:25.373Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Quick Overview</p>\n\n<p>I have found a Buffer Overflow OutOfBand vulnerability in the code where a buffer used is not properly verified before writing data to the buffer.</p>\n\n<p>Introduction</p>\n\n<p>Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.  </p>\n\n<p>Severity : High</p>\n\n<p>Vulnerable Parameter : Server</p>\n\n<p>PoC</p>\n\n<p>Page1: core-master\\src\\lib\\sha3.c</p>\n\n<p>Line no. : 73        static void</p>\n\n<p>keccakf(uint64_t s[25])</p>\n\n<p>{</p>\n<pre class=\"highlight plaintext\"><code>                            int i, j, round;\n\n                            uint64_t t, bc[5];\n</code></pre>\n<h1 id=\"define-keccak_rounds-24\">define KECCAK_ROUNDS 24</h1>\n<pre class=\"highlight plaintext\"><code>                            for(round = 0; round &lt; KECCAK_ROUNDS; round++) {\n\n                            /* Theta */\n\n                            for(i = 0; i &lt; 5; i++)\n\n                            bc[i] = s[i] ^ s[i + 5] ^ s[i + 10] ^ s[i + 15] ^ s[i + 20];\n\n                            for(i = 0; i &lt; 5; i++) {\n\n                            t = bc[(i + 4) % 5] ^ SHA3_ROTL64(bc[(i + 1) % 5], 1);\n\n                            for(j = 0; j &lt; 25; j += 5)\n\n                            s[j + i] ^= t;\n\n                            }\n\n                            /* Rho Pi */\n\n                            t = s[1];\n\n                            for(i = 0; i &lt; 24; i++) {\n\n                            j = keccakf_piln[i];\n\n                            bc[0] = s[j];\n\n                            s[j] = SHA3_ROTL64(t, keccakf_rotc[i]);\n\n                            t = bc[0];\n\n                            }\n\n                            /* Chi */\n\n                            for(j = 0; j &lt; 25; j += 5) {\n\n                            for(i = 0; i &lt; 5; i++)\n\n                            bc[i] = s[j + i];\n\n                            for(i = 0; i &lt; 5; i++)\n\n                            s[j + i] ^= (~bc[(i + 1) % 5]) &amp; bc[(i + 2) % 5];\n\n                            }\n\n                            /* Iota */\n\n                            s[0] ^= keccakf_rndc[round];\n\n                            }\n</code></pre>\n<p>}</p>\n\n<p>In the above code, the size of the buffer used by keccakf in j, at line 73 of core-master\\src\\lib\\sha3.c, is not properly verified before writing data to the buffer. This can enable a buffer overflow attack, using the source buffer that keccakf passes to bc, at line 73 of core-master\\src\\lib\\sha3.c, to overwrite the target buffer. </p>\n\n<p>Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms. </p>\n\n<p>Kindly confirm and revert in case of any queries.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Impact:</p>\n\n<p>Buffer Overflows can manifest in numerous different variations. In its most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker&#39;s source buffer is larger than the program&#39;s target buffer, the attacker&#39;s data overwrites whatever is next on the stack, allowing the attacker to control program structures.</p>\n", 
    "severity_rating": "none", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://dovecot.fi", 
            "about": "", 
            "twitter_handle": "dovecotmail", 
            "name": "Dovecot"
        }, 
        "handle": "dovecot", 
        "url": "https://hackerone.com/dovecot", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/907/1babed172261a02499a2ed2421b339bd59ab62ec_small.?1454083939", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/907/0b3999bc5f1ae683267eea5746a94202046fcb23_medium.?1454083939"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8907, 
        "default_currency": "usd"
    }, 
    "is_published": false
}