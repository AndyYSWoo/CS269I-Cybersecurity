{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-11-27T12:27:05.849Z", 
    "voters": [
        "pajoda", 
        "shivasurya", 
        "jobert", 
        "whysoserial", 
        "spam404", 
        "kapytein", 
        "troubleshooter", 
        "lfb", 
        "s_p_q_r", 
        "mhamed_kchikech", 
        "and 120 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 449351, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-11-27T00:47:02.863Z", 
    "vulnerability_information": "Hai,\nI've found a stored xss vulnerability via assets but unfortunately its been blocked by CSP.\n\nSteps to reproduce:-\n1) Add a asset like \"><img src=x onerror=prompt``>\n{  \n  i) Go to program --> scope --> Add asset --> select 'Others' and give \"><img src=x onerror=prompt``>\n  ii) Check your console now.\n}\n2) Then, Go to the created program. (You can check with this https://hackerone.com/script_src_x_img_src_x_onerror)\n3) Click the created asset. [xss will be fired now(1)]\n4) Then submit a report.\n5) Whenever the asset is rendering, xss is firing actually(2).\n6) Then, open the submitted report. (xss will be firing here too[3])\n7) Then click 'edit' in assets, (xss will be firing here too(4))\n\n## Impact\n\nScript can be executing for all.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "low", 
            "privileges_required": "low", 
            "user_interaction": "required", 
            "attack_vector": "network", 
            "attack_complexity": "high", 
            "scope": "unchanged", 
            "integrity": "low", 
            "availability": "none"
        }, 
        "rating": "medium", 
        "score": 4.8, 
        "author_type": "Team"
    }, 
    "title": "IE only: stored Cross-Site Scripting (XSS) vulnerability through Program Asset identifier", 
    "is_member_of_team?": null, 
    "vote_count": 130, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "https://hackerone.com", 
        "max_severity": "critical", 
        "databaseId": 3, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": "2018-12-27T00:47:03.014Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,500", 
    "attachments": [
        {
            "file_name": "Screen_Shot_2018-11-24_at_7.24.56_PM.png", 
            "type": "image/png", 
            "id": 380072, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/380/072/64094a6416f50d0a75603738dabff28be1853e93/Screen_Shot_2018-11-24_at_7.24.56_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221359Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bb61d946d84c7414868a6e093cfc4a36e2ce5399311aaf4525bbffa45a086134"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-11-25T22:01:12.920Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-25T22:01:12.920Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "Stored Cross-Site Scripting (XSS) vulnerability through Program Asset identifier", 
                "old_title": "Stored xss'es via assets (Blocked by CSP)"
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 3706814, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-25T22:05:48.713Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-25T22:05:48.713Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Medium (4.8)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 3706827, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-25T22:06:04.185Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-25T22:06:04.185Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_title": "IE only: stored Cross-Site Scripting (XSS) vulnerability through Program Asset identifier", 
                "old_title": "Stored Cross-Site Scripting (XSS) vulnerability through Program Asset identifier"
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportTitleUpdated", 
            "id": 3706828, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-25T22:15:42.005Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-25T22:15:42.005Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @madhu_anand - thanks for your report, it's much appreciated! I was able to reproduce the behavior you described. I've briefly looked into the problem already and determined that this can only be exploited in Internet Explorer due to the lack of support for a Content Security Policy. When an Asset identifier is rendered, the following code is called:\n\n```html\n<h3 className=\"no-margin--bottom text-truncate\">\n  {displayAssetIdentifer(asset.asset_identifier, 80)}\n</h3>\n```\n\nHere's the implementation of the `displayAssetIdentifer` function (typo, haha):\n\n```javascript\nimport \"truncate/jquery.truncate\";\nimport $ from \"jquery\";\n\nexport default function(identifier, truncateLength = 30) {\n  return $.truncate(identifier, truncateLength);\n}\n```\n\nThe `truncate` function can be found here: https://github.com/Hacker0x01/truncate/blob/master/jquery.truncate.js#L13. This function is designed to be able to do text truncation in HTML elements. It is **not** intended for plaintext truncation, as it might include HTML tags, like in the Asset identifier. The `append(html)` call in the function will create an HTML element with the input, which will render the HTML. The React component that renders this will properly sanitize the truncated text, which means that this is **not** vulnerable to an HTML injection. It is also not vulnerable to data exfiltration due to unclosed HTML elements ([read more](https://labs.detectify.com/2018/01/19/google-analytics-data-extraction/)). Every page where the Asset identifier component is rendered (Bugs overview, Reports page, Report wizard), is vulnerable to this.\n\nThe only other place where the `$.truncate` function is called is in a component called `ExpendableContent`. The only place where this is used, is when rendering a report summary. However, this is supposed to be called with HTML elements, as it is rendered markdown.\n\nThe mitigation is to use proper plaintext truncation instead of the `$.truncate` function. We will keep you in the loop on our progress. Thanks again, good luck, and happy hacking!", 
            "markdown_message": "<p>Hi <a href=\"/madhu_anand\">@madhu_anand</a> - thanks for your report, it&#39;s much appreciated! I was able to reproduce the behavior you described. I&#39;ve briefly looked into the problem already and determined that this can only be exploited in Internet Explorer due to the lack of support for a Content Security Policy. When an Asset identifier is rendered, the following code is called:</p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;h3</span> <span class=\"na\">className=</span><span class=\"s\">&quot;no-margin--bottom text-truncate&quot;</span><span class=\"nt\">&gt;</span>\n  {displayAssetIdentifer(asset.asset_identifier, 80)}\n<span class=\"nt\">&lt;/h3&gt;</span>\n</code></pre>\n<p>Here&#39;s the implementation of the <code>displayAssetIdentifer</code> function (typo, haha):</p>\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"s2\">&quot;truncate/jquery.truncate&quot;</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">$</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;jquery&quot;</span><span class=\"p\">;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">identifier</span><span class=\"p\">,</span> <span class=\"nx\">truncateLength</span> <span class=\"o\">=</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">truncate</span><span class=\"p\">(</span><span class=\"nx\">identifier</span><span class=\"p\">,</span> <span class=\"nx\">truncateLength</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>The <code>truncate</code> function can be found here: <a title=\"https://github.com/Hacker0x01/truncate/blob/master/jquery.truncate.js#L13\" href=\"/redirect?signature=1f2adc5daa6fe8884b00fbce1955260d7d90a9eb&amp;url=https%3A%2F%2Fgithub.com%2FHacker0x01%2Ftruncate%2Fblob%2Fmaster%2Fjquery.truncate.js%23L13\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/Hacker0x01/truncate/blob/master/jquery.truncate.js#L13</span><i class=\"icon-external-link\"></i></a>. This function is designed to be able to do text truncation in HTML elements. It is <strong>not</strong> intended for plaintext truncation, as it might include HTML tags, like in the Asset identifier. The <code>append(html)</code> call in the function will create an HTML element with the input, which will render the HTML. The React component that renders this will properly sanitize the truncated text, which means that this is <strong>not</strong> vulnerable to an HTML injection. It is also not vulnerable to data exfiltration due to unclosed HTML elements (<a href=\"/redirect?signature=98d3d20a92f3b0ed80aaad410a5231e9fbd40cd5&amp;url=https%3A%2F%2Flabs.detectify.com%2F2018%2F01%2F19%2Fgoogle-analytics-data-extraction%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>read more</span><i class=\"icon-external-link\"></i></a>). Every page where the Asset identifier component is rendered (Bugs overview, Reports page, Report wizard), is vulnerable to this.</p>\n\n<p>The only other place where the <code>$.truncate</code> function is called is in a component called <code>ExpendableContent</code>. The only place where this is used, is when rendering a report summary. However, this is supposed to be called with HTML elements, as it is rendered markdown.</p>\n\n<p>The mitigation is to use proper plaintext truncation instead of the <code>$.truncate</code> function. We will keep you in the loop on our progress. Thanks again, good luck, and happy hacking!</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 3706842, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-26T09:04:35.778Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-26T09:05:19.944Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks for the detailed explanation @jobert :)\nBTW, is it eligible for bounty?", 
            "markdown_message": "<p>Thanks for the detailed explanation <a href=\"/jobert\">@jobert</a> :)<br>\nBTW, is it eligible for bounty?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3708284, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/380/725/c1fde4ec00f3349a8a3cf2dd31fdc22ba3b1e4c0/Screenshot_2018-11-26_at_8.17.08_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221359Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=53d0b72dc5204efd03860335898741d446e6cf05e4a0f9707e58f6f235dc6afe", 
                    "type": "image/png", 
                    "id": 380725, 
                    "filename": "Screenshot_2018-11-26_at_8.17.08_PM.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2018-11-26T14:50:05.686Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-26T14:50:05.686Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "By the way, I've tried this in firefox after disabling CSP. And I've executed with a alert(xss) successfully!", 
            "markdown_message": "<p>By the way, I&#39;ve tried this in firefox after disabling CSP. And I&#39;ve executed with a alert(xss) successfully!</p>\n", 
            "type": "Activities::Comment", 
            "id": 3709534, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "madhu_anand", 
                "url": "/madhu_anand"
            }, 
            "created_at": "2018-11-27T00:35:42.359Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T00:35:42.359Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @madhu_anand - thanks again for bringing this to our attention. We've deployed a fix for the XSS vulnerability. Good luck and happy hacking!", 
            "markdown_message": "<p>Hi <a href=\"/madhu_anand\">@madhu_anand</a> - thanks again for bringing this to our attention. We&#39;ve deployed a fix for the XSS vulnerability. Good luck and happy hacking!</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 3713302, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2018-11-27T00:36:16.591Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T00:36:16.591Z", 
            "actor": {
                "url": "/security", 
                "profile": {
                    "name": "HackerOne"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
                }
            }, 
            "team_handle": "security", 
            "bonus_amount": "0.0", 
            "bounty_amount": "2500.0", 
            "collaborator": {
                "username": "madhu_anand", 
                "url": "/madhu_anand"
            }, 
            "message": "This was a good find, thanks @madhu_anand!", 
            "markdown_message": "<p>This was a good find, thanks <a href=\"/madhu_anand\">@madhu_anand</a>!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 3713303, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T00:47:02.889Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T00:47:02.889Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "Hi @madhu_anand - we've redacted two of the attachments you submitted with the report, since they disclosed sensitive information. This is ready to be disclosed. Good luck and happy hacking!", 
            "markdown_message": "<p>Hi <a href=\"/madhu_anand\">@madhu_anand</a> - we&#39;ve redacted two of the attachments you submitted with the report, since they disclosed sensitive information. This is ready to be disclosed. Good luck and happy hacking!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3713349, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T01:42:19.163Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T01:42:19.163Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Its my long dream to get hackerone t-shirt. \nI've worked a lot to get hackerone swags. \nMay I please get one?\n\nCheers!\nMadhu_Anand", 
            "markdown_message": "<p>Its my long dream to get hackerone t-shirt. <br>\nI&#39;ve worked a lot to get hackerone swags. <br>\nMay I please get one?</p>\n\n<p>Cheers!<br>\nMadhu_Anand</p>\n", 
            "type": "Activities::Comment", 
            "id": 3713438, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T06:36:09.999Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T06:36:09.999Z", 
            "actor": {
                "username": "jobert", 
                "url": "/jobert", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/002/35cc46a21b3756f9df61d6269d287b9dc53d5b27_medium.png?1410255083"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @madhu_anand - I'd love to send you some swag! However, what if we'd do this: get your signal to 3+ and we'll get you an awesome swag pack. Feel free to ping me when you reached that so that we can send you the swag. Good luck and happy hacking!", 
            "markdown_message": "<p>Hi <a href=\"/madhu_anand\">@madhu_anand</a> - I&#39;d love to send you some swag! However, what if we&#39;d do this: get your signal to 3+ and we&#39;ll get you an awesome swag pack. Feel free to ping me when you reached that so that we can send you the swag. Good luck and happy hacking!</p>\n", 
            "type": "Activities::Comment", 
            "id": 3713950, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T12:27:05.894Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T12:27:05.894Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Sure, but limited please", 
            "markdown_message": "<p>Sure, but limited please</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3715307, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T12:27:05.996Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T12:27:05.996Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3715308, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-11-27T14:53:42.052Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-11-27T14:53:42.052Z", 
            "actor": {
                "username": "madhu_anand", 
                "url": "/madhu_anand", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/257/406/083ea5ee63790f8afc54ca2676f77d104fa16a9f_medium.jpeg?1542046199"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "@jobert I've accidentally disclosed it. And i'd live to disclose it in limited(please hide all my comments)", 
            "markdown_message": "<p><a href=\"/jobert\">@jobert</a> I&#39;ve accidentally disclosed it. And i&#39;d live to disclose it in limited(please hide all my comments)</p>\n", 
            "type": "Activities::Comment", 
            "id": 3716151, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": false, 
    "reporter": {
        "username": "madhu_anand", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/madhu_anand", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/257/406/fff907b979a45e626f4bfd5b36ac0f97f9123264_small.jpeg?1542046199"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 62, 
        "name": "Cross-site Scripting (XSS) - Stored"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": 1737183.980285075, 
    "disclosed_at": "2018-11-27T12:27:05.976Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/449351", 
    "created_at": "2018-11-24T14:10:26.428Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hai,<br>\nI&#39;ve found a stored xss vulnerability via assets but unfortunately its been blocked by CSP.</p>\n\n<p>Steps to reproduce:-<br>\n1) Add a asset like &quot;&gt;&lt;img src=x onerror=prompt``&gt;<br>\n{<br><br>\n  i) Go to program --&gt; scope --&gt; Add asset --&gt; select &#39;Others&#39; and give &quot;&gt;&lt;img src=x onerror=prompt``&gt;<br>\n  ii) Check your console now.<br>\n}<br>\n2) Then, Go to the created program. (You can check with this <a title=\"https://hackerone.com/script_src_x_img_src_x_onerror\" href=\"https://hackerone.com/script_src_x_img_src_x_onerror\">https://hackerone.com/script_src_x_img_src_x_onerror</a>)<br>\n3) Click the created asset. [xss will be fired now(1)]<br>\n4) Then submit a report.<br>\n5) Whenever the asset is rendering, xss is firing actually(2).<br>\n6) Then, open the submitted report. (xss will be firing here too[3])<br>\n7) Then click &#39;edit&#39; in assets, (xss will be firing here too(4))</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Script can be executing for all.</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}