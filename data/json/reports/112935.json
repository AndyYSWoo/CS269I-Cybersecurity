{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-02-24T00:13:37.681Z", 
    "voters": [
        "akaash_pantherdefence", 
        "bl4kd43m0n", 
        "dyabla", 
        "varlyn", 
        "gsanskar"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 112935, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-02-23T23:37:23.784Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Unintended HTML inclusion as a result of https://hackerone.com/reports/110578", 
    "is_member_of_team?": null, 
    "vote_count": 5, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-03-24T23:37:24.239Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-01-26T20:07:25.134Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-26T20:07:25.134Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Additionally, still playing with this now in firefox to see if it rendered the html differently and it looks like the following ends up rendering a single quote with no closing single quote:\n\n    [test](http://www.torontowebsitedeveloper.com \"test\" ismap= script= \"\"\")\n\n<a title=\"'test&quot;\" ismap=\"script=\" \"\"&#39;=\"\" href=\"http://www.torontowebsitedeveloper.com\" rel=\"nofollow\" target=\"_blank\"><span>test</span><i class=\"icon-external-link\"></i></a>\n\nThe single quote comes right after the first double quote in the title.... If I understand the other report properly, this is still a vulnerability as the single quote is left hanging with no closing single quote. I don't think that &#39 mitigates that but admittedly am not 100% sure.", 
            "markdown_message": "<p>Additionally, still playing with this now in firefox to see if it rendered the html differently and it looks like the following ends up rendering a single quote with no closing single quote:</p>\n<pre class=\"highlight plaintext\"><code>[test](http://www.torontowebsitedeveloper.com &quot;test&quot; ismap= script= &quot;&quot;&quot;)\n</code></pre>\n<p>&lt;a title=&quot;&#39;test&amp;quot;&quot; ismap=&quot;script=&quot; &quot;&quot;&amp;#39;=&quot;&quot; href=&quot;http://www.torontowebsitedeveloper.com&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;test&lt;/span&gt;&lt;i class=&quot;icon-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;</p>\n\n<p>The single quote comes right after the first double quote in the title.... If I understand the other report properly, this is still a vulnerability as the single quote is left hanging with no closing single quote. I don&#39;t think that &#39; mitigates that but admittedly am not 100% sure.</p>\n", 
            "type": "Activities::Comment", 
            "id": 773038, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-26T22:34:39.078Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-26T22:34:39.078Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yes, nice catch, this seems to have slipped through the cracks so we will be rolling back while we investigate other solutions.", 
            "markdown_message": "<p>Yes, nice catch, this seems to have slipped through the cracks so we will be rolling back while we investigate other solutions.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 773203, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-27T00:05:20.819Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-27T00:05:20.819Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Great to hear I wasn't wasting your time.\n\nFor what it's worth, it seemed like the original implementation was close. I think you guys are using the redcarpet repo on github (https://github.com/vmg/redcarpet) -- that assumption is based on a previous disclosed report re: your implementation of markdown.\n\nWhen I was looking through that code for buffer overflow vulnerabilities, I noticed that the title rendering for links has a flag to denote when it is within a single or double quote (line 1105 of markdown.c). Is it better within that loop just to escape any quotes that are found which searching for the end of the title tag? The implementation I'm looking at enters the loop based on either a /' or a /\" -- if there is a flag to denote which was found, then you'd know what you are looking for to close off the title tag with and could escape the other...\n\nJust a thought, hope it helps in some way.", 
            "markdown_message": "<p>Great to hear I wasn&#39;t wasting your time.</p>\n\n<p>For what it&#39;s worth, it seemed like the original implementation was close. I think you guys are using the redcarpet repo on github (<a title=\"https://github.com/vmg/redcarpet\" href=\"/redirect?signature=8317e274d40eabfe6b6f4e78a4a33c1e8253180d&amp;url=https%3A%2F%2Fgithub.com%2Fvmg%2Fredcarpet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/vmg/redcarpet</span><i class=\"icon-external-link\"></i></a>) -- that assumption is based on a previous disclosed report re: your implementation of markdown.</p>\n\n<p>When I was looking through that code for buffer overflow vulnerabilities, I noticed that the title rendering for links has a flag to denote when it is within a single or double quote (line 1105 of markdown.c). Is it better within that loop just to escape any quotes that are found which searching for the end of the title tag? The implementation I&#39;m looking at enters the loop based on either a /&#39; or a /&quot; -- if there is a flag to denote which was found, then you&#39;d know what you are looking for to close off the title tag with and could escape the other...</p>\n\n<p>Just a thought, hope it helps in some way.</p>\n", 
            "type": "Activities::Comment", 
            "id": 773297, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-27T00:30:24.100Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-27T00:30:24.100Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yeah, it's possible we can modify this code in Redcarpet to escape the contents of the link `title` and then change the outer quotes back to double quotes. Then our original fix to #110578 should be fine. We'll consider this when continuing our investigation.\n\nAnyways, our breaking change has been rolled back. Can you verify the issue you've reported here is no longer an issue?\n\nThanks!", 
            "markdown_message": "<p>Yeah, it&#39;s possible we can modify this code in Redcarpet to escape the contents of the link <code>title</code> and then change the outer quotes back to double quotes. Then our original fix to <a href=\"/reports/110578\">#110578</a> should be fine. We&#39;ll consider this when continuing our investigation.</p>\n\n<p>Anyways, our breaking change has been rolled back. Can you verify the issue you&#39;ve reported here is no longer an issue?</p>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 773307, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-27T01:31:59.725Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-27T01:31:59.725Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yup, looks like the revert is good. Just to confirm, entering\n\n    [test](http://www.torontowebsitedeveloper.com \"test ismap=\"yes\"'')\n\n[test](http://www.torontowebsitedeveloper.com \"test ismap=\"yes\"'')\n\nResults in the following which looks to be the same as before [#110578](https://hackerone.com/reports/110578):\n\n    <a title=\"test ismap=&quot;yes&quot;'\" href=\"http://www.torontowebsitedeveloper.com\" rel=\"nofollow\" target=\"_blank\"><span>test</span><i class=\"icon-external-link\"></i></a>", 
            "markdown_message": "<p>Yup, looks like the revert is good. Just to confirm, entering</p>\n<pre class=\"highlight plaintext\"><code>[test](http://www.torontowebsitedeveloper.com &quot;test ismap=&quot;yes&quot;&#39;&#39;)\n</code></pre>\n<p><a title=\"test ismap=&quot;yes&quot;&#39;\" href=\"/redirect?signature=cdce387b0f7295b140c04f0ae14951415fddc8dc&amp;url=http%3A%2F%2Fwww.torontowebsitedeveloper.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>test</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Results in the following which looks to be the same as before <a href=\"https://hackerone.com/reports/110578\">#110578</a>:</p>\n<pre class=\"highlight plaintext\"><code>&lt;a title=&quot;test ismap=&amp;quot;yes&amp;quot;&#39;&quot; href=&quot;http://www.torontowebsitedeveloper.com&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;test&lt;/span&gt;&lt;i class=&quot;icon-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 773343, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-27T22:35:06.953Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-27T22:35:06.953Z", 
            "actor": {
                "username": "ebrynne", 
                "url": "/ebrynne", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/191/caa360ba5182e4fd7930e394d9fa654d468e6a20_medium.?1461015075"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @yaworsk,\n\nThanks for the confirmation! Unfortunately this means we're back to trying to figure out a new way to fix the issue from #110578, so I think we'll be keeping this bug open as we dig into that once more.\n\n\n\nEvan", 
            "markdown_message": "<p>Hey <a href=\"/yaworsk\">@yaworsk</a>,</p>\n\n<p>Thanks for the confirmation! Unfortunately this means we&#39;re back to trying to figure out a new way to fix the issue from <a href=\"/reports/110578\">#110578</a>, so I think we&#39;ll be keeping this bug open as we dig into that once more.</p>\n\n<p>Evan</p>\n", 
            "type": "Activities::Comment", 
            "id": 774562, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-28T00:22:10.602Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-28T00:22:10.602Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @ebrynne,\nNo worries, figured it meant a trip back to the drawing board. Happy to help out with any testing once you've got a solution. Hopefully it isn't too bad given the inner double quotes are being converted.", 
            "markdown_message": "<p>Hi <a href=\"/ebrynne\">@ebrynne</a>,<br>\nNo worries, figured it meant a trip back to the drawing board. Happy to help out with any testing once you&#39;ve got a solution. Hopefully it isn&#39;t too bad given the inner double quotes are being converted.</p>\n", 
            "type": "Activities::Comment", 
            "id": 774655, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-04T13:47:46.774Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-04T13:47:46.774Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @ebrynne / @andrewone,\nJust checking in to see if there is any update? I was going to submit another report to Hackerone but can't given I'm so new and my Signal is low. The new report isn't serious and I'm happy to summarize it here but I didn't want to confuse the two issues.\n\nThanks", 
            "markdown_message": "<p>Hi <a href=\"/ebrynne\">@ebrynne</a> / <a href=\"/andrewone\">@andrewone</a>,<br>\nJust checking in to see if there is any update? I was going to submit another report to Hackerone but can&#39;t given I&#39;m so new and my Signal is low. The new report isn&#39;t serious and I&#39;m happy to summarize it here but I didn&#39;t want to confuse the two issues.</p>\n\n<p>Thanks</p>\n", 
            "type": "Activities::Comment", 
            "id": 784609, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-10T01:15:06.433Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-10T01:15:06.433Z", 
            "actor": {
                "username": "ebrynne", 
                "url": "/ebrynne", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/191/caa360ba5182e4fd7930e394d9fa654d468e6a20_medium.?1461015075"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @yaworsk,\n\nSorry for the delay! I think this should be resolved in the next day or so, which hopefully will give you enough of a signal boost to submit whatever other vulnerabilities you've found.\n\nThanks for your patience! \n\n\nEvan", 
            "markdown_message": "<p>Hey <a href=\"/yaworsk\">@yaworsk</a>,</p>\n\n<p>Sorry for the delay! I think this should be resolved in the next day or so, which hopefully will give you enough of a signal boost to submit whatever other vulnerabilities you&#39;ve found.</p>\n\n<p>Thanks for your patience! </p>\n\n<p>Evan</p>\n", 
            "type": "Activities::Comment", 
            "id": 792369, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-10T13:42:06.013Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-10T13:42:06.013Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @ebrynne,\nno problem! I followed up with support@hackerone anyways. At a minimum, just looking forward to to the fix for a bit of validation to the old bruised ego.\n\nPete", 
            "markdown_message": "<p>Hi <a href=\"/ebrynne\">@ebrynne</a>,<br>\nno problem! I followed up with support@hackerone anyways. At a minimum, just looking forward to to the fix for a bit of validation to the old bruised ego.</p>\n\n<p>Pete</p>\n", 
            "type": "Activities::Comment", 
            "id": 792863, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-13T01:28:17.036Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-13T01:28:17.036Z", 
            "actor": {
                "username": "ebrynne", 
                "url": "/ebrynne", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/191/caa360ba5182e4fd7930e394d9fa654d468e6a20_medium.?1461015075"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @yaworsk,\n\nJust a quick update; it took me a little longer to get a fix that I was happy with, but hopefully this'll go out by Monday. \n\nThanks again for your patience!\n\n\nEvan", 
            "markdown_message": "<p>Hey <a href=\"/yaworsk\">@yaworsk</a>,</p>\n\n<p>Just a quick update; it took me a little longer to get a fix that I was happy with, but hopefully this&#39;ll go out by Monday. </p>\n\n<p>Thanks again for your patience!</p>\n\n<p>Evan</p>\n", 
            "type": "Activities::Comment", 
            "id": 796543, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-13T01:47:44.421Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-13T01:47:44.421Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "No worries, thanks for the update. Makes sense to take the time to get things right. Have a good weekend.", 
            "markdown_message": "<p>No worries, thanks for the update. Makes sense to take the time to get things right. Have a good weekend.</p>\n", 
            "type": "Activities::Comment", 
            "id": 796546, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-17T21:59:45.114Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-17T21:59:45.114Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @ebrynne, sorry to pester, just wondering if theres any update on timing?", 
            "markdown_message": "<p>Hey <a href=\"/ebrynne\">@ebrynne</a>, sorry to pester, just wondering if theres any update on timing?</p>\n", 
            "type": "Activities::Comment", 
            "id": 802129, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T02:25:29.590Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T02:25:29.590Z", 
            "actor": {
                "username": "ebrynne", 
                "url": "/ebrynne", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/191/caa360ba5182e4fd7930e394d9fa654d468e6a20_medium.?1461015075"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "@yaworsk,\n\nI'm happy to say that I just landed the fix for this. It should be deployed tomorrow and then we can verify that everything's working alright. \n\nThanks again for all your patience! \n\n\nEvan", 
            "markdown_message": "<p><a href=\"/yaworsk\">@yaworsk</a>,</p>\n\n<p>I&#39;m happy to say that I just landed the fix for this. It should be deployed tomorrow and then we can verify that everything&#39;s working alright. </p>\n\n<p>Thanks again for all your patience! </p>\n\n<p>Evan</p>\n", 
            "type": "Activities::Comment", 
            "id": 808291, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T02:26:32.899Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T02:26:32.899Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @ebrynne,\nthat's awesome, great to hear. Looking forward to testing. Thanks for the heads up.\n\nTalk soon,\npete", 
            "markdown_message": "<p>Hey <a href=\"/ebrynne\">@ebrynne</a>,<br>\nthat&#39;s awesome, great to hear. Looking forward to testing. Thanks for the heads up.</p>\n\n<p>Talk soon,<br>\npete</p>\n", 
            "type": "Activities::Comment", 
            "id": 808292, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T19:11:15.159Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T19:11:15.159Z", 
            "actor": {
                "username": "pei", 
                "url": "/pei", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/939/a55a962aa01949228bacd2fbcd6d889aded8b4fa_medium.png?1422923318"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hey @yaworsk - We've released the fix earlier today. Could you please verify it? ", 
            "markdown_message": "<p>Hey <a href=\"/yaworsk\">@yaworsk</a> - We&#39;ve released the fix earlier today. Could you please verify it? </p>\n", 
            "type": "Activities::Comment", 
            "id": 809177, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T19:39:09.528Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T19:51:29.222Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @pei, \nI was actually playing with it for the last while. I'm not entirely sure I see the fix, it looks like the single quote is still be rendered without encoding.\n\nI'm using the following string: \n````[test](http://www.torontowebsitedeveloper.com \"test ismap=\"yes\"'')````\n\nwhich creates: [test](http://www.torontowebsitedeveloper.com \"test ismap=\"yes\"'')\n\nHere is what I get from inspecting that link in the preview, using firefox, right click inspect element, right click edit as html:\n\n````<a title=\"test ismap=&quot;yes&quot;'\" href=\"http://www.torontowebsitedeveloper.com\" rel=\"nofollow\" target=\"_blank\"><span>test</span><i class=\"icon-external-link\"></i></a>````\n\nNotice the single quote. \n\nAlternatively, on this actual page, ctrl-a, right click view selection source and i see:\n\n````\n<p>which creates: <a title=\"test ismap=&quot;yes&quot;'\" href=\"http://www.torontowebsitedeveloper.com\" rel=\"nofollow\" target=\"_blank\"><span>test</span><i class=\"icon-external-link\"></i></a></p>\n````\n\nIf I look at the response from Burp Suite for the POST /preview call, it is encoded but looks like the JS is decoding the #39: \n\n````\n{\"preview_body\":\"\\u003cp\\u003e\\u003ca title=\\\"test ismap=\\u0026quot;yes\\u0026quot;\\u0026#39;\\\" href=\\\"http://www.torontowebsitedeveloper.com\\\" rel=\\\"nofollow\\\" target=\\\"_blank\\\"\\u003e\\u003cspan\\u003etest\\u003c/span\\u003e\\u003ci class=\\\"icon-external-link\\\"\\u003e\\u003c/i\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\"}\n````\n\nI also tried saving the comment and looking at it after on a test store/ticket but same result. Does all that make sense?", 
            "markdown_message": "<p>Hi <a href=\"/pei\">@pei</a>, <br>\nI was actually playing with it for the last while. I&#39;m not entirely sure I see the fix, it looks like the single quote is still be rendered without encoding.</p>\n\n<p>I&#39;m using the following string: <br>\n<code>[test](http://www.torontowebsitedeveloper.com &quot;test ismap=&quot;yes&quot;&#39;&#39;)</code></p>\n\n<p>which creates: <a title=\"test ismap=&quot;yes&quot;&#39;\" href=\"/redirect?signature=cdce387b0f7295b140c04f0ae14951415fddc8dc&amp;url=http%3A%2F%2Fwww.torontowebsitedeveloper.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>test</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Here is what I get from inspecting that link in the preview, using firefox, right click inspect element, right click edit as html:</p>\n\n<p><code>&lt;a title=&quot;test ismap=&amp;quot;yes&amp;quot;&#39;&quot; href=&quot;http://www.torontowebsitedeveloper.com&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;test&lt;/span&gt;&lt;i class=&quot;icon-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;</code></p>\n\n<p>Notice the single quote. </p>\n\n<p>Alternatively, on this actual page, ctrl-a, right click view selection source and i see:</p>\n<pre class=\"highlight plaintext\"><code>&lt;p&gt;which creates: &lt;a title=&quot;test ismap=&amp;quot;yes&amp;quot;&#39;&quot; href=&quot;http://www.torontowebsitedeveloper.com&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;test&lt;/span&gt;&lt;i class=&quot;icon-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;\n</code></pre>\n<p>If I look at the response from Burp Suite for the POST /preview call, it is encoded but looks like the JS is decoding the #39: </p>\n<pre class=\"highlight plaintext\"><code>{&quot;preview_body&quot;:&quot;\\u003cp\\u003e\\u003ca title=\\&quot;test ismap=\\u0026quot;yes\\u0026quot;\\u0026#39;\\&quot; href=\\&quot;http://www.torontowebsitedeveloper.com\\&quot; rel=\\&quot;nofollow\\&quot; target=\\&quot;_blank\\&quot;\\u003e\\u003cspan\\u003etest\\u003c/span\\u003e\\u003ci class=\\&quot;icon-external-link\\&quot;\\u003e\\u003c/i\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n&quot;}\n</code></pre>\n<p>I also tried saving the comment and looking at it after on a test store/ticket but same result. Does all that make sense?</p>\n", 
            "type": "Activities::Comment", 
            "id": 809234, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T21:28:33.667Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T21:28:33.667Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Also, was still playing around. If i just enter double and single quotes, I don't see them escaped in the HTML the same way < > are.\n\nSo entering:\n' \" ' <>\n\ngives me the following when I highlight it and inspect source:\n````<p>So entering:<br>\n' \" ' &lt;&gt;</p>````\n\nI'm not 100% confident in how I'm examining the source HTML given it is being rendered by JS but based on a quick google search, the way to do it with firefox is highlighting the text, right clicking and viewing the selection source.\n\nAlso, here's the burp preview response if it helps:\n````{\"preview_body\":\"\\u003cp\\u003eAlso, was still playing around. If i just enter double and single quotes, I don\\u0026#39;t see them escaped in the HTML the same way \\u0026lt; \\u0026gt; are.\\u003c/p\\u003e\\n\\n\\u003cp\\u003eSo entering:\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026lt;\\u0026gt;\\u003c/p\\u003e\\n\\n\\u003cp\\u003ereturns:\\u003cbr\\u003e\\n\\u003ccode\\u003e\\u0026lt;p\\u0026gt;So entering:\\u0026lt;br\\u0026gt;\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026amp;lt;\\u0026amp;gt;\\u0026lt;/p\\u0026gt;\\u003c/code\\u003e\\u003c/p\\u003e\\n\"````\n\nThoughts?", 
            "markdown_message": "<p>Also, was still playing around. If i just enter double and single quotes, I don&#39;t see them escaped in the HTML the same way &lt; &gt; are.</p>\n\n<p>So entering:<br>\n&#39; &quot; &#39; &lt;&gt;</p>\n\n<p>gives me the following when I highlight it and inspect source:<br>\n<code>&lt;p&gt;So entering:&lt;br&gt;<br>\n&#39; &quot; &#39; &amp;lt;&amp;gt;&lt;/p&gt;</code></p>\n\n<p>I&#39;m not 100% confident in how I&#39;m examining the source HTML given it is being rendered by JS but based on a quick google search, the way to do it with firefox is highlighting the text, right clicking and viewing the selection source.</p>\n\n<p>Also, here&#39;s the burp preview response if it helps:<br>\n<code>{&quot;preview_body&quot;:&quot;\\u003cp\\u003eAlso, was still playing around. If i just enter double and single quotes, I don\\u0026#39;t see them escaped in the HTML the same way \\u0026lt; \\u0026gt; are.\\u003c/p\\u003e\\n\\n\\u003cp\\u003eSo entering:\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026lt;\\u0026gt;\\u003c/p\\u003e\\n\\n\\u003cp\\u003ereturns:\\u003cbr\\u003e\\n\\u003ccode\\u003e\\u0026lt;p\\u0026gt;So entering:\\u0026lt;br\\u0026gt;\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026amp;lt;\\u0026amp;gt;\\u0026lt;/p\\u0026gt;\\u003c/code\\u003e\\u003c/p\\u003e\\n&quot;</code></p>\n\n<p>Thoughts?</p>\n", 
            "type": "Activities::Comment", 
            "id": 809375, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T22:01:31.403Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T22:02:26.138Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @yaworsk,\n\nI've verified that the fix is good, so there is no issue here anymore.\n\nIf you read the summary of #110578, it explains that the vulnerability is in the way Markdown is displayed. The issue that existed before was that quotes weren't escaped *at the time of HTML rendering*, so they could potentially be used in text content to break out of the HTML tag. React usually defends against this issue for us, except when we bypass this with `dangerouslySetInnerHTML`, which we use only for our Markdown rendering (since we need to generate our own rich HTML).\n\nSo to verify the fix, we only care about the `markdown_message` portion of the report JSON, which now looks like this:\n```\n\"markdown_message\":\"\\u003cp\\u003eAlso, was still playing around. If i just enter double and single quotes, I don\\u0026#39;t see them escaped in the HTML the same way \\u0026lt; \\u0026gt; are.\\u003c/p\\u003e\\n\\n\\u003cp\\u003eSo entering:\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026lt;\\u0026gt;\\u003c/p\\u003e\\n\\n\\u003cp\\u003egives me\n```\nHere you can see that the single quotes will remain as `&#39;` after the Markdown is processed, which means it is now safe when passed into `dangerouslySetInnerHTML`.", 
            "markdown_message": "<p>Hi <a href=\"/yaworsk\">@yaworsk</a>,</p>\n\n<p>I&#39;ve verified that the fix is good, so there is no issue here anymore.</p>\n\n<p>If you read the summary of <a href=\"/reports/110578\">#110578</a>, it explains that the vulnerability is in the way Markdown is displayed. The issue that existed before was that quotes weren&#39;t escaped <em>at the time of HTML rendering</em>, so they could potentially be used in text content to break out of the HTML tag. React usually defends against this issue for us, except when we bypass this with <code>dangerouslySetInnerHTML</code>, which we use only for our Markdown rendering (since we need to generate our own rich HTML).</p>\n\n<p>So to verify the fix, we only care about the <code>markdown_message</code> portion of the report JSON, which now looks like this:</p>\n<pre class=\"highlight plaintext\"><code>&quot;markdown_message&quot;:&quot;\\u003cp\\u003eAlso, was still playing around. If i just enter double and single quotes, I don\\u0026#39;t see them escaped in the HTML the same way \\u0026lt; \\u0026gt; are.\\u003c/p\\u003e\\n\\n\\u003cp\\u003eSo entering:\\u003cbr\\u003e\\n\\u0026#39; \\u0026quot; \\u0026#39; \\u0026lt;\\u0026gt;\\u003c/p\\u003e\\n\\n\\u003cp\\u003egives me\n</code></pre>\n<p>Here you can see that the single quotes will remain as <code>&amp;#39;</code> after the Markdown is processed, which means it is now safe when passed into <code>dangerouslySetInnerHTML</code>.</p>\n", 
            "type": "Activities::Comment", 
            "id": 809435, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T22:31:30.195Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T22:31:30.195Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Hi @andrewone,\nok. I probably misunderstood #110578 - in short, what I thought was the actual rendering of the single ' could lead to a situation where a meta tag was injected at the beginning of the page also with a single '. As a result, these two could be combined by the browser to submit the full html between both as a parameter to a malicious site. I took the concept from filedescriptor's discussion here: http://blog.innerht.ml/page/2/ - three quarters down he discusses the twitter case study, also disclosed on hackerone.\n\nSorry for the confusion - didn't realize it was just about the markdown_message portion of the json.\n\npete", 
            "markdown_message": "<p>Hi <a href=\"/andrewone\">@andrewone</a>,<br>\nok. I probably misunderstood <a href=\"/reports/110578\">#110578</a> - in short, what I thought was the actual rendering of the single &#39; could lead to a situation where a meta tag was injected at the beginning of the page also with a single &#39;. As a result, these two could be combined by the browser to submit the full html between both as a parameter to a malicious site. I took the concept from filedescriptor&#39;s discussion here: <a title=\"http://blog.innerht.ml/page/2/\" href=\"/redirect?signature=34085d5d3194ded5c934b75f81c8eb5b74cea990&amp;url=http%3A%2F%2Fblog.innerht.ml%2Fpage%2F2%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://blog.innerht.ml/page/2/</span><i class=\"icon-external-link\"></i></a> - three quarters down he discusses the twitter case study, also disclosed on hackerone.</p>\n\n<p>Sorry for the confusion - didn&#39;t realize it was just about the markdown_message portion of the json.</p>\n\n<p>pete</p>\n", 
            "type": "Activities::Comment", 
            "id": 809469, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T22:44:35.032Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T22:44:35.032Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Yes, it's easy to get confused here. The `<p>{{injection point}}</p>` described by filedescriptor isn't possible in our case thanks to React, but it *was* possible in the Markdown scenario where React's built-in security is bypassed.", 
            "markdown_message": "<p>Yes, it&#39;s easy to get confused here. The <code>&lt;p&gt;{{injection point}}&lt;/p&gt;</code> described by filedescriptor isn&#39;t possible in our case thanks to React, but it <em>was</em> possible in the Markdown scenario where React&#39;s built-in security is bypassed.</p>\n", 
            "type": "Activities::Comment", 
            "id": 809522, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T22:58:17.838Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T22:58:17.838Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Ahhh, gotcha. Thanks for clarifying.", 
            "markdown_message": "<p>Ahhh, gotcha. Thanks for clarifying.</p>\n", 
            "type": "Activities::Comment", 
            "id": 809548, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "yaworsk", 
                "url": "/yaworsk"
            }, 
            "created_at": "2016-02-23T23:14:28.593Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T23:14:28.593Z", 
            "actor": {
                "username": "andrewone", 
                "url": "/andrewone", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/236/14209407e303acb7aa505e80cb37f4b45da80100_medium.png?1418422182"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Both the regression and the original issue have been addressed.", 
            "markdown_message": "<p>Both the regression and the original issue have been addressed.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 809568, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T23:36:58.129Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T23:36:58.129Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks again for the report. We really do appreciate the assistance here and the creativity in poking at our markdown renderer.\n\nI do feel it would be worthwhile to open an issue against redcarpet for the single/double quote issue you mentioned above (affecting https://github.com/vmg/redcarpet/blob/4e640dd471c08df350373a79327302f1add19d00/ext/redcarpet/markdown.c#L1104-L1130). I agree it would be better if it tracked which type of quote was used.\n\nPlease continue to poke at us and at redcarpet. I'm sure there's still some other issues lurking, just waiting to be discovered, and we look forward to any reports for things you might find. Happy hacking!", 
            "markdown_message": "<p>Thanks again for the report. We really do appreciate the assistance here and the creativity in poking at our markdown renderer.</p>\n\n<p>I do feel it would be worthwhile to open an issue against redcarpet for the single/double quote issue you mentioned above (affecting <a title=\"https://github.com/vmg/redcarpet/blob/4e640dd471c08df350373a79327302f1add19d00/ext/redcarpet/markdown.c#L1104-L1130\" href=\"/redirect?signature=c3882ec4bc450dc2a58a4b6604c8722c6c86fcd9&amp;url=https%3A%2F%2Fgithub.com%2Fvmg%2Fredcarpet%2Fblob%2F4e640dd471c08df350373a79327302f1add19d00%2Fext%2Fredcarpet%2Fmarkdown.c%23L1104-L1130\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/vmg/redcarpet/blob/4e640dd471c08df350373a79327302f1add19d00/ext/redcarpet/markdown.c#L1104-L1130</span><i class=\"icon-external-link\"></i></a>). I agree it would be better if it tracked which type of quote was used.</p>\n\n<p>Please continue to poke at us and at redcarpet. I&#39;m sure there&#39;s still some other issues lurking, just waiting to be discovered, and we look forward to any reports for things you might find. Happy hacking!</p>\n", 
            "type": "Activities::Comment", 
            "id": 809604, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-02-23T23:37:11.908Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T23:37:11.908Z", 
            "actor": {
                "url": "/security", 
                "profile": {
                    "name": "HackerOne"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
                }
            }, 
            "team_handle": "security", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "yaworsk", 
                "url": "/yaworsk"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 809605, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-23T23:37:23.822Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-23T23:37:23.822Z", 
            "actor": {
                "username": "reed", 
                "url": "/reed", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/132/5781ea1c43c5c7680dd145226b86348a8d6ed085_medium.jpg?1394062279"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 809606, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-24T00:13:28.247Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-24T00:13:28.247Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "Thanks for that feedback @reed, will do on both counts. And thanks for the bounty!!", 
            "markdown_message": "<p>Thanks for that feedback <a href=\"/reed\">@reed</a>, will do on both counts. And thanks for the bounty!!</p>\n", 
            "type": "Activities::Comment", 
            "id": 809662, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-24T00:13:37.717Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-24T00:13:37.717Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 809665, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-24T00:13:38.195Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-24T00:13:38.195Z", 
            "actor": {
                "username": "yaworsk", 
                "url": "/yaworsk", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/046/435/ea148430086188805db01f48c6f249355bae3107_medium.jpg?1457200479"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "security", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 809666, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "yaworsk", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/yaworsk", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/046/435/e997ec7fe37d3a7aabef37462524d2b2e0ac798c_small.jpg?1457200479"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -85274345.77320126, 
    "disclosed_at": "2016-02-24T00:13:38.166Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/112935", 
    "created_at": "2016-01-26T19:30:00.753Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi,<br>\nI was just reading <a title=\"https://hackerone.com/reports/110578\" href=\"https://hackerone.com/reports/110578\">https://hackerone.com/reports/110578</a> and testing out the changes. I had previously noticed that the editor would take something like:</p>\n<pre class=\"highlight plaintext\"><code>[test](http://www.torontowebsitedeveloper.com &quot;test ismap=&quot;yes&quot;&#39;)\n</code></pre>\n<p>and turn it into :</p>\n<pre class=\"highlight plaintext\"><code>&lt;a title=&quot;test ismap=&quot;yes&quot;&#39; href=&quot;http://www.torontowebsitedeveloper.com&quot;&gt;test&lt;/a&gt;\n</code></pre>\n<p>In other words, the code would recursively look at what should be the title string and use the first single or double quote, matching it to the last single or double quote, including all others within it as the actual &quot; or &#39; as was noted in the report (I was actually looking at the git repo to try and see if there was any vulnerability in the recursive flow from an overflow perspective but couldn&#39;t find one...).</p>\n\n<p>Anyways, I noticed after the report, with your change, I can get some arbitrary html included in anchor tags now. Admittedly, I&#39;m just starting out with all of this so I don&#39;t know yet how/if this could be exploited but now when I add the above</p>\n<pre class=\"highlight plaintext\"><code>[test](http://www.torontowebsitedeveloper.com &quot;test ismap=&quot;alert xss&quot; yyy=&quot;test&quot;&quot;)\n</code></pre>\n<p>It gets turned into:</p>\n<pre class=\"highlight plaintext\"><code>&lt;a title=&quot;&#39;test&quot; ismap=&quot;alert xss&quot; yyy=&quot;test&quot; &amp;#39; href=&quot;http://www.torontowebsitedeveloper.com&quot;&gt;test&lt;/a&gt;\n</code></pre>\n<p>Two things to I would flag:</p>\n\n<ol>\n<li>the single quote at the beginning of what should be title=&quot;test&quot; and </li>\n<li>I was able to add ismap= and yyy= as html attributes</li>\n</ol>\n\n<p>This reminded me of the yahoo mail xss injection recently disclosed so I thought I&#39;d make you aware. If you don&#39;t agree it&#39;s a vulnerability, please let me close the issue.</p>\n\n<p>Thanks!</p>\n", 
    "vulnerability_information": "Hi,\nI was just reading https://hackerone.com/reports/110578 and testing out the changes. I had previously noticed that the editor would take something like:\n\n    [test](http://www.torontowebsitedeveloper.com \"test ismap=\"yes\"')\n\nand turn it into :\n\n    <a title=\"test ismap=\"yes\"' href=\"http://www.torontowebsitedeveloper.com\">test</a>\n\nIn other words, the code would recursively look at what should be the title string and use the first single or double quote, matching it to the last single or double quote, including all others within it as the actual \" or ' as was noted in the report (I was actually looking at the git repo to try and see if there was any vulnerability in the recursive flow from an overflow perspective but couldn't find one...).\n\nAnyways, I noticed after the report, with your change, I can get some arbitrary html included in anchor tags now. Admittedly, I'm just starting out with all of this so I don't know yet how/if this could be exploited but now when I add the above\n\n    [test](http://www.torontowebsitedeveloper.com \"test ismap=\"alert xss\" yyy=\"test\"\")\n\nIt gets turned into:\n\n    <a title=\"'test\" ismap=\"alert xss\" yyy=\"test\" &#39; href=\"http://www.torontowebsitedeveloper.com\">test</a>\n\nTwo things to I would flag:\n\n1. the single quote at the beginning of what should be title=\"test\" and \n2. I was able to add ismap= and yyy= as html attributes\n\nThis reminded me of the yahoo mail xss injection recently disclosed so I thought I'd make you aware. If you don't agree it's a vulnerability, please let me close the issue.\n\nThanks!\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://hackerone.com", 
            "about": "Vulnerability disclosure should be safe, transparent, and rewarding.", 
            "twitter_handle": "Hacker0x01", 
            "name": "HackerOne"
        }, 
        "handle": "security", 
        "url": "https://hackerone.com/security", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/013/68fea1fe00dc833f4109e015738af4b374727e56_small.png?1445331713", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/013/28af2ada2cc00aa9427504fc5a14f587362df84b_medium.png?1445331713"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 13, 
        "default_currency": "usd"
    }, 
    "is_published": false
}