{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-03-28T13:55:42.125Z", 
    "voters": [
        "asanso", 
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 113288, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-03-27T23:31:01.836Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "OpenSSL Key Recovery Attack on DH small subgroups (CVE-2016-0701) ", 
    "is_member_of_team?": null, 
    "vote_count": 2, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 1566, 
            "content": "Severity: High\n\nHistorically OpenSSL usually only ever generated DH parameters based on \"safe\"\nprimes. More recently (in version 1.0.2) support was provided for generating\nX9.42 style parameter files such as those required for RFC 5114 support. The\nprimes used in such files may not be \"safe\". Where an application is using DH\nconfigured with parameters based on primes that are not \"safe\" then an attacker\ncould use this fact to find a peer's private DH exponent. This attack requires\nthat the attacker complete multiple handshakes in which the peer uses the same\nprivate DH exponent. For example this could be used to discover a TLS server's\nprivate DH exponent if it's reusing the private DH exponent or it's using a\nstatic DH ciphersuite.\n\nOpenSSL provides the option SSL_OP_SINGLE_DH_USE for ephemeral DH (DHE) in TLS.\nIt is not on by default. If the option is not set then the server reuses the\nsame private DH exponent for the life of the server process and would be\nvulnerable to this attack. It is believed that many popular applications do set\nthis option and would therefore not be at risk.\n\nOpenSSL before 1.0.2f will reuse the key if:\n- SSL_CTX_set_tmp_dh()/SSL_set_tmp_dh() is used and SSL_OP_SINGLE_DH_USE is not\n  set.\n- SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used, and both the\n  parameters and the key are set and SSL_OP_SINGLE_DH_USE is not used. This is\n  an undocumted feature and parameter files don't contain the key.\n- Static DH ciphersuites are used. The key is part of the certificate and\n  so it will always reuse it. This is only supported in 1.0.2.\n\nIt will not reuse the key for DHE ciphers suites if:\n- SSL_OP_SINGLE_DH_USE is set\n- SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used and the\n  callback does not provide the key, only the parameters. The callback is\n  almost always used like this.\n\nNon-safe primes are generated by OpenSSL when using:\n- genpkey with the dh_rfc5114 option. This will write an X9.42 style file\n  including the prime-order subgroup size \"q\". This is supported since the 1.0.2\n  version. Older versions can't read files generated in this way.\n- dhparam with the -dsaparam option. This has always been documented as\n  requiring the single use.\n\nThe fix for this issue adds an additional check where a \"q\" parameter is\navailable (as is the case in X9.42 based parameters). This detects the\nonly known attack, and is the only possible defense for static DH ciphersuites.\nThis could have some performance impact.\n\nAdditionally the SSL_OP_SINGLE_DH_USE option has been switched on by default\nand cannot be disabled. This could have some performance impact.\n\nThis issue affects OpenSSL version 1.0.2.\n\nOpenSSL 1.0.2 users should upgrade to 1.0.2f\n\nOpenSSL 1.0.1 is not affected by this CVE because it does not support X9.42\nbased parameters. It is possible to generate parameters using non \"safe\" primes,\nbut this option has always been documented as requiring single use and is not\nthe default or believed to be common. However, as a precaution, the\nSSL_OP_SINGLE_DH_USE change has also been backported to 1.0.1r.\n\nThis issue was reported to OpenSSL on 12 January 2016 by Antonio Sanso (Adobe).\nThe fix was developed by Matt Caswell of the OpenSSL development team\n(incorporating some work originally written by Stephen Henson of the OpenSSL\ncore team).", 
            "content_html": "<p>Severity: High</p>\n\n<p>Historically OpenSSL usually only ever generated DH parameters based on &quot;safe&quot;<br>\nprimes. More recently (in version 1.0.2) support was provided for generating<br>\nX9.42 style parameter files such as those required for RFC 5114 support. The<br>\nprimes used in such files may not be &quot;safe&quot;. Where an application is using DH<br>\nconfigured with parameters based on primes that are not &quot;safe&quot; then an attacker<br>\ncould use this fact to find a peer&#39;s private DH exponent. This attack requires<br>\nthat the attacker complete multiple handshakes in which the peer uses the same<br>\nprivate DH exponent. For example this could be used to discover a TLS server&#39;s<br>\nprivate DH exponent if it&#39;s reusing the private DH exponent or it&#39;s using a<br>\nstatic DH ciphersuite.</p>\n\n<p>OpenSSL provides the option SSL_OP_SINGLE_DH_USE for ephemeral DH (DHE) in TLS.<br>\nIt is not on by default. If the option is not set then the server reuses the<br>\nsame private DH exponent for the life of the server process and would be<br>\nvulnerable to this attack. It is believed that many popular applications do set<br>\nthis option and would therefore not be at risk.</p>\n\n<p>OpenSSL before 1.0.2f will reuse the key if:</p>\n\n<ul>\n<li>SSL_CTX_set_tmp_dh()/SSL_set_tmp_dh() is used and SSL_OP_SINGLE_DH_USE is not\nset.</li>\n<li>SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used, and both the\nparameters and the key are set and SSL_OP_SINGLE_DH_USE is not used. This is\nan undocumted feature and parameter files don&#39;t contain the key.</li>\n<li>Static DH ciphersuites are used. The key is part of the certificate and\nso it will always reuse it. This is only supported in 1.0.2.</li>\n</ul>\n\n<p>It will not reuse the key for DHE ciphers suites if:</p>\n\n<ul>\n<li>SSL_OP_SINGLE_DH_USE is set</li>\n<li>SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used and the\ncallback does not provide the key, only the parameters. The callback is\nalmost always used like this.</li>\n</ul>\n\n<p>Non-safe primes are generated by OpenSSL when using:</p>\n\n<ul>\n<li>genpkey with the dh_rfc5114 option. This will write an X9.42 style file\nincluding the prime-order subgroup size &quot;q&quot;. This is supported since the 1.0.2\nversion. Older versions can&#39;t read files generated in this way.</li>\n<li>dhparam with the -dsaparam option. This has always been documented as\nrequiring the single use.</li>\n</ul>\n\n<p>The fix for this issue adds an additional check where a &quot;q&quot; parameter is<br>\navailable (as is the case in X9.42 based parameters). This detects the<br>\nonly known attack, and is the only possible defense for static DH ciphersuites.<br>\nThis could have some performance impact.</p>\n\n<p>Additionally the SSL_OP_SINGLE_DH_USE option has been switched on by default<br>\nand cannot be disabled. This could have some performance impact.</p>\n\n<p>This issue affects OpenSSL version 1.0.2.</p>\n\n<p>OpenSSL 1.0.2 users should upgrade to 1.0.2f</p>\n\n<p>OpenSSL 1.0.1 is not affected by this CVE because it does not support X9.42<br>\nbased parameters. It is possible to generate parameters using non &quot;safe&quot; primes,<br>\nbut this option has always been documented as requiring single use and is not<br>\nthe default or believed to be common. However, as a precaution, the<br>\nSSL_OP_SINGLE_DH_USE change has also been backported to 1.0.1r.</p>\n\n<p>This issue was reported to OpenSSL on 12 January 2016 by Antonio Sanso (Adobe).<br>\nThe fix was developed by Matt Caswell of the OpenSSL development team<br>\n(incorporating some work originally written by Stephen Henson of the OpenSSL<br>\ncore team).</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-04-26T23:31:08.079Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-03-27T23:30:48.249Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-27T23:30:48.249Z", 
            "actor": {
                "url": "/ibb-openssl", 
                "profile": {
                    "name": "OpenSSL (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/024/e7fbd40dac4117a139413866b5ecda76d66c8346_medium.png?1384251609"
                }
            }, 
            "team_handle": "ibb-openssl", 
            "bounty_amount": "2500.0", 
            "collaborator": {
                "username": "asanso", 
                "url": "/asanso"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 873604, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "asanso", 
                "url": "/asanso"
            }, 
            "created_at": "2016-03-27T23:30:55.219Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-27T23:30:55.219Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-openssl", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 873605, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-27T23:31:01.859Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-27T23:31:01.859Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-openssl", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 873606, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T13:55:42.156Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T13:55:42.156Z", 
            "actor": {
                "username": "asanso", 
                "url": "/asanso", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/452/224abbd8a9f5764e18ea7350b0c3fd162a8813ba_medium.jpg?1428347811"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-openssl", 
            "message": "Thanks @arice ", 
            "markdown_message": "<p>Thanks <a href=\"/arice\">@arice</a> </p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 874353, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-28T13:55:42.350Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-28T13:55:42.350Z", 
            "actor": {
                "username": "asanso", 
                "url": "/asanso", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/005/452/224abbd8a9f5764e18ea7350b0c3fd162a8813ba_medium.jpg?1428347811"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-openssl", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 874354, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "asanso", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/asanso", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/005/452/516273166b4bcf1d1a7a2148d788bb0c3156365a_small.jpg?1428347811"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 32, 
        "name": "Cryptographic Issues - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -82423484.21311276, 
    "disclosed_at": "2016-03-28T13:55:42.327Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/113288", 
    "created_at": "2016-01-28T16:56:21.321Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Full write up: <a title=\"http://intothesymmetry.blogspot.ch/2016/01/openssl-key-recovery-attack-on-dh-small.html\" href=\"/redirect?signature=214d80139390c3575543399b66b8185b59c88bcc&amp;url=http%3A%2F%2Fintothesymmetry.blogspot.ch%2F2016%2F01%2Fopenssl-key-recovery-attack-on-dh-small.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://intothesymmetry.blogspot.ch/2016/01/openssl-key-recovery-attack-on-dh-small.html</span><i class=\"icon-external-link\"></i></a></p>\n\n<h1 id=\"dh-small-subgroups-cve-2016-0701\">DH small subgroups (CVE-2016-0701)</h1>\n\n<p>Severity: High</p>\n\n<p>Historically OpenSSL usually only ever generated DH parameters based on &quot;safe&quot;<br>\nprimes. More recently (in version 1.0.2) support was provided for generating<br>\nX9.42 style parameter files such as those required for RFC 5114 support. The<br>\nprimes used in such files may not be &quot;safe&quot;. Where an application is using DH<br>\nconfigured with parameters based on primes that are not &quot;safe&quot; then an attacker<br>\ncould use this fact to find a peer&#39;s private DH exponent. This attack requires<br>\nthat the attacker complete multiple handshakes in which the peer uses the same<br>\nprivate DH exponent. For example this could be used to discover a TLS server&#39;s<br>\nprivate DH exponent if it&#39;s reusing the private DH exponent or it&#39;s using a<br>\nstatic DH ciphersuite.</p>\n\n<p>OpenSSL provides the option SSL_OP_SINGLE_DH_USE for ephemeral DH (DHE) in TLS.<br>\nIt is not on by default. If the option is not set then the server reuses the<br>\nsame private DH exponent for the life of the server process and would be<br>\nvulnerable to this attack. It is believed that many popular applications do set<br>\nthis option and would therefore not be at risk.</p>\n\n<p>OpenSSL before 1.0.2f will reuse the key if:</p>\n\n<ul>\n<li>- SSL_CTX_set_tmp_dh()/SSL_set_tmp_dh() is used and SSL_OP_SINGLE_DH_USE is not\nset.</li>\n<li>- SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used, and both the\nparameters and the key are set and SSL_OP_SINGLE_DH_USE is not used. This is\nan undocumted feature and parameter files don&#39;t contain the key.</li>\n<li>- Static DH ciphersuites are used. The key is part of the certificate and\nso it will always reuse it. This is only supported in 1.0.2.</li>\n</ul>\n\n<p>It will not reuse the key for DHE ciphers suites if:</p>\n\n<ul>\n<li>- SSL_OP_SINGLE_DH_USE is set</li>\n<li>- SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used and the\ncallback does not provide the key, only the parameters. The callback is\nalmost always used like this.</li>\n</ul>\n\n<p>Non-safe primes are generated by OpenSSL when using:</p>\n\n<ul>\n<li>- genpkey with the dh_rfc5114 option. This will write an X9.42 style file\nincluding the prime-order subgroup size &quot;q&quot;. This is supported since the 1.0.2\nversion. Older versions can&#39;t read files generated in this way.</li>\n<li>- dhparam with the -dsaparam option. This has always been documented as\nrequiring the single use.</li>\n</ul>\n\n<p>The fix for this issue adds an additional check where a &quot;q&quot; parameter is<br>\navailable (as is the case in X9.42 based parameters). This detects the<br>\nonly known attack, and is the only possible defense for static DH ciphersuites.<br>\nThis could have some performance impact.</p>\n\n<p>Additionally the SSL_OP_SINGLE_DH_USE option has been switched on by default<br>\nand cannot be disabled. This could have some performance impact.</p>\n\n<p>This issue affects OpenSSL version 1.0.2.</p>\n\n<p>OpenSSL 1.0.2 users should upgrade to 1.0.2f</p>\n\n<p>OpenSSL 1.0.1 is not affected by this CVE because it does not support X9.42<br>\nbased parameters. It is possible to generate parameters using non &quot;safe&quot; primes,<br>\nbut this option has always been documented as requiring single use and is not<br>\nthe default or believed to be common. However, as a precaution, the<br>\nSSL_OP_SINGLE_DH_USE change has also been backported to 1.0.1r.</p>\n\n<p>This issue was reported to OpenSSL on 12 January 2016 by Antonio Sanso (Adobe).<br>\nThe fix was developed by Matt Caswell of the OpenSSL development team<br>\n(incorporating some work originally written by Stephen Henson of the OpenSSL</p>\n", 
    "vulnerability_information": "Full write up: http://intothesymmetry.blogspot.ch/2016/01/openssl-key-recovery-attack-on-dh-small.html\n\n\nDH small subgroups (CVE-2016-0701)\n==================================\n\nSeverity: High\n\nHistorically OpenSSL usually only ever generated DH parameters based on \"safe\"\nprimes. More recently (in version 1.0.2) support was provided for generating\nX9.42 style parameter files such as those required for RFC 5114 support. The\nprimes used in such files may not be \"safe\". Where an application is using DH\nconfigured with parameters based on primes that are not \"safe\" then an attacker\ncould use this fact to find a peer's private DH exponent. This attack requires\nthat the attacker complete multiple handshakes in which the peer uses the same\nprivate DH exponent. For example this could be used to discover a TLS server's\nprivate DH exponent if it's reusing the private DH exponent or it's using a\nstatic DH ciphersuite.\n\nOpenSSL provides the option SSL_OP_SINGLE_DH_USE for ephemeral DH (DHE) in TLS.\nIt is not on by default. If the option is not set then the server reuses the\nsame private DH exponent for the life of the server process and would be\nvulnerable to this attack. It is believed that many popular applications do set\nthis option and would therefore not be at risk.\n\nOpenSSL before 1.0.2f will reuse the key if:\n- - SSL_CTX_set_tmp_dh()/SSL_set_tmp_dh() is used and SSL_OP_SINGLE_DH_USE is not\n  set.\n- - SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used, and both the\n  parameters and the key are set and SSL_OP_SINGLE_DH_USE is not used. This is\n  an undocumted feature and parameter files don't contain the key.\n- - Static DH ciphersuites are used. The key is part of the certificate and\n  so it will always reuse it. This is only supported in 1.0.2.\n\nIt will not reuse the key for DHE ciphers suites if:\n- - SSL_OP_SINGLE_DH_USE is set\n- - SSL_CTX_set_tmp_dh_callback()/SSL_set_tmp_dh_callback() is used and the\n  callback does not provide the key, only the parameters. The callback is\n  almost always used like this.\n\nNon-safe primes are generated by OpenSSL when using:\n- - genpkey with the dh_rfc5114 option. This will write an X9.42 style file\n  including the prime-order subgroup size \"q\". This is supported since the 1.0.2\n  version. Older versions can't read files generated in this way.\n- - dhparam with the -dsaparam option. This has always been documented as\n  requiring the single use.\n\nThe fix for this issue adds an additional check where a \"q\" parameter is\navailable (as is the case in X9.42 based parameters). This detects the\nonly known attack, and is the only possible defense for static DH ciphersuites.\nThis could have some performance impact.\n\nAdditionally the SSL_OP_SINGLE_DH_USE option has been switched on by default\nand cannot be disabled. This could have some performance impact.\n\nThis issue affects OpenSSL version 1.0.2.\n\nOpenSSL 1.0.2 users should upgrade to 1.0.2f\n\nOpenSSL 1.0.1 is not affected by this CVE because it does not support X9.42\nbased parameters. It is possible to generate parameters using non \"safe\" primes,\nbut this option has always been documented as requiring single use and is not\nthe default or believed to be common. However, as a precaution, the\nSSL_OP_SINGLE_DH_USE change has also been backported to 1.0.1r.\n\nThis issue was reported to OpenSSL on 12 January 2016 by Antonio Sanso (Adobe).\nThe fix was developed by Matt Caswell of the OpenSSL development team\n(incorporating some work originally written by Stephen Henson of the OpenSSL", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.openssl.org", 
            "about": "", 
            "twitter_handle": "", 
            "name": "OpenSSL (IBB)"
        }, 
        "handle": "ibb-openssl", 
        "url": "https://hackerone.com/ibb-openssl", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/024/75262df009f3ef03cea184defe7c7b10a728f58a_small.png?1384251609", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/024/e7fbd40dac4117a139413866b5ecda76d66c8346_medium.png?1384251609"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 24, 
        "default_currency": "usd"
    }, 
    "is_published": false
}