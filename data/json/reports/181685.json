{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-12-17T01:03:44.485Z", 
    "voters": [
        "eveeez", 
        "mpz", 
        "spetr0x", 
        "janhacker", 
        "elakrimi", 
        "hackerjuan", 
        "pr0x_r00t3r"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "10000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 181685, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-12-16T19:47:51.689Z", 
    "vulnerability_information": "Heya!\n\nIt's possible to segfault mruby through mruby-engine with the following snippet of code:\n\n    Range.remove_method(:initialize_copy)\n    (1..2).dup.to_s\n\nThis can be triggered through mruby-engine like this:\n\n    MRubyEngine.new(512*1024, 1000, 1000).sandbox_eval(\"/tmp\", %{\n      Range.remove_method(:initialize_copy)\n      (1..2).dup.to_s\n    })\n\nThe `dup` and `clone` methods allocate a new object and then call `initialize_copy` on the new object with the old object as an argument to copy over internal state.\n\nRemoving `Range#initialize_copy` makes it possible to construct an uninitialized `Range` object. Calling (pretty much) any instance method on the uninitialized `Range` object afterwards causes mruby to dereference a null pointer, leading to a segfault.\n\nI've attached a patch that fixes the bug by copying internal range state before calling `initialize_copy`, similar to what mruby already does for classes and modules.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "high", 
        "author_type": "Team"
    }, 
    "title": "Range#initialize_copy null pointer dereference", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-01-15T19:47:51.751Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$10,000", 
    "attachments": [
        {
            "file_name": "range-initialize-copy-segfault.patch", 
            "type": "text/x-diff", 
            "id": 134226, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/134/226/c17732014bbc23d135074255a49138104c07766b/range-initialize-copy-segfault.patch?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5B43OTPE%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T224544Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDCiDARkX3ArKGaO7%2ByK3A39tqjzyooRkX4qPdNM7MkAemep3r5%2Fh%2B11ZdH6KbZ8q2cgU%2FRMODKRq75fJ6sn%2FkR1fBrPaMFfKsP%2BSLpkSrkbyi968FqbmO6yo59Heb3d1kDMwzaNShj3ou%2Fq9qAc5NWgXlxJtABJqkgxPd5NovxMOsASin8kfBjU8OhOOEnonvd2t16oF509MVoA81P%2Frmr4njIb3UfHzYyccuDQNjHM0qV7B57bCKQeIuO%2FzLl7au%2FWR2v6R6bwK6fGUYVbcnAam9GqobWJnMl6NFbipNSdmUzB5%2BglRYaYeGXxbgxseM7SSFeehfzbywUoHEf4Ve61V1e90uyx3M0Krbm5QjS5gNgwErj0g2rC2mkrl2q%2B9ADfOzgMAX8fUODFalEv4gZf0ZKuLhpmAzEapJE5f%2BarcSkdn5b0ddy4Wa2vdsZ6lQ5NOez8qkcnaBEJZLnv3YGHyInLrIaUkqlq4iavZpr4f5Al5PueqIzLuItn5ztJjfvCu5dDIplWP0eo6r%2BIUCKsDwUNkRSgWCtJbCfl%2BPF3PKHjvnmVEBawLZlpXvaOGUvA%2FKYb2cGGXn89CPjYlwpWCj2J8Z%2B0okbim4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=976ed3efe0e6afbba8a4984e033633e0f44c9fd95a49018d3fb3c7b5accdab70"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-11-14T21:26:24.806Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T21:26:24.806Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High", 
                "old_severity": null
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1299270, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-11-14T21:27:07.817Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-14T21:27:07.817Z", 
            "actor": {
                "username": "clayton", 
                "url": "/clayton", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/166/6d366b567e9fef1c476c1505c0016e3031a74a34_medium.jpg?1493127129"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thank you for your report! We've reproduced the issue, and our engineering team is working on a fix.", 
            "markdown_message": "<p>Thank you for your report! We&#39;ve reproduced the issue, and our engineering team is working on a fix.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1299273, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "charliesome", 
                "url": "/charliesome"
            }, 
            "created_at": "2016-11-18T20:39:50.305Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-11-18T20:39:50.305Z", 
            "actor": {
                "username": "francoischagnon", 
                "url": "/francoischagnon", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/168/3b5130025fbf90eaeb1c9234baa340dfead68f44_medium.jpg?1429126005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "Thanks for the report and patch! We've deployed a fix for this in our production environment as of earlier today.\n\nAs I've mentioned on your other issues, I'm marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact & determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.", 
            "markdown_message": "<p>Thanks for the report and patch! We&#39;ve deployed a fix for this in our production environment as of earlier today.</p>\n\n<p>As I&#39;ve mentioned on your other issues, I&#39;m marking this issue as resolved now but we still need to fix this bug upstream before we can assess the impact &amp; determine a final bounty amount. This may take a few weeks since we received a large number of valid issues and we want to calibrate our payouts across all of them.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1307401, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-12-16T19:47:46.297Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:47:46.297Z", 
            "actor": {
                "url": "/shopify-scripts", 
                "profile": {
                    "name": "shopify-scripts"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
                }
            }, 
            "team_handle": "shopify-scripts", 
            "bounty_amount": "10000.0", 
            "collaborator": {
                "username": "charliesome", 
                "url": "/charliesome"
            }, 
            "message": "Thanks for helping improve the security of Shopify Scripts and the mruby project!", 
            "markdown_message": "<p>Thanks for helping improve the security of Shopify Scripts and the mruby project!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1370009, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-16T19:47:51.704Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-16T19:47:51.704Z", 
            "actor": {
                "username": "andrewdunbar", 
                "url": "/andrewdunbar", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/019/164/cd46f5270ea41c5f0da3bea93e2eca7a95858caf_medium.jpg?1427927985"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370010, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T01:03:44.506Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T01:03:44.506Z", 
            "actor": {
                "username": "charliesome", 
                "url": "/charliesome", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/738/ce9e2f04947ba777a98305eeae6efd9ec522e092_medium.jpg?1478913630"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1370649, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-17T01:03:44.555Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-17T01:03:44.555Z", 
            "actor": {
                "username": "charliesome", 
                "url": "/charliesome", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/738/ce9e2f04947ba777a98305eeae6efd9ec522e092_medium.jpg?1478913630"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "shopify-scripts", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1370650, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "charliesome", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/charliesome", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/738/95fe3c9a9e46d283de9a403d2a918cbee8bd50e5_small.jpg?1478913630"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 48, 
        "name": "Denial of Service"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -59626672.3893727, 
    "disclosed_at": "2016-12-17T01:03:44.537Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/181685", 
    "created_at": "2016-11-12T01:19:47.017Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Heya!</p>\n\n<p>It&#39;s possible to segfault mruby through mruby-engine with the following snippet of code:</p>\n<pre class=\"highlight plaintext\"><code>Range.remove_method(:initialize_copy)\n(1..2).dup.to_s\n</code></pre>\n<p>This can be triggered through mruby-engine like this:</p>\n<pre class=\"highlight plaintext\"><code>MRubyEngine.new(512*1024, 1000, 1000).sandbox_eval(&quot;/tmp&quot;, %{\n  Range.remove_method(:initialize_copy)\n  (1..2).dup.to_s\n})\n</code></pre>\n<p>The <code>dup</code> and <code>clone</code> methods allocate a new object and then call <code>initialize_copy</code> on the new object with the old object as an argument to copy over internal state.</p>\n\n<p>Removing <code>Range#initialize_copy</code> makes it possible to construct an uninitialized <code>Range</code> object. Calling (pretty much) any instance method on the uninitialized <code>Range</code> object afterwards causes mruby to dereference a null pointer, leading to a segfault.</p>\n\n<p>I&#39;ve attached a patch that fixes the bug by copying internal range state before calling <code>initialize_copy</code>, similar to what mruby already does for classes and modules.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.mruby.science", 
            "about": "", 
            "twitter_handle": "", 
            "name": "shopify-scripts"
        }, 
        "handle": "shopify-scripts", 
        "url": "https://hackerone.com/shopify-scripts", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/015/668/9f47d94cbd9e4311b57f1ab05f67fb5c26fd2e78_small.jpg?1475592254", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/015/668/b50db49e93f656e202ae6f94b4c0821d1184134b_medium.jpg?1475592254"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 15668, 
        "default_currency": "usd"
    }, 
    "is_published": false
}