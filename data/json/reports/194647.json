{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-02-26T09:37:07.184Z", 
    "voters": [
        "eveeez", 
        "hacklad", 
        "rbcafe", 
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 194647, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-02-25T22:33:30.375Z", 
    "vulnerability_information": "Dear GlobaLeaks bug bounty team,\n\nGlobaLeaks is vulnerable to timing attacks, because the `check_password()` function performs a byte-by-byte comparison, which terminates early when two characters do not match.\n\n# Summary\n---\n\nTiming attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.\n\n### \ud83d\udc4e Don't use this:\n\n~~~\ndef check_password(guessed_password, salt, password_hash):\n    return hash_password(guessed_password, salt) == password_hash\n~~~\n\nThe `==` operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed.\n\nLink to source code: https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/security.py#L327-L328\n\n### \ud83d\udc4d Use this instead:\n\n~~~\nhmac.compare_digest(hash_password(guessed_password, salt), password_hash)\n~~~\n\nThe `compare_digest()` function does not terminate as soon as two bytes are not the same.\n\nOn top of that, many password hashing modules come with a ready made time independent comparison function. The `bcrypt` package uses the `checkpw()` function.\n\n~~~\nimport bcrypt\n\n\ndef bcrypt_password():\n    password = b\"hunter2\"\n    hashed = bcrypt.hashpw(password, bcrypt.gensalt())\n    if bcrypt.checkpw(password, hashed):\n        print(\"It matches! :)\")\n    else:\n        print(\"It does not match :(\")\n~~~\n\nIn your case you are using the `scrypt` module so maybe you want follow the recommendations from the docs:\n\n~~~\nimport scrypt\n\n\ndef verify_password(hashed_password, guessed_password, maxtime=0.5):\n    try:\n        scrypt.decrypt(hashed_password, guessed_password, maxtime)\n        return True\n    except scrypt.error:\n        return False\n~~~\n\nLink to docs: https://pypi.python.org/pypi/scrypt/0.8.0\n\nYours sincerely,\nEd", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "Team"
    }, 
    "title": "GlobaLeaks is vulnerable to timing attacks.", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-03-27T22:33:30.415Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-12-29T18:20:22.186Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-29T18:20:22.186Z", 
            "actor": {
                "username": "evilaliv3", 
                "url": "/evilaliv3", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/042/337/e3cebd65f5ef6dcf00126befc5787003733e39f0_medium.jpeg?1445769918"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Dear @edio,\n\nthank you so much for your suggestion.\nwe will surely apply your specific correction on scrypt.\n\nWe are aware of these kind of vulnerabilities and given the fact that, as you know, these kind of timing attact generally are difficult to be addressed properly and lie most of the time in errors of third party libraries we have decided to improve the solution with a uniform answer delay that is always performed on the authentication requests/response: \n\nhttps://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/authentication.py#L186\n\nyou can read about the implementation of the  uniform_answers_delay() function here:\nhttps://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/base.py#L627\n\nlet us know if this solves your doubts and please let us know if you find possible issues in the implementation!\n\nthank you!\n\nall the best,\n\nGiovanni", 
            "markdown_message": "<p>Dear <a href=\"/edio\">@edio</a>,</p>\n\n<p>thank you so much for your suggestion.<br>\nwe will surely apply your specific correction on scrypt.</p>\n\n<p>We are aware of these kind of vulnerabilities and given the fact that, as you know, these kind of timing attact generally are difficult to be addressed properly and lie most of the time in errors of third party libraries we have decided to improve the solution with a uniform answer delay that is always performed on the authentication requests/response: </p>\n\n<p><a title=\"https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/authentication.py#L186\" href=\"/redirect?signature=1a7a2a4a1389412a0f57dfa2a378ca2853d0eb32&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fblob%2Fmaster%2Fbackend%2Fglobaleaks%2Fhandlers%2Fauthentication.py%23L186\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/authentication.py#L186</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>you can read about the implementation of the  uniform_answers_delay() function here:<br>\n<a title=\"https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/base.py#L627\" href=\"/redirect?signature=9253393b2a1585fd8fac3cd65715a9fae30d5d26&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fblob%2Fmaster%2Fbackend%2Fglobaleaks%2Fhandlers%2Fbase.py%23L627\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/handlers/base.py#L627</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>let us know if this solves your doubts and please let us know if you find possible issues in the implementation!</p>\n\n<p>thank you!</p>\n\n<p>all the best,</p>\n\n<p>Giovanni</p>\n", 
            "type": "Activities::Comment", 
            "id": 1390889, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-29T18:51:20.061Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-29T18:51:20.061Z", 
            "actor": {
                "username": "evilaliv3", 
                "url": "/evilaliv3", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/042/337/e3cebd65f5ef6dcf00126befc5787003733e39f0_medium.jpeg?1445769918"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Thank you @edio for your nice tweet!\ni wanted to thank you publicly but i saw thay your tweet is private.\n\nif you want make a public one replacing the starting \"@GlobaLeaks\" with \".@GlobaLeaks\"\nif the tweet contains a nick handle at the beginning it is a private tweet, to make it public add a \".\" at the start.\n\nThanks!", 
            "markdown_message": "<p>Thank you <a href=\"/edio\">@edio</a> for your nice tweet!<br>\ni wanted to thank you publicly but i saw thay your tweet is private.</p>\n\n<p>if you want make a public one replacing the starting &quot;@GlobaLeaks&quot; with &quot;.@GlobaLeaks&quot;<br>\nif the tweet contains a nick handle at the beginning it is a private tweet, to make it public add a &quot;.&quot; at the start.</p>\n\n<p>Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1390989, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-12-29T18:54:12.089Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-12-29T18:54:12.089Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Thank you for the prompt and informative response. Give me a sec and I will tweet it publicly. :)", 
            "markdown_message": "<p>Thank you for the prompt and informative response. Give me a sec and I will tweet it publicly. :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1390998, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-09T18:59:09.402Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-09T18:59:22.485Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Hey @edio I am now tracking the issue in our normal bug tracker. Will be working on closing the issue tomorrow if nothing pressing comes up.\n\nhttps://github.com/globaleaks/GlobaLeaks/issues/1867", 
            "markdown_message": "<p>Hey <a href=\"/edio\">@edio</a> I am now tracking the issue in our normal bug tracker. Will be working on closing the issue tomorrow if nothing pressing comes up.</p>\n\n<p><a title=\"https://github.com/globaleaks/GlobaLeaks/issues/1867\" href=\"/redirect?signature=87c0c33267c3b5fa7ebbb23c6e6795eb7d780c39&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fissues%2F1867\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/globaleaks/GlobaLeaks/issues/1867</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 1409268, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-09T20:48:55.507Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-09T20:48:55.507Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Thank you for the update @synnick!", 
            "markdown_message": "<p>Thank you for the update <a href=\"/synnick\">@synnick</a>!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1409534, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T09:24:26.531Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T09:24:26.531Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Low", 
                "old_severity": null
            }, 
            "team_handle": "globaleaks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1410716, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T09:24:29.991Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T09:24:29.991Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 1410717, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T12:30:01.626Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T12:30:01.626Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "@edio the scrypt decrypt will not work in this context as the password_hash we have stored is not stored with scrypt_encrypt and is instead simply derived via the scrypt function. Since that function is non-reversible the suggestion to use scrypt.decrypt is inaccurate.\n\nClosing as informative.", 
            "markdown_message": "<p><a href=\"/edio\">@edio</a> the scrypt decrypt will not work in this context as the password_hash we have stored is not stored with scrypt_encrypt and is instead simply derived via the scrypt function. Since that function is non-reversible the suggestion to use scrypt.decrypt is inaccurate.</p>\n\n<p>Closing as informative.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1411023, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T12:31:22.525Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T12:31:22.525Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "first_to_agree": true, 
            "message": "We would like to prevent duplicate requests in the future.", 
            "markdown_message": "<p>We would like to prevent duplicate requests in the future.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1411025, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T13:00:11.189Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T13:00:11.189Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "I would like to take some time and review this again, before we disclose this report publicly. I understand your point concerning the `scrypt.decrypt()` function and I can see why this would not resolve this issue. Nevertheless, you can use the `hmac.compare_digest()` instead of the `==` operator, since removal of all the delays in place would make this operation susceptible to timing attacks.\n\nIn the mean time, I will try to create a working PoC to demonstrate the issue and I would highly recommend you look into the following articles/papers:\n\n- [A Lesson In Timing Attacks (or, Don\u2019t use MessageDigest.isEquals)](https://codahale.com/a-lesson-in-timing-attacks/)\n- [Opportunities and Limits of Remote\nTiming Attacks](http://www.cs.rice.edu/~dwallach/pub/crosby-timing2009.pdf)\n- [Timing attack in Google Keyczar library](https://rdist.root.org/2009/05/28/timing-attack-in-google-keyczar-library/)", 
            "markdown_message": "<p>I would like to take some time and review this again, before we disclose this report publicly. I understand your point concerning the <code>scrypt.decrypt()</code> function and I can see why this would not resolve this issue. Nevertheless, you can use the <code>hmac.compare_digest()</code> instead of the <code>==</code> operator, since removal of all the delays in place would make this operation susceptible to timing attacks.</p>\n\n<p>In the mean time, I will try to create a working PoC to demonstrate the issue and I would highly recommend you look into the following articles/papers:</p>\n\n<ul>\n<li><a href=\"/redirect?signature=31ba2fb2f79410cb8b4ff66e32c0539d47d8f0a9&amp;url=https%3A%2F%2Fcodahale.com%2Fa-lesson-in-timing-attacks%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>A Lesson In Timing Attacks (or, Don\u2019t use MessageDigest.isEquals)</span><i class=\"icon-external-link\"></i></a></li>\n<li><a href=\"/redirect?signature=71596837e41fda5a47a3b34cd6cf6a94b72cffbf&amp;url=http%3A%2F%2Fwww.cs.rice.edu%2F%7Edwallach%2Fpub%2Fcrosby-timing2009.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Opportunities and Limits of Remote\nTiming Attacks</span><i class=\"icon-external-link\"></i></a></li>\n<li><a href=\"/redirect?signature=17443ffe7b2a31c3ac59341050221c749dbb0a2c&amp;url=https%3A%2F%2Frdist.root.org%2F2009%2F05%2F28%2Ftiming-attack-in-google-keyczar-library%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Timing attack in Google Keyczar library</span><i class=\"icon-external-link\"></i></a></li>\n</ul>\n", 
            "type": "Activities::Comment", 
            "id": 1411082, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-10T17:52:59.214Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-10T17:52:59.214Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Okay edio I am reopening this.\n\nIf you can demonstrate a timing attack we can award you with public recognition (bragging rights) and swag. Do not limit yourself to the login function.\n\nI am concerned that other attacks like side channels to disclose the creation of a new submission / the number of submissions / the size and number of files and so on may be vectors, but I have never been able to demonstrate the existence of such problems.\n\nHappy hunting!", 
            "markdown_message": "<p>Okay edio I am reopening this.</p>\n\n<p>If you can demonstrate a timing attack we can award you with public recognition (bragging rights) and swag. Do not limit yourself to the login function.</p>\n\n<p>I am concerned that other attacks like side channels to disclose the creation of a new submission / the number of submissions / the size and number of files and so on may be vectors, but I have never been able to demonstrate the existence of such problems.</p>\n\n<p>Happy hunting!</p>\n", 
            "type": "Activities::BugReopened", 
            "id": 1411751, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-17T11:29:17.109Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-17T11:29:17.109Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Any update @edio?", 
            "markdown_message": "<p>Any update <a href=\"/edio\">@edio</a>?</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 1424633, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-01-23T09:42:46.961Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-01-23T09:42:46.961Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Sorry @synnick, I have been very busy the past two weeks and have not had the time to review this issue. I hope to get on to this as soon as possible and will report back.", 
            "markdown_message": "<p>Sorry <a href=\"/synnick\">@synnick</a>, I have been very busy the past two weeks and have not had the time to review this issue. I hope to get on to this as soon as possible and will report back.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1437802, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-20T12:51:23.066Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-20T12:51:23.066Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Hi @globaleaks,\n\nUnfortunately, I have not had time to write a fully fledged PoC. :(\n\nIf you want I can submit a PR that should prevent researchers from reporting this in the future. Otherwise, please feel free to close this report.\n\n**Before:**\n~~~\ndef check_password(guessed_password, salt, password_hash):\n    return hash_password(guessed_password, salt) == password_hash\n~~~\n\n**After:**\n~~~\nimport hmac\n\ndef check_password(guessed_password, salt, password_hash):\n    return hmac.compare_digest(hash_password(guessed_password, salt), password_hash)\n~~~\n\nBest regards,\nEd", 
            "markdown_message": "<p>Hi <a href=\"/globaleaks\">@globaleaks</a>,</p>\n\n<p>Unfortunately, I have not had time to write a fully fledged PoC. :(</p>\n\n<p>If you want I can submit a PR that should prevent researchers from reporting this in the future. Otherwise, please feel free to close this report.</p>\n\n<p><strong>Before:</strong></p>\n<pre class=\"highlight plaintext\"><code>def check_password(guessed_password, salt, password_hash):\n    return hash_password(guessed_password, salt) == password_hash\n</code></pre>\n<p><strong>After:</strong></p>\n<pre class=\"highlight plaintext\"><code>import hmac\n\ndef check_password(guessed_password, salt, password_hash):\n    return hmac.compare_digest(hash_password(guessed_password, salt), password_hash)\n</code></pre>\n<p>Best regards,<br>\nEd</p>\n", 
            "type": "Activities::Comment", 
            "id": 1494854, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "edoverflow", 
                "url": "/edoverflow"
            }, 
            "created_at": "2017-02-20T22:10:28.163Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-20T22:10:28.163Z", 
            "actor": {
                "url": "/globaleaks", 
                "profile": {
                    "name": "GlobaLeaks"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/660/2872c10cace9474589b66584c76e409b5365febc_medium.jpg?1434407981"
                }
            }, 
            "team_handle": "globaleaks", 
            "message": "Hi Edio, I have created the issue on our github. If you want to issue a pull to close it up and get credit go ahead. Otherwise I can do it super quick, just tell me what you want to do otherwise I will forget. https://github.com/globaleaks/GlobaLeaks/issues/1904\n\nOne note is that you want to issue a PR against the branch labeled `devel`. Our swag award is beer or a bottle of wine at a hacking/net-freedom/web conference.\n\nThanks,\n  Nick", 
            "markdown_message": "<p>Hi Edio, I have created the issue on our github. If you want to issue a pull to close it up and get credit go ahead. Otherwise I can do it super quick, just tell me what you want to do otherwise I will forget. <a title=\"https://github.com/globaleaks/GlobaLeaks/issues/1904\" href=\"/redirect?signature=f5c11c2d228b8e03c5e2f181a55ef571e5e81cf1&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fissues%2F1904\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/globaleaks/GlobaLeaks/issues/1904</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>One note is that you want to issue a PR against the branch labeled <code>devel</code>. Our swag award is beer or a bottle of wine at a hacking/net-freedom/web conference.</p>\n\n<p>Thanks,<br>\n  Nick</p>\n", 
            "type": "Activities::SwagAwarded", 
            "id": 1495779, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-21T09:59:23.860Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-25T22:29:38.667Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Hi @globaleaks,\n\nThank you very much! I have submitted a PR [here](https://github.com/globaleaks/GlobaLeaks/pull/1905). It was a pleasure working with your team, you were all very patient and your response times are amazing. I look forward to working with you in the future. \ud83d\ude0a\n\nBest regards,\nEd\n\nP.S.: \u2588\u2588\u2588. ", 
            "markdown_message": "<p>Hi <a href=\"/globaleaks\">@globaleaks</a>,</p>\n\n<p>Thank you very much! I have submitted a PR <a href=\"/redirect?signature=b45685a98f8fb2849f3d5d4f2d368cc9dec78656&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fpull%2F1905\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>here</span><i class=\"icon-external-link\"></i></a>. It was a pleasure working with your team, you were all very patient and your response times are amazing. I look forward to working with you in the future. \ud83d\ude0a</p>\n\n<p>Best regards,<br>\nEd</p>\n\n<p>P.S.: \u2588\u2588\u2588. </p>\n", 
            "type": "Activities::Comment", 
            "id": 1496358, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-25T13:16:16.136Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-25T13:16:16.136Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "Hi @globaleaks,\n\nWould it be possible to disclose this report publicly to inform fellow researchers? \ud83d\ude0a\n\nBest regards,\nEd", 
            "markdown_message": "<p>Hi <a href=\"/globaleaks\">@globaleaks</a>,</p>\n\n<p>Would it be possible to disclose this report publicly to inform fellow researchers? \ud83d\ude0a</p>\n\n<p>Best regards,<br>\nEd</p>\n", 
            "type": "Activities::Comment", 
            "id": 1505439, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "edoverflow", 
                "url": "/edoverflow"
            }, 
            "created_at": "2017-02-25T22:31:20.729Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-25T22:31:20.729Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 1505954, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-25T22:33:30.393Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-25T22:33:30.393Z", 
            "actor": {
                "username": "synnick", 
                "url": "/synnick", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/090/657/2ca295c30b7c73f2e3fee703e0f2b6ab027aa72e_medium.jpg?1483986556"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "first_to_agree": true, 
            "message": "Yep happy to.", 
            "markdown_message": "<p>Yep happy to.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1505957, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-26T09:37:07.200Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-26T09:37:07.200Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1506233, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-02-26T09:37:07.229Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-02-26T09:37:07.229Z", 
            "actor": {
                "username": "edoverflow", 
                "url": "/edoverflow", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/116/374/95f9ffa246b2d43ca4f14a95d8815f429544fe54_medium.png?1527882436"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "globaleaks", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1506234, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "edoverflow", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/edoverflow", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/116/374/2e86e29173a7b27dc4e4c35ecaef804781110b9f_small.png?1527882436"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 32, 
        "name": "Cryptographic Issues - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -53482171.64988887, 
    "disclosed_at": "2017-02-26T09:37:07.217Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/194647", 
    "created_at": "2016-12-29T18:01:24.535Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Dear GlobaLeaks bug bounty team,</p>\n\n<p>GlobaLeaks is vulnerable to timing attacks, because the <code>check_password()</code> function performs a byte-by-byte comparison, which terminates early when two characters do not match.</p>\n\n<h1 id=\"summary\">Summary</h1>\n\n<hr>\n\n<p>Timing attacks are a type of side channel attack where one can discover valuable information by recording the time it takes for a cryptographic algorithm to execute.</p>\n\n<h3 id=\"don-t-use-this\">\ud83d\udc4e Don&#39;t use this:</h3>\n<pre class=\"highlight plaintext\"><code>def check_password(guessed_password, salt, password_hash):\n    return hash_password(guessed_password, salt) == password_hash\n</code></pre>\n<p>The <code>==</code> operation does a byte-by-byte comparison of two values and as soon as the two differentiate it terminates. This means the longer it takes until the operation returns, the more correct characters the attacker has guessed.</p>\n\n<p>Link to source code: <a title=\"https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/security.py#L327-L328\" href=\"/redirect?signature=58da19f2c0b9d36d462b459d84ffd293e096c82b&amp;url=https%3A%2F%2Fgithub.com%2Fglobaleaks%2FGlobaLeaks%2Fblob%2Fmaster%2Fbackend%2Fglobaleaks%2Fsecurity.py%23L327-L328\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/globaleaks/GlobaLeaks/blob/master/backend/globaleaks/security.py#L327-L328</span><i class=\"icon-external-link\"></i></a></p>\n\n<h3 id=\"use-this-instead\">\ud83d\udc4d Use this instead:</h3>\n<pre class=\"highlight plaintext\"><code>hmac.compare_digest(hash_password(guessed_password, salt), password_hash)\n</code></pre>\n<p>The <code>compare_digest()</code> function does not terminate as soon as two bytes are not the same.</p>\n\n<p>On top of that, many password hashing modules come with a ready made time independent comparison function. The <code>bcrypt</code> package uses the <code>checkpw()</code> function.</p>\n<pre class=\"highlight plaintext\"><code>import bcrypt\n\n\ndef bcrypt_password():\n    password = b&quot;hunter2&quot;\n    hashed = bcrypt.hashpw(password, bcrypt.gensalt())\n    if bcrypt.checkpw(password, hashed):\n        print(&quot;It matches! :)&quot;)\n    else:\n        print(&quot;It does not match :(&quot;)\n</code></pre>\n<p>In your case you are using the <code>scrypt</code> module so maybe you want follow the recommendations from the docs:</p>\n<pre class=\"highlight plaintext\"><code>import scrypt\n\n\ndef verify_password(hashed_password, guessed_password, maxtime=0.5):\n    try:\n        scrypt.decrypt(hashed_password, guessed_password, maxtime)\n        return True\n    except scrypt.error:\n        return False\n</code></pre>\n<p>Link to docs: <a title=\"https://pypi.python.org/pypi/scrypt/0.8.0\" href=\"/redirect?signature=de4460acbaf1b2cec4f64959c62011dcdacc636e&amp;url=https%3A%2F%2Fpypi.python.org%2Fpypi%2Fscrypt%2F0.8.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://pypi.python.org/pypi/scrypt/0.8.0</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Yours sincerely,<br>\nEd</p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://globaleaks.org", 
            "about": "The first Open Source Whistleblowing Software Framework. Made by @HermesCenter", 
            "twitter_handle": "globaleaks", 
            "name": "GlobaLeaks"
        }, 
        "handle": "globaleaks", 
        "url": "https://hackerone.com/globaleaks", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/660/4b48ce94bb25e2ca9e2d15fab2c855ba2b559198_small.jpg?1434407981", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/001/660/2872c10cace9474589b66584c76e409b5365febc_medium.jpg?1434407981"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 1660, 
        "default_currency": "usd"
    }, 
    "is_published": false
}