{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-02-15T22:32:35.555Z", 
    "voters": [
        "jokebookservice1", 
        "bl4de", 
        "kapytein", 
        "gerben_javado", 
        "edoverflow", 
        "eveeez", 
        "apapedulimu"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 302289, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "vulnerability_information": "The following is valid javascript:\n\n    var a = `//`;\n\nSo is this:\n\n    var url = `https://hackerone.com`;\n\nHowever, Cloudflare's auto-minifier removes the parts of both lines including and after the `//`, meaning in production, they look like this:\n\n    var a = `\n    var url = `https:\n\nThis can either straight up break or introduce sneaky bugs in production that don't show up in development (development mode turns off minification, and in local dev, this obviously doesn't happen) since those strings never get closed. There's also no way to get around this other than to stop using template literals for strings containing `//`.\n\nHere's a relatively contrived proof of concept of code that behaves differently in dev and production without any errors:\n\n    var subreddit = 'cloudflare';\n    var url = `https://www.reddit.com/r/${subreddit}`;\n    `;console.log('what is up'); // this shouldn't run! `;\n\nMinified, it becomes:\n\n    var subreddit='cloudflare';var url=`https:`;console.log('what is up');\n\nwhich prints \"what is up\" to console. It's live here: https://jli.host/cloudflare-bug/\n\n## Impact\n\nThis requires either access to the source code, or a really badly misconfigured website that dynamically builds scripts and injects user input. There's hardly a security impact, but there's definitely still a bug that's causing unintended behavior.", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "// (double slash) inside es6 template literals interpreted as an inline comment by the auto-minifier", 
    "is_member_of_team?": null, 
    "vote_count": 7, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2018-03-17T22:32:35.772Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-01-04T15:34:55.300Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-04T15:34:55.300Z", 
            "actor": {
                "username": "higcf", 
                "url": "/higcf", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/225/738/cc465f097be18e756ff1f103441f61bf315b0a4f_medium.jpg?1532548347"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "message": "Thank you very much for this, a ticket will be opened and I will investigate further!", 
            "markdown_message": "<p>Thank you very much for this, a ticket will be opened and I will investigate further!</p>\n", 
            "type": "Activities::Comment", 
            "id": 2261959, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-04T18:34:52.509Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-04T18:47:57.816Z", 
            "actor": {
                "username": "veggie", 
                "url": "/veggie", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/229/505/2aee5523ec2d869a8ce8b4397cb77f229584a21b_medium.png?1515083655"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "message": "Awesome, that's great to hear! This issue also extends to C style comments, `/* ... */` if there's a matching pair of those (from my minimal testing, you need both), meaning entire lines can disappear. For example,\n\n    var domain = 'hackerone';\n    var url = `www.${domain}.com/*`;\n    console.log(url);\n    var other_url = `www.${domain}.com/*/`;\n\nNotice the `/*` on line 2 and `*/` on line 4, which are perfectly normal looking strings that behave as you'd expect unminified. However, the entire last two lines and the `/*` on line 2 are omitted from output after minification:\n\n    var domain='hackerone';var url=`www.${domain}.com`;\n\nLive: https://jli.host/cloudflare-bug/c-style", 
            "markdown_message": "<p>Awesome, that&#39;s great to hear! This issue also extends to C style comments, <code>/* ... */</code> if there&#39;s a matching pair of those (from my minimal testing, you need both), meaning entire lines can disappear. For example,</p>\n<pre class=\"highlight plaintext\"><code>var domain = &#39;hackerone&#39;;\nvar url = `www.${domain}.com/*`;\nconsole.log(url);\nvar other_url = `www.${domain}.com/*/`;\n</code></pre>\n<p>Notice the <code>/*</code> on line 2 and <code>*/</code> on line 4, which are perfectly normal looking strings that behave as you&#39;d expect unminified. However, the entire last two lines and the <code>/*</code> on line 2 are omitted from output after minification:</p>\n<pre class=\"highlight plaintext\"><code>var domain=&#39;hackerone&#39;;var url=`www.${domain}.com`;\n</code></pre>\n<p>Live: <a title=\"https://jli.host/cloudflare-bug/c-style\" href=\"/redirect?signature=e517718e74ac58025550d1cc78a4094072d80419&amp;url=https%3A%2F%2Fjli.host%2Fcloudflare-bug%2Fc-style\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://jli.host/cloudflare-bug/c-style</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 2262519, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-01-22T19:33:57.141Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-01-22T19:33:57.141Z", 
            "actor": {
                "username": "higcf", 
                "url": "/higcf", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/225/738/cc465f097be18e756ff1f103441f61bf315b0a4f_medium.jpg?1532548347"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "message": "Thank you for submission. I have escalated your report to our engineers for review.", 
            "markdown_message": "<p>Thank you for submission. I have escalated your report to our engineers for review.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 2307970, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-10T21:06:00.089Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-10T21:06:00.089Z", 
            "actor": {
                "username": "cjunky", 
                "url": "/cjunky", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "message": "Just to let you know that this bug is queued up for the Engineering team so there should be a response soon.", 
            "markdown_message": "<p>Just to let you know that this bug is queued up for the Engineering team so there should be a response soon.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2371361, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "veggie", 
                "url": "/veggie"
            }, 
            "created_at": "2018-02-15T22:19:02.585Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-15T22:19:02.585Z", 
            "actor": {
                "username": "cjunky", 
                "url": "/cjunky", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "message": "We have pushed out a new version of the affected code. As far as we can tell from testing this bug has now been fixed and is no longer reproducable. As a result I am going to close this report.\n\nIf you find that this is not the case, please let me know and iIll re-open it.", 
            "markdown_message": "<p>We have pushed out a new version of the affected code. As far as we can tell from testing this bug has now been fixed and is no longer reproducable. As a result I am going to close this report.</p>\n\n<p>If you find that this is not the case, please let me know and iIll re-open it.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 2388102, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-02-15T22:32:35.628Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-15T22:32:35.628Z", 
            "actor": {
                "username": "veggie", 
                "url": "/veggie", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/229/505/2aee5523ec2d869a8ce8b4397cb77f229584a21b_medium.png?1515083655"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "cloudflare", 
            "first_to_agree": true, 
            "message": "Thanks! It looks to be fixed.\n\nBy the way, is this bug eligible for that sweet t-shirt?", 
            "markdown_message": "<p>Thanks! It looks to be fixed.</p>\n\n<p>By the way, is this bug eligible for that sweet t-shirt?</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2388137, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "veggie", 
                "url": "/veggie"
            }, 
            "created_at": "2018-02-15T23:06:57.436Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-02-15T23:06:57.436Z", 
            "actor": {
                "url": "/cloudflare", 
                "profile": {
                    "name": "Cloudflare"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/041/d2c3c5a370ea69f13c0c96e2a2498501429e6b30_medium.png?1480719394"
                }
            }, 
            "team_handle": "cloudflare", 
            "message": "Absolutely. Make sure you fill out your details into hackerone.", 
            "markdown_message": "<p>Absolutely. Make sure you fill out your details into hackerone.</p>\n", 
            "type": "Activities::SwagAwarded", 
            "id": 2388217, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-17T22:32:39.460Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-17T22:32:39.460Z", 
            "actor": {
                "url": "/cloudflare", 
                "profile": {
                    "name": "Cloudflare"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/041/d2c3c5a370ea69f13c0c96e2a2498501429e6b30_medium.png?1480719394"
                }
            }, 
            "team_handle": "cloudflare", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2502346, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "veggie", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/veggie", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/229/505/94e13f87911ccae800dbc055e04c9f544718ed22_small.png?1515083655"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -22809212.143888872, 
    "disclosed_at": "2018-03-17T22:32:39.419Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/302289", 
    "created_at": "2018-01-04T04:07:48.771Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>The following is valid javascript:</p>\n<pre class=\"highlight plaintext\"><code>var a = `//`;\n</code></pre>\n<p>So is this:</p>\n<pre class=\"highlight plaintext\"><code>var url = `https://hackerone.com`;\n</code></pre>\n<p>However, Cloudflare&#39;s auto-minifier removes the parts of both lines including and after the <code>//</code>, meaning in production, they look like this:</p>\n<pre class=\"highlight plaintext\"><code>var a = `\nvar url = `https:\n</code></pre>\n<p>This can either straight up break or introduce sneaky bugs in production that don&#39;t show up in development (development mode turns off minification, and in local dev, this obviously doesn&#39;t happen) since those strings never get closed. There&#39;s also no way to get around this other than to stop using template literals for strings containing <code>//</code>.</p>\n\n<p>Here&#39;s a relatively contrived proof of concept of code that behaves differently in dev and production without any errors:</p>\n<pre class=\"highlight plaintext\"><code>var subreddit = &#39;cloudflare&#39;;\nvar url = `https://www.reddit.com/r/${subreddit}`;\n`;console.log(&#39;what is up&#39;); // this shouldn&#39;t run! `;\n</code></pre>\n<p>Minified, it becomes:</p>\n<pre class=\"highlight plaintext\"><code>var subreddit=&#39;cloudflare&#39;;var url=`https:`;console.log(&#39;what is up&#39;);\n</code></pre>\n<p>which prints &quot;what is up&quot; to console. It&#39;s live here: <a title=\"https://jli.host/cloudflare-bug/\" href=\"/redirect?signature=719bbf9882c171dd17bb820dc0ba8c58a81f1cca&amp;url=https%3A%2F%2Fjli.host%2Fcloudflare-bug%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://jli.host/cloudflare-bug/</span><i class=\"icon-external-link\"></i></a></p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>This requires either access to the source code, or a really badly misconfigured website that dynamically builds scripts and injects user input. There&#39;s hardly a security impact, but there&#39;s definitely still a bug that&#39;s causing unintended behavior.</p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.cloudflare.com/disclosure", 
            "about": "", 
            "twitter_handle": "cloudflare", 
            "name": "Cloudflare"
        }, 
        "handle": "cloudflare", 
        "url": "https://hackerone.com/cloudflare", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/041/b9941bf2330424daec112aade53c7f8c19708cac_small.png?1480719394", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/041/d2c3c5a370ea69f13c0c96e2a2498501429e6b30_medium.png?1480719394"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 41, 
        "default_currency": "usd"
    }, 
    "is_published": false
}