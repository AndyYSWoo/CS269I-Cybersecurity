{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "spetr0x"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "50.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 115337, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-02-08T14:41:18.316Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Full Path Disclosure", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-03-09T14:41:18.409Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$50", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "reporter": {
                "username": "supernatural", 
                "url": "/supernatural"
            }, 
            "created_at": "2016-02-08T14:41:03.820Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-08T14:41:03.820Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Hi Pouya,\n\nThat `COUNT_RECURSIVE` check is clever. I was thinking of approaching this literally:\n\n    foreach ($array as $k => $v) {\n        if (is_array($v)) {\n            throw new \\InvalidArgumentException(\"Arrays must only have 1 dimension\");\n        }\n    }\n\nThe latest commit should prevent these issues.", 
            "markdown_message": "<p>Hi Pouya,</p>\n\n<p>That <code>COUNT_RECURSIVE</code> check is clever. I was thinking of approaching this literally:</p>\n<pre class=\"highlight plaintext\"><code>foreach ($array as $k =&gt; $v) {\n    if (is_array($v)) {\n        throw new \\InvalidArgumentException(&quot;Arrays must only have 1 dimension&quot;);\n    }\n}\n</code></pre>\n<p>The latest commit should prevent these issues.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 789097, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-02-08T14:41:09.894Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-08T14:41:09.894Z", 
            "actor": {
                "url": "/paragonie", 
                "profile": {
                    "name": "Paragon Initiative Enterprises"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
                }
            }, 
            "team_handle": "paragonie", 
            "bounty_amount": "50.0", 
            "collaborator": {
                "username": "supernatural", 
                "url": "/supernatural"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 789098, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-08T14:41:18.338Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-08T14:41:18.338Z", 
            "actor": {
                "username": "paragonie-scott", 
                "url": "/paragonie-scott", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/051/441/e8c4034a4e3ed3d486883ffc34b95daa43a499d2_medium.png?1453933942"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 789099, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-02-08T16:18:51.798Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-02-08T16:22:45.440Z", 
            "actor": {
                "username": "supernatural", 
                "url": "/supernatural", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/099/a56635e8b8160deadd7ac1cc3e457424658e4d47_medium.jpg?1511822364"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "paragonie", 
            "message": "Thanks,\n\njust add this type check in `single` function,\nand I think you can remove some extra type checks before `escapeIdentifier` call, because type will be check in `escapeIdentifier`\n\nRegards", 
            "markdown_message": "<p>Thanks,</p>\n\n<p>just add this type check in <code>single</code> function,<br>\nand I think you can remove some extra type checks before <code>escapeIdentifier</code> call, because type will be check in <code>escapeIdentifier</code></p>\n\n<p>Regards</p>\n", 
            "type": "Activities::Comment", 
            "id": 789210, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-03-09T14:41:24.353Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-03-09T14:41:24.353Z", 
            "actor": {
                "url": "/paragonie", 
                "profile": {
                    "name": "Paragon Initiative Enterprises"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
                }
            }, 
            "team_handle": "paragonie", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 831141, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "supernatural", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/supernatural", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/001/099/8695d10deac20b9a6d8be2489b20b81662948fb2_small.jpg?1511822364"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -86602500.657167, 
    "disclosed_at": "2016-03-09T14:41:24.320Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/115337", 
    "created_at": "2016-02-08T07:19:36.004Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Hi</p>\n\n<p>as reported in email,<br>\nthere is a full path disclosure in EasyDB</p>\n\n<p>you fixed some of them in last commit<br>\nadd this code before and &quot;execute($params)&quot; function call!</p>\n<pre class=\"highlight plaintext\"><code>if(count($params) != count($params,COUNT_RECURSIVE)){\n            throw new \\InvalidArgumentException(&quot;Invalid params&quot;);\n}\n</code></pre>\n<p>this will check $params to be 1d array,</p>\n\n<p>Regards</p>\n", 
    "vulnerability_information": "Hi\n\nas reported in email,\nthere is a full path disclosure in EasyDB\n\nyou fixed some of them in last commit\nadd this code before and \"execute($params)\" function call!\n\n    if(count($params) != count($params,COUNT_RECURSIVE)){\n                throw new \\InvalidArgumentException(\"Invalid params\");\n    }\n\nthis will check $params to be 1d array,\n\n\nRegards", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://github.com/paragonie", 
            "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries", 
            "twitter_handle": "ParagonIE", 
            "name": "Paragon Initiative Enterprises"
        }, 
        "handle": "paragonie", 
        "url": "https://hackerone.com/paragonie", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/539/a041268a04bb7a5c3d3a88a9dccc6b5955eff4d7_small.?1453010804", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/539/17d54b48e116d815fd72bc29f2cd71df6b3659ad_medium.?1453010804"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8539, 
        "default_currency": "usd"
    }, 
    "is_published": false
}