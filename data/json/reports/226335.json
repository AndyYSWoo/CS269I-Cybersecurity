{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "sp1d3rs", 
        "ysx", 
        "eveeez", 
        "sonalkr132"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 226335, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-08-28T16:42:31.637Z", 
    "vulnerability_information": "Seems we can include any escape sequence in the \"summary\" field of gemspec.  This allows attackers to inject escape sequences to a victim's terminal emulator.\n\n## How to attack\n\n1) An attacker creates a gem with summary string that includes malicious escape sequences, and push it to rubygems.org.\n2) A victim executes `gem search attackers-gem -d`, and the malicious string is printed in the terminal emulator.\n\nIn general, this is considered vulnerable.  I'd like you to read [Terminal Emulator Security Issues](http://marc.info/?l=bugtraq&m=104612710031920&w=2) in detail.  In short, an attacker can exploit this, not only to surprise a victim with a rainbow string, but also to inject malicious command to a victim's terminal, which may lead to abitrary code execution.  Ruby WEBrick also handled a similar issue as [a vulnerability](https://www.ruby-lang.org/en/news/2010/01/10/webrick-escape-sequence-injection/).\n\n\n## Proof of concept\n\n1) Prepare the following gemspec.\n\n~~~\nGem::Specification.new do |spec|\n  spec.name     = \"escape-sequence-injection-vulnerability\"\n  spec.version  = \"0.0.1\"\n  spec.authors  = [\"Yusuke Endoh\"]\n  spec.email    = [\"mame@ruby-lang.org\"]\n  spec.summary  = \"foo\\e[31mbar\\e[0mbaz \\e]2;BOOM!\\a\"\n  spec.homepage = \"http://example.com/\"\n  spec.license  = \"MIT\"\nend\n~~~\n\n2) Run the following commands\n\n~~~\ngem build escape-sequence-injection-vulnerability.gemspec\ngem install escape-sequence-injection-vulnerability-0.0.1.gem\n~~~\n\n3) Run the following command.\n\n~~~\ngem query escape-sequence-injection-vulnerability -d && sleep 10\n~~~\n\nYou will see a summary line \"foobarbaz\" (with \"bar\" red), and its window title changed \"BOOM!\".", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "low", 
        "author_type": "Team"
    }, 
    "title": "Escape sequence injection in \"summary\" field", 
    "is_member_of_team?": null, 
    "vote_count": 4, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-09-27T16:42:31.673Z", 
    "state": "Closed", 
    "cve_ids": [
        "CVE-2017-0899"
    ], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": true, 
            "created_at": "2017-05-05T13:35:48.451Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-05T13:35:48.451Z", 
            "actor": {
                "url": "/rubygems", 
                "profile": {
                    "name": "RubyGems"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
                }
            }, 
            "team_handle": "rubygems", 
            "message": "Thanks for submitting this report to RubyGems. Our team will review and investigate the issue. Please note that only issues in the rubygems library are eligible for our bug bounty program.", 
            "markdown_message": "<p>Thanks for submitting this report to RubyGems. Our team will review and investigate the issue. Please note that only issues in the rubygems library are eligible for our bug bounty program.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1656440, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-15T12:35:09.943Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-15T12:35:09.943Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Any progress?\n\nThis issue is exploitable when a victim executes `gem search`, not `gem install`.  So I think that this issue is relatively serious.", 
            "markdown_message": "<p>Any progress?</p>\n\n<p>This issue is exploitable when a victim executes <code>gem search</code>, not <code>gem install</code>.  So I think that this issue is relatively serious.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1674092, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-22T13:20:10.875Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-22T13:20:10.875Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Is anyone there?", 
            "markdown_message": "<p>Is anyone there?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1691400, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-22T16:46:55.576Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-22T16:46:55.576Z", 
            "actor": {
                "username": "evanphx", 
                "url": "/evanphx", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Hi mame, sorry about the delay.\n\nHere is proposed patch to fix the issue, please review:\n\n```\nFrom 3b9379375fb24a2c8b7d261f9108f5d031016729 Mon Sep 17 00:00:00 2001\nFrom: Evan Phoenix <evan@phx.io>\nDate: Mon, 22 May 2017 09:44:08 -0700\nSubject: [PATCH] Clean any text present in gems before displaying it\n\nThis makes sure that any data pulled out of a gem spec is cleaned of all\nnon-printable characters before printing it. This prevents a gem from\ncausing havoc with a users terminal.\n---\n lib/rubygems/commands/query_command.rb           |  2 +-\n lib/rubygems/text.rb                             |  9 +++++-\n test/rubygems/test_gem_commands_query_command.rb | 40 ++++++++++++++++++++++++\n test/rubygems/test_gem_text.rb                   |  4 +++\n 4 files changed, 53 insertions(+), 2 deletions(-)\n\ndiff --git a/lib/rubygems/commands/query_command.rb b/lib/rubygems/commands/query_command.rb\nindex 0f58490e..7a436f76 100644\n--- a/lib/rubygems/commands/query_command.rb\n+++ b/lib/rubygems/commands/query_command.rb\n@@ -226,7 +226,7 @@ is too hard to use.\n         end\n       end\n \n-      output << make_entry(matching_tuples, platforms)\n+      output << clean_text(make_entry(matching_tuples, platforms))\n     end\n   end\n \ndiff --git a/lib/rubygems/text.rb b/lib/rubygems/text.rb\nindex 732f1b99..647e2cd4 100644\n--- a/lib/rubygems/text.rb\n+++ b/lib/rubygems/text.rb\n@@ -7,12 +7,19 @@ require 'rubygems'\n module Gem::Text\n \n   ##\n+  # Remove any non-printable characters and make the text suitable for\n+  # printing.\n+  def clean_text(text)\n+    text.gsub(/[^\\u0020-\\u007e\\r\\n\\t]/, \".\")\n+  end\n+\n+  ##\n   # Wraps +text+ to +wrap+ characters and optionally indents by +indent+\n   # characters\n \n   def format_text(text, wrap, indent=0)\n     result = []\n-    work = text.dup\n+    work = clean_text(text)\n \n     while work.length > wrap do\n       if work =~ /^(.{0,#{wrap}})[ \\n]/ then\ndiff --git a/test/rubygems/test_gem_commands_query_command.rb b/test/rubygems/test_gem_commands_query_command.rb\nindex 84701d7c..20f4731c 100644\n--- a/test/rubygems/test_gem_commands_query_command.rb\n+++ b/test/rubygems/test_gem_commands_query_command.rb\n@@ -128,6 +128,46 @@ pl (1)\n     assert_equal '', @ui.error\n   end\n \n+  def test_execute_details_cleans_text\n+    spec_fetcher do |fetcher|\n+      fetcher.spec 'a', 2 do |s|\n+        s.summary = 'This is a lot of text. ' * 4\n+        s.authors = [\"Abraham Lincoln \\u0001\", \"\\u0002 Hirohito\"]\n+        s.homepage = \"http://a.example.com/\\u0003\"\n+      end\n+\n+      fetcher.legacy_platform\n+    end\n+\n+    @cmd.handle_options %w[-r -d]\n+\n+    use_ui @ui do\n+      @cmd.execute\n+    end\n+\n+    expected = <<-EOF\n+\n+*** REMOTE GEMS ***\n+\n+a (2)\n+    Authors: Abraham Lincoln ., . Hirohito\n+    Homepage: http://a.example.com/.\n+\n+    This is a lot of text. This is a lot of text. This is a lot of text.\n+    This is a lot of text.\n+\n+pl (1)\n+    Platform: i386-linux\n+    Author: A User\n+    Homepage: http://example.com\n+\n+    this is a summary\n+    EOF\n+\n+    assert_equal expected, @ui.output\n+    assert_equal '', @ui.error\n+  end\n+\n   def test_execute_installed\n     @cmd.handle_options %w[-n a --installed]\n \ndiff --git a/test/rubygems/test_gem_text.rb b/test/rubygems/test_gem_text.rb\nindex a6e22e04..4875f37c 100644\n--- a/test/rubygems/test_gem_text.rb\n+++ b/test/rubygems/test_gem_text.rb\n@@ -36,6 +36,10 @@ Without the wrapping, the text might not look good in the RSS feed.\n     assert_equal expected, format_text(text, 78)\n   end\n \n+  def test_format_removes_nonprintable_characters\n+    assert_equal \"text with weird .. stuff\", format_text(\"text with weird \\u001b\\u0002 stuff\", 40)\n+  end\n+\n   def test_min3\n     assert_equal 1, min3(1, 1, 1)\n     assert_equal 1, min3(1, 1, 2)\n-- \n2.11.0 (Apple Git-81)\n```", 
            "markdown_message": "<p>Hi mame, sorry about the delay.</p>\n\n<p>Here is proposed patch to fix the issue, please review:</p>\n<pre class=\"highlight plaintext\"><code>From 3b9379375fb24a2c8b7d261f9108f5d031016729 Mon Sep 17 00:00:00 2001\nFrom: Evan Phoenix &lt;evan@phx.io&gt;\nDate: Mon, 22 May 2017 09:44:08 -0700\nSubject: [PATCH] Clean any text present in gems before displaying it\n\nThis makes sure that any data pulled out of a gem spec is cleaned of all\nnon-printable characters before printing it. This prevents a gem from\ncausing havoc with a users terminal.\n---\n lib/rubygems/commands/query_command.rb           |  2 +-\n lib/rubygems/text.rb                             |  9 +++++-\n test/rubygems/test_gem_commands_query_command.rb | 40 ++++++++++++++++++++++++\n test/rubygems/test_gem_text.rb                   |  4 +++\n 4 files changed, 53 insertions(+), 2 deletions(-)\n\ndiff --git a/lib/rubygems/commands/query_command.rb b/lib/rubygems/commands/query_command.rb\nindex 0f58490e..7a436f76 100644\n--- a/lib/rubygems/commands/query_command.rb\n+++ b/lib/rubygems/commands/query_command.rb\n@@ -226,7 +226,7 @@ is too hard to use.\n         end\n       end\n\n-      output &lt;&lt; make_entry(matching_tuples, platforms)\n+      output &lt;&lt; clean_text(make_entry(matching_tuples, platforms))\n     end\n   end\n\ndiff --git a/lib/rubygems/text.rb b/lib/rubygems/text.rb\nindex 732f1b99..647e2cd4 100644\n--- a/lib/rubygems/text.rb\n+++ b/lib/rubygems/text.rb\n@@ -7,12 +7,19 @@ require &#39;rubygems&#39;\n module Gem::Text\n\n   ##\n+  # Remove any non-printable characters and make the text suitable for\n+  # printing.\n+  def clean_text(text)\n+    text.gsub(/[^\\u0020-\\u007e\\r\\n\\t]/, &quot;.&quot;)\n+  end\n+\n+  ##\n   # Wraps +text+ to +wrap+ characters and optionally indents by +indent+\n   # characters\n\n   def format_text(text, wrap, indent=0)\n     result = []\n-    work = text.dup\n+    work = clean_text(text)\n\n     while work.length &gt; wrap do\n       if work =~ /^(.{0,#{wrap}})[ \\n]/ then\ndiff --git a/test/rubygems/test_gem_commands_query_command.rb b/test/rubygems/test_gem_commands_query_command.rb\nindex 84701d7c..20f4731c 100644\n--- a/test/rubygems/test_gem_commands_query_command.rb\n+++ b/test/rubygems/test_gem_commands_query_command.rb\n@@ -128,6 +128,46 @@ pl (1)\n     assert_equal &#39;&#39;, [@ui](/ui).error\n   end\n\n+  def test_execute_details_cleans_text\n+    spec_fetcher do |fetcher|\n+      fetcher.spec &#39;a&#39;, 2 do |s|\n+        s.summary = &#39;This is a lot of text. &#39; * 4\n+        s.authors = [&quot;Abraham Lincoln \\u0001&quot;, &quot;\\u0002 Hirohito&quot;]\n+        s.homepage = &quot;http://a.example.com/\\u0003&quot;\n+      end\n+\n+      fetcher.legacy_platform\n+    end\n+\n+    [@cmd](/cmd).handle_options %w[-r -d]\n+\n+    use_ui [@ui](/ui) do\n+      [@cmd](/cmd).execute\n+    end\n+\n+    expected = &lt;&lt;-EOF\n+\n+*** REMOTE GEMS ***\n+\n+a (2)\n+    Authors: Abraham Lincoln ., . Hirohito\n+    Homepage: http://a.example.com/.\n+\n+    This is a lot of text. This is a lot of text. This is a lot of text.\n+    This is a lot of text.\n+\n+pl (1)\n+    Platform: i386-linux\n+    Author: A User\n+    Homepage: http://example.com\n+\n+    this is a summary\n+    EOF\n+\n+    assert_equal expected, [@ui](/ui).output\n+    assert_equal &#39;&#39;, [@ui](/ui).error\n+  end\n+\n   def test_execute_installed\n     [@cmd](/cmd).handle_options %w[-n a --installed]\n\ndiff --git a/test/rubygems/test_gem_text.rb b/test/rubygems/test_gem_text.rb\nindex a6e22e04..4875f37c 100644\n--- a/test/rubygems/test_gem_text.rb\n+++ b/test/rubygems/test_gem_text.rb\n@@ -36,6 +36,10 @@ Without the wrapping, the text might not look good in the RSS feed.\n     assert_equal expected, format_text(text, 78)\n   end\n\n+  def test_format_removes_nonprintable_characters\n+    assert_equal &quot;text with weird .. stuff&quot;, format_text(&quot;text with weird \\u001b\\u0002 stuff&quot;, 40)\n+  end\n+\n   def test_min3\n     assert_equal 1, min3(1, 1, 1)\n     assert_equal 1, min3(1, 1, 2)\n-- \n2.11.0 (Apple Git-81)\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1692261, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-22T17:26:07.222Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-22T17:26:07.222Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Looks good! \ud83d\udc4d\ud83c\udffb", 
            "markdown_message": "<p>Looks good! \ud83d\udc4d\ud83c\udffb</p>\n", 
            "type": "Activities::Comment", 
            "id": 1692381, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-22T23:00:54.908Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-22T23:00:54.908Z", 
            "actor": {
                "username": "evanphx", 
                "url": "/evanphx", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Here is a version that allows unicode characters properly by using a black list:\n\n```\nFrom 6bc7ea37b391fe4b617bcc984f600677185c396e Mon Sep 17 00:00:00 2001\nFrom: Evan Phoenix <evan@phx.io>\nDate: Mon, 22 May 2017 09:44:08 -0700\nSubject: [PATCH] Clean any text present in gems before displaying it\n\nThis makes sure that any data pulled out of a gem spec is cleaned of all\nnon-printable characters before printing it. This prevents a gem from\ncausing havoc with a users terminal.\n---\n lib/rubygems/commands/query_command.rb           |  2 +-\n lib/rubygems/text.rb                             |  9 +++++-\n test/rubygems/test_gem_commands_query_command.rb | 40 ++++++++++++++++++++++++\n test/rubygems/test_gem_text.rb                   |  4 +++\n 4 files changed, 53 insertions(+), 2 deletions(-)\n\ndiff --git a/lib/rubygems/commands/query_command.rb b/lib/rubygems/commands/query_command.rb\nindex 0f58490e..7a436f76 100644\n--- a/lib/rubygems/commands/query_command.rb\n+++ b/lib/rubygems/commands/query_command.rb\n@@ -226,7 +226,7 @@ is too hard to use.\n         end\n       end\n \n-      output << make_entry(matching_tuples, platforms)\n+      output << clean_text(make_entry(matching_tuples, platforms))\n     end\n   end\n \ndiff --git a/lib/rubygems/text.rb b/lib/rubygems/text.rb\nindex 732f1b99..edb76340 100644\n--- a/lib/rubygems/text.rb\n+++ b/lib/rubygems/text.rb\n@@ -7,12 +7,19 @@ require 'rubygems'\n module Gem::Text\n \n   ##\n+  # Remove any non-printable characters and make the text suitable for\n+  # printing.\n+  def clean_text(text)\n+    text.gsub(/[\\u0000-\\u0008\\u000b-\\u000c\\u000e-\\u001F\\u007f]/, \".\".freeze)\n+  end\n+\n+  ##\n   # Wraps +text+ to +wrap+ characters and optionally indents by +indent+\n   # characters\n \n   def format_text(text, wrap, indent=0)\n     result = []\n-    work = text.dup\n+    work = clean_text(text)\n \n     while work.length > wrap do\n       if work =~ /^(.{0,#{wrap}})[ \\n]/ then\ndiff --git a/test/rubygems/test_gem_commands_query_command.rb b/test/rubygems/test_gem_commands_query_command.rb\nindex 84701d7c..20f4731c 100644\n--- a/test/rubygems/test_gem_commands_query_command.rb\n+++ b/test/rubygems/test_gem_commands_query_command.rb\n@@ -128,6 +128,46 @@ pl (1)\n     assert_equal '', @ui.error\n   end\n \n+  def test_execute_details_cleans_text\n+    spec_fetcher do |fetcher|\n+      fetcher.spec 'a', 2 do |s|\n+        s.summary = 'This is a lot of text. ' * 4\n+        s.authors = [\"Abraham Lincoln \\u0001\", \"\\u0002 Hirohito\"]\n+        s.homepage = \"http://a.example.com/\\u0003\"\n+      end\n+\n+      fetcher.legacy_platform\n+    end\n+\n+    @cmd.handle_options %w[-r -d]\n+\n+    use_ui @ui do\n+      @cmd.execute\n+    end\n+\n+    expected = <<-EOF\n+\n+*** REMOTE GEMS ***\n+\n+a (2)\n+    Authors: Abraham Lincoln ., . Hirohito\n+    Homepage: http://a.example.com/.\n+\n+    This is a lot of text. This is a lot of text. This is a lot of text.\n+    This is a lot of text.\n+\n+pl (1)\n+    Platform: i386-linux\n+    Author: A User\n+    Homepage: http://example.com\n+\n+    this is a summary\n+    EOF\n+\n+    assert_equal expected, @ui.output\n+    assert_equal '', @ui.error\n+  end\n+\n   def test_execute_installed\n     @cmd.handle_options %w[-n a --installed]\n \ndiff --git a/test/rubygems/test_gem_text.rb b/test/rubygems/test_gem_text.rb\nindex a6e22e04..4875f37c 100644\n--- a/test/rubygems/test_gem_text.rb\n+++ b/test/rubygems/test_gem_text.rb\n@@ -36,6 +36,10 @@ Without the wrapping, the text might not look good in the RSS feed.\n     assert_equal expected, format_text(text, 78)\n   end\n \n+  def test_format_removes_nonprintable_characters\n+    assert_equal \"text with weird .. stuff\", format_text(\"text with weird \\u001b\\u0002 stuff\", 40)\n+  end\n+\n   def test_min3\n     assert_equal 1, min3(1, 1, 1)\n     assert_equal 1, min3(1, 1, 2)\n-- \n2.11.0 (Apple Git-81)\n\n```", 
            "markdown_message": "<p>Here is a version that allows unicode characters properly by using a black list:</p>\n<pre class=\"highlight plaintext\"><code>From 6bc7ea37b391fe4b617bcc984f600677185c396e Mon Sep 17 00:00:00 2001\nFrom: Evan Phoenix &lt;evan@phx.io&gt;\nDate: Mon, 22 May 2017 09:44:08 -0700\nSubject: [PATCH] Clean any text present in gems before displaying it\n\nThis makes sure that any data pulled out of a gem spec is cleaned of all\nnon-printable characters before printing it. This prevents a gem from\ncausing havoc with a users terminal.\n---\n lib/rubygems/commands/query_command.rb           |  2 +-\n lib/rubygems/text.rb                             |  9 +++++-\n test/rubygems/test_gem_commands_query_command.rb | 40 ++++++++++++++++++++++++\n test/rubygems/test_gem_text.rb                   |  4 +++\n 4 files changed, 53 insertions(+), 2 deletions(-)\n\ndiff --git a/lib/rubygems/commands/query_command.rb b/lib/rubygems/commands/query_command.rb\nindex 0f58490e..7a436f76 100644\n--- a/lib/rubygems/commands/query_command.rb\n+++ b/lib/rubygems/commands/query_command.rb\n@@ -226,7 +226,7 @@ is too hard to use.\n         end\n       end\n\n-      output &lt;&lt; make_entry(matching_tuples, platforms)\n+      output &lt;&lt; clean_text(make_entry(matching_tuples, platforms))\n     end\n   end\n\ndiff --git a/lib/rubygems/text.rb b/lib/rubygems/text.rb\nindex 732f1b99..edb76340 100644\n--- a/lib/rubygems/text.rb\n+++ b/lib/rubygems/text.rb\n@@ -7,12 +7,19 @@ require &#39;rubygems&#39;\n module Gem::Text\n\n   ##\n+  # Remove any non-printable characters and make the text suitable for\n+  # printing.\n+  def clean_text(text)\n+    text.gsub(/[\\u0000-\\u0008\\u000b-\\u000c\\u000e-\\u001F\\u007f]/, &quot;.&quot;.freeze)\n+  end\n+\n+  ##\n   # Wraps +text+ to +wrap+ characters and optionally indents by +indent+\n   # characters\n\n   def format_text(text, wrap, indent=0)\n     result = []\n-    work = text.dup\n+    work = clean_text(text)\n\n     while work.length &gt; wrap do\n       if work =~ /^(.{0,#{wrap}})[ \\n]/ then\ndiff --git a/test/rubygems/test_gem_commands_query_command.rb b/test/rubygems/test_gem_commands_query_command.rb\nindex 84701d7c..20f4731c 100644\n--- a/test/rubygems/test_gem_commands_query_command.rb\n+++ b/test/rubygems/test_gem_commands_query_command.rb\n@@ -128,6 +128,46 @@ pl (1)\n     assert_equal &#39;&#39;, [@ui](/ui).error\n   end\n\n+  def test_execute_details_cleans_text\n+    spec_fetcher do |fetcher|\n+      fetcher.spec &#39;a&#39;, 2 do |s|\n+        s.summary = &#39;This is a lot of text. &#39; * 4\n+        s.authors = [&quot;Abraham Lincoln \\u0001&quot;, &quot;\\u0002 Hirohito&quot;]\n+        s.homepage = &quot;http://a.example.com/\\u0003&quot;\n+      end\n+\n+      fetcher.legacy_platform\n+    end\n+\n+    [@cmd](/cmd).handle_options %w[-r -d]\n+\n+    use_ui [@ui](/ui) do\n+      [@cmd](/cmd).execute\n+    end\n+\n+    expected = &lt;&lt;-EOF\n+\n+*** REMOTE GEMS ***\n+\n+a (2)\n+    Authors: Abraham Lincoln ., . Hirohito\n+    Homepage: http://a.example.com/.\n+\n+    This is a lot of text. This is a lot of text. This is a lot of text.\n+    This is a lot of text.\n+\n+pl (1)\n+    Platform: i386-linux\n+    Author: A User\n+    Homepage: http://example.com\n+\n+    this is a summary\n+    EOF\n+\n+    assert_equal expected, [@ui](/ui).output\n+    assert_equal &#39;&#39;, [@ui](/ui).error\n+  end\n+\n   def test_execute_installed\n     [@cmd](/cmd).handle_options %w[-n a --installed]\n\ndiff --git a/test/rubygems/test_gem_text.rb b/test/rubygems/test_gem_text.rb\nindex a6e22e04..4875f37c 100644\n--- a/test/rubygems/test_gem_text.rb\n+++ b/test/rubygems/test_gem_text.rb\n@@ -36,6 +36,10 @@ Without the wrapping, the text might not look good in the RSS feed.\n     assert_equal expected, format_text(text, 78)\n   end\n\n+  def test_format_removes_nonprintable_characters\n+    assert_equal &quot;text with weird .. stuff&quot;, format_text(&quot;text with weird \\u001b\\u0002 stuff&quot;, 40)\n+  end\n+\n   def test_min3\n     assert_equal 1, min3(1, 1, 1)\n     assert_equal 1, min3(1, 1, 2)\n-- \n2.11.0 (Apple Git-81)\n\n</code></pre>", 
            "type": "Activities::Comment", 
            "id": 1693346, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-25T13:28:40.601Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-25T13:28:40.601Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Evan, thank you for the patch!  Though I'm not familiar with RubyGems source code, it looks good to me.\n\nJust curious:\n\n~~~\n+        s.summary = 'This is a lot of text. ' * 4\n~~~\n\nWhy does the test string include no control character?", 
            "markdown_message": "<p>Evan, thank you for the patch!  Though I&#39;m not familiar with RubyGems source code, it looks good to me.</p>\n\n<p>Just curious:</p>\n<pre class=\"highlight plaintext\"><code>+        s.summary = &#39;This is a lot of text. &#39; * 4\n</code></pre>\n<p>Why does the test string include no control character?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1700554, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-26T05:11:07.086Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-26T05:11:07.086Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "This patch fails on 1.8.7", 
            "markdown_message": "<p>This patch fails on 1.8.7</p>\n", 
            "type": "Activities::Comment", 
            "id": 1702774, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-05-26T05:31:01.819Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-05-26T05:31:01.819Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "This regexp seems to work on 1.8.7 `[\\000-\\b\\v-\\f\\016-\\037\\127]`", 
            "markdown_message": "<p>This regexp seems to work on 1.8.7 <code>[\\000-\\b\\v-\\f\\016-\\037\\127]</code></p>\n", 
            "type": "Activities::Comment", 
            "id": 1702788, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-17T16:55:28.761Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-17T16:55:28.761Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Any updates?", 
            "markdown_message": "<p>Any updates?</p>\n", 
            "type": "Activities::Comment", 
            "id": 1763335, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-25T02:00:41.477Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-25T02:00:41.477Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "I think you have been busy, but please don't forget this issue :-)", 
            "markdown_message": "<p>I think you have been busy, but please don&#39;t forget this issue :-)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1779113, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-25T23:35:43.284Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-25T23:35:43.284Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "@mame thank you for the reminder :) I will do some following up.", 
            "markdown_message": "<p><a href=\"/mame\">@mame</a> thank you for the reminder :) I will do some following up.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1779792, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-07-03T12:09:23.220Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-03T12:09:23.220Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "No one has commented on the validity of the replacement regexp that I suggested for 1.8.7 compatibility yet", 
            "markdown_message": "<p>No one has commented on the validity of the replacement regexp that I suggested for 1.8.7 compatibility yet</p>\n", 
            "type": "Activities::Comment", 
            "id": 1799109, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "mame", 
                "url": "/mame"
            }, 
            "created_at": "2017-08-28T02:08:43.100Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-28T02:08:43.100Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Released in http://blog.rubygems.org/2017/08/27/2.6.13-released.html", 
            "markdown_message": "<p>Released in <a title=\"http://blog.rubygems.org/2017/08/27/2.6.13-released.html\" href=\"/redirect?signature=ac71d7eadf4bdf64e886fe7e2e57f6393ebdec56&amp;url=http%3A%2F%2Fblog.rubygems.org%2F2017%2F08%2F27%2F2.6.13-released.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://blog.rubygems.org/2017/08/27/2.6.13-released.html</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1958767, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-28T16:42:31.656Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-28T16:42:31.656Z", 
            "actor": {
                "username": "segiddins", 
                "url": "/segiddins", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1960611, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T09:35:47.834Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T09:35:47.834Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Thank you for fixing the issue and releasing new version!  I'm okay to disclose this ticket.  What should I do?\n\nAlso, may I have any bounty? :-)", 
            "markdown_message": "<p>Thank you for fixing the issue and releasing new version!  I&#39;m okay to disclose this ticket.  What should I do?</p>\n\n<p>Also, may I have any bounty? :-)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1965298, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-08-30T23:08:01.433Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:08:01.433Z", 
            "actor": {
                "url": "/rubygems", 
                "profile": {
                    "name": "RubyGems"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
                }
            }, 
            "team_handle": "rubygems", 
            "bonus_amount": "0.0", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "mame", 
                "url": "/mame"
            }, 
            "message": "Based on the [guidelines posted on HackerOne](https://hackerone.com/rubygems#internet-bug-bounty-qualification), this vulnerability is low severity: does not guarantee arbitrary remote code execution, but does potentially allow it. The bounty for low severity is $500. Thank you for your report!", 
            "markdown_message": "<p>Based on the <a href=\"https://hackerone.com/rubygems#internet-bug-bounty-qualification\">guidelines posted on HackerOne</a>, this vulnerability is low severity: does not guarantee arbitrary remote code execution, but does potentially allow it. The bounty for low severity is $500. Thank you for your report!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 1967665, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:20:03.022Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:20:03.022Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "cve_ids": [
                "CVE-2017-0899"
            ], 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::CveIdAdded", 
            "id": 1967693, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:20:14.751Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:20:14.751Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "Low", 
                "old_severity": null
            }, 
            "team_handle": "rubygems", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 1967694, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-30T23:20:55.013Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-30T23:20:55.013Z", 
            "actor": {
                "username": "indirect", 
                "url": "/indirect", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/097/577/23786b25bd4c9fb25efcb425e5a76b92c052fcef_medium.jpg?1477380547"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Disclosing ticket as agreed by reporter.", 
            "markdown_message": "<p>Disclosing ticket as agreed by reporter.</p>\n", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 1967695, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-31T23:15:08.618Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-31T23:15:08.618Z", 
            "actor": {
                "username": "mame", 
                "url": "/mame", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "rubygems", 
            "message": "Thank you very much!", 
            "markdown_message": "<p>Thank you very much!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1969954, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "mame", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/mame", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 58, 
        "name": "Command Injection - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -37605055.88464663, 
    "disclosed_at": "2017-08-30T23:20:55.044Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/226335", 
    "created_at": "2017-05-05T13:35:48.312Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Seems we can include any escape sequence in the &quot;summary&quot; field of gemspec.  This allows attackers to inject escape sequences to a victim&#39;s terminal emulator.</p>\n\n<h2 id=\"how-to-attack\">How to attack</h2>\n\n<p>1) An attacker creates a gem with summary string that includes malicious escape sequences, and push it to rubygems.org.<br>\n2) A victim executes <code>gem search attackers-gem -d</code>, and the malicious string is printed in the terminal emulator.</p>\n\n<p>In general, this is considered vulnerable.  I&#39;d like you to read <a href=\"/redirect?signature=bd2ae4bc0c0dd36395d054197dcaf01e9ae959a1&amp;url=http%3A%2F%2Fmarc.info%2F%3Fl%3Dbugtraq%26m%3D104612710031920%26w%3D2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Terminal Emulator Security Issues</span><i class=\"icon-external-link\"></i></a> in detail.  In short, an attacker can exploit this, not only to surprise a victim with a rainbow string, but also to inject malicious command to a victim&#39;s terminal, which may lead to abitrary code execution.  Ruby WEBrick also handled a similar issue as <a href=\"/redirect?signature=436c39d311fad29a8df865b51a3d861206005df3&amp;url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2010%2F01%2F10%2Fwebrick-escape-sequence-injection%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>a vulnerability</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<h2 id=\"proof-of-concept\">Proof of concept</h2>\n\n<p>1) Prepare the following gemspec.</p>\n<pre class=\"highlight plaintext\"><code>Gem::Specification.new do |spec|\n  spec.name     = &quot;escape-sequence-injection-vulnerability&quot;\n  spec.version  = &quot;0.0.1&quot;\n  spec.authors  = [&quot;Yusuke Endoh&quot;]\n  spec.email    = [&quot;mame@ruby-lang.org&quot;]\n  spec.summary  = &quot;foo\\e[31mbar\\e[0mbaz \\e]2;BOOM!\\a&quot;\n  spec.homepage = &quot;http://example.com/&quot;\n  spec.license  = &quot;MIT&quot;\nend\n</code></pre>\n<p>2) Run the following commands</p>\n<pre class=\"highlight plaintext\"><code>gem build escape-sequence-injection-vulnerability.gemspec\ngem install escape-sequence-injection-vulnerability-0.0.1.gem\n</code></pre>\n<p>3) Run the following command.</p>\n<pre class=\"highlight plaintext\"><code>gem query escape-sequence-injection-vulnerability -d &amp;&amp; sleep 10\n</code></pre>\n<p>You will see a summary line &quot;foobarbaz&quot; (with &quot;bar&quot; red), and its window title changed &quot;BOOM!&quot;.</p>\n", 
    "severity_rating": "low", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://rubygems.org", 
            "about": "RubyGems.org is the Ruby community\u2019s gem hosting service.", 
            "twitter_handle": "rubygems_status", 
            "name": "RubyGems"
        }, 
        "handle": "rubygems", 
        "url": "https://hackerone.com/rubygems", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/008/212/0e820a45b51fb96fad86945c67150263527c69ed_small.png?1469676240", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/008/212/fb193d1c05feff770bc8d4a69e09613b5f9f4c3d_medium.png?1469676240"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 8212, 
        "default_currency": "usd"
    }, 
    "is_published": false
}