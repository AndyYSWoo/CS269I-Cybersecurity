{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2014-04-23T17:31:17.298Z", 
    "voters": [
        "m13z", 
        "bogdantcaciuc", 
        "ahiezer", 
        "redshark1802", 
        "greyhat", 
        "tbh", 
        "mogyhacker", 
        "helium_gog"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 7779, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-05-16T17:58:40.134Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Local File Include on marketing-dam.yahoo.com", 
    "is_member_of_team?": null, 
    "vote_count": 8, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 569, 
            "content": "Thank you for your submission to the Yahoo Bug Bounty program. We were able to reproduce the issue you reported and have implemented appropriate fixes. We appreciate your adherence to responsible disclosure guidelines and look forward to your future participation in the program.", 
            "content_html": "<p>Thank you for your submission to the Yahoo Bug Bounty program. We were able to reproduce the issue you reported and have implemented appropriate fixes. We appreciate your adherence to responsible disclosure guidelines and look forward to your future participation in the program.</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 663, 
            "content": "Local File Include vulnerability on marketing-dam.yahoo.com\n\nThe vulnerable end-point is marketing-dam.yahoo.com/DLMExt/DLAgent?dlurl=, usually the get parameter for ```dlurl``` looks like this: ```8lcO%3A%2F%2F0w.QbN.0.*Q%3Anbbn0%2FPSID%3Fz8A%3DAxT_DIfP7_UO9Y6I_hD67IdcI%26Ujd%3DlpxBXLmiKWMPRwUsLpu8cZ%26hj%3DaR9UU_hI-q5_UjP.W7U```\nWhen this get-parameter is url-decoded, the follwing \"sub\"get-parameter are visible: ```z8A```, ```Ujd```, ```hj```.\nThe vulnerable parameter is  ```hj```, which is usually encrypted and reflected as the filename to be downloaded.\n\nThe parameter is encoded using ecb-encryption with a blocksize of 32 characters-\n\nI've mapped the chracters using requests like this 'aaaaaaaaaa...'(32 characters) and the server responded with: 'aTYUYTSaTZUYVZTaUZVYWWXTZVYXUTZS'.\nNow when I want to insert a 'T' at position 2 of the block I knew I had to use the charcter 'a'.\n\nThis way I was able to craft encrypted strings on the fly (see ```Steps to reproduce and my attached poc```) which were decrypted by the server and directly used to load the file from the filesystem.\n\nSince the webserver used to serve the files is running as ```root```, I was able to actually read not just the usal ```/etc/passwd``` but ```/etc/shadow```.  Unfortunately, I was not able to get code execution on the server, but given enough time an attacker could quite surely exfiltrate enough informaton from the system (since the server is running as ```root```) to perform remote code execution.\n\nSteps to reproduce:\ngot to https://brandtoolkit.yahoo.com/ and request a download for any file\nthe download popup should appear, take the url and save it for later\n\nUse my poc to encrypt the following string: ```/../../../../../../../../etc/passwd```, or use this already encrypted string ```/../../../../../../../../79d/zGcIwd```\n(Please note that this poc is writen with node-js in mind, but the function ```ecnrypt``` should run in any other js-environment as long as you copy the ```blocks``` object with it)\nreplace the string after ```hj%3D``` with the encrypted string in the saved  download-url \nafter executing the \"download\" you will see the contents of  ```/etc/passwd```\n\nSince I don't want to post any critical information that could be used after the vulnerability has been fixed I'm not attaching the ```/etc/passwd``` file, but I'm going to give you the length of the file, which is 610. This way you can probably more quickly verify this vulnerability.\n", 
            "content_html": "<p>Local File Include vulnerability on marketing-dam.yahoo.com</p>\n\n<p>The vulnerable end-point is marketing-dam.yahoo.com/DLMExt/DLAgent?dlurl=, usually the get parameter for <code>dlurl</code> looks like this: <code>8lcO%3A%2F%2F0w.QbN.0.*Q%3Anbbn0%2FPSID%3Fz8A%3DAxT_DIfP7_UO9Y6I_hD67IdcI%26Ujd%3DlpxBXLmiKWMPRwUsLpu8cZ%26hj%3DaR9UU_hI-q5_UjP.W7U</code><br>\nWhen this get-parameter is url-decoded, the follwing &quot;sub&quot;get-parameter are visible: <code>z8A</code>, <code>Ujd</code>, <code>hj</code>.<br>\nThe vulnerable parameter is  <code>hj</code>, which is usually encrypted and reflected as the filename to be downloaded.</p>\n\n<p>The parameter is encoded using ecb-encryption with a blocksize of 32 characters-</p>\n\n<p>I&#39;ve mapped the chracters using requests like this &#39;aaaaaaaaaa...&#39;(32 characters) and the server responded with: &#39;aTYUYTSaTZUYVZTaUZVYWWXTZVYXUTZS&#39;.<br>\nNow when I want to insert a &#39;T&#39; at position 2 of the block I knew I had to use the charcter &#39;a&#39;.</p>\n\n<p>This way I was able to craft encrypted strings on the fly (see <code>Steps to reproduce and my attached poc</code>) which were decrypted by the server and directly used to load the file from the filesystem.</p>\n\n<p>Since the webserver used to serve the files is running as <code>root</code>, I was able to actually read not just the usal <code>/etc/passwd</code> but <code>/etc/shadow</code>.  Unfortunately, I was not able to get code execution on the server, but given enough time an attacker could quite surely exfiltrate enough informaton from the system (since the server is running as <code>root</code>) to perform remote code execution.</p>\n\n<p>Steps to reproduce:<br>\ngot to <a title=\"https://brandtoolkit.yahoo.com/\" href=\"/redirect?signature=93d2883b440b83afab4dc967e7d69e1335f47243&amp;url=https%3A%2F%2Fbrandtoolkit.yahoo.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://brandtoolkit.yahoo.com/</span><i class=\"icon-external-link\"></i></a> and request a download for any file<br>\nthe download popup should appear, take the url and save it for later</p>\n\n<p>Use my poc to encrypt the following string: <code>/../../../../../../../../etc/passwd</code>, or use this already encrypted string <code>/../../../../../../../../79d/zGcIwd</code><br>\n(Please note that this poc is writen with node-js in mind, but the function <code>ecnrypt</code> should run in any other js-environment as long as you copy the <code>blocks</code> object with it)<br>\nreplace the string after <code>hj%3D</code> with the encrypted string in the saved  download-url <br>\nafter executing the &quot;download&quot; you will see the contents of  <code>/etc/passwd</code></p>\n\n<p>Since I don&#39;t want to post any critical information that could be used after the vulnerability has been fixed I&#39;m not attaching the <code>/etc/passwd</code> file, but I&#39;m going to give you the length of the file, which is 610. This way you can probably more quickly verify this vulnerability.</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-05-23T15:44:48.720Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,500", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-04-16T22:36:53.129Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-16T22:36:53.129Z", 
            "actor": {
                "username": "redshark1802", 
                "url": "/redshark1802", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/538/8a89f95a5dde2952324d5d7360d5dbe653a33bbe_medium.jpg?1413822291"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 31571, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-04-17T21:48:51.263Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-17T21:48:51.263Z", 
            "actor": {
                "username": "junot", 
                "url": "/junot", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 32159, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "redshark1802", 
                "url": "/redshark1802"
            }, 
            "created_at": "2014-04-23T15:44:49.730Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-23T15:44:49.730Z", 
            "actor": {
                "username": "sunshine", 
                "url": "/sunshine", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 37280, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-04-23T16:47:44.098Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-23T16:47:44.098Z", 
            "actor": {
                "username": "redshark1802", 
                "url": "/redshark1802", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/538/8a89f95a5dde2952324d5d7360d5dbe653a33bbe_medium.jpg?1413822291"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 37346, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-04-23T17:31:17.317Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-04-23T17:31:17.317Z", 
            "actor": {
                "username": "redshark1802", 
                "url": "/redshark1802", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/538/8a89f95a5dde2952324d5d7360d5dbe653a33bbe_medium.jpg?1413822291"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 37395, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-05-07T04:37:16.857Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-05-07T04:37:50.244Z", 
            "actor": {
                "username": "redshark1802", 
                "url": "/redshark1802", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/538/8a89f95a5dde2952324d5d7360d5dbe653a33bbe_medium.jpg?1413822291"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 45507, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-05-16T17:58:40.151Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-05-16T17:58:40.151Z", 
            "actor": {
                "username": "junot", 
                "url": "/junot", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 52428, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-05-16T17:58:40.768Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-05-16T17:58:40.768Z", 
            "actor": {
                "username": "junot", 
                "url": "/junot", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 52429, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2014-07-23T22:00:59.579Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T22:00:59.579Z", 
            "actor": {
                "url": "/oath", 
                "profile": {
                    "name": "Oath"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/019/82622b3b71956e67dd60e7bdaaaa7ec5e2a08c48_medium.png?1539968350"
                }
            }, 
            "team_handle": "oath", 
            "bounty_amount": "2500.0", 
            "collaborator": {
                "username": "redshark1802", 
                "url": "/redshark1802"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 94888, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-30T11:12:51.266Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-30T11:12:51.266Z", 
            "actor": {
                "username": "redshark1802", 
                "url": "/redshark1802", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/003/538/8a89f95a5dde2952324d5d7360d5dbe653a33bbe_medium.jpg?1413822291"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "oath", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 98157, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "redshark1802", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/redshark1802", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/003/538/27b4273c8e5a750637dde039ae212239c5838b5a_small.jpg?1413822291"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 32, 
        "name": "Cryptographic Issues - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "no-content", 
    "allow_singular_disclosure_after": -143277571.26511, 
    "disclosed_at": "2014-05-16T17:58:40.753Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/7779", 
    "created_at": "2014-04-16T16:59:52.320Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "", 
    "vulnerability_information": "", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.oath.com", 
            "about": "Build Brands Members Love", 
            "twitter_handle": "oath", 
            "name": "Oath"
        }, 
        "handle": "oath", 
        "url": "https://hackerone.com/oath", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/019/08cce6267ac3a49e488c4cbbe3e54097a911d65e_small.png?1539968350", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/019/82622b3b71956e67dd60e7bdaaaa7ec5e2a08c48_medium.png?1539968350"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 19, 
        "default_currency": "usd"
    }, 
    "is_published": false
}