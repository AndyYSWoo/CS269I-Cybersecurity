{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 17311, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2014-06-23T12:25:46.874Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Breach Attack Vulnerability", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2014-07-23T12:25:47.094Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2014-06-23T11:32:39.651Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T11:32:39.651Z", 
            "actor": {
                "username": "anonymous_india", 
                "url": "/anonymous_india", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "WHAT IS THIS?\n\nThis tool features the basic BREACH attack. We're working on the browser-based prototype shown at BlackHat 2013.\n\nThis is intended for self-assessment only. Don't do bad things.\nNOTES\n\n    MITM: This is not required for the PoC. Instead, we suggest a simple HOSTS entry to enable measurement of the encrypted traffic.\n\n    Browserless: At this time we provide a simple HTTP client that simulates browser behavior. The full-featured browser-based tool will follow.\n\n    Block Ciphers: The tool isn't smart enough to work against block ciphers yet. Maybe you can send us a pull request to fix this!\n\nHOW TO USE IT\nRequirements:\n\n    Windows OS (7+ tested)\n    .NET 3.5+ Framework\n    Visual Studio 2010+ (if you want to modify the code)\n\nHow to run:\n\n    Build the projects to get the executables, or download them at http://breachattack.com/precompiled/.\n    Run (echo. && echo 127.0.0.1 malbot.net) >> %windir%\\system32\\drivers\\etc\\hosts in a command shell with admin privs.\n    Launch SSLProxy.exe.\n    Launch BREACH Basic.exe.\n    Verify the secret extracted is correct. (Take a look at the source of https://malbot.net/poc/.)\n\nHow to customize:\n\n    Edit your hosts file entry with your new target.\n    Edit TargetIP address in SSLProxy.cs.\n    Edit KeySpace in BREACH Basic.cs to reflect the target secret's alphabet.\n    Edit TargetURL in BREACH Basic.cs.\n    Edit canary to specify your bootstrapping sequence in 'BREACH Basic.cs'.\n    Compile & Run.\n\nHow to contribute:\n\nFork this repo. Make some awesome changes. Send us a pull request.", 
            "markdown_message": "<p>WHAT IS THIS?</p>\n\n<p>This tool features the basic BREACH attack. We&#39;re working on the browser-based prototype shown at BlackHat 2013.</p>\n\n<p>This is intended for self-assessment only. Don&#39;t do bad things.<br>\nNOTES</p>\n<pre class=\"highlight plaintext\"><code>MITM: This is not required for the PoC. Instead, we suggest a simple HOSTS entry to enable measurement of the encrypted traffic.\n\nBrowserless: At this time we provide a simple HTTP client that simulates browser behavior. The full-featured browser-based tool will follow.\n\nBlock Ciphers: The tool isn&#39;t smart enough to work against block ciphers yet. Maybe you can send us a pull request to fix this!\n</code></pre>\n<p>HOW TO USE IT<br>\nRequirements:</p>\n<pre class=\"highlight plaintext\"><code>Windows OS (7+ tested)\n.NET 3.5+ Framework\nVisual Studio 2010+ (if you want to modify the code)\n</code></pre>\n<p>How to run:</p>\n<pre class=\"highlight plaintext\"><code>Build the projects to get the executables, or download them at http://breachattack.com/precompiled/.\nRun (echo. &amp;&amp; echo 127.0.0.1 malbot.net) &gt;&gt; %windir%\\system32\\drivers\\etc\\hosts in a command shell with admin privs.\nLaunch SSLProxy.exe.\nLaunch BREACH Basic.exe.\nVerify the secret extracted is correct. (Take a look at the source of https://malbot.net/poc/.)\n</code></pre>\n<p>How to customize:</p>\n<pre class=\"highlight plaintext\"><code>Edit your hosts file entry with your new target.\nEdit TargetIP address in SSLProxy.cs.\nEdit KeySpace in BREACH Basic.cs to reflect the target secret&#39;s alphabet.\nEdit TargetURL in BREACH Basic.cs.\nEdit canary to specify your bootstrapping sequence in &#39;BREACH Basic.cs&#39;.\nCompile &amp; Run.\n</code></pre>\n<p>How to contribute:</p>\n\n<p>Fork this repo. Make some awesome changes. Send us a pull request.</p>\n", 
            "type": "Activities::Comment", 
            "id": 77684, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T11:38:46.992Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T11:38:46.992Z", 
            "actor": {
                "username": "gazly", 
                "url": "/gazly", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/044/3fa653b5874ed6549cc5039067c74f28968b6a04_medium.jpg?1415520242"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Hi, As mentioned in our program rules, BEAST/CRIME are excluded and out of the scope of the program. Thank you for your report.", 
            "markdown_message": "<p>Hi, As mentioned in our program rules, BEAST/CRIME are excluded and out of the scope of the program. Thank you for your report.</p>\n", 
            "type": "Activities::BugNotApplicable", 
            "id": 77693, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:05:55.152Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:05:55.152Z", 
            "actor": {
                "username": "anonymous_india", 
                "url": "/anonymous_india", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Do You Want To Suck My Dick You Dumb Ass Motherfucker.", 
            "markdown_message": "<p>Do You Want To Suck My Dick You Dumb Ass Motherfucker.</p>\n", 
            "type": "Activities::Comment", 
            "id": 77720, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:06:24.901Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:06:24.901Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugReopened", 
            "id": 77722, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:07:28.010Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:07:28.010Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "Let the world see :)", 
            "markdown_message": "<p>Let the world see :)</p>\n", 
            "type": "Activities::BugInformative", 
            "id": 77723, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:11:21.141Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:11:21.141Z", 
            "actor": {
                "username": "anonymous_india", 
                "url": "/anonymous_india", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "You Know prakharprasad Your Birth Certificate Is An Apology From The Condom Factory", 
            "markdown_message": "<p>You Know prakharprasad Your Birth Certificate Is An Apology From The Condom Factory</p>\n", 
            "type": "Activities::Comment", 
            "id": 77727, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:25:46.892Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:25:46.892Z", 
            "actor": {
                "username": "prakharprasad", 
                "url": "/prakharprasad", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/001/885/77c298b91715e1f57b74d8b14de11e0ec914ad89_medium.png?1543067973"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 77741, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-06-23T12:32:38.526Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-06-23T12:32:38.526Z", 
            "actor": {
                "username": "anonymous_india", 
                "url": "/anonymous_india", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uzbey", 
            "message": "The moment you were born, a time paradox was created. The world will explode because of you!", 
            "markdown_message": "<p>The moment you were born, a time paradox was created. The world will explode because of you!</p>\n", 
            "type": "Activities::Comment", 
            "id": 77754, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2014-07-23T12:25:56.455Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2014-07-23T12:25:56.455Z", 
            "actor": {
                "url": "/uzbey", 
                "profile": {
                    "name": "Uzbey"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/230/f2033ac222410d1a234e27fe3318e86e3ccef213_medium.png?1402219598"
                }
            }, 
            "team_handle": "uzbey", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 94341, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "anonymous_india", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": true, 
        "url": "/anonymous_india", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 18, 
        "name": "Information Disclosure"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -138019116.00352854, 
    "disclosed_at": "2014-07-23T12:25:56.434Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/17311", 
    "created_at": "2014-06-23T11:30:45.287Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Breach Attack Vulnerability</p>\n\n<p>Respected Sir/Madam I Hope Your Cooperate With Me Cause It&#39;s Not Easy To Find Vulnerability On Your Official Website.<br>\nVulnerability description</p>\n\n<p>This web application is potentially vulnerable to the BREACH attack.An attacker with the ability to:</p>\n<pre class=\"highlight plaintext\"><code>Inject partial chosen plaintext into a victim&#39;s requests\nMeasure the size of encrypted traffic \n</code></pre>\n<p>can leverage information leaked by compression to recover targeted parts of the plaintext.BREACH (Browser Reconnaissance &amp; Exfiltration via Adaptive Compression of Hypertext) is a category of vulnerabilities and not a specific instance affecting a specific piece of software. To be vulnerable, a web application must:</p>\n<pre class=\"highlight plaintext\"><code>Be served from a server that uses HTTP-level compression\nReflect user-input in HTTP response bodies\nReflect a secret (such as a CSRF token) in HTTP response bodies \n</code></pre>\n<p>Affected items</p>\n<pre class=\"highlight plaintext\"><code>/ \n</code></pre>\n<p>The impact of this vulnerability</p>\n\n<p>An attacker can leverage information leaked by compression to recover targeted parts of the plaintext.</p>\n\n<p>How to fix this vulnerability</p>\n\n<p>The mitigations are ordered by effectiveness (not by their practicality - as this may differ from one application to another).</p>\n<pre class=\"highlight plaintext\"><code>Disabling HTTP compression\nSeparating secrets from user input\nRandomizing secrets per request\nMasking secrets (effectively randomizing by XORing with a random secret per request)\nProtecting vulnerable pages with CSRF\nLength hiding (by adding random number of bytes to the responses)\nRate-limiting the requests \n</code></pre>\n<p>Proof Of Concept<br>\nVulnerability description<br>\nThis web application is potentially vulnerable to the BREACH attack.An attacker with the ability to:</p>\n<pre class=\"highlight plaintext\"><code>Inject partial chosen plaintext into a victim&#39;s requests\nMeasure the size of encrypted traffic \n</code></pre>\n<p>can leverage information leaked by compression to recover targeted parts of the plaintext.BREACH (Browser Reconnaissance &amp; Exfiltration via Adaptive Compression of Hypertext) is a category of vulnerabilities and not a specific instance affecting a specific piece of software. To be vulnerable, a web application must:</p>\n<pre class=\"highlight plaintext\"><code>Be served from a server that uses HTTP-level compression\nReflect user-input in HTTP response bodies\nReflect a secret (such as a CSRF token) in HTTP response bodies \n</code></pre>\n<p>This vulnerability affects /.<br>\nAttack details<br>\nThis alert was issued because the following conditions were met:</p>\n<pre class=\"highlight plaintext\"><code>The page content is served via HTTPS\nThe server is using HTTP-level compression\nURL encoded GET input q was reflected into the HTTP response body.\nHTTP response body contains a secret named captcha_token\n</code></pre>\n<p>Request Headers</p>\n\n<p>Content-Length: 129<br>\nContent-Type: application/x-www-form-urlencoded<br>\nReferer: <a title=\"https://staging.uzbey.com/\" href=\"/redirect?signature=c12b9e572988c1dc580979c8376a0c5d27d4dcea&amp;url=https%3A%2F%2Fstaging.uzbey.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/</span><i class=\"icon-external-link\"></i></a><br>\nCookie: SSESS997d19cdd0123760ed5fa56a71cd9963=N2UOxTPQlqIqesSjgvTD_bUzYcUBdfe31_r4NnPwxnU<br>\nHost: staging.uzbey.com<br>\nConnection: Keep-alive<br>\nAccept-Encoding: gzip,deflate<br>\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.63 Safari/537.36<br>\nAccept: <em>/</em></p>\n\n<p>Exploitation Link</p>\n\n<p><a title=\"https://staging.uzbey.com/?q=user/register/_913193\" href=\"/redirect?signature=cdbb768a62c5d6bda3381cdf7ee15671edeb15d2&amp;url=https%3A%2F%2Fstaging.uzbey.com%2F%3Fq%3Duser%2Fregister%2F_913193\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://staging.uzbey.com/?q=user/register/_913193</span><i class=\"icon-external-link\"></i></a><br>\nRequest Data</p>\n\n<p>form_build_id=form-0awIfMcaolOh-FNuBKHrPM3ZCHprARkZSdhTcEEnSAc&amp;form_id=user_login&amp;name=blkpglru&amp;op=Log%20in&amp;pass=g00dPa%24%24w0rD<br>\nRespond Data</p>\n\n<p>HTTP/1.1 200 OK<br>\nDate: Mon, 23 Jun 2014 11:03:40 GMT<br>\nServer: Apache<br>\nExpires: Sun, 19 Nov 1978 05:00:00 GMT<br>\nLast-Modified: Mon, 23 Jun 2014 11:03:40 +0000<br>\nCache-Control: no-cache, must-revalidate, post-check=0, pre-check=0<br>\nETag: &quot;1403521420&quot;<br>\nContent-Language: en<br>\nVary: Accept-Encoding,User-Agent<br>\nContent-Length: 44843<br>\nConnection: close<br>\nContent-Type: text/html; charset=utf-8<br>\nOriginal-Content-Encoding: gzip<br>\nThe impact of this vulnerability<br>\nAn attacker can leverage information leaked by compression to recover targeted parts of the plaintext.</p>\n\n<p>How to fix this vulnerability</p>\n\n<p>The mitigations are ordered by effectiveness (not by their practicality - as this may differ from one application to another).</p>\n<pre class=\"highlight plaintext\"><code>Disabling HTTP compression\nSeparating secrets from user input\nRandomizing secrets per request\nMasking secrets (effectively randomizing by XORing with a random secret per request)\nProtecting vulnerable pages with CSRF\nLength hiding (by adding random number of bytes to the responses)\nRate-limiting the requests \n</code></pre>\n<p>If You Have Any Problem Related This Breach Attack Than See This I Am Sure You Will Understand That Properly What I Am Talking About</p>\n\n<p><a title=\"http://breachattack.com/\" href=\"/redirect?signature=75d76f74d494abd2d651abcf7f6a9ada1f4d7994&amp;url=http%3A%2F%2Fbreachattack.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://breachattack.com/</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Thankz For Reading My Message Have A Good Day Respected Sir/Madam Please Approved My Vulnerability Cause Of My Hard Work Which I Had Done It&#39;s Not Easy To Find Vulnerability On Your Official Website I Hope You Get My Point Of View.</p>\n", 
    "vulnerability_information": "Breach Attack Vulnerability\r\n\r\nRespected Sir/Madam I Hope Your Cooperate With Me Cause It's Not Easy To Find Vulnerability On Your Official Website.\r\nVulnerability description\r\n\r\nThis web application is potentially vulnerable to the BREACH attack.An attacker with the ability to:\r\n\r\n    Inject partial chosen plaintext into a victim's requests\r\n    Measure the size of encrypted traffic \r\n\r\ncan leverage information leaked by compression to recover targeted parts of the plaintext.BREACH (Browser Reconnaissance & Exfiltration via Adaptive Compression of Hypertext) is a category of vulnerabilities and not a specific instance affecting a specific piece of software. To be vulnerable, a web application must:\r\n\r\n    Be served from a server that uses HTTP-level compression\r\n    Reflect user-input in HTTP response bodies\r\n    Reflect a secret (such as a CSRF token) in HTTP response bodies \r\n\r\nAffected items\r\n\r\n    / \r\n\r\nThe impact of this vulnerability\r\n\r\nAn attacker can leverage information leaked by compression to recover targeted parts of the plaintext.\r\n\r\nHow to fix this vulnerability\r\n\r\nThe mitigations are ordered by effectiveness (not by their practicality - as this may differ from one application to another).\r\n\r\n    Disabling HTTP compression\r\n    Separating secrets from user input\r\n    Randomizing secrets per request\r\n    Masking secrets (effectively randomizing by XORing with a random secret per request)\r\n    Protecting vulnerable pages with CSRF\r\n    Length hiding (by adding random number of bytes to the responses)\r\n    Rate-limiting the requests \r\n\r\nProof Of Concept\r\nVulnerability description\r\nThis web application is potentially vulnerable to the BREACH attack.An attacker with the ability to:\r\n\r\n    Inject partial chosen plaintext into a victim's requests\r\n    Measure the size of encrypted traffic \r\n\r\ncan leverage information leaked by compression to recover targeted parts of the plaintext.BREACH (Browser Reconnaissance & Exfiltration via Adaptive Compression of Hypertext) is a category of vulnerabilities and not a specific instance affecting a specific piece of software. To be vulnerable, a web application must:\r\n\r\n    Be served from a server that uses HTTP-level compression\r\n    Reflect user-input in HTTP response bodies\r\n    Reflect a secret (such as a CSRF token) in HTTP response bodies \r\n\r\nThis vulnerability affects /.\r\nAttack details\r\nThis alert was issued because the following conditions were met:\r\n\r\n    The page content is served via HTTPS\r\n    The server is using HTTP-level compression\r\n    URL encoded GET input q was reflected into the HTTP response body.\r\n    HTTP response body contains a secret named captcha_token\r\n\r\nRequest Headers\r\n\r\nContent-Length: 129\r\nContent-Type: application/x-www-form-urlencoded\r\nReferer: https://staging.uzbey.com:443/\r\nCookie: SSESS997d19cdd0123760ed5fa56a71cd9963=N2UOxTPQlqIqesSjgvTD_bUzYcUBdfe31_r4NnPwxnU\r\nHost: staging.uzbey.com\r\nConnection: Keep-alive\r\nAccept-Encoding: gzip,deflate\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.63 Safari/537.36\r\nAccept: */*\r\n\r\nExploitation Link\r\n\r\nhttps://staging.uzbey.com/?q=user/register/_913193\r\nRequest Data\r\n\r\nform_build_id=form-0awIfMcaolOh-FNuBKHrPM3ZCHprARkZSdhTcEEnSAc&form_id=user_login&name=blkpglru&op=Log%20in&pass=g00dPa%24%24w0rD\r\nRespond Data\r\n\r\nHTTP/1.1 200 OK\r\nDate: Mon, 23 Jun 2014 11:03:40 GMT\r\nServer: Apache\r\nExpires: Sun, 19 Nov 1978 05:00:00 GMT\r\nLast-Modified: Mon, 23 Jun 2014 11:03:40 +0000\r\nCache-Control: no-cache, must-revalidate, post-check=0, pre-check=0\r\nETag: \"1403521420\"\r\nContent-Language: en\r\nVary: Accept-Encoding,User-Agent\r\nContent-Length: 44843\r\nConnection: close\r\nContent-Type: text/html; charset=utf-8\r\nOriginal-Content-Encoding: gzip\r\nThe impact of this vulnerability\r\nAn attacker can leverage information leaked by compression to recover targeted parts of the plaintext.\r\n\r\nHow to fix this vulnerability\r\n\r\nThe mitigations are ordered by effectiveness (not by their practicality - as this may differ from one application to another).\r\n\r\n    Disabling HTTP compression\r\n    Separating secrets from user input\r\n    Randomizing secrets per request\r\n    Masking secrets (effectively randomizing by XORing with a random secret per request)\r\n    Protecting vulnerable pages with CSRF\r\n    Length hiding (by adding random number of bytes to the responses)\r\n    Rate-limiting the requests \r\n\r\nIf You Have Any Problem Related This Breach Attack Than See This I Am Sure You Will Understand That Properly What I Am Talking About\r\n\r\nhttp://breachattack.com/\r\n\r\nThankz For Reading My Message Have A Good Day Respected Sir/Madam Please Approved My Vulnerability Cause Of My Hard Work Which I Had Done It's Not Easy To Find Vulnerability On Your Official Website I Hope You Get My Point Of View.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://staging.uzbey.com/", 
            "about": "The goal of Uzbey is to create the worlds largest selfie to be launched into space. test @jobert", 
            "twitter_handle": "", 
            "name": "Uzbey"
        }, 
        "handle": "uzbey", 
        "url": "https://hackerone.com/uzbey", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/230/48753fdb7bb218437f825053bb4a1653aad53d5c_small.png?1402219598", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/230/f2033ac222410d1a234e27fe3318e86e3ccef213_medium.png?1402219598"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 230, 
        "default_currency": "usd"
    }, 
    "is_published": false
}