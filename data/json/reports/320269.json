{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [
        "bl4de", 
        "japz", 
        "0x08"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 320269, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2018-05-12T08:54:51.401Z", 
    "vulnerability_information": "I would like to report a Buffer allocation issue in `npmconf` (and `npm` package js api).\nIt allows to extract sensitive content from uninitialized memory by passing typed input to `setCredentialsByURI`, limited to Node.js 4.x and below.\n\n# Module\n\n**module name:** `npmconf`\n**version:** 2.1.2\n**npm page:** `https://www.npmjs.com/package/npmconf`\n\n**module name:** `npm`\n**version:** 5.6.0\n**npm page:** `https://www.npmjs.com/package/npm`\n\n## Module Description\n\n> The config thing npm uses\n\n## Module Stats\n\n### npmconf\n\n40 292 downloads in the last day\n219 837 downloads in the last week\n897 947 downloads in the last month\n\n~1 0775 364 estimated downloads per year\n\n`npmconf` is deprecated, but doesn't mention security issues and is still widely used, and the usage seems to *increase* over time.\n\n### npm\n\n`npm` download stats are not representive here, as it's mainly used as a CLI, not as JS api, but here they are (e.g. for comparison with `npmconf`):\n\n141 545 downloads in the last day\n1 067 194 downloads in the last week\n3 701 192 downloads in the last month\n\n~44 414 304 estimated downloads per year\n\n# Vulnerability\n\n## Vulnerability Description\n\nWhen a number is passed to the `password` property of `config.setCredentialsByURI`, `npmconf`/`npm` allocate uninitialized Buffer instances during conversion to base64 (on Node.js 4.x) due to missing type checks before passing user input to the `new Buffer()` constructor.\n\nThose Buffer instances could (and most likely will) contain sensitive information, see [Buffer-knows-everything.md](https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md).\n\nNode.js 4.x is stated as supported in `npm`.\n\n## Steps To Reproduce:\n\nUse Node.js 4.x LTS or below.\n\n### npmconf\n```js\nvar URI = \"https://registry.example.com:8661/\";\nrequire('npmconf').load({}, function (err, conf) {\n  conf.setCredentialsByURI(URI, {username: 'foo', email: 'boo@example.com', password: 200});\n  console.log(conf.getCredentialsByURI(URI)); // This just outputs the setting\n  // conf.save('user', function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\n});\n```\n\n### npm\n```js\nvar URI = \"https://registry.example.com:8661/\";\nrequire('npm').load({}, function (err, npm) {\n  npm.config.setCredentialsByURI(URI, {username: 'foo', email: 'boo@example.com', password: 200});\n  console.log(npm.config.getCredentialsByURI(URI)); // This just outputs the setting\n  // npm.config.save('user', function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc\n});\n```\n\n## Supporting Material/References:\n\n- Arch Linux\n- Node.js v4.8.7 (latest in 4.x LTS branch)\n- npm 5.6.0\n\n# Wrap up\n\n- I contacted the maintainer to let him know: Y\n- I opened an issue in the related repository: N\n\nI reported this initially on 2016-01-20 over email, but didn't receive any response.\nProbably was deemed insignificant or out-of-scope, but I still think this should be fixed and disclosed.\n\n## Impact\n\nRead uninitialized memory, extracting sensitive information from it.\nCause a DoS by large Buffer allocation and conversion to string.", 
    "activity_page_count": 1, 
    "severity": {
        "metrics": {
            "confidentiality": "high", 
            "privileges_required": "none", 
            "user_interaction": "required", 
            "attack_vector": "network", 
            "attack_complexity": "low", 
            "scope": "changed", 
            "integrity": "none", 
            "availability": "none"
        }, 
        "rating": "high", 
        "score": 7.4, 
        "author_type": "Team"
    }, 
    "title": "`npmconf` (and `npm` js api) allocate and write to disk uninitialized memory content when a typed number is passed as input on Node.js 4.x", 
    "is_member_of_team?": null, 
    "vote_count": 3, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": {
        "asset_identifier": "npmconf", 
        "max_severity": "critical", 
        "databaseId": 9407, 
        "asset_type": "SOURCE_CODE"
    }, 
    "allow_singular_disclosure_at": "2018-06-11T08:54:51.518Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2018-03-28T06:39:45.315Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-28T06:39:45.315Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugTriaged", 
            "id": 2538933, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-28T06:42:30.800Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-28T06:42:30.800Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi @chalker,\n\nThanks for reporting this vulnerability.\nWhile both modules have shared maintainer (isaacs) there are other different collaborators between the projects.\n\nsince `npmconf` is already set as deprecated I assume there is not going to be any further fixes there but we just want to disclose the vulnerability, right?\n\nI'll invite some of the module maintainers for `npm`\n", 
            "markdown_message": "<p>Hi <a href=\"/chalker\">@chalker</a>,</p>\n\n<p>Thanks for reporting this vulnerability.<br>\nWhile both modules have shared maintainer (isaacs) there are other different collaborators between the projects.</p>\n\n<p>since <code>npmconf</code> is already set as deprecated I assume there is not going to be any further fixes there but we just want to disclose the vulnerability, right?</p>\n\n<p>I&#39;ll invite some of the module maintainers for <code>npm</code></p>\n", 
            "type": "Activities::Comment", 
            "id": 2538936, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-28T06:56:03.201Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-28T06:56:03.201Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@lirantal Thanks.\n\nYes, it looks like npmconf indeed got deprecated by now.\nBut it has 1 088 971 downloads per month though and that appears to be *inceasing* (compare to numbers mentioned in the post above).\n\nIn fact, `npmconf` worries me *more* than `npm` here,  because for the latter almost all installs are probably for the CLI tool which is not affected, but `npmconf` is always used as an API, which is where the problem is.", 
            "markdown_message": "<p><a href=\"/lirantal\">@lirantal</a> Thanks.</p>\n\n<p>Yes, it looks like npmconf indeed got deprecated by now.<br>\nBut it has 1 088 971 downloads per month though and that appears to be <em>inceasing</em> (compare to numbers mentioned in the post above).</p>\n\n<p>In fact, <code>npmconf</code> worries me <em>more</em> than <code>npm</code> here,  because for the latter almost all installs are probably for the CLI tool which is not affected, but <code>npmconf</code> is always used as an API, which is where the problem is.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2538955, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T01:26:00.868Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T01:26:00.868Z", 
            "actor": {
                "username": "iarna", 
                "url": "/iarna", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ExternalUserJoined", 
            "id": 2542391, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T02:12:55.950Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T02:12:55.950Z", 
            "actor": {
                "username": "iarna", 
                "url": "/iarna", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi, for the record, I'm the npm cli lead and one of the maintainers of many npm repos, including those two.\n\nRisk:\n\nYou loaded a config via `npmconf` (deprecated) or `npm` as a library (unsupported) and added a username and password pair where the password was a `Number` and then you called `save()`. At which point uninitialized memory from that process would be written to the user running the process's `.npmrc`.\n\nState of things:\n\n`npm` had a patch that coincidentally fixed this in `v6.0.0-next.0`, and I'd be happy to bring that patch `npm@5` as well. (`npm@6` is an active release candidate but in the meantime `npm@5` remains supported.) `npm` has 1908 dependents published on the registry. It is unknown how many use it as a library versus calling it as a cli. Some do, despite this being an unsupported mode of operation.\n\n`npmconf` has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then. I would be happy, however, to do a new release of it with a patch, while retaining its deprecated status.` npmconf` has 123 dependents published to the registry.\n\nImpact:\n\nnpm's own use would only go through the code path with `new Buffer` on when adding a user on third party registries, as `registry.npmjs.com` authenticates via tokens and not username/password pairs. As @chalker noted, in that scenario, it's still not vulnerable as there's no way to force `npm` to pass anything in other than a `String`.\n\nI would be genuinely surprised if anyone using `npm` internals as a library or `npmconf` called `setCredentialsByURI`. \n\nA naive search seems to back this up: https://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI\n\nWhich in contrast to a search for npmconf: https://www.google.com/search?q=site%3Agithub.com+npmconf\n\n", 
            "markdown_message": "<p>Hi, for the record, I&#39;m the npm cli lead and one of the maintainers of many npm repos, including those two.</p>\n\n<p>Risk:</p>\n\n<p>You loaded a config via <code>npmconf</code> (deprecated) or <code>npm</code> as a library (unsupported) and added a username and password pair where the password was a <code>Number</code> and then you called <code>save()</code>. At which point uninitialized memory from that process would be written to the user running the process&#39;s <code>.npmrc</code>.</p>\n\n<p>State of things:</p>\n\n<p><code>npm</code> had a patch that coincidentally fixed this in <code>v6.0.0-next.0</code>, and I&#39;d be happy to bring that patch <code>npm@5</code> as well. (<code>npm@6</code> is an active release candidate but in the meantime <code>npm@5</code> remains supported.) <code>npm</code> has 1908 dependents published on the registry. It is unknown how many use it as a library versus calling it as a cli. Some do, despite this being an unsupported mode of operation.</p>\n\n<p><code>npmconf</code> has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then. I would be happy, however, to do a new release of it with a patch, while retaining its deprecated status.<code>npmconf</code> has 123 dependents published to the registry.</p>\n\n<p>Impact:</p>\n\n<p>npm&#39;s own use would only go through the code path with <code>new Buffer</code> on when adding a user on third party registries, as <code>registry.npmjs.com</code> authenticates via tokens and not username/password pairs. As <a href=\"/chalker\">@chalker</a> noted, in that scenario, it&#39;s still not vulnerable as there&#39;s no way to force <code>npm</code> to pass anything in other than a <code>String</code>.</p>\n\n<p>I would be genuinely surprised if anyone using <code>npm</code> internals as a library or <code>npmconf</code> called <code>setCredentialsByURI</code>. </p>\n\n<p>A naive search seems to back this up: <a title=\"https://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI\" href=\"/redirect?signature=8c33744a0a8b791d8f043a5b934764fc278dc40b&amp;url=https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dsite%253Agithub.com%2BsetCredentialsByURI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.google.com/search?q=site%3Agithub.com+setCredentialsByURI</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Which in contrast to a search for npmconf: <a title=\"https://www.google.com/search?q=site%3Agithub.com+npmconf\" href=\"/redirect?signature=4c365e6765f5b5659177124f4a99f27ff3f67e7a&amp;url=https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dsite%253Agithub.com%2Bnpmconf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://www.google.com/search?q=site%3Agithub.com+npmconf</span><i class=\"icon-external-link\"></i></a></p>\n", 
            "type": "Activities::Comment", 
            "id": 2542483, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-03-29T05:38:03.575Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-03-29T05:47:17.356Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Hi, @iarna, and thanks for the reply on this!\n\n> You loaded a config via npmconf (deprecated)\n\nCorrect. But the downloads/month of `npmconf` seem increasing over time.\n\n> or npm as a library (unsupported)\n\nHuh? But `npmconf` [Readme](https://github.com/npm/npmconf#this-package-is-deprecated) redirects there:\n\n> npm itself is the best tool to use to manage its configuration\n\nNext (*needed to break the citation*):\n\n> and added a username and password pair where the password was a Number\n\nCorrect.\n\n> and then you called save(). At which point uninitialized memory from that process would be written to the user running the process's .npmrc.\n\nNot entirely correct \u2014 `.save` call is not required. Please see the code snippets attached above \u2014 it is also a risk when someone does that in-memory, which could be more likely than writing to a file.\n\n> npm had a patch that coincidentally fixed this in v6.0.0-next.0, and I'd be happy to bring that patch npm@5 as well. \n\nGreat, SGTM for npm@5 and npm@6.\n\n> npmconf has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then\n\nCoincidentally, Jan 2016 was the date of the original report to security@npmjs.com ;-). According to the git history, `npmconf` has been deprecated before the report, about for two weeks.\n\nAt the current time, what worries me about `npmconf` is its downloads/month stats rising over time \u2014 seems like the deprecation message upon install is not effective.\n\nI am not sure if that should be fixed or just disclosed with adding to vuln databases and changing the deprecation message to something more effective  \u2014 any approach would work to me. I understand the negative effects of making it seem that an unsupported package is supported, and I trust your opinion on that whatever path you choose here. Imo, even simply disclosing this issue might help a bit.\n\n> I would be genuinely surprised if anyone using npm internals as a library or npmconf called setCredentialsByURI.\n\nI have found signs of that usage, though I assume it's fairly minimal, e.g. https://github.com/ctran/nexus-cli/blob/master/index.js#L124 would fit for\u00a0\u00abanyone\u00bb, or https://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339. There seem to be more \u2014 but not a lot of them in public packages, so yes, for public packages the usage seems minimal.\n\nNikita.", 
            "markdown_message": "<p>Hi, <a href=\"/iarna\">@iarna</a>, and thanks for the reply on this!</p>\n\n<blockquote>\n<p>You loaded a config via npmconf (deprecated)</p>\n</blockquote>\n\n<p>Correct. But the downloads/month of <code>npmconf</code> seem increasing over time.</p>\n\n<blockquote>\n<p>or npm as a library (unsupported)</p>\n</blockquote>\n\n<p>Huh? But <code>npmconf</code> <a href=\"/redirect?signature=67770165f0841933917c0357126e1c34c7883329&amp;url=https%3A%2F%2Fgithub.com%2Fnpm%2Fnpmconf%23this-package-is-deprecated\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Readme</span><i class=\"icon-external-link\"></i></a> redirects there:</p>\n\n<blockquote>\n<p>npm itself is the best tool to use to manage its configuration</p>\n</blockquote>\n\n<p>Next (<em>needed to break the citation</em>):</p>\n\n<blockquote>\n<p>and added a username and password pair where the password was a Number</p>\n</blockquote>\n\n<p>Correct.</p>\n\n<blockquote>\n<p>and then you called save(). At which point uninitialized memory from that process would be written to the user running the process&#39;s .npmrc.</p>\n</blockquote>\n\n<p>Not entirely correct \u2014 <code>.save</code> call is not required. Please see the code snippets attached above \u2014 it is also a risk when someone does that in-memory, which could be more likely than writing to a file.</p>\n\n<blockquote>\n<p>npm had a patch that coincidentally fixed this in v6.0.0-next.0, and I&#39;d be happy to bring that patch npm@5 as well. </p>\n</blockquote>\n\n<p>Great, SGTM for npm@5 and npm@6.</p>\n\n<blockquote>\n<p>npmconf has been deprecated since (at least) Jan 2016 and has been entirely unsupported since then</p>\n</blockquote>\n\n<p>Coincidentally, Jan 2016 was the date of the original report to <a title=\"security@npmjs.com\" href=\"mailto:security@npmjs.com\" rel=\"nofollow noopener noreferrer\">security@npmjs.com</a> ;-). According to the git history, <code>npmconf</code> has been deprecated before the report, about for two weeks.</p>\n\n<p>At the current time, what worries me about <code>npmconf</code> is its downloads/month stats rising over time \u2014 seems like the deprecation message upon install is not effective.</p>\n\n<p>I am not sure if that should be fixed or just disclosed with adding to vuln databases and changing the deprecation message to something more effective  \u2014 any approach would work to me. I understand the negative effects of making it seem that an unsupported package is supported, and I trust your opinion on that whatever path you choose here. Imo, even simply disclosing this issue might help a bit.</p>\n\n<blockquote>\n<p>I would be genuinely surprised if anyone using npm internals as a library or npmconf called setCredentialsByURI.</p>\n</blockquote>\n\n<p>I have found signs of that usage, though I assume it&#39;s fairly minimal, e.g. <a title=\"https://github.com/ctran/nexus-cli/blob/master/index.js#L124\" href=\"/redirect?signature=96d42a7236a4f68f3ce9b3310f047582fbd3e242&amp;url=https%3A%2F%2Fgithub.com%2Fctran%2Fnexus-cli%2Fblob%2Fmaster%2Findex.js%23L124\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/ctran/nexus-cli/blob/master/index.js#L124</span><i class=\"icon-external-link\"></i></a> would fit for\u00a0\u00abanyone\u00bb, or <a title=\"https://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339\" href=\"/redirect?signature=9c33c87115744f1e3e2fc22a001adc24a18b6d99&amp;url=https%3A%2F%2Fgithub.com%2FHelloWallet%2Fsecret-service%2Fblob%2Fmaster%2Flib%2Fmodules.js%23L334-L339\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/HelloWallet/secret-service/blob/master/lib/modules.js#L334-L339</span><i class=\"icon-external-link\"></i></a>. There seem to be more \u2014 but not a lot of them in public packages, so yes, for public packages the usage seems minimal.</p>\n\n<p>Nikita.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2542717, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-04-24T20:04:57.584Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-04-24T20:04:57.584Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@chalker @iarna are we ok with disclosing the report?", 
            "markdown_message": "<p><a href=\"/chalker\">@chalker</a> <a href=\"/iarna\">@iarna</a> are we ok with disclosing the report?</p>\n", 
            "type": "Activities::Comment", 
            "id": 2661156, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T15:39:12.158Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T15:39:12.158Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "@chalker @iarna\nping", 
            "markdown_message": "<p><a href=\"/chalker\">@chalker</a> <a href=\"/iarna\">@iarna</a><br>\nping</p>\n", 
            "type": "Activities::Comment", 
            "id": 2729696, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T17:24:14.873Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T17:24:14.873Z", 
            "actor": {
                "username": "chalker", 
                "url": "/chalker", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/068/907/8d96ee4e93e21e566a3d51e2746ad4df2e53256a_medium.png?1490131885"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "I'm fine with disclosing, having `npm` fixed and `npmconf` emitting an additional warning after disclosure with `npm audit` solves this.", 
            "markdown_message": "<p>I&#39;m fine with disclosing, having <code>npm</code> fixed and <code>npmconf</code> emitting an additional warning after disclosure with <code>npm audit</code> solves this.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2730097, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T20:03:58.479Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T20:03:58.479Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Cool, I'll go ahead with a public disclosure.\nThe report will be about `npmconf` with version 2.1.2 and no patched version, right?", 
            "markdown_message": "<p>Cool, I&#39;ll go ahead with a public disclosure.<br>\nThe report will be about <code>npmconf</code> with version 2.1.2 and no patched version, right?</p>\n", 
            "type": "Activities::Comment", 
            "id": 2731157, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-11T22:03:43.627Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-11T22:03:43.627Z", 
            "actor": {
                "username": "iarna", 
                "url": "/iarna", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "`npmconf` 2.1.3 has been published with a patch.", 
            "markdown_message": "<p><code>npmconf</code> 2.1.3 has been published with a patch.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2731663, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-12T08:53:07.885Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-12T08:53:07.885Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "Thanks @iarna  , I see it.", 
            "markdown_message": "<p>Thanks <a href=\"/iarna\">@iarna</a>  , I see it.</p>\n", 
            "type": "Activities::Comment", 
            "id": 2733241, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-12T08:54:19.692Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-12T08:54:19.692Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "additional_data": {
                "new_severity": "High (7.4)", 
                "old_severity": "Medium"
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportSeverityUpdated", 
            "id": 2733243, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "chalker", 
                "url": "/chalker"
            }, 
            "created_at": "2018-05-12T08:54:35.925Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-12T08:54:35.925Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2733244, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-12T08:54:51.470Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-12T08:54:51.470Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2733245, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2018-05-12T08:56:12.456Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-12T08:56:12.456Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ManuallyDisclosed", 
            "id": 2733247, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "old_scope": "Other module", 
            "created_at": "2018-05-19T07:21:10.955Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2018-05-19T07:21:10.955Z", 
            "actor": {
                "username": "lirantal", 
                "url": "/lirantal", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/096/045/01f6fd0d814d80d025eb8a0dcb5292f042739569_medium.jpeg?1515169110"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "nodejs-ecosystem", 
            "new_scope": "npmconf", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ChangedScope", 
            "id": 2764949, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "chalker", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/chalker", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/068/907/f597f5ffcdc20460ef54feffb26e20d03f4d2421_small.png?1490131885"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 8, 
        "name": "Out-of-bounds Read"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -15427752.482794292, 
    "disclosed_at": "2018-05-12T08:56:12.533Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/320269", 
    "created_at": "2018-02-27T13:52:05.982Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I would like to report a Buffer allocation issue in <code>npmconf</code> (and <code>npm</code> package js api).<br>\nIt allows to extract sensitive content from uninitialized memory by passing typed input to <code>setCredentialsByURI</code>, limited to Node.js 4.x and below.</p>\n\n<h1 id=\"module\">Module</h1>\n\n<p><strong>module name:</strong> <code>npmconf</code><br>\n<strong>version:</strong> 2.1.2<br>\n<strong>npm page:</strong> <code>https://www.npmjs.com/package/npmconf</code></p>\n\n<p><strong>module name:</strong> <code>npm</code><br>\n<strong>version:</strong> 5.6.0<br>\n<strong>npm page:</strong> <code>https://www.npmjs.com/package/npm</code></p>\n\n<h2 id=\"module-description\">Module Description</h2>\n\n<blockquote>\n<p>The config thing npm uses</p>\n</blockquote>\n\n<h2 id=\"module-stats\">Module Stats</h2>\n\n<h3 id=\"npmconf\">npmconf</h3>\n\n<p>40 292 downloads in the last day<br>\n219 837 downloads in the last week<br>\n897 947 downloads in the last month</p>\n\n<p>~1 0775 364 estimated downloads per year</p>\n\n<p><code>npmconf</code> is deprecated, but doesn&#39;t mention security issues and is still widely used, and the usage seems to <em>increase</em> over time.</p>\n\n<h3 id=\"npm\">npm</h3>\n\n<p><code>npm</code> download stats are not representive here, as it&#39;s mainly used as a CLI, not as JS api, but here they are (e.g. for comparison with <code>npmconf</code>):</p>\n\n<p>141 545 downloads in the last day<br>\n1 067 194 downloads in the last week<br>\n3 701 192 downloads in the last month</p>\n\n<p>~44 414 304 estimated downloads per year</p>\n\n<h1 id=\"vulnerability\">Vulnerability</h1>\n\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n\n<p>When a number is passed to the <code>password</code> property of <code>config.setCredentialsByURI</code>, <code>npmconf</code>/<code>npm</code> allocate uninitialized Buffer instances during conversion to base64 (on Node.js 4.x) due to missing type checks before passing user input to the <code>new Buffer()</code> constructor.</p>\n\n<p>Those Buffer instances could (and most likely will) contain sensitive information, see <a href=\"/redirect?signature=2655872a71ab492935b28740e3de41cc1df52173&amp;url=https%3A%2F%2Fgithub.com%2FChALkeR%2Fnotes%2Fblob%2Fmaster%2FBuffer-knows-everything.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Buffer-knows-everything.md</span><i class=\"icon-external-link\"></i></a>.</p>\n\n<p>Node.js 4.x is stated as supported in <code>npm</code>.</p>\n\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce:</h2>\n\n<p>Use Node.js 4.x LTS or below.</p>\n\n<h3 id=\"npmconf\">npmconf</h3>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">URI</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://registry.example.com:8661/&quot;</span><span class=\"p\">;</span>\n<span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;npmconf&#39;</span><span class=\"p\">).</span><span class=\"nx\">load</span><span class=\"p\">({},</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">conf</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">conf</span><span class=\"p\">.</span><span class=\"nx\">setCredentialsByURI</span><span class=\"p\">(</span><span class=\"nx\">URI</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"na\">username</span><span class=\"p\">:</span> <span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"s1\">&#39;boo@example.com&#39;</span><span class=\"p\">,</span> <span class=\"na\">password</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">});</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">conf</span><span class=\"p\">.</span><span class=\"nx\">getCredentialsByURI</span><span class=\"p\">(</span><span class=\"nx\">URI</span><span class=\"p\">));</span> <span class=\"c1\">// This just outputs the setting</span>\n  <span class=\"c1\">// conf.save(&#39;user&#39;, function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc</span>\n<span class=\"p\">});</span>\n</code></pre>\n<h3 id=\"npm\">npm</h3>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">URI</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://registry.example.com:8661/&quot;</span><span class=\"p\">;</span>\n<span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;npm&#39;</span><span class=\"p\">).</span><span class=\"nx\">load</span><span class=\"p\">({},</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">npm</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">npm</span><span class=\"p\">.</span><span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">setCredentialsByURI</span><span class=\"p\">(</span><span class=\"nx\">URI</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"na\">username</span><span class=\"p\">:</span> <span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"s1\">&#39;boo@example.com&#39;</span><span class=\"p\">,</span> <span class=\"na\">password</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">});</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">npm</span><span class=\"p\">.</span><span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">getCredentialsByURI</span><span class=\"p\">(</span><span class=\"nx\">URI</span><span class=\"p\">));</span> <span class=\"c1\">// This just outputs the setting</span>\n  <span class=\"c1\">// npm.config.save(&#39;user&#39;, function() {}) // Warning: writes base64-encoded uninitialized buffer .npmrc</span>\n<span class=\"p\">});</span>\n</code></pre>\n<h2 id=\"supporting-material-references\">Supporting Material/References:</h2>\n\n<ul>\n<li>Arch Linux</li>\n<li>Node.js v4.8.7 (latest in 4.x LTS branch)</li>\n<li>npm 5.6.0</li>\n</ul>\n\n<h1 id=\"wrap-up\">Wrap up</h1>\n\n<ul>\n<li>I contacted the maintainer to let him know: Y</li>\n<li>I opened an issue in the related repository: N</li>\n</ul>\n\n<p>I reported this initially on 2016-01-20 over email, but didn&#39;t receive any response.<br>\nProbably was deemed insignificant or out-of-scope, but I still think this should be fixed and disclosed.</p>\n\n<h2 id=\"impact\">Impact</h2>\n\n<p>Read uninitialized memory, extracting sensitive information from it.<br>\nCause a DoS by large Buffer allocation and conversion to string.</p>\n", 
    "severity_rating": "high", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://nodejs.org/en/security/", 
            "about": "This program is used to handle vulnerabilities in the Node.js ecosystem.", 
            "twitter_handle": "", 
            "name": "Node.js third-party modules"
        }, 
        "handle": "nodejs-ecosystem", 
        "url": "https://hackerone.com/nodejs-ecosystem", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/023/949/309112251b444244d95977d1299148aae6482789_small.?1508679627", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/023/949/c1f5f15ac094c1327c13dd19f55dbcb7411272bd_medium.?1508679627"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 23949, 
        "default_currency": "usd"
    }, 
    "is_published": false
}