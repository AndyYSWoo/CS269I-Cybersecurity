{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": null, 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "2000.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 47012, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-02-23T19:39:17.571Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Adobe Flash Player Out-of-Bound Access Vulnerability", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-03-25T19:39:17.796Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$2,000", 
    "attachments": [
        {
            "file_name": "poc.fla", 
            "type": "application/zip", 
            "id": 28844, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/028/844/9de80a9cbcd9aadba840a2dc11f18ca4436acfc3/poc.fla?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230137Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ee365c9e45eff0fcca6e8ba4089a03913485d9bee6118016fb37687e6dbd96cd"
        }, 
        {
            "file_name": "poc.swf", 
            "type": "application/x-shockwave-flash", 
            "id": 28845, 
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3-us-west-2.amazonaws.com/000/028/845/d3d14d2f85f5cb98d10e86d9ad6d4937e599f0d0/poc.swf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6DOF4BH7%2F20181206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20181206T230137Z&X-Amz-Expires=3600&X-Amz-Security-Token=FQoGZXIvYXdzEA8aDAsIeiAo1xTw4kIWniK3AwV1z%2FDNuc2GpLi7AJOEJ0e4NWAql7yl6ReQj30YP2K5FBrc9xv0H8z3PZE4N7C099Z%2FTC7v7C1gzo54Jgi%2FX3cl%2B1K8PJ1QoShLHpAAjRjf5ciIakpyJZtfax9fUrlrfbg93561WLH%2BcAlYZYP%2FDoT4YEiEnKFoc6r1kz0vtgQeOMs4HdHNkjkFGMI77%2BHQkyTCbcJv5zS%2BkPk%2FmeIs5TPwLonNR3KC9vVtG8%2FxH87F2PEClO9BEdrskZjtMWY6P010JBQmt1CorTu4hj%2BXFqvR%2F690HP1hcC8CWJCyppmtZv0XEClGLMVyC6ib3jbvYHrbrPEHfmQP2RQi0FwMeueNkOH5qbyGqwmmxB4agSDiXM3XAl%2BTc87Wf5p1e%2Bc0zjzZ0xQeKM%2F%2B6b6TparaVSEWnYgYleztcjU3fPWHAZNwL16PwqewCVGh0Qp%2BPnUemfdihk3MmFQeIjHmE7sOQgXva7HlIEEEJ1hyrapkEutFP16gxCQzYqmfLGEsK0wbCxHgen0YqfDv81EZR726krPSisHScLMujI0SnwbcN8IyUwIYqnw663l%2FY9Dhpcje1uM19tGvbMUolrmm4AU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ea7b150b042766ed26c3ca8a6b7acd815c62be0d188e6d1db2d5c0713c761013"
        }
    ], 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "reporter": {
                "username": "hhj4ck", 
                "url": "/hhj4ck"
            }, 
            "created_at": "2015-02-23T19:17:23.987Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-02-23T19:17:23.987Z", 
            "actor": {
                "username": "scarybeasts", 
                "url": "/scarybeasts", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/058/a4e53a2be3bbcc058f56fe66a8857d2fa997f376_medium.jpeg?1395940294"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-flash", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 338542, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-02-23T19:18:47.887Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-02-23T19:18:47.887Z", 
            "actor": {
                "url": "/ibb-flash", 
                "profile": {
                    "name": "Flash (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/046/79a74e1d6fe2c051a2958c5a2c63881d654c1a5b_medium.png?1392266609"
                }
            }, 
            "team_handle": "ibb-flash", 
            "bounty_amount": "2000.0", 
            "collaborator": {
                "username": "hhj4ck", 
                "url": "/hhj4ck"
            }, 
            "message": "Thanks, $2,000 bounty.", 
            "markdown_message": "<p>Thanks, $2,000 bounty.</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 338544, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-02-23T19:39:17.607Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-02-23T19:39:17.607Z", 
            "actor": {
                "username": "arice", 
                "url": "/arice", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/020/74e2a8a31fee27a0c9b3d1d90dd64f4e38b2fb1c_medium.jpeg?1466604112"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "ibb-flash", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 338572, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-03-25T19:39:25.254Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-03-25T19:39:25.254Z", 
            "actor": {
                "url": "/ibb-flash", 
                "profile": {
                    "name": "Flash (IBB)"
                }, 
                "ibb": true, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/046/79a74e1d6fe2c051a2958c5a2c63881d654c1a5b_medium.png?1392266609"
                }
            }, 
            "team_handle": "ibb-flash", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 363005, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "hhj4ck", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/hhj4ck", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 2, 
        "name": "Memory Corruption - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -116824939.83333243, 
    "disclosed_at": "2015-03-25T19:39:25.200Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/47012", 
    "created_at": "2015-02-07T14:50:18.485Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>I. Summary</p>\n\n<h2 id=\"adobe-flash-player-is-prone-to-a-vulnerability-which-leads-to-out-of-bound-memory-access-memory-via-carefully-crafted-regular-expression-an-attacker-can-exploit-this-issue-to-defeat-aslr-protection-or-even-execute-arbitrary-code-in-the-context-of-affected-application-internet-explorer-excel\">Adobe Flash Player is prone to a vulnerability which leads to Out-of-Bound memory access memory via carefully crafted regular expression. An attacker can exploit this issue to defeat ASLR protection or even execute arbitrary code in the context of affected application (Internet Explorer, EXCEL...).</h2>\n\n<p>II. Description<br>\nAdobe Flash is a multimedia and software platform used for authoring of vector graphics, animation, games and rich Internet applications (RIAs) that can be viewed, played and executed in Adobe Flash Player. </p>\n\n<p>When constructing a RegExpObject, most part of memory was applied from the heap. While heap overflow may also happen as it is with CVE-2013-0634, CVE-2014-0559, the matching result is stored on the stack. A fixed size int ovector[99] is defined to store the matching index numbers of the target string. A simple line of ActionScript could lead to a crash caused by reading inaccessable memory:</p>\n\n<p>&quot;Venus&quot;.match(&quot;(((((((((((((((((((((((((((((((((((((((((((((((((?P&lt;G2&gt;)))))))))))))))))))))))))))))))))))))))))))))))))&quot;); </p>\n\n<p>For the given regular expression above, ovector[99] will be filled with zeros. Then Flash Player managed to construct an Array containing the matching result recognized by AS3. Since there is a named group G2, the Array will also contain a string index entry (G2) that is filled with substring of the target string. The start address of the substring is calculated as follow: start address of target string + ovector[nameIndex*2]. The length of the substring is calulated as:  ovector[nameIndex*2+1] - ovector[nameIndex*2].</p>\n\n<p>The problem is that nameIndex equals to the number of left brackets inside the given regular expression. As the number of left brackets is fully controlled, ovector[nameIndex*2+1] is able to read values out of the stack memory ovector. Flash took mitigations where it checks if the nameIndex is larger than 49, ignoring the fact that nameIndex can be 49 itself. When nameIndex equals to 49, nameIndex*2+1 equals to 99, ovector[nameIndex*2+1] will point to stack memory out of bound. Normally, ovector[nameIndex*2+1] points to the saved EIP under windows and it is a very large value for length field.</p>\n\n<p>This may result in returning a string with a fake length field with enormous value to the AS3 interface. Advanced Heap Fengshui techniques may even allow an attacker build workable exploit via such string to access arbitrary memory.</p>\n\n<h2 id=\"poc-and-its-source-code-are-attached\">poc and its source code are attached.</h2>\n\n<p>III. Impact</p>\n\n<h2 id=\"out-of-bound-access\">Out-of-Bound Access</h2>\n\n<p>IV. Reference<br>\nIt has got assigned as CVE-2015-0330.<br>\n<a title=\"https://helpx.adobe.com/security/products/flash-player/apsb15-04.html\" href=\"/redirect?signature=abe00048758dcd70fa0a53bd5fcb6171c3284a34&amp;url=https%3A%2F%2Fhelpx.adobe.com%2Fsecurity%2Fproducts%2Fflash-player%2Fapsb15-04.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://helpx.adobe.com/security/products/flash-player/apsb15-04.html</span><i class=\"icon-external-link\"></i></a></p>\n\n<h2 id=\"https-code-google-com-p-chromium-issues-detail-id-450198\"><a title=\"https://code.google.com/p/chromium/issues/detail?id=450198\" href=\"/redirect?signature=0c00801e338c2f2d8375ad4f46ea321de2e2870b&amp;url=https%3A%2F%2Fcode.google.com%2Fp%2Fchromium%2Fissues%2Fdetail%3Fid%3D450198\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://code.google.com/p/chromium/issues/detail?id=450198</span><i class=\"icon-external-link\"></i></a></h2>\n\n<p>V. Credit<br>\nWen Guanxing from Venustech ADLAB is credited for this vulnerability.</p>\n", 
    "vulnerability_information": "I. Summary\r\nAdobe Flash Player is prone to a vulnerability which leads to Out-of-Bound memory access memory via carefully crafted regular expression. An attacker can exploit this issue to defeat ASLR protection or even execute arbitrary code in the context of affected application (Internet Explorer, EXCEL...).\r\n------------------------------------------------------------------\r\nII. Description\r\nAdobe Flash is a multimedia and software platform used for authoring of vector graphics, animation, games and rich Internet applications (RIAs) that can be viewed, played and executed in Adobe Flash Player. \r\n\r\nWhen constructing a RegExpObject, most part of memory was applied from the heap. While heap overflow may also happen as it is with CVE-2013-0634, CVE-2014-0559, the matching result is stored on the stack. A fixed size int ovector[99] is defined to store the matching index numbers of the target string. A simple line of ActionScript could lead to a crash caused by reading inaccessable memory:\r\n\r\n\"Venus\".match(\"(((((((((((((((((((((((((((((((((((((((((((((((((?P<G2>)))))))))))))))))))))))))))))))))))))))))))))))))\"); \r\n\r\nFor the given regular expression above, ovector[99] will be filled with zeros. Then Flash Player managed to construct an Array containing the matching result recognized by AS3. Since there is a named group G2, the Array will also contain a string index entry (G2) that is filled with substring of the target string. The start address of the substring is calculated as follow: start address of target string + ovector[nameIndex*2]. The length of the substring is calulated as:  ovector[nameIndex*2+1] - ovector[nameIndex*2].\r\n\r\nThe problem is that nameIndex equals to the number of left brackets inside the given regular expression. As the number of left brackets is fully controlled, ovector[nameIndex*2+1] is able to read values out of the stack memory ovector. Flash took mitigations where it checks if the nameIndex is larger than 49, ignoring the fact that nameIndex can be 49 itself. When nameIndex equals to 49, nameIndex*2+1 equals to 99, ovector[nameIndex*2+1] will point to stack memory out of bound. Normally, ovector[nameIndex*2+1] points to the saved EIP under windows and it is a very large value for length field.\r\n\r\nThis may result in returning a string with a fake length field with enormous value to the AS3 interface. Advanced Heap Fengshui techniques may even allow an attacker build workable exploit via such string to access arbitrary memory.\r\n\r\npoc and its source code are attached.\r\n------------------------------------------------------------------\r\nIII. Impact\r\nOut-of-Bound Access\r\n------------------------------------------------------------------\r\nIV. Reference\r\nIt has got assigned as CVE-2015-0330.\r\nhttps://helpx.adobe.com/security/products/flash-player/apsb15-04.html\r\nhttps://code.google.com/p/chromium/issues/detail?id=450198\r\n------------------------------------------------------------------\r\nV. Credit\r\nWen Guanxing from Venustech ADLAB is credited for this vulnerability.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Flash (IBB)"
        }, 
        "handle": "ibb-flash", 
        "url": "https://hackerone.com/ibb-flash", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/046/b5d44f9f2c2b46b5b7d0a45331137e5db6ea360d_small.png?1392266609", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/046/79a74e1d6fe2c051a2958c5a2c63881d654c1a5b_medium.png?1392266609"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 46, 
        "default_currency": "usd"
    }, 
    "is_published": false
}