{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-10-29T11:44:42.688Z", 
    "voters": [
        "jensec", 
        "gerben_javado", 
        "bogdantcaciuc", 
        "prateek_0490", 
        "eveeez", 
        "vijay_kumar", 
        "paresh_parmar", 
        "enginiku", 
        "japz", 
        "smit", 
        "and 4 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "100.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 264919, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "[www.zomato.com] IDOR - Delete/Deactivate any special menu of any Restaurants from Zomato", 
    "is_member_of_team?": null, 
    "vote_count": 14, 
    "summaries": [
        {
            "category": "team", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 5973, 
            "content": "@prateek_0490 was able to delete and deactivate special menu of any restaurant using IDOR", 
            "content_html": "<p><a href=\"/prateek_0490\">@prateek_0490</a> was able to delete and deactivate special menu of any restaurant using IDOR</p>\n"
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 5704, 
            "content": "Going through the JS, I found another cool function which looked interesting and vulnerable and indeed it was vulnerable -\n\n```\n{var a={request_type:\"deactivate-special-menu\",user_id:USER_ID,menu_set_id:e};$.post(\"XXX/XXXXXX)\"\n```\n\nIt asked for a lot of information, and it required a lots of research/recon to actually achieve this but since after getting a feel for couple of weeks on Zomato's application I found a way to break this feature, I was able to delete/deactivate any/all special menus of any restaurant doesn't matter if I owned that restaurant or not.\n\nI did try out to find a way to figure out the menu_set_id and moreover since I didn't wanted to test on any of @zomato's production users/customers/clients, I also had to find one of the test restaurants owned by Zomato on which I can replicate this, however during testing it was indeed found that there are lot's and lot's of restaurants who have these special menus, this would have lead to delete/deactivate all of them in One Go. I went ahead and deactivated a Special Menu of @zomato's internal testing restaurant_id XXXXXX with menu_set_id\":XXXX which was active till 24th September. I apologised for the same to the team :(\n\n# POC\n\n- An attacker first needs to figure out these information like user_id, menu_set_id before deactivating any menus. For that we can issue a Post Request with correct var at\n\n> Request\n\n```\nPOST /XX/XXXXX?res_id=XXXXX HTTP/1.1\nHost: api.zomato.com\nX-Device-Is-Rooted: 0\nCookie: <COOKIES>\nContent-Type: application/x-www-form-urlencoded\n\naccess_token=<your token>&client_id=zomato_ios_v2\n```\n\n- Since there was no restriction or a check to see if we actually hold that restaurant it leaked lots and lot's of useful stuff which was then chained with deleting the special menus of any restaurants.\n\n- Now using all this information, an attacker makes a Post Request at -\n\n> Request\n\n`XXX/XXXXX.php`\n\nwith var as `user_id=XXXX&type=SPECIAL&request_type=get-special-menus&res_id=XXXXX`\n\nthis gave some more useful information.\n\n- Now the final request was made by changing the request_type in the Post Parameters, since I obtained the menu_set_id in our above requests, I made a final request to deactivate/delete that from the restaurants.\n\nIn case you have any questions, please feel free to reach me on [Twitter] (https://twitter.com/prateek_0490). :)\n\nBest Regards,\nPrateek Tiwari", 
            "content_html": "<p>Going through the JS, I found another cool function which looked interesting and vulnerable and indeed it was vulnerable -</p>\n<pre class=\"highlight plaintext\"><code>{var a={request_type:&quot;deactivate-special-menu&quot;,user_id:USER_ID,menu_set_id:e};$.post(&quot;XXX/XXXXXX)&quot;\n</code></pre>\n<p>It asked for a lot of information, and it required a lots of research/recon to actually achieve this but since after getting a feel for couple of weeks on Zomato&#39;s application I found a way to break this feature, I was able to delete/deactivate any/all special menus of any restaurant doesn&#39;t matter if I owned that restaurant or not.</p>\n\n<p>I did try out to find a way to figure out the menu_set_id and moreover since I didn&#39;t wanted to test on any of <a href=\"/zomato\">@zomato</a>&#39;s production users/customers/clients, I also had to find one of the test restaurants owned by Zomato on which I can replicate this, however during testing it was indeed found that there are lot&#39;s and lot&#39;s of restaurants who have these special menus, this would have lead to delete/deactivate all of them in One Go. I went ahead and deactivated a Special Menu of <a href=\"/zomato\">@zomato</a>&#39;s internal testing restaurant_id XXXXXX with menu_set_id&quot;:XXXX which was active till 24th September. I apologised for the same to the team :(</p>\n\n<h1 id=\"poc\">POC</h1>\n\n<ul>\n<li>An attacker first needs to figure out these information like user_id, menu_set_id before deactivating any menus. For that we can issue a Post Request with correct var at</li>\n</ul>\n\n<blockquote>\n<p>Request</p>\n</blockquote>\n<pre class=\"highlight plaintext\"><code>POST /XX/XXXXX?res_id=XXXXX HTTP/1.1\nHost: api.zomato.com\nX-Device-Is-Rooted: 0\nCookie: &lt;COOKIES&gt;\nContent-Type: application/x-www-form-urlencoded\n\naccess_token=&lt;your token&gt;&amp;client_id=zomato_ios_v2\n</code></pre>\n<ul>\n<li><p>Since there was no restriction or a check to see if we actually hold that restaurant it leaked lots and lot&#39;s of useful stuff which was then chained with deleting the special menus of any restaurants.</p></li>\n<li><p>Now using all this information, an attacker makes a Post Request at -</p></li>\n</ul>\n\n<blockquote>\n<p>Request</p>\n</blockquote>\n\n<p><code>XXX/XXXXX.php</code></p>\n\n<p>with var as <code>user_id=XXXX&amp;type=SPECIAL&amp;request_type=get-special-menus&amp;res_id=XXXXX</code></p>\n\n<p>this gave some more useful information.</p>\n\n<ul>\n<li>Now the final request was made by changing the request_type in the Post Parameters, since I obtained the menu_set_id in our above requests, I made a final request to deactivate/delete that from the restaurants.</li>\n</ul>\n\n<p>In case you have any questions, please feel free to reach me on <a href=\"/redirect?signature=30df589c919719ed3420fe374c94f388ed7f4369&amp;url=https%3A%2F%2Ftwitter.com%2Fprateek_0490\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Twitter</span><i class=\"icon-external-link\"></i></a>. :)</p>\n\n<p>Best Regards,<br>\nPrateek Tiwari</p>\n"
        }
    ], 
    "structured_scope": {
        "asset_identifier": "*.zomato.com", 
        "max_severity": "critical", 
        "databaseId": 383, 
        "asset_type": "URL"
    }, 
    "allow_singular_disclosure_at": "2017-11-28T11:44:42.796Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$100", 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-08-31T10:06:06.812Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-31T10:06:06.812Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 1968327, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-13T06:25:21.160Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-13T06:25:21.160Z", 
            "actor": {
                "username": "prateek_0490", 
                "url": "/prateek_0490", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/038/091/e83379cfc01563cdbd5a978d19b66f7792e3a042_medium.png?1526319032"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 1993176, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-16T06:16:51.374Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-16T06:16:51.374Z", 
            "actor": {
                "username": "prateek_0490", 
                "url": "/prateek_0490", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/038/091/e83379cfc01563cdbd5a978d19b66f7792e3a042_medium.png?1526319032"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 2000924, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "prateek_0490", 
                "url": "/prateek_0490"
            }, 
            "created_at": "2017-09-18T04:59:44.629Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-18T04:59:44.629Z", 
            "actor": {
                "username": "vinothzomato", 
                "url": "/vinothzomato", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/059/568/768e852df4ea2bd9087c117fbe7279b8da36b701_medium.jpg?1496138727"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BugResolved", 
            "id": 2002691, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-09-22T05:18:47.045Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-22T05:18:47.045Z", 
            "actor": {
                "url": "/zomato", 
                "profile": {
                    "name": "Zomato"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
                }
            }, 
            "team_handle": "zomato", 
            "bonus_amount": "0.0", 
            "bounty_amount": "100.0", 
            "collaborator": {
                "username": "prateek_0490", 
                "url": "/prateek_0490"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 2013452, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-10-29T11:44:42.725Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-10-29T11:44:42.725Z", 
            "actor": {
                "username": "prateek_0490", 
                "url": "/prateek_0490", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/038/091/e83379cfc01563cdbd5a978d19b66f7792e3a042_medium.png?1526319032"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 2111196, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-08T07:19:45.975Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-08T07:19:45.975Z", 
            "actor": {
                "username": "prateek_0490", 
                "url": "/prateek_0490", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/038/091/e83379cfc01563cdbd5a978d19b66f7792e3a042_medium.png?1526319032"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::Comment", 
            "id": 2142187, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-11-28T11:44:47.504Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-11-28T11:44:47.504Z", 
            "actor": {
                "url": "/zomato", 
                "profile": {
                    "name": "Zomato"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
                }
            }, 
            "team_handle": "zomato", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 2186201, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "prateek_0490", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/prateek_0490", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/038/091/bd91d8377c8448c3fec37ae3b06616869892615d_small.png?1526319032"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 55, 
        "name": "Insecure Direct Object Reference (IDOR)"
    }, 
    "is_external_bug": false, 
    "visibility": "no-content", 
    "allow_singular_disclosure_after": -32265872.271280337, 
    "disclosed_at": "2017-11-28T11:44:47.477Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/264919", 
    "created_at": "2017-08-31T08:20:57.090Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "", 
    "vulnerability_information": "", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.zomato.com", 
            "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide.", 
            "twitter_handle": "Zomato", 
            "name": "Zomato"
        }, 
        "handle": "zomato", 
        "url": "https://hackerone.com/zomato", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/002/943/7b54bc7a4a265c47ec0d946a6abf079078b82401_small.png?1526447675", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/002/943/dbb71f3e2a0e73fe819c0c2a3e4fbcdd24d138e9_medium.png?1526447675"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 2943, 
        "default_currency": "usd"
    }, 
    "is_published": false
}