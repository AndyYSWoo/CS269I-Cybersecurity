{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2017-08-16T12:52:38.313Z", 
    "voters": [
        "marcs0h", 
        "edoverflow", 
        "eveeez", 
        "luckydivino", 
        "mr_r3boot", 
        "apapedulimu", 
        "japz", 
        "cuso4", 
        "vindi_cator"
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "150.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 239359, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2017-09-11T13:48:38.502Z", 
    "vulnerability_information": "file `class-wc-gateway-simplify-commerce.php` method `return_handler` e.g. where woocommerce marks the order regarding its payment / transaction.\n\n```\npublic function return_handler() {\n\t\t@ob_clean();\n\t\theader( 'HTTP/1.1 200 OK' );\n\n\t\tif ( isset( $_REQUEST['reference'] ) && isset( $_REQUEST['paymentId'] ) && isset( $_REQUEST['signature'] ) ) {\n\t\t\t$signature = strtoupper( md5( $_REQUEST['amount'] . $_REQUEST['reference'] . $_REQUEST['paymentId'] . $_REQUEST['paymentDate'] . $_REQUEST['paymentStatus'] . $this->private_key ) );\n\t\t\t$order_id  = absint( $_REQUEST['reference'] );\n\t\t\t$order     = wc_get_order( $order_id );\n\n\t\t\tif ( $signature === $_REQUEST['signature'] ) {\n\t\t\t\t$order_complete = $this->process_order_status( $order, $_REQUEST['paymentId'], $_REQUEST['paymentStatus'], $_REQUEST['paymentDate'] );\n\n\t\t\t\tif ( ! $order_complete ) {\n\t\t\t\t\t$order->update_status( 'failed', __( 'Payment was declined by Simplify Commerce.', 'woocommerce' ) );\n\t\t\t\t}\n\n\t\t\t\twp_redirect( $this->get_return_url( $order ) );\n\t\t\t\texit();\n\t\t\t}\n\t\t}\n\n\t\twp_redirect( wc_get_page_permalink( 'cart' ) );\n\t\texit();\n\t}\n```\nHere is used md5 for signature generation, but string comparison isn't safe towards timing attack. Having in mind the length of the md5 hash string 32 and minimal character set used for it `a-z` and `0-9`, then discovering the right signature will require 32 rounds * X requests per character => no need even for distributed attack regarding successful guessing the generated signature.\n\nIn order to protect the customers and merchants I would like to point the usage of [hash_equals](http://php.net/manual/en/function.hash-equals.php) with its [wordpress alternative](https://developer.wordpress.org/reference/functions/hash_equals/) e.g.\n\n`... if (hash_equals($signature, $_REQUEST['signature'])) ...`\n", 
    "activity_page_count": 1, 
    "severity": {
        "rating": "medium", 
        "author_type": "User"
    }, 
    "title": "Timing attack woocommerce, simplify commerce gateway", 
    "is_member_of_team?": null, 
    "vote_count": 9, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2017-09-15T12:52:38.369Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "activity_page_number": 1, 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$150", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2017-06-13T00:08:05.275Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-13T00:08:05.275Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "^^ `a-f` and `0-9`", 
            "markdown_message": "<p>^^ <code>a-f</code> and <code>0-9</code></p>\n", 
            "type": "Activities::Comment", 
            "id": 1751305, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-13T08:28:42.857Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-13T08:28:42.857Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. Thanks for the report. We are going to take a look.", 
            "markdown_message": "<p>Hi. Thanks for the report. We are going to take a look.</p>\n", 
            "type": "Activities::Comment", 
            "id": 1751993, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-06-30T14:49:38.140Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-06-30T14:49:38.140Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Bump :)", 
            "markdown_message": "<p>Bump :)</p>\n", 
            "type": "Activities::Comment", 
            "id": 1794306, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "created_at": "2017-07-21T09:29:42.455Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-21T09:29:42.455Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "Hi. Sorry for the delay to resolve this issue. The 3.0.9 release included a address it.", 
            "markdown_message": "<p>Hi. Sorry for the delay to resolve this issue. The 3.0.9 release included a address it.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 1856022, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2017-07-21T09:29:53.894Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-07-21T09:29:53.894Z", 
            "actor": {
                "url": "/automattic", 
                "profile": {
                    "name": "Automattic"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
                }
            }, 
            "team_handle": "automattic", 
            "bonus_amount": "0.0", 
            "bounty_amount": "150.0", 
            "collaborator": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 1856023, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-08-16T12:52:38.326Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-08-16T12:52:38.326Z", 
            "actor": {
                "username": "b258ea62bf297b02afa9854", 
                "url": "/b258ea62bf297b02afa9854", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "first_to_agree": true, 
            "message": "Hi, at the beginning of September I'll release a public advisory regarding this issue.", 
            "markdown_message": "<p>Hi, at the beginning of September I&#39;ll release a public advisory regarding this issue.</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1933300, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:48:38.514Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:48:38.514Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1989084, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2017-09-11T13:48:38.545Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2017-09-11T13:48:38.545Z", 
            "actor": {
                "username": "xknown", 
                "url": "/xknown", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "automattic", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1989085, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "b258ea62bf297b02afa9854", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": true, 
        "url": "/b258ea62bf297b02afa9854", 
        "profile_picture_urls": {
            "small": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
        }, 
        "is_me?": false
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -38655615.18999559, 
    "disclosed_at": "2017-09-11T13:48:38.534Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/239359", 
    "created_at": "2017-06-12T22:09:27.026Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>file <code>class-wc-gateway-simplify-commerce.php</code> method <code>return_handler</code> e.g. where woocommerce marks the order regarding its payment / transaction.</p>\n<pre class=\"highlight plaintext\"><code>public function return_handler() {\n        [@ob_clean](/ob_clean)();\n        header( &#39;HTTP/1.1 200 OK&#39; );\n\n        if ( isset( $_REQUEST[&#39;reference&#39;] ) &amp;&amp; isset( $_REQUEST[&#39;paymentId&#39;] ) &amp;&amp; isset( $_REQUEST[&#39;signature&#39;] ) ) {\n            $signature = strtoupper( md5( $_REQUEST[&#39;amount&#39;] . $_REQUEST[&#39;reference&#39;] . $_REQUEST[&#39;paymentId&#39;] . $_REQUEST[&#39;paymentDate&#39;] . $_REQUEST[&#39;paymentStatus&#39;] . $this-&gt;private_key ) );\n            $order_id  = absint( $_REQUEST[&#39;reference&#39;] );\n            $order     = wc_get_order( $order_id );\n\n            if ( $signature === $_REQUEST[&#39;signature&#39;] ) {\n                $order_complete = $this-&gt;process_order_status( $order, $_REQUEST[&#39;paymentId&#39;], $_REQUEST[&#39;paymentStatus&#39;], $_REQUEST[&#39;paymentDate&#39;] );\n\n                if ( ! $order_complete ) {\n                    $order-&gt;update_status( &#39;failed&#39;, __( &#39;Payment was declined by Simplify Commerce.&#39;, &#39;woocommerce&#39; ) );\n                }\n\n                wp_redirect( $this-&gt;get_return_url( $order ) );\n                exit();\n            }\n        }\n\n        wp_redirect( wc_get_page_permalink( &#39;cart&#39; ) );\n        exit();\n    }\n</code></pre>\n<p>Here is used md5 for signature generation, but string comparison isn&#39;t safe towards timing attack. Having in mind the length of the md5 hash string 32 and minimal character set used for it <code>a-z</code> and <code>0-9</code>, then discovering the right signature will require 32 rounds * X requests per character =&gt; no need even for distributed attack regarding successful guessing the generated signature.</p>\n\n<p>In order to protect the customers and merchants I would like to point the usage of <a href=\"/redirect?signature=4f024e856148bf3335573dc0d491695251f88a9b&amp;url=http%3A%2F%2Fphp.net%2Fmanual%2Fen%2Ffunction.hash-equals.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>hash_equals</span><i class=\"icon-external-link\"></i></a> with its <a href=\"/redirect?signature=92aafa12dd3ee91b2596b92a838ca56f68d259fe&amp;url=https%3A%2F%2Fdeveloper.wordpress.org%2Freference%2Ffunctions%2Fhash_equals%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>wordpress alternative</span><i class=\"icon-external-link\"></i></a> e.g.</p>\n\n<p><code>... if (hash_equals($signature, $_REQUEST[&#39;signature&#39;])) ...</code></p>\n", 
    "severity_rating": "medium", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://automattic.com", 
            "about": "WordPress.com, VaultPress, Akismet, Gravatar, Cloudup, WooCommerce, Polldaddy and more!", 
            "twitter_handle": "", 
            "name": "Automattic"
        }, 
        "handle": "automattic", 
        "url": "https://hackerone.com/automattic", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/111/6b5147b71079b286c99869a85682f609f6c617c6_small.png?1396031864", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/111/23288d0462873e4b825f725d8480e850c7c47549_medium.png?1396031864"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 111, 
        "default_currency": "usd"
    }, 
    "is_published": false
}