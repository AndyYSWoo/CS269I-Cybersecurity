{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2015-07-23T06:47:08.175Z", 
    "voters": [], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "25.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 77231, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2015-07-22T21:38:17.044Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Weak Cryptographic Hash", 
    "is_member_of_team?": null, 
    "vote_count": 0, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2015-08-21T21:38:17.151Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$25", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2015-07-21T13:44:33.668Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-21T13:44:33.668Z", 
            "actor": {
                "username": "jdgrimes", 
                "url": "/jdgrimes", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/109/7fcc1ee5806583ae395ef3fcc27009ec4b5708db_medium.jpeg?1408366943"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "I will respond to each of the three different uses of `md5()`individually.\n\n##\\src\\includes\\class-breaking-updater.php line 246 and 247\n\nThis hash value is used only when the plugin is performing a breaking update. An example of a breaking update would be the update from version 1.x to version 2.x, or version 2.x to version 3.x. When a breaking update happens, the plugin runs a special compatibility check on each of the modules. During the check for a module, this hash is generated and saved to the database. The compatibility check only takes a few moments, and after it is finished the hash is deleted from the database.\n\nSo, in order for an attacker to exploit the weak hashing algorithm, he would need to guess the exact time that the compatibility check for a module was being performed. He would then have only a few seconds to perform the exploit. If he did guess the time a breaking update was being performed, he would only be able to achieve a minor information disclosure.\n\nBecause breaking updates are rare occurrences, and only last a few seconds, I made a deliberate choice to use a weak hashing algorithm. I thought that it would be an accepted risk. And I admit that using PHP's `md5()` function was just an easy thing to do. However, now I do think that maybe it would be better to use a stronger hashing algorithm. At least it would be a better example to new coders who do not know that md5 is unsafe.\n\n##\\src\\admin\\includes\\class-wordpoints-modules-list-table.php line 541\n\nI think that the value is hashed here just to generate a unique `id` attribute for the checkbox element. I will explore this further. Maybe hashing is not needed here at all.\n\n##\\src\\components\\points\\includes\\class-wordpoints-points-logs-query.php line 705\n\nI think this is the most serious case. Thank you for bringing it to my attention.\n\nHere the hash is being used as a key for the cache. The attacker can manipulate the hash value if user-supplied data is incorporated into the query to be cached. This could allow an attacker to expose the results for a different query by causing a hash collision.\n\nThe query results which could be exposed to the attacker would not be very sensitive. But the vulnerability should still be fixed.\n\n## Summary\n\nI will study each of these cases more. I will remove the use of the md5 hashing algorithm in each case, and replace it with a stronger algorithm. I will keep you updated.", 
            "markdown_message": "<p>I will respond to each of the three different uses of <code>md5()</code>individually.</p>\n\n<h2 id=\"src-includes-class-breaking-updater-php-line-246-and-247\">\\src\\includes\\class-breaking-updater.php line 246 and 247</h2>\n\n<p>This hash value is used only when the plugin is performing a breaking update. An example of a breaking update would be the update from version 1.x to version 2.x, or version 2.x to version 3.x. When a breaking update happens, the plugin runs a special compatibility check on each of the modules. During the check for a module, this hash is generated and saved to the database. The compatibility check only takes a few moments, and after it is finished the hash is deleted from the database.</p>\n\n<p>So, in order for an attacker to exploit the weak hashing algorithm, he would need to guess the exact time that the compatibility check for a module was being performed. He would then have only a few seconds to perform the exploit. If he did guess the time a breaking update was being performed, he would only be able to achieve a minor information disclosure.</p>\n\n<p>Because breaking updates are rare occurrences, and only last a few seconds, I made a deliberate choice to use a weak hashing algorithm. I thought that it would be an accepted risk. And I admit that using PHP&#39;s <code>md5()</code> function was just an easy thing to do. However, now I do think that maybe it would be better to use a stronger hashing algorithm. At least it would be a better example to new coders who do not know that md5 is unsafe.</p>\n\n<h2 id=\"src-admin-includes-class-wordpoints-modules-list-table-php-line-541\">\\src\\admin\\includes\\class-wordpoints-modules-list-table.php line 541</h2>\n\n<p>I think that the value is hashed here just to generate a unique <code>id</code> attribute for the checkbox element. I will explore this further. Maybe hashing is not needed here at all.</p>\n\n<h2 id=\"src-components-points-includes-class-wordpoints-points-logs-query-php-line-705\">\\src\\components\\points\\includes\\class-wordpoints-points-logs-query.php line 705</h2>\n\n<p>I think this is the most serious case. Thank you for bringing it to my attention.</p>\n\n<p>Here the hash is being used as a key for the cache. The attacker can manipulate the hash value if user-supplied data is incorporated into the query to be cached. This could allow an attacker to expose the results for a different query by causing a hash collision.</p>\n\n<p>The query results which could be exposed to the attacker would not be very sensitive. But the vulnerability should still be fixed.</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>I will study each of these cases more. I will remove the use of the md5 hashing algorithm in each case, and replace it with a stronger algorithm. I will keep you updated.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 519029, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2015-07-21T13:46:08.660Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-21T13:46:08.660Z", 
            "actor": {
                "url": "/wordpoints", 
                "profile": {
                    "name": "WordPoints"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/361/a03ece4787d215973f1f7211f38878585ab3c57a_medium.png?1438962145"
                }
            }, 
            "team_handle": "wordpoints", 
            "bounty_amount": "25.0", 
            "collaborator": {
                "username": "ru94mb", 
                "url": "/ru94mb"
            }, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::BountyAwarded", 
            "id": 519030, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-21T14:16:11.618Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-21T14:16:11.618Z", 
            "actor": {
                "username": "ru94mb", 
                "url": "/ru94mb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/712/8d325331b5deb99554e57643e26ab26369fe70a7_medium.jpg?1437764179"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "@jdgrimes Thank you for detailed analysis of the issues. MD5 and as well as SHA-1 now a days is a strict no to new coders. N I suppose the risk will keep increasing with time.\n\nIt's ideal to fix these before it's too late.", 
            "markdown_message": "<p><a href=\"/jdgrimes\">@jdgrimes</a> Thank you for detailed analysis of the issues. MD5 and as well as SHA-1 now a days is a strict no to new coders. N I suppose the risk will keep increasing with time.</p>\n\n<p>It&#39;s ideal to fix these before it&#39;s too late.</p>\n", 
            "type": "Activities::Comment", 
            "id": 519069, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-21T22:28:34.511Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-21T22:28:34.511Z", 
            "actor": {
                "username": "jdgrimes", 
                "url": "/jdgrimes", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/109/7fcc1ee5806583ae395ef3fcc27009ec4b5708db_medium.jpeg?1408366943"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "@ru94mb I've fixed these and will be releasing an update including the fixes later this week.\n\nI've removed the use of hashing from `\\src\\admin\\includes\\class-wordpoints-modules-list-table.php`, because I discovered that it wasn't needed.", 
            "markdown_message": "<p><a href=\"/ru94mb\">@ru94mb</a> I&#39;ve fixed these and will be releasing an update including the fixes later this week.</p>\n\n<p>I&#39;ve removed the use of hashing from <code>\\src\\admin\\includes\\class-wordpoints-modules-list-table.php</code>, because I discovered that it wasn&#39;t needed.</p>\n", 
            "type": "Activities::Comment", 
            "id": 519793, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-22T06:46:48.842Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-22T06:46:48.842Z", 
            "actor": {
                "username": "ru94mb", 
                "url": "/ru94mb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/712/8d325331b5deb99554e57643e26ab26369fe70a7_medium.jpg?1437764179"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "@jdgrimes Cool. I will have a look into the new code as well and see if there are any new issues.", 
            "markdown_message": "<p><a href=\"/jdgrimes\">@jdgrimes</a> Cool. I will have a look into the new code as well and see if there are any new issues.</p>\n", 
            "type": "Activities::Comment", 
            "id": 520056, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-22T13:00:41.720Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-22T13:00:41.720Z", 
            "actor": {
                "username": "jdgrimes", 
                "url": "/jdgrimes", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/109/7fcc1ee5806583ae395ef3fcc27009ec4b5708db_medium.jpeg?1408366943"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "@ru94mb I've just published the [changes on GitHub](https://github.com/WordPoints/wordpoints/compare/security/77231?expand=1). You can review them and let me know if you have any feedback. I plan to release an update later today. ", 
            "markdown_message": "<p><a href=\"/ru94mb\">@ru94mb</a> I&#39;ve just published the <a href=\"/redirect?signature=11740f386071f975a87858fab33e97775d5ffaab&amp;url=https%3A%2F%2Fgithub.com%2FWordPoints%2Fwordpoints%2Fcompare%2Fsecurity%2F77231%3Fexpand%3D1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>changes on GitHub</span><i class=\"icon-external-link\"></i></a>. You can review them and let me know if you have any feedback. I plan to release an update later today. </p>\n", 
            "type": "Activities::Comment", 
            "id": 520579, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "ru94mb", 
                "url": "/ru94mb"
            }, 
            "created_at": "2015-07-22T21:37:44.490Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-22T21:37:44.490Z", 
            "actor": {
                "username": "jdgrimes", 
                "url": "/jdgrimes", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/109/7fcc1ee5806583ae395ef3fcc27009ec4b5708db_medium.jpeg?1408366943"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "@ru94mb I've just released version 2.0.1, which includes these fixes. Thank you again for the report. If you find anything else, let us know.", 
            "markdown_message": "<p><a href=\"/ru94mb\">@ru94mb</a> I&#39;ve just released version 2.0.1, which includes these fixes. Thank you again for the report. If you find anything else, let us know.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 521533, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-22T21:38:17.069Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-22T21:38:17.069Z", 
            "actor": {
                "username": "jdgrimes", 
                "url": "/jdgrimes", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/109/7fcc1ee5806583ae395ef3fcc27009ec4b5708db_medium.jpeg?1408366943"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "first_to_agree": true, 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 521534, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-23T06:24:30.083Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-23T06:24:30.083Z", 
            "actor": {
                "username": "ru94mb", 
                "url": "/ru94mb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/712/8d325331b5deb99554e57643e26ab26369fe70a7_medium.jpg?1437764179"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "Awesome. ", 
            "markdown_message": "<p>Awesome. </p>\n", 
            "type": "Activities::Comment", 
            "id": 521933, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-23T06:47:08.201Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-23T06:47:08.201Z", 
            "actor": {
                "username": "ru94mb", 
                "url": "/ru94mb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/712/8d325331b5deb99554e57643e26ab26369fe70a7_medium.jpg?1437764179"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 521945, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2015-07-23T06:47:08.304Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2015-07-23T06:47:08.304Z", 
            "actor": {
                "username": "ru94mb", 
                "url": "/ru94mb", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/009/712/8d325331b5deb99554e57643e26ab26369fe70a7_medium.jpg?1437764179"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "wordpoints", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 521946, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "ru94mb", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ru94mb", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/009/712/4134f3f5eb628ed6e31884615ed3bf37147eb544_small.jpg?1437764179"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 57, 
        "name": "Violation of Secure Design Principles"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -103944095.4546834, 
    "disclosed_at": "2015-07-23T06:47:08.280Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/77231", 
    "created_at": "2015-07-21T07:29:14.331Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>Issue:</p>\n\n<p>The following files are vulnerable to this issue:</p>\n\n<p>\\src\\includes\\class-breaking-updater.php line 246 and 247</p>\n\n<p>protected function check_module( $module ) {</p>\n<pre class=\"highlight plaintext\"><code>    $rand_str = str_shuffle( md5( microtime() ) );\n    $nonce = md5( $rand_str . &#39;wordpoints_check_modules-&#39; . $module );\n</code></pre>\n<p>\\src\\admin\\includes\\class-wordpoints-modules-list-table.php line 541</p>\n\n<p>switch ( $column_name ) {</p>\n<pre class=\"highlight plaintext\"><code>                case &#39;cb&#39;:\n                    $checkbox_id = &#39;checkbox_&#39; . md5( $module_data[&#39;name&#39;] );\n</code></pre>\n<p>\\src\\components\\points\\includes\\class-wordpoints-points-logs-query.php line 705</p>\n\n<p>private function _calc_cache_query_md5() {</p>\n<pre class=\"highlight plaintext\"><code>    if ( ! isset( $this-&gt;_cache_query_md5 ) ) {\n        $this-&gt;_cache_query_md5 = md5( $this-&gt;get_sql() );\n    }\n}\n</code></pre>\n<p>Explanation:</p>\n\n<p>Weak cryptographic hashes are susceptible to attacks like rainbow table searches. Hashing algorithms like MD5 and SHA-1 has been marked obsolete according to latest coding standards. This risk the integrity of security critical data to be compromised.</p>\n\n<p>Recommendation:</p>\n\n<p>Discontinue the use of MD5 and SHA-1 algorithms. Use SHA-256 or above to perform one way hashing for better security and integrity of data.</p>\n", 
    "vulnerability_information": "Issue:\r\n\r\nThe following files are vulnerable to this issue:\r\n\r\n\\src\\includes\\class-breaking-updater.php line 246 and 247\r\n\r\nprotected function check_module( $module ) {\r\n\r\n\t\t$rand_str = str_shuffle( md5( microtime() ) );\r\n\t\t$nonce = md5( $rand_str . 'wordpoints_check_modules-' . $module );\r\n\r\n\\src\\admin\\includes\\class-wordpoints-modules-list-table.php line 541\r\n\r\nswitch ( $column_name ) {\r\n\r\n\t\t\t\t\tcase 'cb':\r\n\t\t\t\t\t\t$checkbox_id = 'checkbox_' . md5( $module_data['name'] );\r\n\r\n\\src\\components\\points\\includes\\class-wordpoints-points-logs-query.php line 705\r\n\r\nprivate function _calc_cache_query_md5() {\r\n\r\n\t\tif ( ! isset( $this->_cache_query_md5 ) ) {\r\n\t\t\t$this->_cache_query_md5 = md5( $this->get_sql() );\r\n\t\t}\r\n\t}\r\n\r\nExplanation:\r\n\r\nWeak cryptographic hashes are susceptible to attacks like rainbow table searches. Hashing algorithms like MD5 and SHA-1 has been marked obsolete according to latest coding standards. This risk the integrity of security critical data to be compromised.\r\n\r\nRecommendation:\r\n\r\nDiscontinue the use of MD5 and SHA-1 algorithms. Use SHA-256 or above to perform one way hashing for better security and integrity of data.", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "", 
            "about": "Open source points plugin for WordPress.", 
            "twitter_handle": "", 
            "name": "WordPoints"
        }, 
        "handle": "wordpoints", 
        "url": "https://hackerone.com/wordpoints", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/361/239c0e6b50a1415aab11f52639b16993ea0e85c2_small.png?1438962145", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/361/a03ece4787d215973f1f7211f38878585ab3c57a_medium.png?1438962145"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 361, 
        "default_currency": "usd"
    }, 
    "is_published": false
}