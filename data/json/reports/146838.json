{
    "abilities": {
        "can_manage_common_responses?": false, 
        "can_manage_collaborators?": false, 
        "can_reopen?": false, 
        "can_ban_researcher?": false, 
        "can_create_severity?": false, 
        "can_assign_to_h1_triage?": false, 
        "can_agree_on_going_public?": false, 
        "assignable_team_member_groups": [], 
        "can_view_credential_account_details?": false, 
        "can_export?": false, 
        "can_create_retest?": false, 
        "can_assign_to_user?": false, 
        "can_use_common_responses?": false, 
        "can_hide_timeline?": false, 
        "can_be_manually_disclosed?": false, 
        "assignable_team_members": [], 
        "can_clone?": false, 
        "can_be_publicly_disclosed?": false, 
        "can_close_comments?": false, 
        "can_view_bounty_weights?": false, 
        "can_suggest_bounty_amount?": false, 
        "can_cancel_disclosure_request?": false, 
        "can_redact?": false, 
        "can_change_structured_scope?": false, 
        "can_post_internal_comments?": false, 
        "can_change_state?": false, 
        "can_change_weakness?": false, 
        "can_add_comment?": false, 
        "can_reassign_to_team?": false, 
        "can_change_title?": false, 
        "can_award_bounty?": false, 
        "can_award_swag?": false, 
        "can_close?": false, 
        "can_manage?": false
    }, 
    "comments_closed?": false, 
    "substate": "informative", 
    "bug_reporter_agreed_on_going_public_at": "2016-06-24T18:01:52.548Z", 
    "voters": [
        "dyabla"
    ], 
    "facebook_team?": false, 
    "has_bounty?": false, 
    "rejected_anc_report_that_can_be_sent_back_to_anc_triagers?": false, 
    "original_report_id": null, 
    "id": 146838, 
    "can_view_team": true, 
    "team_member_agreed_on_going_public_at": "2016-07-07T23:03:05.212Z", 
    "activity_page_count": 1, 
    "activity_page_number": 1, 
    "title": "Authentication Issue for easter egg on bonjour.uber.com", 
    "is_member_of_team?": null, 
    "vote_count": 1, 
    "summaries": [
        {
            "category": "team", 
            "can_create?": false, 
            "can_view?": true
        }, 
        {
            "category": "researcher", 
            "can_view?": true, 
            "can_edit?": false, 
            "id": 2190, 
            "content": "Easter egg's code was insecure :P", 
            "content_html": "<p>Easter egg&#39;s code was insecure :P</p>\n"
        }
    ], 
    "structured_scope": null, 
    "allow_singular_disclosure_at": null, 
    "state": "Closed", 
    "cve_ids": [], 
    "readable_substate": "Informative", 
    "public": true, 
    "singular_disclosure_disabled": true, 
    "activities": [
        {
            "automated_response": false, 
            "created_at": "2016-06-24T14:46:05.799Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-24T14:46:05.799Z", 
            "actor": {
                "username": "bugtriage-rob", 
                "url": "/bugtriage-rob", 
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hello, thanks for your report. \n\nWhile we appreciate your efforts to help improve Uber, I'm afraid this doesn't qualify for a reward under this program; as we don't consider this to pose a security risk. As such, we'll be closing this report. \n\nThank and good luck in your future bug hunting. ", 
            "markdown_message": "<p>Hello, thanks for your report. </p>\n\n<p>While we appreciate your efforts to help improve Uber, I&#39;m afraid this doesn&#39;t qualify for a reward under this program; as we don&#39;t consider this to pose a security risk. As such, we&#39;ll be closing this report. </p>\n\n<p>Thank and good luck in your future bug hunting. </p>\n", 
            "type": "Activities::BugInformative", 
            "id": 1035520, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-06-24T18:01:52.574Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-06-24T18:01:52.574Z", 
            "actor": {
                "username": "ddworken", 
                "url": "/ddworken", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/017/344/221b5d357fc59c63987d2ed60b7d586df065f92e_medium.png?1424388672"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "first_to_agree": true, 
            "message": "Lol, yup. I just found the easter egg's security hilarious. :P Mind if we disclose this? \n\nThanks,\nDavid Dworken", 
            "markdown_message": "<p>Lol, yup. I just found the easter egg&#39;s security hilarious. :P Mind if we disclose this? </p>\n\n<p>Thanks,<br>\nDavid Dworken</p>\n", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1035814, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-07T06:00:25.026Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-07T06:00:25.026Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "Hey @ddworken,\n\nWe typically have meetings a few times a month to discuss public disclosure requests, after that we will let you know. Thanks!", 
            "markdown_message": "<p>Hey <a href=\"/ddworken\">@ddworken</a>,</p>\n\n<p>We typically have meetings a few times a month to discuss public disclosure requests, after that we will let you know. Thanks!</p>\n", 
            "type": "Activities::Comment", 
            "id": 1056895, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-07T23:03:05.257Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-07T23:03:05.257Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::AgreedOnGoingPublic", 
            "id": 1058318, 
            "genius_execution_id": null
        }, 
        {
            "automated_response": false, 
            "created_at": "2016-07-07T23:03:05.381Z", 
            "is_internal": false, 
            "editable": false, 
            "updated_at": "2016-07-07T23:03:05.381Z", 
            "actor": {
                "username": "lyoung-uber", 
                "url": "/lyoung-uber", 
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/000/079/873/a15c66b0ad7834ebe7cd48006c61b58bfe42514e_medium.jpg?1466112878"
                }, 
                "hackerone_triager": false
            }, 
            "team_handle": "uber", 
            "message": "", 
            "markdown_message": "", 
            "type": "Activities::ReportBecamePublic", 
            "id": 1058319, 
            "genius_execution_id": null
        }
    ], 
    "in_validation?": false, 
    "is_participant": false, 
    "reporter": {
        "username": "ddworken", 
        "hacker_mediation": false, 
        "hackerone_triager": false, 
        "disabled": false, 
        "url": "/ddworken", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/017/344/b5a8712fba49a7d64be9cd1b3d0b50d4076edb42_small.png?1424388672"
        }, 
        "is_me?": false
    }, 
    "weakness": {
        "id": 27, 
        "name": "Improper Authentication - Generic"
    }, 
    "is_external_bug": false, 
    "visibility": "full", 
    "disclosed_at": "2016-07-07T23:03:05.302Z", 
    "stage": 4, 
    "url": "https://hackerone.com/reports/146838", 
    "created_at": "2016-06-23T16:49:38.774Z", 
    "original_report_url": null, 
    "vulnerability_information_html": "<p>This probably (ok, almost definitely) is just informative but thought I would throw it out here anyways. :)</p>\n\n<p><a href=\"/redirect?signature=73e69f4a1db2cef36422313934d710b6d13711bc&amp;url=http%3A%2F%2Fbonjour.uber.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>bonjour.uber.com</span><i class=\"icon-external-link\"></i></a> hosts an easter egg (view source and scroll down) where the passcode is insecurely stored as a javascript variable. The source for the easter egg is: </p>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">&quot;text/javascript&quot;</span><span class=\"nt\">&gt;</span><span class=\"c1\">//error easter egg - call stack is intentionally complex</span>\n<span class=\"kd\">var</span> <span class=\"nx\">pressed</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"kd\">var</span> <span class=\"nx\">passcode</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;abcde&#39;</span><span class=\"p\">;</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">&#39;keypress&#39;</span><span class=\"p\">,</span> <span class=\"nx\">keyPressed</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">keyPressed</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"nx\">pressed</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"nx\">fromCharCode</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">charCode</span><span class=\"p\">));</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">pressed</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nx\">passcode</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"err\">\u2002\u2002\u2002\u2002</span><span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">&#39;sentry test&#39;</span><span class=\"p\">);</span>\n<span class=\"err\">\u2002\u2002\u2002\u2002</span><span class=\"nx\">pressed</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"p\">}</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">passcode</span><span class=\"p\">.</span><span class=\"nx\">indexOf</span><span class=\"p\">(</span><span class=\"nx\">pressed</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)))</span> <span class=\"p\">{</span>\n<span class=\"err\">\u2002\u2002\u2002\u2002</span><span class=\"nx\">pressed</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>\n<p>The problem is that the passcode is stored as a string which means I can analyze the code in order to figure out that I must type in abcde to get the sentry test error. Instead of including it that way, I would like to suggest the following code change to increase security: </p>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">pressed</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"kd\">var</span> <span class=\"nx\">hashedPasscode</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;03de6c570bfe24bfc328ccd7ca46b76eadaf4334&#39;</span><span class=\"p\">;</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">&#39;keypress&#39;</span><span class=\"p\">,</span> <span class=\"nx\">keyPressed</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">keyPressed</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"nx\">pressed</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"nx\">fromCharCode</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">charCode</span><span class=\"p\">));</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">sha1</span><span class=\"p\">(</span><span class=\"nx\">pressed</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"p\">)</span><span class=\"o\">==</span> <span class=\"nx\">hashedPasscode</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"err\">\u2002\u2002\u2002\u2002</span><span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">&#39;sentry test&#39;</span><span class=\"p\">);</span>\n<span class=\"err\">\u2002\u2002\u2002\u2002</span><span class=\"nx\">pressed</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"err\">\u2002\u2002</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<p>You could even switch to scrypt or some other more secure hashing algorithm for added security! :P </p>\n", 
    "vulnerability_information": "This probably (ok, almost definitely) is just informative but thought I would throw it out here anyways. :)\n\n[bonjour.uber.com](bonjour.uber.com) hosts an easter egg (view source and scroll down) where the passcode is insecurely stored as a javascript variable. The source for the easter egg is: \n\n``` html\n<script type=\"text/javascript\">//error easter egg - call stack is intentionally complex\nvar pressed = [];\nvar passcode = 'abcde';\ndocument.addEventListener('keypress', keyPressed);\nfunction keyPressed(e) {\n\u2002\u2002pressed.push(String.fromCharCode(e.charCode));\n\u2002\u2002if (pressed.join('') == passcode) {\n\u2002\u2002\u2002\u2002throw new Error('sentry test');\n\u2002\u2002\u2002\u2002pressed = [];\n\u2002\u2002}\n\u2002\u2002if (passcode.indexOf(pressed.join(''))) {\n\u2002\u2002\u2002\u2002pressed = [];\n\u2002\u2002}\n}\n</script>\n```\n\nThe problem is that the passcode is stored as a string which means I can analyze the code in order to figure out that I must type in abcde to get the sentry test error. Instead of including it that way, I would like to suggest the following code change to increase security: \n\n``` javascript\nvar pressed = [];\nvar hashedPasscode = '03de6c570bfe24bfc328ccd7ca46b76eadaf4334';\ndocument.addEventListener('keypress', keyPressed);\nfunction keyPressed(e) {\n\u2002\u2002pressed.push(String.fromCharCode(e.charCode));\n\u2002\u2002if (sha1(pressed.join('') )== hashedPasscode) {\n\u2002\u2002\u2002\u2002throw new Error('sentry test');\n\u2002\u2002\u2002\u2002pressed = [];\n\u2002\u2002}\n}\n```\n\nYou could even switch to scrypt or some other more secure hashing algorithm for added security! :P ", 
    "team_private?": false, 
    "team": {
        "profile": {
            "website": "https://www.uber.com", 
            "about": "", 
            "twitter_handle": "", 
            "name": "Uber"
        }, 
        "handle": "uber", 
        "url": "https://hackerone.com/uber", 
        "state": "public_mode", 
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/000/000/314/826c90cba1555458df787ae914793cd5070e18df_small.png?1514905146", 
            "medium": "https://profile-photos.hackerone-user-content.com/000/000/314/0010251d7088db2a1b236eb594b6371af4492609_medium.png?1514905146"
        }, 
        "awards_miles": false, 
        "permissions": [], 
        "id": 314, 
        "default_currency": "usd"
    }, 
    "is_published": false
}