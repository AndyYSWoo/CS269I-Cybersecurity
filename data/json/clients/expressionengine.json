{
    "twitter_handle": "eecms", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": true, 
    "policy_html": "<p><strong>PLEASE NOTE: DO NOT TEST OUR WEB SITES</strong> <em>This program is for the downloadable self-hosted application <a href=\"https://expressionengine.com/store\" rel=\"nofollow noopener noreferrer\"><span>ExpressionEngine</span><i class=\"icon-external-link\"></i></a>, <u>not</u> the ExpressionEngine.com or EllisLab.com web sites. Scans and intrusion attempts are a violation of our web site&#39;s terms of use and reports will be marked Not Applicable without notice, incurring a loss of HackerOne reputation.</em></p>\n\n<p>We take security issues very seriously, and encourage responsible reporting with a high priority on making security fixes or patches available rapidly, prior to any public disclosure of the vulnerability. We find this is the best balance of giving security issues the attention they rightly deserve, and protecting end users and site visitors from malicious individuals and script kiddies.</p>\n\n<p>All software has vulnerabilities, but when we work together with developers and researchers, we can all help make the Internet a safer and better place. We love to acknowledge researchers who make valid security reports and work with us, and while we do not have a bounty program, sometimes will donate software or swag for being classy.</p>\n\n<h2 id=\"what-are-security-issues\">What are Security Issues?</h2>\n\n<p>When we speak about security related bugs, we are most interested in:</p>\n\n<ul>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Cross-site_Scripting\" rel=\"nofollow noopener noreferrer\"><span>Cross-site Scripting (XSS)</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Cross-site_request_forgery\" rel=\"nofollow noopener noreferrer\"><span>Cross-site Request Forgery (CSRF)</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Privilege_escalation\" rel=\"nofollow noopener noreferrer\"><span>Privilege Escalation</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Session_hijacking\" rel=\"nofollow noopener noreferrer\"><span>Session Hijacking</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Arbitrary_code_execution\" rel=\"nofollow noopener noreferrer\"><span>Arbitrary Code Execution</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ul>\n\n<h2 id=\"making-good-security-reports\">Making Good Security Reports</h2>\n\n<p>We don\u2019t have rigid guidelines for what a security bug report should include, as we want to minimize barriers\u2014ultimately we just want to receive the information. That said, the best security reports not only describe the vulnerability, but include a proof of concept as well as how it might be exploited in a realistic situation. Bonus points for including your recommended solution.</p>\n\n<p>On the converse, security reports that are merely the output of penetration testing software are generally not only unhelpful, but typically contain false-positives as the software cannot grasp the context or implications of a piece of code that checks off one of the items on the vendor\u2019s preset list of vulnerabilities.</p>\n\n<p>Since our team only speaks English all security reports must be made in English, and communication will be in that language.</p>\n\n<h2 id=\"reporting-and-disclosure\">Reporting and Disclosure</h2>\n\n<p>Once you have reported the security issue, a number of steps will be taken to assess and address the reported issue prior to disclosure.</p>\n\n<ul>\n<li>The report will be triaged within 72 hours to determine if the issue is a legitimate security issue. Issues reported on weekends or U.S. holidays may take up to 96 hours to be triaged.</li>\n<li>Immediately after being triaged, an engineer will be assigned as the owner of the issue and will contact you regarding your report.</li>\n<li>If confirmed, the engineer will set to work on resolving the issue, providing the reporter with a patch to test the prospective fix.</li>\n<li>\n<p>We try to have all security issues fixed within two weeks of being triaged, often much more quickly. All valid security reports have a high priority, but will be addressed in a relative priority based on:</p>\n\n<ul>\n<li>Whether a known exploit is in the wild</li>\n<li>The severity of the exploit</li>\n<li>The likelihood of user impact</li>\n<li>Complexity of the issue</li>\n</ul>\n</li>\n<li><p>In any case, the engineer assigned to the issue will maintain regular contact with the reporter throughout the process, at minimum once per week.</p></li>\n<li><p>The security bug fix will typically be included in the next software release. Depending on the priority conditions above and how distance the next planned release is, we may issue a release and/or patch that only addresses the reported security bug.</p></li>\n<li><p>We disclose in our application <a href=\"https://docs.expressionengine.com/latest/about/changelog.html\" rel=\"nofollow noopener noreferrer\"><span>Change Log</span><i class=\"icon-external-link\"></i></a> that a security bug has been fixed, and what type. We do not disclose the steps or circumstances to reproduce the bug.</p></li>\n<li><p>Releases are posted to our <a href=\"https://expressionengine.com/blog\" rel=\"nofollow noopener noreferrer\"><span>blog</span><i class=\"icon-external-link\"></i></a>, and for users who have left the default feature enabled, receive notification when logged in to their control panel.</p></li>\n<li><p>Public disclosure of a security bug prior to resolution makes our engineers and customers quite unhappy, and will not be met with gratitude.</p></li>\n</ul>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": null, 
    "top_bounty_lower_range": null, 
    "anc_enabled": null, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-10-31T22:25:54.133Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2014-07-15T19:17:33.309Z", 
    "bug_count": 146, 
    "mean_time_to_bounty": null, 
    "offers_swag": false, 
    "offers_bounties": false, 
    "id": 265, 
    "mean_time_to_resolution": 1364400, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/000/265/c97786bc8e66ce1162da4dd023d0d7b86def1743_small.png?1541024863", 
        "large": "https://profile-photos.hackerone-user-content.com/000/000/265/101d63b1f2a70c5c94ae3836cd94a2c0f4c67c20_large.png?1541024863", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/000/265/53512b6431c7ba4ffa6642445772efcbd0050049_xtralarge.png?1541024863"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "number_of_updates": 0, 
    "target_signal": 0, 
    "cover_photo_url": "https://cover-photos.hackerone-user-content.com/000/000/265/c8ea8622efb5618f15c4ccda042654f8caef340f_default.gif?1404250594", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://expressionengine.com/", 
        "about": "ExpressionEngine is a robust and flexible open-source Content Management System.", 
        "twitter_handle": "eecms", 
        "name": "ExpressionEngine"
    }, 
    "scopes": [], 
    "handle": "expressionengine", 
    "cover_color": "", 
    "mean_time_to_first_response": 7200, 
    "average_bounty_lower_range": null, 
    "response_efficiency_percentage": 100, 
    "policy": "**PLEASE NOTE: DO NOT TEST OUR WEB SITES** *This program is for the downloadable self-hosted application [ExpressionEngine](https://expressionengine.com/store), _not_ the ExpressionEngine.com or EllisLab.com web sites. Scans and intrusion attempts are a violation of our web site's terms of use and reports will be marked Not Applicable without notice, incurring a loss of HackerOne reputation.*\r\n\r\nWe take security issues very seriously, and encourage responsible reporting with a high priority on making security fixes or patches available rapidly, prior to any public disclosure of the vulnerability. We find this is the best balance of giving security issues the attention they rightly deserve, and protecting end users and site visitors from malicious individuals and script kiddies.\r\n\r\nAll software has vulnerabilities, but when we work together with developers and researchers, we can all help make the Internet a safer and better place. We love to acknowledge researchers who make valid security reports and work with us, and while we do not have a bounty program, sometimes will donate software or swag for being classy.\r\n\r\n## What are Security Issues?\r\n\r\nWhen we speak about security related bugs, we are most interested in:\r\n\r\n-   [Cross-site Scripting (XSS)](http://en.wikipedia.org/wiki/Cross-site_Scripting)\r\n-   [Cross-site Request Forgery (CSRF)](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\r\n-   [Privilege Escalation](http://en.wikipedia.org/wiki/Privilege_escalation)\r\n-   [Session Hijacking](http://en.wikipedia.org/wiki/Session_hijacking)\r\n-   [Arbitrary Code Execution](http://en.wikipedia.org/wiki/Arbitrary_code_execution)\r\n\r\n## Making Good Security Reports\r\n\r\nWe don\u2019t have rigid guidelines for what a security bug report should include, as we want to minimize barriers\u2014ultimately we just want to receive the information. That said, the best security reports not only describe the vulnerability, but include a proof of concept as well as how it might be exploited in a realistic situation. Bonus points for including your recommended solution.\r\n\r\nOn the converse, security reports that are merely the output of penetration testing software are generally not only unhelpful, but typically contain false-positives as the software cannot grasp the context or implications of a piece of code that checks off one of the items on the vendor\u2019s preset list of vulnerabilities.\r\n\r\nSince our team only speaks English all security reports must be made in English, and communication will be in that language.\r\n\r\n## Reporting and Disclosure\r\n\r\nOnce you have reported the security issue, a number of steps will be taken to assess and address the reported issue prior to disclosure.\r\n\r\n- The report will be triaged within 72 hours to determine if the issue is a legitimate security issue. Issues reported on weekends or U.S. holidays may take up to 96 hours to be triaged.\r\n- Immediately after being triaged, an engineer will be assigned as the owner of the issue and will contact you regarding your report.\r\n- If confirmed, the engineer will set to work on resolving the issue, providing the reporter with a patch to test the prospective fix.\r\n- We try to have all security issues fixed within two weeks of being triaged, often much more quickly. All valid security reports have a high priority, but will be addressed in a relative priority based on:\r\n    \r\n    * Whether a known exploit is in the wild\r\n    * The severity of the exploit\r\n    * The likelihood of user impact\r\n    * Complexity of the issue\r\n\r\n- In any case, the engineer assigned to the issue will maintain regular contact with the reporter throughout the process, at minimum once per week.\r\n- The security bug fix will typically be included in the next software release. Depending on the priority conditions above and how distance the next planned release is, we may issue a release and/or patch that only addresses the reported security bug.\r\n- We disclose in our application [Change Log](https://docs.expressionengine.com/latest/about/changelog.html) that a security bug has been fixed, and what type. We do not disclose the steps or circumstances to reproduce the bug.\r\n- Releases are posted to our [blog](https://expressionengine.com/blog), and for users who have left the default feature enabled, receive notification when logged in to their control panel.\r\n- Public disclosure of a security bug prior to resolution makes our engineers and customers quite unhappy, and will not be met with gratitude.\r\n\r\n", 
    "can_view_hacktivity": true, 
    "has_cover_photo": true, 
    "total_bounties_paid": null, 
    "policy_markdown": "<p><strong>PLEASE NOTE: DO NOT TEST OUR WEB SITES</strong> <em>This program is for the downloadable self-hosted application <a href=\"https://expressionengine.com/store\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ExpressionEngine</span><i class=\"icon-external-link\"></i></a>, <u>not</u> the ExpressionEngine.com or EllisLab.com web sites. Scans and intrusion attempts are a violation of our web site&#39;s terms of use and reports will be marked Not Applicable without notice, incurring a loss of HackerOne reputation.</em></p>\n\n<p>We take security issues very seriously, and encourage responsible reporting with a high priority on making security fixes or patches available rapidly, prior to any public disclosure of the vulnerability. We find this is the best balance of giving security issues the attention they rightly deserve, and protecting end users and site visitors from malicious individuals and script kiddies.</p>\n\n<p>All software has vulnerabilities, but when we work together with developers and researchers, we can all help make the Internet a safer and better place. We love to acknowledge researchers who make valid security reports and work with us, and while we do not have a bounty program, sometimes will donate software or swag for being classy.</p>\n\n<h2 id=\"what-are-security-issues\">What are Security Issues?</h2>\n\n<p>When we speak about security related bugs, we are most interested in:</p>\n\n<ul>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Cross-site_Scripting\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Cross-site Scripting (XSS)</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Cross-site_request_forgery\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Cross-site Request Forgery (CSRF)</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Privilege_escalation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Privilege Escalation</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Session_hijacking\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Session Hijacking</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>  <a href=\"http://en.wikipedia.org/wiki/Arbitrary_code_execution\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Arbitrary Code Execution</span><i class=\"icon-external-link\"></i></a>\n</li>\n</ul>\n\n<h2 id=\"making-good-security-reports\">Making Good Security Reports</h2>\n\n<p>We don\u2019t have rigid guidelines for what a security bug report should include, as we want to minimize barriers\u2014ultimately we just want to receive the information. That said, the best security reports not only describe the vulnerability, but include a proof of concept as well as how it might be exploited in a realistic situation. Bonus points for including your recommended solution.</p>\n\n<p>On the converse, security reports that are merely the output of penetration testing software are generally not only unhelpful, but typically contain false-positives as the software cannot grasp the context or implications of a piece of code that checks off one of the items on the vendor\u2019s preset list of vulnerabilities.</p>\n\n<p>Since our team only speaks English all security reports must be made in English, and communication will be in that language.</p>\n\n<h2 id=\"reporting-and-disclosure\">Reporting and Disclosure</h2>\n\n<p>Once you have reported the security issue, a number of steps will be taken to assess and address the reported issue prior to disclosure.</p>\n\n<ul>\n<li>The report will be triaged within 72 hours to determine if the issue is a legitimate security issue. Issues reported on weekends or U.S. holidays may take up to 96 hours to be triaged.</li>\n<li>Immediately after being triaged, an engineer will be assigned as the owner of the issue and will contact you regarding your report.</li>\n<li>If confirmed, the engineer will set to work on resolving the issue, providing the reporter with a patch to test the prospective fix.</li>\n<li>\n<p>We try to have all security issues fixed within two weeks of being triaged, often much more quickly. All valid security reports have a high priority, but will be addressed in a relative priority based on:</p>\n\n<ul>\n<li>Whether a known exploit is in the wild</li>\n<li>The severity of the exploit</li>\n<li>The likelihood of user impact</li>\n<li>Complexity of the issue</li>\n</ul>\n</li>\n<li><p>In any case, the engineer assigned to the issue will maintain regular contact with the reporter throughout the process, at minimum once per week.</p></li>\n<li><p>The security bug fix will typically be included in the next software release. Depending on the priority conditions above and how distance the next planned release is, we may issue a release and/or patch that only addresses the reported security bug.</p></li>\n<li><p>We disclose in our application <a href=\"https://docs.expressionengine.com/latest/about/changelog.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Change Log</span><i class=\"icon-external-link\"></i></a> that a security bug has been fixed, and what type. We do not disclose the steps or circumstances to reproduce the bug.</p></li>\n<li><p>Releases are posted to our <a href=\"https://expressionengine.com/blog\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>blog</span><i class=\"icon-external-link\"></i></a>, and for users who have left the default feature enabled, receive notification when logged in to their control panel.</p></li>\n<li><p>Public disclosure of a security bug prior to resolution makes our engineers and customers quite unhappy, and will not be met with gratitude.</p></li>\n</ul>\n", 
    "show_mean_first_response_time": true, 
    "can_invite_team_member": false, 
    "researcher_count": 66, 
    "can_view_insights": true, 
    "show_mean_report_triage_time": false, 
    "top_bounty_upper_range": null, 
    "name": "ExpressionEngine", 
    "submission_state": "open", 
    "url": "https://hackerone.com/expressionengine", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": null, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}