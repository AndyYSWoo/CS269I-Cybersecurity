{
    "twitter_handle": "Zomato", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": true, 
    "policy_html": "<p>We take security seriously at Zomato, and we\u2019re committed to protecting our community. If you are a security researcher or expert, and believe you\u2019ve identified security-related issues with Zomato\u2019s website or apps, we would appreciate you disclosing it to us responsibly. </p>\n\n<p>Our team is committed to addressing all security issues in a responsible and timely manner, and we ask the security community to give us the opportunity to do so before disclosing them publicly. Please submit a detailed description of the issue to us, along with the steps to reproduce it. We trust the security community to make every effort to protect our users\u2019 data and privacy. </p>\n\n<p><strong>Disclosure Policy</strong></p>\n\n<ul>\n<li>Let us know as soon as possible upon discovery of a potential security issue, and we&#39;ll make every effort to quickly resolve the issue.</li>\n<li>Provide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.</li>\n<li>Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.</li>\n</ul>\n\n<p><strong>Scope</strong><br>\nThe scope of issues is limited to technical vulnerabilities in the Zomato website or mobile apps. Please do not attempt to compromise the safety or privacy of our users (so please use test accounts), or the availability of Zomato through DoS attacks or spam. We also request you not to use vulnerability testing tools that generate a significant volume of traffic.</p>\n\n<p>Certain vulnerabilities with a working proof of concept on some of our Android mobile app(s) may qualify for an additional bounty through the <a href=\"https://hackerone.com/googleplay\">Google Play Security Rewards Program</a>. To see which apps and vulnerabilities may qualify for a bounty, please refer to the <a href=\"https://hackerone.com/googleplay\">Google Play Security Rewards Program\u2019s Scope and Vulnerability Criteria</a>.</p>\n\n<p><strong>Bounty Program</strong><br>\nWe will reward reports according to their severity on a case-by-case basis as determined by our security team. We may pay more for unique, hard-to-find bugs; we may also pay less for bugs with complex prerequisites that lower risk of exploitation.</p>\n\n<p>The minimum reward for severe bugs like Remote Code Execution or User Personal Information Access is $1000 USD.</p>\n\n<p><strong>Eligibility and Responsible Disclosure</strong><br>\nTo promote the discovery and reporting of vulnerabilities and increase user safety, we ask that you:</p>\n\n<ul>\n<li>Give us a reasonable time to respond to the issue before making any information about it public.</li>\n<li>Not access or modify data without explicit permission of the owner.</li>\n<li>Act in good faith not to degrade the performance of our services (including denial of service).</li>\n</ul>\n\n<p>We only reward the first reporter of a vulnerability. Public disclosure of the vulnerability prior to resolution will result in disqualification from the program. You must report a qualifying vulnerability through the HackerOne reporting tool to be eligible for a monetary reward.</p>\n\n<p><strong>Non-qualifying vulnerabilities / Known Issues</strong></p>\n\n<p>Although we review every reported issue on a case-by-case basis, some of them may not qualify depending on their impact. Here are some common low-risk issues that typically do not qualify:</p>\n\n<ul>\n<li>Attacks requiring physical access to a user&#39;s device</li>\n<li>Forms missing CSRF tokens (we require evidence of actual CSRF vulnerability)</li>\n<li>Login/logout CSRF</li>\n<li>Password and account recovery policies, such as reset link expiration or password complexity</li>\n<li>Invalid or missing SPF (Sender Policy Framework) records</li>\n<li>Content spoofing/text injection</li>\n<li>Username enumeration and other similar enumeration reports</li>\n<li>Self-XSS without a vector for a third party attack.</li>\n<li>Issues related to software or protocols not under Zomato&#39;s control</li>\n<li>Reports of spam</li>\n<li>Bypass of URL malware detection</li>\n<li>Best practices concerns</li>\n<li>Denial of Service Attacks</li>\n<li>Bruteforce Attacks</li>\n<li>Spamming the users</li>\n<li>Content injection issues</li>\n<li>Open redirects with minimal security implications</li>\n<li>Stack traces that disclose information</li>\n<li>Banner grabbing issues</li>\n<li>Outdated wordpress instances and plugins</li>\n<li>Tab nabbing</li>\n<li>Failure to implement security best practices such as rate limiting, minimum password strength, and mobile binary protection</li>\n<li>Recently disclosed 0-day vulnerabilities</li>\n<li>Account/e-mail enumeration</li>\n<li>Results of automated tools or scanners</li>\n<li>Login/logout/unauthenticated/low-impact CSRF</li>\n<li>Lack of the Secure flag on non-sensitive cookies. We provide full site SSL as a mechanism to defend against MITM (via HSTS) for sensitive session cookies.</li>\n<li>Lack of HTTPOnly flag on non-sensitive cookies. We have set the HTTPOnly flag on cookies we feel are sensitive and we do not consider the lack of HTTPOnly on other cookies to be a vulnerability.</li>\n<li>Vulnerabilities only affecting users of outdated or unpatched browsers and platforms</li>\n<li>Any physical attempts against Zomato property or data centers</li>\n<li>Issues without clearly identified security impact, such as clickjacking on a static website, missing security headers, or descriptive error messages</li>\n<li>Do not test the physical security of Zomato offices, employees, equipment, etc.</li>\n<li>Do not test using social engineering techniques (this includes phishing attacks against Zomato employees/contractors). Do not perform DoS or DDoS attacks.</li>\n<li>Do not in any way attack our end users, or engage in the trade of stolen user credentials.</li>\n<li>CSRF on <code>www.zomato.com/php/*</code> , <code>www.zomato.com/clients/*</code>\n</li>\n<li>Promo code enumeration, abuse of our promotional offers and referral codes.</li>\n</ul>\n\n<h3 id=\"consequences-of-complying-with-this-policy\">Consequences of Complying with This Policy</h3>\n\n<p>We will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act (CFAA). We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.</p>\n\n<p>If legal action is initiated by a third party against you and you have complied with Zomato&#39;s bug bounty policy, Zomato will take steps to make it known that your actions were conducted in compliance with this policy.</p>\n\n<p>Please submit a <a href=\"https://hackerone.com/zomato\">HackerOne report</a> to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.</p>\n\n<p>Thank you for helping keep <a href=\"/zomato\">@Zomato</a> safe for the community!</p>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": true, 
    "total_bounties_paid_prefix": ">", 
    "awards_miles": false, 
    "average_bounty_upper_range": null, 
    "top_bounty_lower_range": 1000.0, 
    "anc_enabled": false, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": false, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-11-06T04:57:18.752Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2016-02-04T11:58:25.728Z", 
    "mean_time_to_bounty": 205200, 
    "offers_swag": false, 
    "offers_bounties": true, 
    "id": 2943, 
    "mean_time_to_resolution": 1130400, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/002/943/7b54bc7a4a265c47ec0d946a6abf079078b82401_small.png?1526447675", 
        "large": "https://profile-photos.hackerone-user-content.com/000/002/943/9fcb86f85f121ed6736fb8bf18b0705cdf2c7e9d_large.png?1526447675", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/002/943/ea3e5831bb870b6f55d131f9f10db8c87c03ef2c_xtralarge.png?1526447675"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": true, 
    "target_signal": 1, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://www.zomato.com", 
        "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide.", 
        "twitter_handle": "Zomato", 
        "name": "Zomato"
    }, 
    "scopes": [
        "*.zomato.com", 
        "*.zomatobook.com", 
        "*.zmbk.co", 
        "winecellar.zomato.com", 
        "*.zoma.to", 
        "*.z.tt"
    ], 
    "handle": "zomato", 
    "cover_color": "#181818", 
    "mean_time_to_first_response": 3600, 
    "average_bounty_lower_range": null, 
    "response_efficiency_percentage": 100, 
    "policy": "We take security seriously at Zomato, and we\u2019re committed to protecting our community. If you are a security researcher or expert, and believe you\u2019ve identified security-related issues with Zomato\u2019s website or apps, we would appreciate you disclosing it to us responsibly. \r\n\r\nOur team is committed to addressing all security issues in a responsible and timely manner, and we ask the security community to give us the opportunity to do so before disclosing them publicly. Please submit a detailed description of the issue to us, along with the steps to reproduce it. We trust the security community to make every effort to protect our users\u2019 data and privacy. \r\n\r\n**Disclosure Policy**\r\n* Let us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\r\n* Provide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\r\n* Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\r\n\r\n**Scope**\r\nThe scope of issues is limited to technical vulnerabilities in the Zomato website or mobile apps. Please do not attempt to compromise the safety or privacy of our users (so please use test accounts), or the availability of Zomato through DoS attacks or spam. We also request you not to use vulnerability testing tools that generate a significant volume of traffic.\r\n\r\nCertain vulnerabilities with a working proof of concept on some of our Android mobile app(s) may qualify for an additional bounty through the [Google Play Security Rewards Program] (https://hackerone.com/googleplay). To see which apps and vulnerabilities may qualify for a bounty, please refer to the [Google Play Security Rewards Program\u2019s Scope and Vulnerability Criteria] (https://hackerone.com/googleplay).\r\n\r\n**Bounty Program**\r\nWe will reward reports according to their severity on a case-by-case basis as determined by our security team. We may pay more for unique, hard-to-find bugs; we may also pay less for bugs with complex prerequisites that lower risk of exploitation.\r\n\r\nThe minimum reward for severe bugs like Remote Code Execution or User Personal Information Access is $1000 USD.\r\n\r\n**Eligibility and Responsible Disclosure**\r\nTo promote the discovery and reporting of vulnerabilities and increase user safety, we ask that you:\r\n* Give us a reasonable time to respond to the issue before making any information about it public.\r\n* Not access or modify data without explicit permission of the owner.\r\n* Act in good faith not to degrade the performance of our services (including denial of service).\r\n \r\nWe only reward the first reporter of a vulnerability. Public disclosure of the vulnerability prior to resolution will result in disqualification from the program. You must report a qualifying vulnerability through the HackerOne reporting tool to be eligible for a monetary reward.\r\n\r\n**Non-qualifying vulnerabilities / Known Issues**\r\n\r\nAlthough we review every reported issue on a case-by-case basis, some of them may not qualify depending on their impact. Here are some common low-risk issues that typically do not qualify:\r\n\r\n* Attacks requiring physical access to a user's device\r\n* Forms missing CSRF tokens (we require evidence of actual CSRF vulnerability)\r\n* Login/logout CSRF\r\n* Password and account recovery policies, such as reset link expiration or password complexity\r\n* Invalid or missing SPF (Sender Policy Framework) records\r\n* Content spoofing/text injection\r\n* Username enumeration and other similar enumeration reports\r\n* Self-XSS without a vector for a third party attack.\r\n* Issues related to software or protocols not under Zomato's control\r\n* Reports of spam\r\n* Bypass of URL malware detection\r\n* Best practices concerns\r\n* Denial of Service Attacks\r\n* Bruteforce Attacks\r\n* Spamming the users\r\n* Content injection issues\r\n* Open redirects with minimal security implications\r\n* Stack traces that disclose information\r\n* Banner grabbing issues\r\n* Outdated wordpress instances and plugins\r\n* Tab nabbing\r\n* Failure to implement security best practices such as rate limiting, minimum password strength, and mobile binary protection\r\n* Recently disclosed 0-day vulnerabilities\r\n* Account/e-mail enumeration\r\n* Results of automated tools or scanners\r\n* Login/logout/unauthenticated/low-impact CSRF\r\n* Lack of the Secure flag on non-sensitive cookies. We provide full site SSL as a mechanism to defend against MITM (via HSTS) for sensitive session cookies.\r\n* Lack of HTTPOnly flag on non-sensitive cookies. We have set the HTTPOnly flag on cookies we feel are sensitive and we do not consider the lack of HTTPOnly on other cookies to be a vulnerability.\r\n* Vulnerabilities only affecting users of outdated or unpatched browsers and platforms\r\n* Any physical attempts against Zomato property or data centers\r\n* Issues without clearly identified security impact, such as clickjacking on a static website, missing security headers, or descriptive error messages\r\n* Do not test the physical security of Zomato offices, employees, equipment, etc.\r\n* Do not test using social engineering techniques (this includes phishing attacks against Zomato employees/contractors). Do not perform DoS or DDoS attacks.\r\n* Do not in any way attack our end users, or engage in the trade of stolen user credentials.\r\n* CSRF on `www.zomato.com/php/*` , `www.zomato.com/clients/*`\r\n* Promo code enumeration, abuse of our promotional offers and referral codes.\r\n\r\n###Consequences of Complying with This Policy\r\n\r\nWe will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act (CFAA). We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.\r\n\r\nIf legal action is initiated by a third party against you and you have complied with Zomato's bug bounty policy, Zomato will take steps to make it known that your actions were conducted in compliance with this policy.\r\n\r\nPlease submit a [HackerOne report] (https://hackerone.com/zomato) to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.\r\n\r\nThank you for helping keep @Zomato safe for the community!", 
    "can_view_hacktivity": true, 
    "has_cover_photo": false, 
    "total_bounties_paid": 100000.0, 
    "policy_markdown": "<p>We take security seriously at Zomato, and we\u2019re committed to protecting our community. If you are a security researcher or expert, and believe you\u2019ve identified security-related issues with Zomato\u2019s website or apps, we would appreciate you disclosing it to us responsibly. </p>\n\n<p>Our team is committed to addressing all security issues in a responsible and timely manner, and we ask the security community to give us the opportunity to do so before disclosing them publicly. Please submit a detailed description of the issue to us, along with the steps to reproduce it. We trust the security community to make every effort to protect our users\u2019 data and privacy. </p>\n\n<p><strong>Disclosure Policy</strong></p>\n\n<ul>\n<li>Let us know as soon as possible upon discovery of a potential security issue, and we&#39;ll make every effort to quickly resolve the issue.</li>\n<li>Provide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.</li>\n<li>Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.</li>\n</ul>\n\n<p><strong>Scope</strong><br>\nThe scope of issues is limited to technical vulnerabilities in the Zomato website or mobile apps. Please do not attempt to compromise the safety or privacy of our users (so please use test accounts), or the availability of Zomato through DoS attacks or spam. We also request you not to use vulnerability testing tools that generate a significant volume of traffic.</p>\n\n<p>Certain vulnerabilities with a working proof of concept on some of our Android mobile app(s) may qualify for an additional bounty through the <a href=\"https://hackerone.com/googleplay\" target=\"_blank\">Google Play Security Rewards Program</a>. To see which apps and vulnerabilities may qualify for a bounty, please refer to the <a href=\"https://hackerone.com/googleplay\" target=\"_blank\">Google Play Security Rewards Program\u2019s Scope and Vulnerability Criteria</a>.</p>\n\n<p><strong>Bounty Program</strong><br>\nWe will reward reports according to their severity on a case-by-case basis as determined by our security team. We may pay more for unique, hard-to-find bugs; we may also pay less for bugs with complex prerequisites that lower risk of exploitation.</p>\n\n<p>The minimum reward for severe bugs like Remote Code Execution or User Personal Information Access is $1000 USD.</p>\n\n<p><strong>Eligibility and Responsible Disclosure</strong><br>\nTo promote the discovery and reporting of vulnerabilities and increase user safety, we ask that you:</p>\n\n<ul>\n<li>Give us a reasonable time to respond to the issue before making any information about it public.</li>\n<li>Not access or modify data without explicit permission of the owner.</li>\n<li>Act in good faith not to degrade the performance of our services (including denial of service).</li>\n</ul>\n\n<p>We only reward the first reporter of a vulnerability. Public disclosure of the vulnerability prior to resolution will result in disqualification from the program. You must report a qualifying vulnerability through the HackerOne reporting tool to be eligible for a monetary reward.</p>\n\n<p><strong>Non-qualifying vulnerabilities / Known Issues</strong></p>\n\n<p>Although we review every reported issue on a case-by-case basis, some of them may not qualify depending on their impact. Here are some common low-risk issues that typically do not qualify:</p>\n\n<ul>\n<li>Attacks requiring physical access to a user&#39;s device</li>\n<li>Forms missing CSRF tokens (we require evidence of actual CSRF vulnerability)</li>\n<li>Login/logout CSRF</li>\n<li>Password and account recovery policies, such as reset link expiration or password complexity</li>\n<li>Invalid or missing SPF (Sender Policy Framework) records</li>\n<li>Content spoofing/text injection</li>\n<li>Username enumeration and other similar enumeration reports</li>\n<li>Self-XSS without a vector for a third party attack.</li>\n<li>Issues related to software or protocols not under Zomato&#39;s control</li>\n<li>Reports of spam</li>\n<li>Bypass of URL malware detection</li>\n<li>Best practices concerns</li>\n<li>Denial of Service Attacks</li>\n<li>Bruteforce Attacks</li>\n<li>Spamming the users</li>\n<li>Content injection issues</li>\n<li>Open redirects with minimal security implications</li>\n<li>Stack traces that disclose information</li>\n<li>Banner grabbing issues</li>\n<li>Outdated wordpress instances and plugins</li>\n<li>Tab nabbing</li>\n<li>Failure to implement security best practices such as rate limiting, minimum password strength, and mobile binary protection</li>\n<li>Recently disclosed 0-day vulnerabilities</li>\n<li>Account/e-mail enumeration</li>\n<li>Results of automated tools or scanners</li>\n<li>Login/logout/unauthenticated/low-impact CSRF</li>\n<li>Lack of the Secure flag on non-sensitive cookies. We provide full site SSL as a mechanism to defend against MITM (via HSTS) for sensitive session cookies.</li>\n<li>Lack of HTTPOnly flag on non-sensitive cookies. We have set the HTTPOnly flag on cookies we feel are sensitive and we do not consider the lack of HTTPOnly on other cookies to be a vulnerability.</li>\n<li>Vulnerabilities only affecting users of outdated or unpatched browsers and platforms</li>\n<li>Any physical attempts against Zomato property or data centers</li>\n<li>Issues without clearly identified security impact, such as clickjacking on a static website, missing security headers, or descriptive error messages</li>\n<li>Do not test the physical security of Zomato offices, employees, equipment, etc.</li>\n<li>Do not test using social engineering techniques (this includes phishing attacks against Zomato employees/contractors). Do not perform DoS or DDoS attacks.</li>\n<li>Do not in any way attack our end users, or engage in the trade of stolen user credentials.</li>\n<li>CSRF on <code>www.zomato.com/php/*</code> , <code>www.zomato.com/clients/*</code>\n</li>\n<li>Promo code enumeration, abuse of our promotional offers and referral codes.</li>\n</ul>\n\n<h3 id=\"consequences-of-complying-with-this-policy\">Consequences of Complying with This Policy</h3>\n\n<p>We will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act (CFAA). We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.</p>\n\n<p>If legal action is initiated by a third party against you and you have complied with Zomato&#39;s bug bounty policy, Zomato will take steps to make it known that your actions were conducted in compliance with this policy.</p>\n\n<p>Please submit a <a href=\"https://hackerone.com/zomato\" target=\"_blank\">HackerOne report</a> to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.</p>\n\n<p>Thank you for helping keep <a href=\"/zomato\" target=\"_blank\">@Zomato</a> safe for the community!</p>\n", 
    "show_mean_first_response_time": true, 
    "show_total_bounties_paid": true, 
    "can_invite_team_member": false, 
    "researcher_count": 394, 
    "number_of_updates": 1, 
    "show_mean_report_triage_time": true, 
    "top_bounty_upper_range": 2500.0, 
    "name": "Zomato", 
    "submission_state": "open", 
    "url": "https://hackerone.com/zomato", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": 3600, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}