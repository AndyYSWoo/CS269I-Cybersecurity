{
    "twitter_handle": "getupserve", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": true, 
    "policy_html": "<p>Upserve is committed to protecting the privacy and security of our users. We recognize the valuable role security researchers play in making our services more secure and are committed to working with you to verify and resolve legitimate security vulnerabilities.  We ask that you carefully review this policy and scope to ensure the best experience for all involved.</p>\n\n<h1 id=\"important-notes\">Important Notes</h1>\n\n<h3 id=\"do-not-test-with-the-live-upserve-com-site-please-review-the-scope-for-details-on-the-test-site-url-specific-for-security-research\">Do not test with the live upserve.com site. Please review the scope for details on the test site URL specific for security research</h3>\n\n<ul>\n<li><strong>Do not run automated scans without checking with us first. They are often very noisy and disruptive.</strong></li>\n</ul>\n\n<h1 id=\"public-disclosure-policy\">Public Disclosure Policy</h1>\n\n<p>Upserve supports public disclosure of most vulnerabilities following resolution. We ask that you not share vulnerability details with anyone other than Upserve or HackerOne prior to approved public disclosure through the HackerOne platform.</p>\n\n<ul>\n<li>In most cases, Upserve will allow public disclosure of vulnerabilities within 30 days of resolution. </li>\n<li>In some cases, Upserve will request that public disclosure is delayed. (for example, if we need to conduct private notifications first)</li>\n<li>In limited cases, Upserve may request that a report remain private. In these cases, we will maintain open communication with the researcher about why we feel this is important.</li>\n<li>Follow HackerOne&#39;s disclosure guidelines.</li>\n</ul>\n\n<h1 id=\"report-quality\">Report Quality</h1>\n\n<ul>\n<li>Please consider the attack scenario and exploitability of the bug.</li>\n<li>Please provide detailed reports with reproducible steps and <strong>demonstrable impact</strong>. If the report is not detailed enough to reproduce the issue, the issue will not be eligible for a reward.</li>\n<li>If you\u2019re unsure of the direct impact, but feel you may have found something interesting, please submit a detailed report and ask.</li>\n<li>Submit one vulnerability per report, unless you need to chain vulnerabilities to provide impact.</li>\n</ul>\n\n<h1 id=\"program-rules\">Program Rules</h1>\n\n<ul>\n<li>Please check the list of out-of-scope vulnerabilities and known issues before submitting a report.</li>\n<li><strong>Do not run automated scans without checking with us first. They are often very noisy and disruptive.</strong></li>\n<li>Social engineering (e.g. phishing, vishing, smishing) is prohibited.</li>\n<li>Make every effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. </li>\n<li>Only interact with accounts you own or with the explicit permission of the account holder.</li>\n<li>Bounty amounts below are the minimum we will pay per category for bounty eligible assets. We aim to be fair; all reward amounts are at our discretion and based on demonstrable impact.</li>\n<li>If we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue.</li>\n<li>Multiple vulnerabilities caused by one underlying issue will be awarded one bounty.</li>\n</ul>\n\n<h1 id=\"vulnerability-impact-and-rewards\">Vulnerability Impact and Rewards</h1>\n\n<p>Our rewards are based on the demonstrable impact of a vulnerability. We use CVSS v3 to guide our decisions on vulnerability impact. Things that influence the impact of an issue are the scale of exposure, mitigating factors, and multiplying factors.  All valid reports are eligible to receive a HackerOne reputation reward. For assets eligible for a paid bounty, Upserve may provide rewards based on the impact of a vulnerability. Please note these are general guidelines and examples, and that reward decisions are up to the discretion of Upserve. </p>\n\n<h3 id=\"critical\">Critical:</h3>\n\n<p>Critical vulnerabilities have a CVSS v3.0 score of 9.0 or higher and they can be readily compromised with publicly available malware, exploits, or techniques.</p>\n\n<p>Examples of issues that Upserve might consider of critical impact include:</p>\n\n<ul>\n<li>Gaining unauthorized access to any merchant\u2019s account or data (e.g. credit card numbers, transaction information, etc.)</li>\n<li>Gaining unauthorized access to any customer\u2019s account or data (e.g. credit card numbers, etc.)</li>\n<li>Gaining unauthorized access to any production systems (e.g. shell access, code execution, etc.)</li>\n<li>Exposed credentials that could result in access to production systems or deployment pipelines (e.g. API keys, access tokens, etc.)</li>\n<li>The ability to cause monetary impact to Upserve, a merchant, or a customer (e.g. creating orders with a payment method you don&#39;t own, issue refunds, manipulating order totals, etc.)</li>\n</ul>\n\n<h3 id=\"high\">High:</h3>\n\n<p>High severity vulnerabilities have a CVSS v3.0 score of 7.0 to 8.9. </p>\n\n<p>Examples of issues that Upserve might consider high impact include:</p>\n\n<ul>\n<li>Targeted attacks that result in access to an individual merchant or customer\u2019s account or data (e.g. reflected XSS that requires social engineering)</li>\n<li>Direct object references to sensitive information</li>\n</ul>\n\n<h3 id=\"medium\">Medium:</h3>\n\n<p>Medium severity vulnerabilities have a CVSS v3.0 score of 4.0 to 6.9.</p>\n\n<p>Examples of issues that Upserve might consider medium impact include:</p>\n\n<ul>\n<li>Issues that impact less sensitive assets, such as the public marketing sites</li>\n<li>Being able to modify a merchant or customer\u2019s settings without their permission</li>\n<li>Content injection that allows for convincing phishing attacks (e.g. HTML injection or XSS in an unauthenticated domain)</li>\n<li>Open URL redirection</li>\n</ul>\n\n<h3 id=\"low\">Low:</h3>\n\n<p>Low severity vulnerabilities have a CVSS v3.0 score of 0.1 to 3.9.</p>\n\n<p>Examples of issues that Upserve might consider low impact include:</p>\n\n<ul>\n<li>Leaks of less sensitive information that has a demonstrable impact</li>\n<li>Directory traversal</li>\n</ul>\n\n<h1 id=\"test-plans\">Test Plans</h1>\n\n<p><strong>Read carefully</strong> for instructions and tips on testing: </p>\n\n<ul>\n<li>\n<p>Upserve Loyalty (<a title=\"https://app.upserve.com/b/swipely-bistro\" href=\"https://app.upserve.com/b/swipely-bistro\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/b/swipely-bistro</span><i class=\"icon-external-link\"></i></a>) is a React application with a Ruby on Rails backend. REST API calls are made to app.upserve.com/c/ and cards.swipely.com. The application allows a consumer to register an account and enroll one or more credit cards into a restaurant&#39;s loyalty program. Purchases made by the consumer at the restaurant are tracked in the loyalty program and a reward is given when the consumer&#39;s account reaches a specified level. It is not currently possible for researchers to generate sales that apply to the loyalty program. We are interested in vulnerabilities that would allow a consumer to fraudulently add points to their own account or steal points from other accounts. Use the provided test restaurant Swipely Bistro only. <strong>Testing on any other restaurant is prohibited without approval from Upserve.</strong> </p>\n\n<ul>\n<li>To create a customer account, navigate to <a title=\"https://app.upserve.com/b/swipely-bistro\" href=\"https://app.upserve.com/b/swipely-bistro\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/b/swipely-bistro</span><i class=\"icon-external-link\"></i></a>, enter in your email address, enter in a credit card number (either your own or you can use a credit card generator to create a fake one). The application will reject duplicate card numbers.</li>\n<li>cards.swipely.com provides an endpoint for adding payment cards to the vault. The endpoint returns a token which should not be reversible. This API should not be able to provide back full payment card numbers. </li>\n</ul>\n</li>\n<li>\n<p>Upserve Online Ordering (OLO) (<a title=\"https://app.upserve.com/s/upserve-lounge-test-providence-2\" href=\"https://app.upserve.com/s/upserve-lounge-test-providence-2\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/s/upserve-lounge-test-providence-2</span><i class=\"icon-external-link\"></i></a>) is a React application with a Ruby on Rails backend. REST API calls are made to orders.upserve.com and payments.upserve.com. Orders can be submitted to the test restaurant linked in this plan using any valid credit card number. Credit cards will not be charged or authorized with this restaurant. <strong>Testing on any other restaurant is prohibited without approval from Upserve.</strong></p>\n\n<ul>\n<li>You may create an account or you can place orders without an account</li>\n<li>You may use any validly formatted credit card number - either your own, or you can use a credit card generator to create a fake one.</li>\n<li>Orders placed are submitted to the Upserve POS service and will most likely be rejected after 20 minutes unless someone at Upserve is actively working with this test restaurant</li>\n<li>payments.upserve.com provides an endpoint for adding payment cards to the vault. The endpoint returns a payment method token which is used by the OLO API. The token should not be reversible and should only be usable to the restaurant it was generated for.</li>\n</ul>\n</li>\n<li><p>Upserve.com, RestaurantInsider.com (<a title=\"https://645892349820.vulnerbug.com\" href=\"https://645892349820.vulnerbug.com\" rel=\"nofollow noopener noreferrer\"><span>https://645892349820.vulnerbug.com</span><i class=\"icon-external-link\"></i></a>) is a Wordpress application. <strong>Do not test upserve.com or restaurantinsider.com directly.</strong> Please only test <a title=\"https://645892349820.vulnerbug.com/\" href=\"https://645892349820.vulnerbug.com/\" rel=\"nofollow noopener noreferrer\"><span>https://645892349820.vulnerbug.com/</span><i class=\"icon-external-link\"></i></a>. Our primary concern here would be defacement, but there isn\u2019t much sensitive data or functionality here - as such, reward amounts for this property will typically be lower.</p></li>\n<li><p>theacademy.upserve.com is a Wordpress application hosting customer education materials. The application allows users to search for and view videos. </p></li>\n<li><p>teamhelp.upserve.com is a Wordpress application for internal use by team members. Users are required to sign-in with their Upserve Google account to access the information. There is non-public information on this site.  Our primary concern here would be access to non-public information or defacement.  Reward amounts for this property will typically be lower than our customer-facing applications.</p></li>\n<li>\n<p>Upserve HQ (<a title=\"https://app.upserve.com/partners/\" href=\"https://app.upserve.com/partners/\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/partners/</span><i class=\"icon-external-link\"></i></a>) is a Ruby on Rails application used by restaurants to view operational, sales, marketing, and finance information. </p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve POS HQ (<a title=\"https://hq.breadcrumb.com/\" href=\"https://hq.breadcrumb.com/\" rel=\"nofollow noopener noreferrer\"><span>https://hq.breadcrumb.com/</span><i class=\"icon-external-link\"></i></a>) is a Ruby on Rails application used by restaurants to manage their point of sale tablets and view sales reports. </p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve Live Mobile App - This app is for restaurants to view operational and sales information.</p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve POS iPad App - This app is our point of sale app for restaurants.</p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n</ul>\n\n<h1 id=\"out-of-scope-vulnerabilities\">Out of scope vulnerabilities</h1>\n\n<p>The following issues are considered out of scope:</p>\n\n<ul>\n<li>Wordpress user enumeration</li>\n<li>Clickjacking on pages with no sensitive actions.</li>\n<li>Unauthenticated/logout/login CSRF.</li>\n<li>Attacks requiring MITM or physical access to a user&#39;s device.</li>\n<li>Previously known vulnerable libraries without a working Proof of Concept.</li>\n<li>Comma Separated Values (CSV) injection without demonstrating a vulnerability.</li>\n<li>Missing best practices in SSL/TLS configuration.</li>\n<li>Any activity that could lead to the disruption of our service (DoS).</li>\n<li>Content spoofing and text injection issues without showing an attack vector/without being able to modify HTML/CSS</li>\n<li>Account oracles -- the ability to submit a phone number, email, UUID and receive back a message indicating an Upserve account exists.</li>\n<li>Vulnerabilities as reported by automated tools without additional analysis as to how they&#39;re an issue.</li>\n<li>Reports from automated web vulnerability scanners (Acunetix, Vega, etc.) that have not been validated.</li>\n<li>Banner grabbing issues </li>\n<li>Rate limiting issues</li>\n<li>Missing best practices in email configuration (DMARC, SPF, DKIM, etc)</li>\n</ul>\n\n<h1 id=\"known-issues\">Known Issues</h1>\n\n<p>The following issues are already known to our team - please do not submit new reports related to them, as they will be considered duplicates.</p>\n\n<ul>\n<li>Sessions do not expire after password change/reset</li>\n<li>Attacker can enroll credit cards in another user&#39;s loyalty accounts</li>\n<li>XML-RPC available on Wordpress sites (and associated DoS issues)</li>\n</ul>\n\n<h1 id=\"safe-harbor\">Safe Harbor</h1>\n\n<p>We will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act. To the extent your activities are inconsistent with certain restrictions in our <a href=\"https://upserve.com/terms/\" rel=\"nofollow noopener noreferrer\"><span>Terms &amp; Conditions</span><i class=\"icon-external-link\"></i></a>, we waive those restrictions for the limited purpose of permitting security research under this policy. We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.</p>\n\n<p>If legal action is initiated by a third party against you and you have complied with Upserve&#39;s bug bounty policy, Upserve will take steps to make it known that your actions were conducted in compliance with this policy.</p>\n\n<p>Please understand that if your security research involves the networks, systems, information, applications, products, or services of another party (which is not us), that third party may determine whether to pursue legal action. We cannot and do not authorize security research in the name of other entities.</p>\n\n<p>We will not share your report with a third-party without your permission and/or gaining their commitment they will not pursue legal action against you. Please note again that we can\u2019t authorize out-of-scope testing in the name of third parties and such testing is beyond the scope of the program.</p>\n\n<p>Please submit a HackerOne report to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.</p>\n\n<p>Thank you for helping keep Upserve and our users safe! If you have a question that is not answered on this page, please contact <a title=\"bugbounty@upserve.com\" href=\"mailto:bugbounty@upserve.com\" rel=\"nofollow noopener noreferrer\">bugbounty@upserve.com</a></p>\n\n<p>In order to encourage the adoption of bug bounty programs and promote uniform security best practices across the industry, Upserve reserves no rights in this bug bounty policy and so you are free to copy and modify it for your own purposes.</p>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": true, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": 500.0, 
    "top_bounty_lower_range": 1500.0, 
    "anc_enabled": true, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": true, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-12-05T14:53:06.728Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2018-03-05T15:41:21.315Z", 
    "bug_count": 59, 
    "mean_time_to_bounty": 309600, 
    "offers_swag": false, 
    "offers_bounties": true, 
    "id": 21981, 
    "mean_time_to_resolution": 511200, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/021/981/0b26b1eb797f8e4b6db990057be1ce32fa6f0c6c_small.?1498163322", 
        "large": "https://profile-photos.hackerone-user-content.com/000/021/981/e20cb1263aaea8ac1b33f52817ebae3c87dbe6dd_large.?1498163322", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/021/981/2e195855d7d2a33c76b87cea5fb36f35bc9a0ec9_xtralarge.?1498163322"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": true, 
    "target_signal": -1, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "http://upserve.com", 
        "about": "Upserve offers cloud point of sale for restaurants, actionable analytics, payment processing, and mobile restaurant management.", 
        "twitter_handle": "getupserve", 
        "name": "Upserve "
    }, 
    "scopes": [], 
    "handle": "upserve", 
    "cover_color": "#040202", 
    "mean_time_to_first_response": -3600, 
    "average_bounty_lower_range": 250.0, 
    "response_efficiency_percentage": 96, 
    "policy": "Upserve is committed to protecting the privacy and security of our users. We recognize the valuable role security researchers play in making our services more secure and are committed to working with you to verify and resolve legitimate security vulnerabilities.  We ask that you carefully review this policy and scope to ensure the best experience for all involved.\r\n \r\n# Important Notes\r\n### Do not test with the live upserve.com site. Please review the scope for details on the test site URL specific for security research\r\n* **Do not run automated scans without checking with us first. They are often very noisy and disruptive.**\r\n\r\n# Public Disclosure Policy\r\nUpserve supports public disclosure of most vulnerabilities following resolution. We ask that you not share vulnerability details with anyone other than Upserve or HackerOne prior to approved public disclosure through the HackerOne platform.\r\n* In most cases, Upserve will allow public disclosure of vulnerabilities within 30 days of resolution. \r\n* In some cases, Upserve will request that public disclosure is delayed. (for example, if we need to conduct private notifications first)\r\n* In limited cases, Upserve may request that a report remain private. In these cases, we will maintain open communication with the researcher about why we feel this is important.\r\n* Follow HackerOne's disclosure guidelines.\r\n\r\n# Report Quality\r\n* Please consider the attack scenario and exploitability of the bug.\r\n* Please provide detailed reports with reproducible steps and **demonstrable impact**. If the report is not detailed enough to reproduce the issue, the issue will not be eligible for a reward.\r\n* If you\u2019re unsure of the direct impact, but feel you may have found something interesting, please submit a detailed report and ask.\r\n* Submit one vulnerability per report, unless you need to chain vulnerabilities to provide impact.\r\n\r\n# Program Rules\r\n* Please check the list of out-of-scope vulnerabilities and known issues before submitting a report.\r\n* **Do not run automated scans without checking with us first. They are often very noisy and disruptive.**\r\n* Social engineering (e.g. phishing, vishing, smishing) is prohibited.\r\n* Make every effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. \r\n* Only interact with accounts you own or with the explicit permission of the account holder.\r\n* Bounty amounts below are the minimum we will pay per category for bounty eligible assets. We aim to be fair; all reward amounts are at our discretion and based on demonstrable impact.\r\n* If we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue.\r\n* Multiple vulnerabilities caused by one underlying issue will be awarded one bounty.\r\n\r\n# Vulnerability Impact and Rewards\r\nOur rewards are based on the demonstrable impact of a vulnerability. We use CVSS v3 to guide our decisions on vulnerability impact. Things that influence the impact of an issue are the scale of exposure, mitigating factors, and multiplying factors.  All valid reports are eligible to receive a HackerOne reputation reward. For assets eligible for a paid bounty, Upserve may provide rewards based on the impact of a vulnerability. Please note these are general guidelines and examples, and that reward decisions are up to the discretion of Upserve. \r\n\r\n### Critical:\r\nCritical vulnerabilities have a CVSS v3.0 score of 9.0 or higher and they can be readily compromised with publicly available malware, exploits, or techniques.\r\n\r\nExamples of issues that Upserve might consider of critical impact include:\r\n \r\n* Gaining unauthorized access to any merchant\u2019s account or data (e.g. credit card numbers, transaction information, etc.)\r\n* Gaining unauthorized access to any customer\u2019s account or data (e.g. credit card numbers, etc.)\r\n* Gaining unauthorized access to any production systems (e.g. shell access, code execution, etc.)\r\n* Exposed credentials that could result in access to production systems or deployment pipelines (e.g. API keys, access tokens, etc.)\r\n* The ability to cause monetary impact to Upserve, a merchant, or a customer (e.g. creating orders with a payment method you don't own, issue refunds, manipulating order totals, etc.)\r\n \r\n### High:\r\nHigh severity vulnerabilities have a CVSS v3.0 score of 7.0 to 8.9. \r\n\r\nExamples of issues that Upserve might consider high impact include:\r\n\r\n* Targeted attacks that result in access to an individual merchant or customer\u2019s account or data (e.g. reflected XSS that requires social engineering)\r\n* Direct object references to sensitive information\r\n \r\n### Medium: \r\nMedium severity vulnerabilities have a CVSS v3.0 score of 4.0 to 6.9.\r\n\r\nExamples of issues that Upserve might consider medium impact include:\r\n\r\n* Issues that impact less sensitive assets, such as the public marketing sites\r\n* Being able to modify a merchant or customer\u2019s settings without their permission\r\n* Content injection that allows for convincing phishing attacks (e.g. HTML injection or XSS in an unauthenticated domain)\r\n* Open URL redirection\r\n \r\n### Low: \r\nLow severity vulnerabilities have a CVSS v3.0 score of 0.1 to 3.9.\r\n\r\nExamples of issues that Upserve might consider low impact include:\r\n\r\n* Leaks of less sensitive information that has a demonstrable impact\r\n* Directory traversal\r\n\r\n# Test Plans \r\n**Read carefully** for instructions and tips on testing: \r\n \r\n* Upserve Loyalty (https://app.upserve.com/b/swipely-bistro) is a React application with a Ruby on Rails backend. REST API calls are made to app.upserve.com/c/ and cards.swipely.com. The application allows a consumer to register an account and enroll one or more credit cards into a restaurant's loyalty program. Purchases made by the consumer at the restaurant are tracked in the loyalty program and a reward is given when the consumer's account reaches a specified level. It is not currently possible for researchers to generate sales that apply to the loyalty program. We are interested in vulnerabilities that would allow a consumer to fraudulently add points to their own account or steal points from other accounts. Use the provided test restaurant Swipely Bistro only. **Testing on any other restaurant is prohibited without approval from Upserve.** \r\n    * To create a customer account, navigate to https://app.upserve.com/b/swipely-bistro, enter in your email address, enter in a credit card number (either your own or you can use a credit card generator to create a fake one). The application will reject duplicate card numbers.\r\n    * cards.swipely.com provides an endpoint for adding payment cards to the vault. The endpoint returns a token which should not be reversible. This API should not be able to provide back full payment card numbers. \r\n\r\n* Upserve Online Ordering (OLO) (https://app.upserve.com/s/upserve-lounge-test-providence-2) is a React application with a Ruby on Rails backend. REST API calls are made to orders.upserve.com and payments.upserve.com. Orders can be submitted to the test restaurant linked in this plan using any valid credit card number. Credit cards will not be charged or authorized with this restaurant. **Testing on any other restaurant is prohibited without approval from Upserve.**\r\n    * You may create an account or you can place orders without an account\r\n    * You may use any validly formatted credit card number - either your own, or you can use a credit card generator to create a fake one.\r\n    * Orders placed are submitted to the Upserve POS service and will most likely be rejected after 20 minutes unless someone at Upserve is actively working with this test restaurant\r\n    * payments.upserve.com provides an endpoint for adding payment cards to the vault. The endpoint returns a payment method token which is used by the OLO API. The token should not be reversible and should only be usable to the restaurant it was generated for.\r\n\r\n* Upserve.com, RestaurantInsider.com (https://645892349820.vulnerbug.com) is a Wordpress application. **Do not test upserve.com or restaurantinsider.com directly.** Please only test https://645892349820.vulnerbug.com/. Our primary concern here would be defacement, but there isn\u2019t much sensitive data or functionality here - as such, reward amounts for this property will typically be lower.\r\n\r\n* theacademy.upserve.com is a Wordpress application hosting customer education materials. The application allows users to search for and view videos. \r\n\r\n* teamhelp.upserve.com is a Wordpress application for internal use by team members. Users are required to sign-in with their Upserve Google account to access the information. There is non-public information on this site.  Our primary concern here would be access to non-public information or defacement.  Reward amounts for this property will typically be lower than our customer-facing applications.\r\n\r\n* Upserve HQ (https://app.upserve.com/partners/) is a Ruby on Rails application used by restaurants to view operational, sales, marketing, and finance information. \r\n    * Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don't ask).\r\n\r\n* Upserve POS HQ (https://hq.breadcrumb.com/) is a Ruby on Rails application used by restaurants to manage their point of sale tablets and view sales reports. \r\n    * Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don't ask).\r\n    \r\n* Upserve Live Mobile App - This app is for restaurants to view operational and sales information.\r\n    * Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don't ask).\r\n\r\n* Upserve POS iPad App - This app is our point of sale app for restaurants.\r\n    * Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don't ask).\r\n \r\n\r\n# Out of scope vulnerabilities \r\nThe following issues are considered out of scope:\r\n \r\n* Wordpress user enumeration\r\n* Clickjacking on pages with no sensitive actions.\r\n* Unauthenticated/logout/login CSRF.\r\n* Attacks requiring MITM or physical access to a user's device.\r\n* Previously known vulnerable libraries without a working Proof of Concept.\r\n* Comma Separated Values (CSV) injection without demonstrating a vulnerability.\r\n* Missing best practices in SSL/TLS configuration.\r\n* Any activity that could lead to the disruption of our service (DoS).\r\n* Content spoofing and text injection issues without showing an attack vector/without being able to modify HTML/CSS\r\n* Account oracles -- the ability to submit a phone number, email, UUID and receive back a message indicating an Upserve account exists.\r\n* Vulnerabilities as reported by automated tools without additional analysis as to how they're an issue.\r\n* Reports from automated web vulnerability scanners (Acunetix, Vega, etc.) that have not been validated.\r\n* Banner grabbing issues \r\n* Rate limiting issues\r\n* Missing best practices in email configuration (DMARC, SPF, DKIM, etc)\r\n\r\n# Known Issues\r\nThe following issues are already known to our team - please do not submit new reports related to them, as they will be considered duplicates.\r\n* Sessions do not expire after password change/reset\r\n* Attacker can enroll credit cards in another user's loyalty accounts\r\n* XML-RPC available on Wordpress sites (and associated DoS issues)\r\n\r\n# Safe Harbor\r\nWe will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act. To the extent your activities are inconsistent with certain restrictions in our [Terms & Conditions](https://upserve.com/terms/), we waive those restrictions for the limited purpose of permitting security research under this policy. We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.\r\n\r\nIf legal action is initiated by a third party against you and you have complied with Upserve's bug bounty policy, Upserve will take steps to make it known that your actions were conducted in compliance with this policy.\r\n\r\nPlease understand that if your security research involves the networks, systems, information, applications, products, or services of another party (which is not us), that third party may determine whether to pursue legal action. We cannot and do not authorize security research in the name of other entities.\r\n\r\nWe will not share your report with a third-party without your permission and/or gaining their commitment they will not pursue legal action against you. Please note again that we can\u2019t authorize out-of-scope testing in the name of third parties and such testing is beyond the scope of the program.\r\n\r\nPlease submit a HackerOne report to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.\r\n\r\nThank you for helping keep Upserve and our users safe! If you have a question that is not answered on this page, please contact bugbounty@upserve.com\r\n\r\nIn order to encourage the adoption of bug bounty programs and promote uniform security best practices across the industry, Upserve reserves no rights in this bug bounty policy and so you are free to copy and modify it for your own purposes.", 
    "can_view_hacktivity": true, 
    "base_bounty": 250, 
    "has_cover_photo": false, 
    "total_bounties_paid": 31150.0, 
    "policy_markdown": "<p>Upserve is committed to protecting the privacy and security of our users. We recognize the valuable role security researchers play in making our services more secure and are committed to working with you to verify and resolve legitimate security vulnerabilities.  We ask that you carefully review this policy and scope to ensure the best experience for all involved.</p>\n\n<h1 id=\"important-notes\">Important Notes</h1>\n\n<h3 id=\"do-not-test-with-the-live-upserve-com-site-please-review-the-scope-for-details-on-the-test-site-url-specific-for-security-research\">Do not test with the live upserve.com site. Please review the scope for details on the test site URL specific for security research</h3>\n\n<ul>\n<li><strong>Do not run automated scans without checking with us first. They are often very noisy and disruptive.</strong></li>\n</ul>\n\n<h1 id=\"public-disclosure-policy\">Public Disclosure Policy</h1>\n\n<p>Upserve supports public disclosure of most vulnerabilities following resolution. We ask that you not share vulnerability details with anyone other than Upserve or HackerOne prior to approved public disclosure through the HackerOne platform.</p>\n\n<ul>\n<li>In most cases, Upserve will allow public disclosure of vulnerabilities within 30 days of resolution. </li>\n<li>In some cases, Upserve will request that public disclosure is delayed. (for example, if we need to conduct private notifications first)</li>\n<li>In limited cases, Upserve may request that a report remain private. In these cases, we will maintain open communication with the researcher about why we feel this is important.</li>\n<li>Follow HackerOne&#39;s disclosure guidelines.</li>\n</ul>\n\n<h1 id=\"report-quality\">Report Quality</h1>\n\n<ul>\n<li>Please consider the attack scenario and exploitability of the bug.</li>\n<li>Please provide detailed reports with reproducible steps and <strong>demonstrable impact</strong>. If the report is not detailed enough to reproduce the issue, the issue will not be eligible for a reward.</li>\n<li>If you\u2019re unsure of the direct impact, but feel you may have found something interesting, please submit a detailed report and ask.</li>\n<li>Submit one vulnerability per report, unless you need to chain vulnerabilities to provide impact.</li>\n</ul>\n\n<h1 id=\"program-rules\">Program Rules</h1>\n\n<ul>\n<li>Please check the list of out-of-scope vulnerabilities and known issues before submitting a report.</li>\n<li><strong>Do not run automated scans without checking with us first. They are often very noisy and disruptive.</strong></li>\n<li>Social engineering (e.g. phishing, vishing, smishing) is prohibited.</li>\n<li>Make every effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. </li>\n<li>Only interact with accounts you own or with the explicit permission of the account holder.</li>\n<li>Bounty amounts below are the minimum we will pay per category for bounty eligible assets. We aim to be fair; all reward amounts are at our discretion and based on demonstrable impact.</li>\n<li>If we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue.</li>\n<li>Multiple vulnerabilities caused by one underlying issue will be awarded one bounty.</li>\n</ul>\n\n<h1 id=\"vulnerability-impact-and-rewards\">Vulnerability Impact and Rewards</h1>\n\n<p>Our rewards are based on the demonstrable impact of a vulnerability. We use CVSS v3 to guide our decisions on vulnerability impact. Things that influence the impact of an issue are the scale of exposure, mitigating factors, and multiplying factors.  All valid reports are eligible to receive a HackerOne reputation reward. For assets eligible for a paid bounty, Upserve may provide rewards based on the impact of a vulnerability. Please note these are general guidelines and examples, and that reward decisions are up to the discretion of Upserve. </p>\n\n<h3 id=\"critical\">Critical:</h3>\n\n<p>Critical vulnerabilities have a CVSS v3.0 score of 9.0 or higher and they can be readily compromised with publicly available malware, exploits, or techniques.</p>\n\n<p>Examples of issues that Upserve might consider of critical impact include:</p>\n\n<ul>\n<li>Gaining unauthorized access to any merchant\u2019s account or data (e.g. credit card numbers, transaction information, etc.)</li>\n<li>Gaining unauthorized access to any customer\u2019s account or data (e.g. credit card numbers, etc.)</li>\n<li>Gaining unauthorized access to any production systems (e.g. shell access, code execution, etc.)</li>\n<li>Exposed credentials that could result in access to production systems or deployment pipelines (e.g. API keys, access tokens, etc.)</li>\n<li>The ability to cause monetary impact to Upserve, a merchant, or a customer (e.g. creating orders with a payment method you don&#39;t own, issue refunds, manipulating order totals, etc.)</li>\n</ul>\n\n<h3 id=\"high\">High:</h3>\n\n<p>High severity vulnerabilities have a CVSS v3.0 score of 7.0 to 8.9. </p>\n\n<p>Examples of issues that Upserve might consider high impact include:</p>\n\n<ul>\n<li>Targeted attacks that result in access to an individual merchant or customer\u2019s account or data (e.g. reflected XSS that requires social engineering)</li>\n<li>Direct object references to sensitive information</li>\n</ul>\n\n<h3 id=\"medium\">Medium:</h3>\n\n<p>Medium severity vulnerabilities have a CVSS v3.0 score of 4.0 to 6.9.</p>\n\n<p>Examples of issues that Upserve might consider medium impact include:</p>\n\n<ul>\n<li>Issues that impact less sensitive assets, such as the public marketing sites</li>\n<li>Being able to modify a merchant or customer\u2019s settings without their permission</li>\n<li>Content injection that allows for convincing phishing attacks (e.g. HTML injection or XSS in an unauthenticated domain)</li>\n<li>Open URL redirection</li>\n</ul>\n\n<h3 id=\"low\">Low:</h3>\n\n<p>Low severity vulnerabilities have a CVSS v3.0 score of 0.1 to 3.9.</p>\n\n<p>Examples of issues that Upserve might consider low impact include:</p>\n\n<ul>\n<li>Leaks of less sensitive information that has a demonstrable impact</li>\n<li>Directory traversal</li>\n</ul>\n\n<h1 id=\"test-plans\">Test Plans</h1>\n\n<p><strong>Read carefully</strong> for instructions and tips on testing: </p>\n\n<ul>\n<li>\n<p>Upserve Loyalty (<a title=\"https://app.upserve.com/b/swipely-bistro\" href=\"https://app.upserve.com/b/swipely-bistro\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/b/swipely-bistro</span><i class=\"icon-external-link\"></i></a>) is a React application with a Ruby on Rails backend. REST API calls are made to app.upserve.com/c/ and cards.swipely.com. The application allows a consumer to register an account and enroll one or more credit cards into a restaurant&#39;s loyalty program. Purchases made by the consumer at the restaurant are tracked in the loyalty program and a reward is given when the consumer&#39;s account reaches a specified level. It is not currently possible for researchers to generate sales that apply to the loyalty program. We are interested in vulnerabilities that would allow a consumer to fraudulently add points to their own account or steal points from other accounts. Use the provided test restaurant Swipely Bistro only. <strong>Testing on any other restaurant is prohibited without approval from Upserve.</strong> </p>\n\n<ul>\n<li>To create a customer account, navigate to <a title=\"https://app.upserve.com/b/swipely-bistro\" href=\"https://app.upserve.com/b/swipely-bistro\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/b/swipely-bistro</span><i class=\"icon-external-link\"></i></a>, enter in your email address, enter in a credit card number (either your own or you can use a credit card generator to create a fake one). The application will reject duplicate card numbers.</li>\n<li>cards.swipely.com provides an endpoint for adding payment cards to the vault. The endpoint returns a token which should not be reversible. This API should not be able to provide back full payment card numbers. </li>\n</ul>\n</li>\n<li>\n<p>Upserve Online Ordering (OLO) (<a title=\"https://app.upserve.com/s/upserve-lounge-test-providence-2\" href=\"https://app.upserve.com/s/upserve-lounge-test-providence-2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/s/upserve-lounge-test-providence-2</span><i class=\"icon-external-link\"></i></a>) is a React application with a Ruby on Rails backend. REST API calls are made to orders.upserve.com and payments.upserve.com. Orders can be submitted to the test restaurant linked in this plan using any valid credit card number. Credit cards will not be charged or authorized with this restaurant. <strong>Testing on any other restaurant is prohibited without approval from Upserve.</strong></p>\n\n<ul>\n<li>You may create an account or you can place orders without an account</li>\n<li>You may use any validly formatted credit card number - either your own, or you can use a credit card generator to create a fake one.</li>\n<li>Orders placed are submitted to the Upserve POS service and will most likely be rejected after 20 minutes unless someone at Upserve is actively working with this test restaurant</li>\n<li>payments.upserve.com provides an endpoint for adding payment cards to the vault. The endpoint returns a payment method token which is used by the OLO API. The token should not be reversible and should only be usable to the restaurant it was generated for.</li>\n</ul>\n</li>\n<li><p>Upserve.com, RestaurantInsider.com (<a title=\"https://645892349820.vulnerbug.com\" href=\"https://645892349820.vulnerbug.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://645892349820.vulnerbug.com</span><i class=\"icon-external-link\"></i></a>) is a Wordpress application. <strong>Do not test upserve.com or restaurantinsider.com directly.</strong> Please only test <a title=\"https://645892349820.vulnerbug.com/\" href=\"https://645892349820.vulnerbug.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://645892349820.vulnerbug.com/</span><i class=\"icon-external-link\"></i></a>. Our primary concern here would be defacement, but there isn\u2019t much sensitive data or functionality here - as such, reward amounts for this property will typically be lower.</p></li>\n<li><p>theacademy.upserve.com is a Wordpress application hosting customer education materials. The application allows users to search for and view videos. </p></li>\n<li><p>teamhelp.upserve.com is a Wordpress application for internal use by team members. Users are required to sign-in with their Upserve Google account to access the information. There is non-public information on this site.  Our primary concern here would be access to non-public information or defacement.  Reward amounts for this property will typically be lower than our customer-facing applications.</p></li>\n<li>\n<p>Upserve HQ (<a title=\"https://app.upserve.com/partners/\" href=\"https://app.upserve.com/partners/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://app.upserve.com/partners/</span><i class=\"icon-external-link\"></i></a>) is a Ruby on Rails application used by restaurants to view operational, sales, marketing, and finance information. </p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve POS HQ (<a title=\"https://hq.breadcrumb.com/\" href=\"https://hq.breadcrumb.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://hq.breadcrumb.com/</span><i class=\"icon-external-link\"></i></a>) is a Ruby on Rails application used by restaurants to manage their point of sale tablets and view sales reports. </p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve Live Mobile App - This app is for restaurants to view operational and sales information.</p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n<li>\n<p>Upserve POS iPad App - This app is our point of sale app for restaurants.</p>\n\n<ul>\n<li>Without credentials, only authentication bypass can be tested. Credentials are provided by invite only at this time (please don&#39;t ask).</li>\n</ul>\n</li>\n</ul>\n\n<h1 id=\"out-of-scope-vulnerabilities\">Out of scope vulnerabilities</h1>\n\n<p>The following issues are considered out of scope:</p>\n\n<ul>\n<li>Wordpress user enumeration</li>\n<li>Clickjacking on pages with no sensitive actions.</li>\n<li>Unauthenticated/logout/login CSRF.</li>\n<li>Attacks requiring MITM or physical access to a user&#39;s device.</li>\n<li>Previously known vulnerable libraries without a working Proof of Concept.</li>\n<li>Comma Separated Values (CSV) injection without demonstrating a vulnerability.</li>\n<li>Missing best practices in SSL/TLS configuration.</li>\n<li>Any activity that could lead to the disruption of our service (DoS).</li>\n<li>Content spoofing and text injection issues without showing an attack vector/without being able to modify HTML/CSS</li>\n<li>Account oracles -- the ability to submit a phone number, email, UUID and receive back a message indicating an Upserve account exists.</li>\n<li>Vulnerabilities as reported by automated tools without additional analysis as to how they&#39;re an issue.</li>\n<li>Reports from automated web vulnerability scanners (Acunetix, Vega, etc.) that have not been validated.</li>\n<li>Banner grabbing issues </li>\n<li>Rate limiting issues</li>\n<li>Missing best practices in email configuration (DMARC, SPF, DKIM, etc)</li>\n</ul>\n\n<h1 id=\"known-issues\">Known Issues</h1>\n\n<p>The following issues are already known to our team - please do not submit new reports related to them, as they will be considered duplicates.</p>\n\n<ul>\n<li>Sessions do not expire after password change/reset</li>\n<li>Attacker can enroll credit cards in another user&#39;s loyalty accounts</li>\n<li>XML-RPC available on Wordpress sites (and associated DoS issues)</li>\n</ul>\n\n<h1 id=\"safe-harbor\">Safe Harbor</h1>\n\n<p>We will not pursue civil action or initiate a complaint to law enforcement for accidental, good faith violations of this policy. We consider activities conducted consistent with this policy to constitute \u201cauthorized\u201d conduct under the Computer Fraud and Abuse Act. To the extent your activities are inconsistent with certain restrictions in our <a href=\"https://upserve.com/terms/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Terms &amp; Conditions</span><i class=\"icon-external-link\"></i></a>, we waive those restrictions for the limited purpose of permitting security research under this policy. We will not bring a DMCA claim against you for circumventing the technological measures we have used to protect the applications in scope.</p>\n\n<p>If legal action is initiated by a third party against you and you have complied with Upserve&#39;s bug bounty policy, Upserve will take steps to make it known that your actions were conducted in compliance with this policy.</p>\n\n<p>Please understand that if your security research involves the networks, systems, information, applications, products, or services of another party (which is not us), that third party may determine whether to pursue legal action. We cannot and do not authorize security research in the name of other entities.</p>\n\n<p>We will not share your report with a third-party without your permission and/or gaining their commitment they will not pursue legal action against you. Please note again that we can\u2019t authorize out-of-scope testing in the name of third parties and such testing is beyond the scope of the program.</p>\n\n<p>Please submit a HackerOne report to us before engaging in conduct that may be inconsistent with or unaddressed by this policy.</p>\n\n<p>Thank you for helping keep Upserve and our users safe! If you have a question that is not answered on this page, please contact <a title=\"bugbounty@upserve.com\" href=\"mailto:bugbounty@upserve.com\" rel=\"nofollow noopener noreferrer\">bugbounty@upserve.com</a></p>\n\n<p>In order to encourage the adoption of bug bounty programs and promote uniform security best practices across the industry, Upserve reserves no rights in this bug bounty policy and so you are free to copy and modify it for your own purposes.</p>\n", 
    "show_mean_first_response_time": true, 
    "show_total_bounties_paid": true, 
    "can_invite_team_member": false, 
    "researcher_count": 42, 
    "number_of_updates": 1, 
    "show_mean_report_triage_time": true, 
    "top_bounty_upper_range": 3500.0, 
    "name": "Upserve ", 
    "submission_state": "open", 
    "url": "https://hackerone.com/upserve", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": 75600, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}