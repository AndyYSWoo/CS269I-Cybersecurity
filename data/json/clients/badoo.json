{
    "twitter_handle": "Badoo", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": true, 
    "policy_html": "<h1 id=\"badoo-vulnerability-disclosure-program\">Badoo vulnerability disclosure program</h1>\n\n<p>We pay for all newfound vulnerabilities.</p>\n\n<p>Vulnerabilities will be ranked from category 5 (\u00a31000) to category 1 (\u00a3100), depending on their severity. The Badoo jury determines the severity of the vulnerability.</p>\n\n<h1 id=\"where-to-look-for-vulnerabilities\">Where to look for vulnerabilities:</h1>\n\n<ul>\n<li>badoo.com,</li>\n<li>eu1.badoo.com,</li>\n<li>us1.badoo.com,</li>\n<li>corp.badoo.com,</li>\n<li>m.badoo.com,</li>\n<li>meu1.badoo.com,</li>\n<li>mus1.badoo.com,</li>\n<li>hotornot.com</li>\n<li>bma.badoo.com</li>\n<li>badoocdn.com</li>\n<li>translate.badoo.com</li>\n<li>ccardseu1.badoo.com </li>\n<li>ccardsus1.badoo.com</li>\n<li>Badoo Mobile Applications (App Store, Google Play, BlackBerry World).</li>\n</ul>\n\n<h1 id=\"award-categories\">Award categories</h1>\n\n<ul>\n<li>Category 5 - \u00a3 1000</li>\n<li>Category 4 - \u00a3 600</li>\n<li>Category 3 - \u00a3 300</li>\n<li>Category 2 - \u00a3 200</li>\n<li>Category 1 - \u00a3 100</li>\n</ul>\n\n<p>We don\u2019t want to tie our categories to traditional systems of vulnerability assessment. The more damage a found vulnerability can cause, the more valuable it is to us and the higher the category we assign to it.</p>\n\n<h1 id=\"non-qualifying-vulnerabilities\">Non-qualifying vulnerabilities</h1>\n\n<ul>\n<li>\u201cTheoretical\u201d vulnerabilities without any proof or demonstration of the real presence of the vulnerability</li>\n<li>Vulnerabilities requiring physical access to a user\u2019s browser, or a smartphone, or email account, as well as issues on rooted or jailbroken smartphones; </li>\n<li>Reports from security scanners and other testing tools</li>\n<li>Reports about non-implemented security \u201cbest practices\u201d (like a lack of HSTS mechanism on client or server side, or soft token invalidation rules);</li>\n<li>Reports about issues in third-party applications and services</li>\n<li>Reports about missed headers or cookie flags;</li>\n<li>Reports about configuration of our mail infrastructure (incorrect SPF records, DMARK policies, and other)</li>\n<li>Data enumeration via registration or account recovery forms;</li>\n<li>One-click authorization from emails and login CSRF via these links; </li>\n<li>Issues that require another vulnerability to exploit, without providing that vulnerability;</li>\n<li>Open redirects (except cases with additional impact, e.g. token hijacking);</li>\n<li>Framing, clickjacking, tapjacking (unless you demonstrate real impact on our users);</li>\n<li>Logout CSRF;</li>\n<li>Self-XSS;</li>\n<li>Captcha bypass using OCR;</li>\n<li>Content injection issues;</li>\n<li>Attacks based on social engineering or phishing.</li>\n</ul>\n\n<p>And another one important note: we&#39;ll respect your karma &#39;til you respect our time and work: do not send reports without precise and clear PoC; do not create several reports about one vulnerability on a different domains or different mobile platform (if it&#39;s not domain-dependant vulnerability or platform-dependent bug of course); do not send generic reports that were copied from other disclosed reports  without any check that these reports at least suitable for our services and apps. In other words: be kind!  </p>\n\n<p>To make it easier, we\u2019ll give you a number of examples and tell you which category they would be assigned to:</p>\n\n<ul>\n<li><p>In our experience, most vulnerabilities are classified as HTML-injection or XSS. If the found vulnerability can generally not cause any damage (for example, you can only change the output of the page), then it will get the lowest category (1).</p></li>\n<li><p>More dangerous: SQL-injection. Let&#39;s say you&#39;ve found a vulnerability that &quot;breaks&quot; an SQL-query, but the only result is an incorrect display of content on the site. Such vulnerability will receive a rewardin the 2nd category. However, if using SQL-vulnerability an attacker can gain access to the data of one or more users, this vulnerability would rise up to the 5th category.</p></li>\n<li><p>If a vulnerability can update data in the user profile, depending on how critical the data, we may assign a higher category, up to the 5th.</p></li>\n<li><p>CSRF-vulnerabilities can be very dangerous - the higher the possible damage, the higher the category.</p></li>\n</ul>\n\n<p>Badoo can also award a super-reward above \u00a31000, if you find something very serious.</p>\n\n<h1 id=\"public-disclosure\">Public disclosure</h1>\n\n<p>We&#39;re more than happy to publicly disclose your interesting issue once it has been fixed and agreed with us to do so. Public disclosure without our permission can lead to immediate forfeiture of any reward.</p>\n\n<hr>\n\n<p>Source: <a title=\"http://corp.badoo.com/security\" href=\"http://corp.badoo.com/security\" rel=\"nofollow noopener noreferrer\"><span>http://corp.badoo.com/security</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": true, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": 140.0, 
    "top_bounty_lower_range": 426.0, 
    "anc_enabled": null, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": true, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-10-29T11:37:27.031Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2016-03-01T12:28:05.988Z", 
    "bug_count": 131, 
    "mean_time_to_bounty": 3909600, 
    "offers_swag": false, 
    "offers_bounties": true, 
    "id": 1926, 
    "mean_time_to_resolution": 2314800, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/001/926/59f4050d4a4bd96974a3162224371ddf89b39dd0_small.png?1496674414", 
        "large": "https://profile-photos.hackerone-user-content.com/000/001/926/cbbce5a7159a196b9c45c1123e16fc5156c657ee_large.png?1496674414", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/001/926/74548eaa50d2def518ae0fe5ebc6f4fcf0f80c40_xtralarge.png?1496674414"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": true, 
    "target_signal": 0, 
    "cover_photo_url": "https://cover-photos.hackerone-user-content.com/000/001/926/2cc6f0e6fa5e6c768b7a4689662f7dbcb93a99a9_default.png?1435533781", 
    "top_bounty_upper_range": 2851.0, 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://badoo.com", 
        "about": "Meet new people", 
        "twitter_handle": "Badoo", 
        "name": "Badoo"
    }, 
    "scopes": [
        "badoo.com", 
        "eu1.badoo.com", 
        "us1.badoo.com", 
        "corp.badoo.com", 
        "m.badoo.com", 
        "meu1.badoo.com", 
        "mus1.badoo.com", 
        "hotornot.com", 
        "bma.badoo.com", 
        "badoocdn.com", 
        "translate.badoo.com", 
        "ccardseu1.badoo.com", 
        "ccardsus1.badoo.com"
    ], 
    "handle": "badoo", 
    "cover_color": "", 
    "mean_time_to_first_response": 86400, 
    "average_bounty_lower_range": 140.0, 
    "response_efficiency_percentage": 97, 
    "policy": "# Badoo vulnerability disclosure program\r\n\r\nWe pay for all newfound vulnerabilities.\r\n\r\nVulnerabilities will be ranked from category 5 (\u00a31000) to category 1 (\u00a3100), depending on their severity. The Badoo jury determines the severity of the vulnerability.\r\n\r\n# Where to look for vulnerabilities:\r\n\r\n- badoo.com,\r\n- eu1.badoo.com,\r\n- us1.badoo.com,\r\n- corp.badoo.com,\r\n- m.badoo.com,\r\n- meu1.badoo.com,\r\n- mus1.badoo.com,\r\n- hotornot.com\r\n- bma.badoo.com\r\n- badoocdn.com\r\n- translate.badoo.com\r\n- ccardseu1.badoo.com \r\n- ccardsus1.badoo.com\r\n- Badoo Mobile Applications (App Store, Google Play, BlackBerry World).\r\n\r\n# Award categories\r\n\r\n- Category 5 - \u00a3 1000\r\n- Category 4 - \u00a3 600\r\n- Category 3 - \u00a3 300\r\n- Category 2 - \u00a3 200\r\n- Category 1 - \u00a3 100\r\n\r\nWe don\u2019t want to tie our categories to traditional systems of vulnerability assessment. The more damage a found vulnerability can cause, the more valuable it is to us and the higher the category we assign to it.\r\n\r\n# Non-qualifying vulnerabilities\r\n\r\n- \u201cTheoretical\u201d vulnerabilities without any proof or demonstration of the real presence of the vulnerability\r\n- Vulnerabilities requiring physical access to a user\u2019s browser, or a smartphone, or email account, as well as issues on rooted or jailbroken smartphones; \r\n- Reports from security scanners and other testing tools\r\n- Reports about non-implemented security \u201cbest practices\u201d (like a lack of HSTS mechanism on client or server side, or soft token invalidation rules);\r\n- Reports about issues in third-party applications and services\r\n- Reports about missed headers or cookie flags;\r\n- Reports about configuration of our mail infrastructure (incorrect SPF records, DMARK policies, and other)\r\n- Data enumeration via registration or account recovery forms;\r\n- One-click authorization from emails and login CSRF via these links; \r\n- Issues that require another vulnerability to exploit, without providing that vulnerability;\r\n- Open redirects (except cases with additional impact, e.g. token hijacking);\r\n- Framing, clickjacking, tapjacking (unless you demonstrate real impact on our users);\r\n- Logout CSRF;\r\n- Self-XSS;\r\n- Captcha bypass using OCR;\r\n- Content injection issues;\r\n- Attacks based on social engineering or phishing.\r\n\r\n\r\nAnd another one important note: we'll respect your karma 'til you respect our time and work: do not send reports without precise and clear PoC; do not create several reports about one vulnerability on a different domains or different mobile platform (if it's not domain-dependant vulnerability or platform-dependent bug of course); do not send generic reports that were copied from other disclosed reports  without any check that these reports at least suitable for our services and apps. In other words: be kind!  \r\n\r\nTo make it easier, we\u2019ll give you a number of examples and tell you which category they would be assigned to:\r\n\r\n- In our experience, most vulnerabilities are classified as HTML-injection or XSS. If the found vulnerability can generally not cause any damage (for example, you can only change the output of the page), then it will get the lowest category (1).\r\n\r\n- More dangerous: SQL-injection. Let's say you've found a vulnerability that \"breaks\" an SQL-query, but the only result is an incorrect display of content on the site. Such vulnerability will receive a rewardin the 2nd category. However, if using SQL-vulnerability an attacker can gain access to the data of one or more users, this vulnerability would rise up to the 5th category.\r\n\r\n- If a vulnerability can update data in the user profile, depending on how critical the data, we may assign a higher category, up to the 5th.\r\n\r\n- CSRF-vulnerabilities can be very dangerous - the higher the possible damage, the higher the category.\r\n\r\nBadoo can also award a super-reward above \u00a31000, if you find something very serious.\r\n\r\n# Public disclosure\r\n\r\nWe're more than happy to publicly disclose your interesting issue once it has been fixed and agreed with us to do so. Public disclosure without our permission can lead to immediate forfeiture of any reward.\r\n\r\n----\r\nSource: http://corp.badoo.com/security", 
    "can_view_hacktivity": true, 
    "base_bounty": 140, 
    "has_cover_photo": true, 
    "total_bounties_paid": 39320.0, 
    "policy_markdown": "<h1 id=\"badoo-vulnerability-disclosure-program\">Badoo vulnerability disclosure program</h1>\n\n<p>We pay for all newfound vulnerabilities.</p>\n\n<p>Vulnerabilities will be ranked from category 5 (\u00a31000) to category 1 (\u00a3100), depending on their severity. The Badoo jury determines the severity of the vulnerability.</p>\n\n<h1 id=\"where-to-look-for-vulnerabilities\">Where to look for vulnerabilities:</h1>\n\n<ul>\n<li>badoo.com,</li>\n<li>eu1.badoo.com,</li>\n<li>us1.badoo.com,</li>\n<li>corp.badoo.com,</li>\n<li>m.badoo.com,</li>\n<li>meu1.badoo.com,</li>\n<li>mus1.badoo.com,</li>\n<li>hotornot.com</li>\n<li>bma.badoo.com</li>\n<li>badoocdn.com</li>\n<li>translate.badoo.com</li>\n<li>ccardseu1.badoo.com </li>\n<li>ccardsus1.badoo.com</li>\n<li>Badoo Mobile Applications (App Store, Google Play, BlackBerry World).</li>\n</ul>\n\n<h1 id=\"award-categories\">Award categories</h1>\n\n<ul>\n<li>Category 5 - \u00a3 1000</li>\n<li>Category 4 - \u00a3 600</li>\n<li>Category 3 - \u00a3 300</li>\n<li>Category 2 - \u00a3 200</li>\n<li>Category 1 - \u00a3 100</li>\n</ul>\n\n<p>We don\u2019t want to tie our categories to traditional systems of vulnerability assessment. The more damage a found vulnerability can cause, the more valuable it is to us and the higher the category we assign to it.</p>\n\n<h1 id=\"non-qualifying-vulnerabilities\">Non-qualifying vulnerabilities</h1>\n\n<ul>\n<li>\u201cTheoretical\u201d vulnerabilities without any proof or demonstration of the real presence of the vulnerability</li>\n<li>Vulnerabilities requiring physical access to a user\u2019s browser, or a smartphone, or email account, as well as issues on rooted or jailbroken smartphones; </li>\n<li>Reports from security scanners and other testing tools</li>\n<li>Reports about non-implemented security \u201cbest practices\u201d (like a lack of HSTS mechanism on client or server side, or soft token invalidation rules);</li>\n<li>Reports about issues in third-party applications and services</li>\n<li>Reports about missed headers or cookie flags;</li>\n<li>Reports about configuration of our mail infrastructure (incorrect SPF records, DMARK policies, and other)</li>\n<li>Data enumeration via registration or account recovery forms;</li>\n<li>One-click authorization from emails and login CSRF via these links; </li>\n<li>Issues that require another vulnerability to exploit, without providing that vulnerability;</li>\n<li>Open redirects (except cases with additional impact, e.g. token hijacking);</li>\n<li>Framing, clickjacking, tapjacking (unless you demonstrate real impact on our users);</li>\n<li>Logout CSRF;</li>\n<li>Self-XSS;</li>\n<li>Captcha bypass using OCR;</li>\n<li>Content injection issues;</li>\n<li>Attacks based on social engineering or phishing.</li>\n</ul>\n\n<p>And another one important note: we&#39;ll respect your karma &#39;til you respect our time and work: do not send reports without precise and clear PoC; do not create several reports about one vulnerability on a different domains or different mobile platform (if it&#39;s not domain-dependant vulnerability or platform-dependent bug of course); do not send generic reports that were copied from other disclosed reports  without any check that these reports at least suitable for our services and apps. In other words: be kind!  </p>\n\n<p>To make it easier, we\u2019ll give you a number of examples and tell you which category they would be assigned to:</p>\n\n<ul>\n<li><p>In our experience, most vulnerabilities are classified as HTML-injection or XSS. If the found vulnerability can generally not cause any damage (for example, you can only change the output of the page), then it will get the lowest category (1).</p></li>\n<li><p>More dangerous: SQL-injection. Let&#39;s say you&#39;ve found a vulnerability that &quot;breaks&quot; an SQL-query, but the only result is an incorrect display of content on the site. Such vulnerability will receive a rewardin the 2nd category. However, if using SQL-vulnerability an attacker can gain access to the data of one or more users, this vulnerability would rise up to the 5th category.</p></li>\n<li><p>If a vulnerability can update data in the user profile, depending on how critical the data, we may assign a higher category, up to the 5th.</p></li>\n<li><p>CSRF-vulnerabilities can be very dangerous - the higher the possible damage, the higher the category.</p></li>\n</ul>\n\n<p>Badoo can also award a super-reward above \u00a31000, if you find something very serious.</p>\n\n<h1 id=\"public-disclosure\">Public disclosure</h1>\n\n<p>We&#39;re more than happy to publicly disclose your interesting issue once it has been fixed and agreed with us to do so. Public disclosure without our permission can lead to immediate forfeiture of any reward.</p>\n\n<hr>\n\n<p>Source: <a title=\"http://corp.badoo.com/security\" href=\"http://corp.badoo.com/security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://corp.badoo.com/security</span><i class=\"icon-external-link\"></i></a></p>\n", 
    "show_mean_first_response_time": true, 
    "show_total_bounties_paid": true, 
    "can_invite_team_member": false, 
    "researcher_count": 112, 
    "can_view_insights": true, 
    "show_mean_report_triage_time": false, 
    "number_of_updates": 0, 
    "name": "Badoo", 
    "submission_state": "open", 
    "url": "https://hackerone.com/badoo", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": null, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}