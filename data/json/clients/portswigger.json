{
    "twitter_handle": "Burp_Suite", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": false, 
    "policy_html": "<h2 id=\"scope\">Scope</h2>\n\n<ul>\n<li>Website: <a title=\"https://portswigger.net/\" href=\"https://portswigger.net/\" rel=\"nofollow noopener noreferrer\"><span>https://portswigger.net/</span><i class=\"icon-external-link\"></i></a><br>\n</li>\n<li>Software: Burp Suite Professional, Burp Suite Enterprise Edition, and Burp Suite Community Edition</li>\n</ul>\n\n<p>Our public beta releases are within scope but may receive reduced payouts. Payouts will increase to the usual level when releases are officially out of beta.</p>\n\n<p>All subdomains of portswigger.net are <strong>strictly out of scope</strong>. Do not test these.</p>\n\n<p>If you wish to test the Burp Collaborator functionality, please configure your own private Collaborator server and test that. </p>\n\n<h2 id=\"vulnerabilities-of-interest\">Vulnerabilities of interest</h2>\n\n<p>Here are some examples of vulnerabilities that we could consider to be valid, and rough guidelines as to what kind of payout you can expect:</p>\n\n<h4 id=\"critical-10-000\">Critical - $10,000</h4>\n\n<ul>\n<li>SQL injection on portswigger.net</li>\n<li>Remotely retrieving arbitrary users&#39; Burp Collaborator interactions</li>\n<li>Unauthenticated RCE on Burp Suite Enterprise Edition</li>\n</ul>\n\n<h4 id=\"high-3-000\">High  - $3,000</h4>\n\n<ul>\n<li>Stored XSS on portswigger.net or the Burp Suite Enterprise Edition web interface</li>\n<li>File path traversal on portswigger.net</li>\n<li>Complete authentication bypass on portswigger.net</li>\n<li>A website accessed through Burp Suite can make Burp execute arbitrary code</li>\n</ul>\n\n<h4 id=\"medium-1-000\">Medium - $1,000</h4>\n\n<ul>\n<li>A website accessed through Burp Suite can retrieve local files from the user&#39;s system</li>\n<li>A website accessed through Burp Suite can extract cross-domain data from Burp&#39;s sitemap</li>\n<li>Given a collaborator payload, an attacker can retrieve interactions generated from the same key</li>\n<li>Exploitable reflected XSS on portswigger.net or Burp Suite Enterprise Edition</li>\n<li>CSRF on significant actions</li>\n</ul>\n\n<h4 id=\"any-medium-severity-issue-involving-unlikely-user-interaction-100-1000\">Any medium severity issue involving unlikely user interaction - $100-$1000</h4>\n\n<ul>\n<li>Reflected XSS that is unexploitable due to CSP</li>\n<li>DLL hijacking on the Burp Suite installer, on fully patched Windows 7/8.1/10. This does not include post-installation files as they are launched from a trusted folder.</li>\n<li>Header injection in Burp Suite</li>\n</ul>\n\n<h4 id=\"csp-bypass-100-1000\">CSP Bypass - $100-$1000</h4>\n\n<ul>\n<li>Content Security Policy is a significant part of our security so we will reward CSP bypasses through trusted domains, JSONP, etc. We are less interested in reports of hypothetical dangling markup attacks, and reports like &quot;CSP headers are missing from static page X&quot; but will consider these on a case by case basis.</li>\n</ul>\n\n<h4 id=\"significant-vulnerabilities-in-bapps-0\">Significant vulnerabilities in BApps  - $0</h4>\n\n<ul>\n<li>We will work to resolve serious vulnerabilities in extensions in the BApp store, but do not offer cash rewards. If you&#39;re searching for issues in core Burp, we highly recommend disabling all extensions first, to save yourself from wasting time.</li>\n</ul>\n\n<p>If a report does not qualify but we find it useful, we may reward it with reputation or swag as a goodwill gesture.</p>\n\n<h1 id=\"issues-not-of-interest\">Issues not of interest</h1>\n\n<p>The following are strictly forbidden and may result in you being barred from the program, the website, or both:</p>\n\n<ul>\n<li>Denial of service attacks</li>\n<li>Physical or social engineering attempts</li>\n<li>Targeting subdomains of portswigger.net</li>\n<li>Bruteforcing subdomains</li>\n<li>Spamming orders</li>\n<li>Unthrottled automated scanning - please throttle all tools to one request per second.</li>\n</ul>\n\n<p><strong>We are not interested in low severity, purely theoretical and best-practice issues.</strong> Here are some examples:</p>\n\n<ul>\n<li>Denial of service vulnerabilities</li>\n<li>HTTP Options header</li>\n<li>Server errors with no sensitive information like <a title=\"https://portswigger.net/careers%22%3E\" href=\"https://portswigger.net/careers%22%3E\" rel=\"nofollow noopener noreferrer\"><span>https://portswigger.net/careers%22%3E</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Headers like Server/X-Powered-By disclosing version information</li>\n<li>XSS issues in non-current browsers</li>\n<li>window.opener related issues</li>\n<li>Unvalidated reports from automated vulnerability scanners</li>\n<li>CSRF with minimal security implications (logout, DoS, etc.)</li>\n<li>Issues related to email spoofing (eg SPF/DMARC)</li>\n<li>DNS issues</li>\n<li>Content spoofing</li>\n<li>Reports that state that software is out of date or vulnerable without a proof of concept</li>\n<li>Missing autocomplete attributes</li>\n<li>Missing cookie flags on non-security sensitive cookies</li>\n<li>SSL/TLS scan reports (this means output from sites such as SSL Labs)</li>\n<li>Caching issues</li>\n<li>Concurrent sessions</li>\n<li>HPKP / HSTS preloading</li>\n<li>Implausible bruteforce attacks </li>\n</ul>\n\n<p>There are a few known issues we consider to be low severity, but may fix eventually:</p>\n\n<ul>\n<li>The embedded Chromium browser in Burp Suite 2.* receives security updates after a delay, and as such may have known vulnerabilities. These will not typically be rewarded unless you can provide a working PoC demonstrating critical impact and a practical mitigation.</li>\n<li>As customer numbers are emailed out in plaintext, users should be encouraged to regenerate them on first login</li>\n<li>Generating a new customer number should kill all associated sessions</li>\n<li>Invoices, quotations and receipts can be accessed by anyone who is given the link. This is an intentional design decision to enable sharing (the ability to view someone&#39;s invoice without being given the link would be considered a serious vulnerability)</li>\n<li>Plug &#39;n Hack discloses the port the proxy is listening on by design</li>\n<li>Changing the proxy settings to listen on a non-loopback IP exposes the web interface to people with network access by design.</li>\n<li>Verified SSL connections should be stricter about which protocols/ciphers are tolerated</li>\n</ul>\n\n<p>Some other caveats:</p>\n\n<ul>\n<li>The Paypal price can be tampered with but underpayment will result in product non-delivery so this isn&#39;t a security issue.</li>\n<li>We use Content-Security-Policy (CSP) site-wide. This means you will have a hard time doing alert(1). We pay for HTML/JavaScript injection regardless but to maximize your payout, see if you can make a payload that will steal some sensitive information.</li>\n<li>As the makers of Burp Suite, we can assure you that we have already scanned our website with it. Don&#39;t waste your bandwidth.</li>\n</ul>\n\n<h2 id=\"what-constitutes-a-vulnerability-in-burp-suite\">What constitutes a vulnerability in Burp Suite?</h2>\n\n<p>The system that Burp Suite runs on is trusted, and every system that can access the Proxy listener is trusted to access the data within Burp. Extensions, configuration files and project files are also trusted. Websites accessed through Burp are untrusted, so anything a website could do to read files off the user&#39;s computer, read data out of Burp Suite, or gain remote code execution would be considered a vulnerability. Also, any way to get someone else&#39;s Collaborator interactions would be considered a vulnerability. Burp doesn&#39;t enforce upstream SSL trust by design, so we&#39;re not currently concerned about issues like weak SSL ciphers that would be considered a vulnerability in a web browser. Detection of Burp usage, denial of service vulnerabilities, and license enforcement/obfuscation issues are all out of scope. Please refer to the payout guidelines for some example vulnerabilities.</p>\n\n<h2 id=\"contact\">Contact</h2>\n\n<p>If you have any questions, or want to report a vulnerability without opting in to the reward program, you can contact us at <a title=\"support@portswigger.net\" href=\"mailto:support@portswigger.net\" rel=\"nofollow noopener noreferrer\">support@portswigger.net</a></p>\n\n<p>Good luck and have fun!</p>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": true, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": 350.0, 
    "top_bounty_lower_range": 1000.0, 
    "anc_enabled": null, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": true, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-09-12T14:14:49.393Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2016-11-30T12:03:24.452Z", 
    "bug_count": 33, 
    "mean_time_to_bounty": 957600, 
    "offers_swag": true, 
    "offers_bounties": true, 
    "id": 15252, 
    "mean_time_to_resolution": null, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/015/252/733642d71ddc1da5f0085d91a465ec94b901834a_small.?1473435773", 
        "large": "https://profile-photos.hackerone-user-content.com/000/015/252/1946f1aee90e57d8c1d717e800d60484823667de_large.?1473435773", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/015/252/1165c1737f463938c4a132361aa312a19b7b0c66_xtralarge.?1473435773"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": true, 
    "target_signal": 1, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "top_bounty_upper_range": 1500.0, 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://portswigger.net", 
        "about": "Burp Suite is the leading software for web security testing", 
        "twitter_handle": "Burp_Suite", 
        "name": "PortSwigger Web Security"
    }, 
    "scopes": [
        "portswigger.net"
    ], 
    "handle": "portswigger", 
    "cover_color": "#f63", 
    "mean_time_to_first_response": 21600, 
    "average_bounty_lower_range": 350.0, 
    "response_efficiency_percentage": 100, 
    "policy": "Scope\r\n--\r\n\r\n - Website: https://portswigger.net/    \r\n - Software: Burp Suite Professional, Burp Suite Enterprise Edition, and Burp Suite Community Edition\r\n\r\nOur public beta releases are within scope but may receive reduced payouts. Payouts will increase to the usual level when releases are officially out of beta.\r\n\r\nAll subdomains of portswigger.net are **strictly out of scope**. Do not test these.\r\n\r\nIf you wish to test the Burp Collaborator functionality, please configure your own private Collaborator server and test that. \r\n       \r\nVulnerabilities of interest\r\n--\r\nHere are some examples of vulnerabilities that we could consider to be valid, and rough guidelines as to what kind of payout you can expect:\r\n\r\n#### Critical - $10,000\r\n - SQL injection on portswigger.net\r\n - Remotely retrieving arbitrary users' Burp Collaborator interactions\r\n - Unauthenticated RCE on Burp Suite Enterprise Edition\r\n       \r\n#### High  - $3,000  \r\n - Stored XSS on portswigger.net or the Burp Suite Enterprise Edition web interface\r\n - File path traversal on portswigger.net\r\n - Complete authentication bypass on portswigger.net\r\n - A website accessed through Burp Suite can make Burp execute arbitrary code\r\n\r\n#### Medium - $1,000\r\n - A website accessed through Burp Suite can retrieve local files from the user's system\r\n - A website accessed through Burp Suite can extract cross-domain data from Burp's sitemap\r\n - Given a collaborator payload, an attacker can retrieve interactions generated from the same key\r\n - Exploitable reflected XSS on portswigger.net or Burp Suite Enterprise Edition\r\n - CSRF on significant actions\r\n\r\n#### Any medium severity issue involving unlikely user interaction - $100-$1000\r\n - Reflected XSS that is unexploitable due to CSP\r\n - DLL hijacking on the Burp Suite installer, on fully patched Windows 7/8.1/10. This does not include post-installation files as they are launched from a trusted folder.\r\n - Header injection in Burp Suite\r\n\r\n#### CSP Bypass - $100-$1000\r\n - Content Security Policy is a significant part of our security so we will reward CSP bypasses through trusted domains, JSONP, etc. We are less interested in reports of hypothetical dangling markup attacks, and reports like \"CSP headers are missing from static page X\" but will consider these on a case by case basis.\r\n\r\n#### Significant vulnerabilities in BApps  - $0\r\n- We will work to resolve serious vulnerabilities in extensions in the BApp store, but do not offer cash rewards. If you're searching for issues in core Burp, we highly recommend disabling all extensions first, to save yourself from wasting time.\r\n\r\n\r\nIf a report does not qualify but we find it useful, we may reward it with reputation or swag as a goodwill gesture.\r\n\r\nIssues not of interest\r\n==      \r\nThe following are strictly forbidden and may result in you being barred from the program, the website, or both:\r\n\r\n- Denial of service attacks\r\n- Physical or social engineering attempts\r\n- Targeting subdomains of portswigger.net\r\n- Bruteforcing subdomains\r\n- Spamming orders\r\n- Unthrottled automated scanning - please throttle all tools to one request per second.\r\n\r\n**We are not interested in low severity, purely theoretical and best-practice issues.** Here are some examples:\r\n\r\n - Denial of service vulnerabilities\r\n - HTTP Options header\r\n - Server errors with no sensitive information like https://portswigger.net/careers%22%3E\r\n - Headers like Server/X-Powered-By disclosing version information\r\n - XSS issues in non-current browsers\r\n - window.opener related issues\r\n - Unvalidated reports from automated vulnerability scanners\r\n - CSRF with minimal security implications (logout, DoS, etc.)\r\n - Issues related to email spoofing (eg SPF/DMARC)\r\n - DNS issues\r\n - Content spoofing\r\n - Reports that state that software is out of date or vulnerable without a proof of concept\r\n - Missing autocomplete attributes\r\n - Missing cookie flags on non-security sensitive cookies\r\n - SSL/TLS scan reports (this means output from sites such as SSL Labs)\r\n - Caching issues\r\n - Concurrent sessions\r\n - HPKP / HSTS preloading\r\n - Implausible bruteforce attacks \r\n\r\nThere are a few known issues we consider to be low severity, but may fix eventually:\r\n\r\n- The embedded Chromium browser in Burp Suite 2.* receives security updates after a delay, and as such may have known vulnerabilities. These will not typically be rewarded unless you can provide a working PoC demonstrating critical impact and a practical mitigation.\r\n- As customer numbers are emailed out in plaintext, users should be encouraged to regenerate them on first login\r\n- Generating a new customer number should kill all associated sessions\r\n- Invoices, quotations and receipts can be accessed by anyone who is given the link. This is an intentional design decision to enable sharing (the ability to view someone's invoice without being given the link would be considered a serious vulnerability)\r\n- Plug 'n Hack discloses the port the proxy is listening on by design\r\n- Changing the proxy settings to listen on a non-loopback IP exposes the web interface to people with network access by design.\r\n- Verified SSL connections should be stricter about which protocols/ciphers are tolerated\r\n\r\nSome other caveats:\r\n- The Paypal price can be tampered with but underpayment will result in product non-delivery so this isn't a security issue.\r\n- We use Content-Security-Policy (CSP) site-wide. This means you will have a hard time doing alert(1). We pay for HTML/JavaScript injection regardless but to maximize your payout, see if you can make a payload that will steal some sensitive information.\r\n- As the makers of Burp Suite, we can assure you that we have already scanned our website with it. Don't waste your bandwidth.\r\n\r\n\r\nWhat constitutes a vulnerability in Burp Suite?\r\n--\r\nThe system that Burp Suite runs on is trusted, and every system that can access the Proxy listener is trusted to access the data within Burp. Extensions, configuration files and project files are also trusted. Websites accessed through Burp are untrusted, so anything a website could do to read files off the user's computer, read data out of Burp Suite, or gain remote code execution would be considered a vulnerability. Also, any way to get someone else's Collaborator interactions would be considered a vulnerability. Burp doesn't enforce upstream SSL trust by design, so we're not currently concerned about issues like weak SSL ciphers that would be considered a vulnerability in a web browser. Detection of Burp usage, denial of service vulnerabilities, and license enforcement/obfuscation issues are all out of scope. Please refer to the payout guidelines for some example vulnerabilities.\r\n\r\nContact\r\n--\r\nIf you have any questions, or want to report a vulnerability without opting in to the reward program, you can contact us at support@portswigger.net\r\n\r\nGood luck and have fun!", 
    "can_view_hacktivity": true, 
    "base_bounty": 100, 
    "has_cover_photo": false, 
    "total_bounties_paid": 7450.0, 
    "policy_markdown": "<h2 id=\"scope\">Scope</h2>\n\n<ul>\n<li>Website: <a title=\"https://portswigger.net/\" href=\"https://portswigger.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://portswigger.net/</span><i class=\"icon-external-link\"></i></a><br>\n</li>\n<li>Software: Burp Suite Professional, Burp Suite Enterprise Edition, and Burp Suite Community Edition</li>\n</ul>\n\n<p>Our public beta releases are within scope but may receive reduced payouts. Payouts will increase to the usual level when releases are officially out of beta.</p>\n\n<p>All subdomains of portswigger.net are <strong>strictly out of scope</strong>. Do not test these.</p>\n\n<p>If you wish to test the Burp Collaborator functionality, please configure your own private Collaborator server and test that. </p>\n\n<h2 id=\"vulnerabilities-of-interest\">Vulnerabilities of interest</h2>\n\n<p>Here are some examples of vulnerabilities that we could consider to be valid, and rough guidelines as to what kind of payout you can expect:</p>\n\n<h4 id=\"critical-10-000\">Critical - $10,000</h4>\n\n<ul>\n<li>SQL injection on portswigger.net</li>\n<li>Remotely retrieving arbitrary users&#39; Burp Collaborator interactions</li>\n<li>Unauthenticated RCE on Burp Suite Enterprise Edition</li>\n</ul>\n\n<h4 id=\"high-3-000\">High  - $3,000</h4>\n\n<ul>\n<li>Stored XSS on portswigger.net or the Burp Suite Enterprise Edition web interface</li>\n<li>File path traversal on portswigger.net</li>\n<li>Complete authentication bypass on portswigger.net</li>\n<li>A website accessed through Burp Suite can make Burp execute arbitrary code</li>\n</ul>\n\n<h4 id=\"medium-1-000\">Medium - $1,000</h4>\n\n<ul>\n<li>A website accessed through Burp Suite can retrieve local files from the user&#39;s system</li>\n<li>A website accessed through Burp Suite can extract cross-domain data from Burp&#39;s sitemap</li>\n<li>Given a collaborator payload, an attacker can retrieve interactions generated from the same key</li>\n<li>Exploitable reflected XSS on portswigger.net or Burp Suite Enterprise Edition</li>\n<li>CSRF on significant actions</li>\n</ul>\n\n<h4 id=\"any-medium-severity-issue-involving-unlikely-user-interaction-100-1000\">Any medium severity issue involving unlikely user interaction - $100-$1000</h4>\n\n<ul>\n<li>Reflected XSS that is unexploitable due to CSP</li>\n<li>DLL hijacking on the Burp Suite installer, on fully patched Windows 7/8.1/10. This does not include post-installation files as they are launched from a trusted folder.</li>\n<li>Header injection in Burp Suite</li>\n</ul>\n\n<h4 id=\"csp-bypass-100-1000\">CSP Bypass - $100-$1000</h4>\n\n<ul>\n<li>Content Security Policy is a significant part of our security so we will reward CSP bypasses through trusted domains, JSONP, etc. We are less interested in reports of hypothetical dangling markup attacks, and reports like &quot;CSP headers are missing from static page X&quot; but will consider these on a case by case basis.</li>\n</ul>\n\n<h4 id=\"significant-vulnerabilities-in-bapps-0\">Significant vulnerabilities in BApps  - $0</h4>\n\n<ul>\n<li>We will work to resolve serious vulnerabilities in extensions in the BApp store, but do not offer cash rewards. If you&#39;re searching for issues in core Burp, we highly recommend disabling all extensions first, to save yourself from wasting time.</li>\n</ul>\n\n<p>If a report does not qualify but we find it useful, we may reward it with reputation or swag as a goodwill gesture.</p>\n\n<h1 id=\"issues-not-of-interest\">Issues not of interest</h1>\n\n<p>The following are strictly forbidden and may result in you being barred from the program, the website, or both:</p>\n\n<ul>\n<li>Denial of service attacks</li>\n<li>Physical or social engineering attempts</li>\n<li>Targeting subdomains of portswigger.net</li>\n<li>Bruteforcing subdomains</li>\n<li>Spamming orders</li>\n<li>Unthrottled automated scanning - please throttle all tools to one request per second.</li>\n</ul>\n\n<p><strong>We are not interested in low severity, purely theoretical and best-practice issues.</strong> Here are some examples:</p>\n\n<ul>\n<li>Denial of service vulnerabilities</li>\n<li>HTTP Options header</li>\n<li>Server errors with no sensitive information like <a title=\"https://portswigger.net/careers%22%3E\" href=\"https://portswigger.net/careers%22%3E\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://portswigger.net/careers%22%3E</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Headers like Server/X-Powered-By disclosing version information</li>\n<li>XSS issues in non-current browsers</li>\n<li>window.opener related issues</li>\n<li>Unvalidated reports from automated vulnerability scanners</li>\n<li>CSRF with minimal security implications (logout, DoS, etc.)</li>\n<li>Issues related to email spoofing (eg SPF/DMARC)</li>\n<li>DNS issues</li>\n<li>Content spoofing</li>\n<li>Reports that state that software is out of date or vulnerable without a proof of concept</li>\n<li>Missing autocomplete attributes</li>\n<li>Missing cookie flags on non-security sensitive cookies</li>\n<li>SSL/TLS scan reports (this means output from sites such as SSL Labs)</li>\n<li>Caching issues</li>\n<li>Concurrent sessions</li>\n<li>HPKP / HSTS preloading</li>\n<li>Implausible bruteforce attacks </li>\n</ul>\n\n<p>There are a few known issues we consider to be low severity, but may fix eventually:</p>\n\n<ul>\n<li>The embedded Chromium browser in Burp Suite 2.* receives security updates after a delay, and as such may have known vulnerabilities. These will not typically be rewarded unless you can provide a working PoC demonstrating critical impact and a practical mitigation.</li>\n<li>As customer numbers are emailed out in plaintext, users should be encouraged to regenerate them on first login</li>\n<li>Generating a new customer number should kill all associated sessions</li>\n<li>Invoices, quotations and receipts can be accessed by anyone who is given the link. This is an intentional design decision to enable sharing (the ability to view someone&#39;s invoice without being given the link would be considered a serious vulnerability)</li>\n<li>Plug &#39;n Hack discloses the port the proxy is listening on by design</li>\n<li>Changing the proxy settings to listen on a non-loopback IP exposes the web interface to people with network access by design.</li>\n<li>Verified SSL connections should be stricter about which protocols/ciphers are tolerated</li>\n</ul>\n\n<p>Some other caveats:</p>\n\n<ul>\n<li>The Paypal price can be tampered with but underpayment will result in product non-delivery so this isn&#39;t a security issue.</li>\n<li>We use Content-Security-Policy (CSP) site-wide. This means you will have a hard time doing alert(1). We pay for HTML/JavaScript injection regardless but to maximize your payout, see if you can make a payload that will steal some sensitive information.</li>\n<li>As the makers of Burp Suite, we can assure you that we have already scanned our website with it. Don&#39;t waste your bandwidth.</li>\n</ul>\n\n<h2 id=\"what-constitutes-a-vulnerability-in-burp-suite\">What constitutes a vulnerability in Burp Suite?</h2>\n\n<p>The system that Burp Suite runs on is trusted, and every system that can access the Proxy listener is trusted to access the data within Burp. Extensions, configuration files and project files are also trusted. Websites accessed through Burp are untrusted, so anything a website could do to read files off the user&#39;s computer, read data out of Burp Suite, or gain remote code execution would be considered a vulnerability. Also, any way to get someone else&#39;s Collaborator interactions would be considered a vulnerability. Burp doesn&#39;t enforce upstream SSL trust by design, so we&#39;re not currently concerned about issues like weak SSL ciphers that would be considered a vulnerability in a web browser. Detection of Burp usage, denial of service vulnerabilities, and license enforcement/obfuscation issues are all out of scope. Please refer to the payout guidelines for some example vulnerabilities.</p>\n\n<h2 id=\"contact\">Contact</h2>\n\n<p>If you have any questions, or want to report a vulnerability without opting in to the reward program, you can contact us at <a title=\"support@portswigger.net\" href=\"mailto:support@portswigger.net\" rel=\"nofollow noopener noreferrer\">support@portswigger.net</a></p>\n\n<p>Good luck and have fun!</p>\n", 
    "show_mean_first_response_time": true, 
    "show_total_bounties_paid": true, 
    "can_invite_team_member": false, 
    "researcher_count": 15, 
    "can_view_insights": true, 
    "show_mean_report_triage_time": false, 
    "number_of_updates": 0, 
    "name": "PortSwigger Web Security", 
    "submission_state": "open", 
    "url": "https://hackerone.com/portswigger", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": null, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}