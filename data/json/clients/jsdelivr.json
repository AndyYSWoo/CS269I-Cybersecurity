{
    "twitter_handle": "", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": false, 
    "policy_html": "<p>jsDelivr is used by thousands of websites around the world and they all rely on malware-free and reliable file delivery. <br>\nWe take the security of our CDN very seriously and want to ensure our service is bulletproof.</p>\n\n<h1 id=\"scope\">Scope</h1>\n\n<p>Except from static file delivery we also have a dynamic /g/ functionality which can combine on the fly multiple files and output them to the user. <a href=\"https://github.com/jsdelivr/jsdelivr#load-multiple-files-with-single-http-request\" rel=\"nofollow noopener noreferrer\"><span>Documentation</span><i class=\"icon-external-link\"></i></a> </p>\n\n<p>Tests on /g/ itself can be done on the server <a title=\"http://staging.jsdelivr.net/\" href=\"http://staging.jsdelivr.net/\" rel=\"nofollow noopener noreferrer\"><span>http://staging.jsdelivr.net/</span><i class=\"icon-external-link\"></i></a>. <br>\n<strong>(Note: the root domain redirects to <a href=\"http://www.jsdelivr.com\" rel=\"nofollow noopener noreferrer\"><span>www.jsdelivr.com</span><i class=\"icon-external-link\"></i></a> which is out of scope. You need to provide a path to test it)</strong><br>\nIt is not used in production but it is clone of the actual server and can be used for penetration tests. </p>\n\n<p>HTTPS or other vulnerabilities can be tested on cdn.jsdelivr.net as long as they don&#39;t pose a real threat to live users. </p>\n\n<p>We expect vulnerability reports for any server or service owned or used by jsDelivr, including DNS, CDN providers, load balancing algorithm, VPS, installed software and anything else that can be used in a harmful way.</p>\n\n<p><strong>Our website <a href=\"http://www.jsdelivr.com\" rel=\"nofollow noopener noreferrer\"><span>www.jsdelivr.com</span><i class=\"icon-external-link\"></i></a> is out of scope for these tests as it does not contain any user information and it is completely isolated from the CDN infrastructure.</strong></p>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": null, 
    "top_bounty_lower_range": null, 
    "anc_enabled": null, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2015-07-16T11:54:15.628Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2014-06-29T08:58:05.099Z", 
    "bug_count": 10, 
    "mean_time_to_bounty": null, 
    "offers_swag": false, 
    "offers_bounties": false, 
    "id": 266, 
    "mean_time_to_resolution": null, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/000/266/6858d523590c71d5e79e454ebf27e95aab8bc5dd_small.png?1493929690", 
        "large": "https://profile-photos.hackerone-user-content.com/000/000/266/e790e5c561a0c5ceeb16b97e49b8c320ad0ca7eb_large.png?1493929690", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/000/266/44145f413e29daa24256ae81006cfcd98a61a116_xtralarge.png?1493929690"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "target_signal": null, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "http://www.jsdelivr.com", 
        "about": "jsDelivr is an open source and public CDN for developers and webmaters", 
        "twitter_handle": "", 
        "name": "jsDelivr"
    }, 
    "scopes": [], 
    "handle": "jsdelivr", 
    "cover_color": "", 
    "mean_time_to_first_response": null, 
    "average_bounty_lower_range": null, 
    "response_efficiency_percentage": null, 
    "policy": "jsDelivr is used by thousands of websites around the world and they all rely on malware-free and reliable file delivery. \r\nWe take the security of our CDN very seriously and want to ensure our service is bulletproof.\r\n\r\nScope\r\n====\r\nExcept from static file delivery we also have a dynamic /g/ functionality which can combine on the fly multiple files and output them to the user. [Documentation](https://github.com/jsdelivr/jsdelivr#load-multiple-files-with-single-http-request) \r\n\r\nTests on /g/ itself can be done on the server http://staging.jsdelivr.net/. \r\n**(Note: the root domain redirects to www.jsdelivr.com which is out of scope. You need to provide a path to test it)**\r\nIt is not used in production but it is clone of the actual server and can be used for penetration tests. \r\n\r\nHTTPS or other vulnerabilities can be tested on cdn.jsdelivr.net as long as they don't pose a real threat to live users. \r\n\r\nWe expect vulnerability reports for any server or service owned or used by jsDelivr, including DNS, CDN providers, load balancing algorithm, VPS, installed software and anything else that can be used in a harmful way.\r\n\r\n**Our website www.jsdelivr.com is out of scope for these tests as it does not contain any user information and it is completely isolated from the CDN infrastructure.**", 
    "can_view_hacktivity": true, 
    "has_cover_photo": false, 
    "total_bounties_paid": null, 
    "policy_markdown": "<p>jsDelivr is used by thousands of websites around the world and they all rely on malware-free and reliable file delivery. <br>\nWe take the security of our CDN very seriously and want to ensure our service is bulletproof.</p>\n\n<h1 id=\"scope\">Scope</h1>\n\n<p>Except from static file delivery we also have a dynamic /g/ functionality which can combine on the fly multiple files and output them to the user. <a href=\"https://github.com/jsdelivr/jsdelivr#load-multiple-files-with-single-http-request\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Documentation</span><i class=\"icon-external-link\"></i></a> </p>\n\n<p>Tests on /g/ itself can be done on the server <a title=\"http://staging.jsdelivr.net/\" href=\"http://staging.jsdelivr.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>http://staging.jsdelivr.net/</span><i class=\"icon-external-link\"></i></a>. <br>\n<strong>(Note: the root domain redirects to <a href=\"http://www.jsdelivr.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.jsdelivr.com</span><i class=\"icon-external-link\"></i></a> which is out of scope. You need to provide a path to test it)</strong><br>\nIt is not used in production but it is clone of the actual server and can be used for penetration tests. </p>\n\n<p>HTTPS or other vulnerabilities can be tested on cdn.jsdelivr.net as long as they don&#39;t pose a real threat to live users. </p>\n\n<p>We expect vulnerability reports for any server or service owned or used by jsDelivr, including DNS, CDN providers, load balancing algorithm, VPS, installed software and anything else that can be used in a harmful way.</p>\n\n<p><strong>Our website <a href=\"http://www.jsdelivr.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>www.jsdelivr.com</span><i class=\"icon-external-link\"></i></a> is out of scope for these tests as it does not contain any user information and it is completely isolated from the CDN infrastructure.</strong></p>\n", 
    "show_mean_first_response_time": false, 
    "can_invite_team_member": false, 
    "researcher_count": 6, 
    "number_of_updates": 0, 
    "show_mean_report_triage_time": false, 
    "top_bounty_upper_range": null, 
    "name": "jsDelivr", 
    "submission_state": "disabled", 
    "url": "https://hackerone.com/jsdelivr", 
    "ibb": false, 
    "rejecting_submissions": true, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": null, 
    "mean_time_to_triage": null, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}