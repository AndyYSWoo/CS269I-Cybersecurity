{
    "twitter_handle": "wepay", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": false, 
    "policy_html": "<h1 id=\"wepay-bug-bounty-program-rules\">WePay Bug Bounty Program Rules</h1>\n\n<p>WePay asks that tests are performed against <code>stage-go.wepay.com</code>, <code>stage.wepay.com</code> and <code>stage.wepayapi.com</code>.  Our public staging server runs the same code as production. Create as many test accounts there as you feel necessary; <strong>actual customer data is strongly discouraged</strong> for exploits \u2014 a reproduce case will suffice. One report to cover both domains is sufficient; please perform testing against <code>stage.wepay.com</code> to prevent service interruption to our customers.</p>\n\n<p>Vulnerabilities that may be specific to server configs (SSL settings,SSH settings, etc) may also be tested on <code>go.wepay.com</code>, <code>www.wepay.com</code> ,<code>home.wepay.com</code> and <code>wepayapi.com</code>, as the environments may be configured differently than their corresponding staging environments viz.;  stage-go.wepay.com, stage.wepay.com, stage-home.wepay.com, and stage.wepayapi.com respectively.</p>\n\n<h2 id=\"attributes-of-a-good-report\">Attributes of a good report:</h2>\n\n<ol>\n<li>Only one issue per report.</li>\n<li>Summarize the Security issue in a single sentence</li>\n<li>Describe detailed steps for reproducing the bug. If possible, please include video or screenshots, links you clicked on, pages visited, etc.</li>\n<li>Elaborate Security implications of the issue. How will the problem affect WePay, our users or our partners? What&#39;s the worst thing that could happen if an attacker takes advantage of this security flaw.</li>\n</ol>\n\n<blockquote>\n<p><strong>Functioning exploits are worth more money than reports that are copy-pasted from other security-related websites.</strong> A screenshot is much less useful than a video, and a functioning exploit will <em>always</em> have real code. <em>Showing</em> that there&#39;s a potential issue is less valuable than <em>exploiting</em> a real issue.</p>\n</blockquote>\n\n<h2 id=\"with-regard-to-duplicates\">With Regard to Duplicates</h2>\n\n<p>If we have already received a report of a similar issue, which we believe would be resolved by the same fix that would resolve your issue, then we will mark your issue as a <u>duplicate</u> because the <u>root-cause</u> is the same.</p>\n\n<h2 id=\"with-regard-to-reputation\">With Regard to Reputation</h2>\n\n<p>If you make an effort to file a legitimate issue, and it is not necessarily a valid issue, we will generally close it as <em>Informational</em> (+0) \u2014 UNLESS it is clear that you made no effort to read these Guidelines, in which case we may choose to close as <em>Not Applicable</em> (-5) if the case is particularly egregious.</p>\n\n<h3 id=\"following-categories-of-issues-will-be-marked-n-a\">Following categories of issues will be marked N/A:</h3>\n\n<ul>\n<li>Copy-pasting reports from another site or submitting reports, without providing any evidence that the vulnerability actually exists.</li>\n<li>Issues for domains listed in Out-of-scope domains section</li>\n<li>Issues mentioned under out-of-scope vulnerabilities.</li>\n</ul>\n\n<h2 id=\"scope\">Scope</h2>\n\n<p>&quot;Typical&quot; web vulnerabilities are generally considered in-scope. This includes, but is not limited to:</p>\n\n<ul>\n<li>Remote Code Execution (RCE)</li>\n<li>Cross Site Scripting (XSS)</li>\n<li>Cross Site Request Forgery (CSRF)</li>\n<li>Privilege Escalation</li>\n<li>Session Hijacking</li>\n<li>Leaking of sensitive customer data (especially anything in the scope of PCI)</li>\n</ul>\n\n<h2 id=\"scope-exclusions\">Scope Exclusions</h2>\n\n<p>Only software-based issues are eligible for reward, things such as physical attacks against our offices or data centers do not qualify, nor do social engineering attacks. Protocols or standards not developed by WePay are similarly excluded, as are &quot;non-optimal&quot; protocol settings (e.g., RC4, SSLv3) unless said settings are <u>directly exploitable</u>. If in doubt please report it :)</p>\n\n<p><strong>Out-of-scope domains include, but are not limited to:</strong></p>\n\n<ul>\n<li>e.wepay.com (<a href=\"https://www.marketo.com/\" rel=\"nofollow noopener noreferrer\"><span>Marketo</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>status.wepay.com (<a href=\"https://www.statuspage.io/security\" rel=\"nofollow noopener noreferrer\"><span>StatusPage.io</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>support.wepay.com (<a href=\"https://www.zendesk.com/company/responsible-disclosure-policy/\" rel=\"nofollow noopener noreferrer\"><span>Zendesk</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>t.wepay.com (<a href=\"https://www.threatmetrix.com/\" rel=\"nofollow noopener noreferrer\"><span>ThreatMetrix</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>visit.wepay.com (<a href=\"https://www.marketo.com/\" rel=\"nofollow noopener noreferrer\"><span>Marketo</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>blog.wepay.com</li>\n<li>doyouplatform.com</li>\n</ul>\n\n<p><strong>Out of scope vulnerabilities include but are not limited to:</strong></p>\n\n<ul>\n<li>Issues related to software not under WePay&#39;s control </li>\n<li>Reports from automated web vulnerability scanners that are not validated.</li>\n<li>Issues that need social engineering for successful exploitation.</li>\n<li>Any physical attempts against WePay property or data centers</li>\n<li>Social engineering attacks against WePay employees</li>\n<li>Missing autocomplete attributes.</li>\n<li>Missing security flags on non-security-sensitive cookies.</li>\n<li>Username or Email enumeration.</li>\n<li>Missing Best practices.</li>\n<li>Spamming</li>\n<li>Issues that require physical access to a victim\u2019s computer for successful exploitation.</li>\n<li>Open ports without an accompanying proof-of-concept demonstrating vulnerability.</li>\n<li>XSS issues that affect only outdated browsers.</li>\n<li>Tab nabbing and window.opener-related issues.</li>\n<li>Issues related to absence of CAA DNS record.</li>\n<li>Discrepancy related to permissions for owner and moderator role. </li>\n<li>Phishing using Open Redirection. Exceptions: Open redirection that leads to leakage of OAuth Access Token, bypass of Content Security Policy,etc.</li>\n<li>\n<a href=\"https://www.owasp.org/index.php/Content_Spoofing\" rel=\"nofollow noopener noreferrer\"><span>Content Injection</span><i class=\"icon-external-link\"></i></a> issues</li>\n<li>CSV Injection. Please see this <a href=\"https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection\" rel=\"nofollow noopener noreferrer\"><span>article</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Banner grabbing issues (Finding info like webserver name, etc.)</li>\n<li>Cross-site Request Forgery (CSRF) with minimal security implications like Logout CSRF</li>\n<li>Issues related to SPF,DKIM, and DMARC</li>\n<li>Reflected File Download</li>\n<li>Error Stack Trace or 401/403/500 Server error without an accompanying evidence of vulnerability</li>\n<li>Self-XSS including cases where user himself pastes javascript code into the browser.</li>\n<li>Issues without clearly identified security impact, such as clickjacking on a static website, descriptive error messages, HTTP OPTIONS method enabled, etc.</li>\n<li>Issues related to Payment Fraud.</li>\n</ul>\n\n<p>Our SDKs are also ineligible for reward, as is other software open-sourced by WePay (such as that found on <a title=\"https://github.com/wepay\" href=\"https://github.com/wepay\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/wepay</span><i class=\"icon-external-link\"></i></a>). </p>\n\n<p><strong>Too many duplicates have been filed and we will reject all new reports out-of-hand as N/A</strong></p>\n\n<ul>\n<li>Clickjacking (we&#39;re actively working on this)</li>\n<li>Brute Force protection on login page</li>\n</ul>\n\n<h2 id=\"rewards\">Rewards</h2>\n\n<p>Only security vulnerabilities qualify for rewards, which start at $100 and will increase based on severity and scope. <u>Reports of non-security issues are appreciated, but will not qualify for a reward and will be marked informative.</u> WePay&#39;s security team reserves final judgment regarding rewards.</p>\n\n<p>While we certainly appreciate <em>reports</em> of a possible issue, the lack of a functioning exploit against the possible vulnerability means that <u>most</u> of these reports <u>will not be eligible</u> for a bounty. If we determine that your report is exceptional and is bounty-worthy, it will be paid-out from the bottom-end of the reward scale.</p>\n\n<h2 id=\"automated-scanning\">Automated Scanning</h2>\n\n<p>If you employ automated scanning tools, their requests <strong>must</strong> be rate limited to not exceed 3 requests per second without prior approval. Failure to do so may be considered a DoS attack and will result in disqualification from the program.</p>\n\n<p>Automated vulnerability scanners commonly have low priority issues and/or false positives. Before submitting the results from a scanner, please take a moment to confirm that the reported issues are actually valid and exploitable. Please submit an issue only if you have exploited a real vulnerability.</p>\n\n<h2 id=\"eligibility-and-responsible-disclosure\">Eligibility and Responsible Disclosure</h2>\n\n<p>You will qualify for bounty eligibility only if you are the first person to responsibly disclose an unknown issue. We intend to respond and resolve reported issues as quickly as possible, but please allow up to 14 days for a response and 90\u2013120 days for a resolution (if we expect resolution to take longer, we will be upfront about this).</p>\n\n<p>Issues not disclosed through HackerOne or by directly emailing <a title=\"security@wepay.com\" href=\"mailto:security@wepay.com\" rel=\"nofollow noopener noreferrer\">security@wepay.com</a> are ineligible and may result in removal from the program.</p>\n\n<h2 id=\"tools\">Tools</h2>\n\n<p>Zero members of our staff use Microsoft Windows, so videos which use Windows-specific tools are not helpful for reproducing issues. Videos should contain steps that can be reproduced without leveraging features that are specific to a single tool that is only available for Microsoft Windows.</p>\n\n<p>We use Linux or OS X for everything. If your functioning exploit leverages a command-line tool, it should be a tool which works on OS X (Darwin), RedHat-based Linuxes (e.g., RHEL, CentOS) or Debian-based Linuxes (e.g., Debian, Ubuntu). If your functioning exploit leverages a GUI tool, it should be a tool which works on OS X.</p>\n\n<h2 id=\"videos\">Videos</h2>\n\n<p>Please use <strong>modern</strong> codecs and containers when submitting videos.</p>\n\n<ul>\n<li>\n<strong>H.264</strong> video + <strong>AAC</strong> audio + <strong>MP4</strong> container is overwhelmingly preferred.</li>\n<li>Non-Standardized codecs and containers (e.g., VP8, VP9, MKV, WebM, Ogg) are not preferred, but still acceptable.</li>\n<li>Outdated codecs and containers (e.g., Microsoft Video 1, VC-1, AVI, WMV, FLV, H.263, Theora, VP6, VP7) is discouraged.</li>\n</ul>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": false, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": null, 
    "top_bounty_lower_range": null, 
    "anc_enabled": null, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": false, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2017-10-02T18:06:45.473Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2014-06-02T22:08:21.784Z", 
    "bug_count": 165, 
    "mean_time_to_bounty": null, 
    "offers_swag": false, 
    "offers_bounties": true, 
    "id": 110, 
    "mean_time_to_resolution": null, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/000/110/7ab9a8f312b783a74b9c9f2e23469c327848210e_small.png?1512426859", 
        "large": "https://profile-photos.hackerone-user-content.com/000/000/110/4fbbcac003a1b1114041e8bce45184493d8bfece_large.png?1512426859", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/000/110/cd9640dc4f5dfd56468c1d05ab31188579535ad1_xtralarge.png?1512426859"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": false, 
    "target_signal": 1, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "top_bounty_upper_range": null, 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://www.wepay.com", 
        "about": "Payments partner to the platform economy", 
        "twitter_handle": "wepay", 
        "name": "WePay"
    }, 
    "scopes": [
        "www.wepay.com", 
        "www.wepayapi.com", 
        "stage.wepay.com", 
        "stage.wepayapi.com", 
        "go.wepay.com", 
        "stage-go.wepay.com", 
        "home.wepay.com", 
        "stage-home.wepay.com"
    ], 
    "handle": "wepay", 
    "cover_color": "#4991dc", 
    "mean_time_to_first_response": null, 
    "average_bounty_lower_range": null, 
    "response_efficiency_percentage": 71, 
    "policy": "# WePay Bug Bounty Program Rules\r\n\r\nWePay asks that tests are performed against `stage-go.wepay.com`, `stage.wepay.com` and `stage.wepayapi.com`.  Our public staging server runs the same code as production. Create as many test accounts there as you feel necessary; **actual customer data is strongly discouraged** for exploits \u2014 a reproduce case will suffice. One report to cover both domains is sufficient; please perform testing against `stage.wepay.com` to prevent service interruption to our customers.\r\n\r\nVulnerabilities that may be specific to server configs (SSL settings,SSH settings, etc) may also be tested on `go.wepay.com`, `www.wepay.com` ,`home.wepay.com` and `wepayapi.com`, as the environments may be configured differently than their corresponding staging environments viz.;  stage-go.wepay.com, stage.wepay.com, stage-home.wepay.com, and stage.wepayapi.com respectively.\r\n\r\n## Attributes of a good report:\r\n1. Only one issue per report.\r\n2. Summarize the Security issue in a single sentence\r\n3. Describe detailed steps for reproducing the bug. If possible, please include video or screenshots, links you clicked on, pages visited, etc.\r\n4. Elaborate Security implications of the issue. How will the problem affect WePay, our users or our partners? What's the worst thing that could happen if an attacker takes advantage of this security flaw.\r\n\r\n> **Functioning exploits are worth more money than reports that are copy-pasted from other security-related websites.** A screenshot is much less useful than a video, and a functioning exploit will *always* have real code. *Showing* that there's a potential issue is less valuable than *exploiting* a real issue.\r\n\r\n\r\n## With Regard to Duplicates\r\n\r\nIf we have already received a report of a similar issue, which we believe would be resolved by the same fix that would resolve your issue, then we will mark your issue as a _duplicate_ because the _root-cause_ is the same.\r\n\r\n## With Regard to Reputation\r\n\r\nIf you make an effort to file a legitimate issue, and it is not necessarily a valid issue, we will generally close it as *Informational* (+0) \u2014 UNLESS it is clear that you made no effort to read these Guidelines, in which case we may choose to close as *Not Applicable* (-5) if the case is particularly egregious.\r\n\r\n### Following categories of issues will be marked N/A:\r\n\r\n* Copy-pasting reports from another site or submitting reports, without providing any evidence that the vulnerability actually exists.\r\n* Issues for domains listed in Out-of-scope domains section\r\n* Issues mentioned under out-of-scope vulnerabilities.\r\n\r\n## Scope\r\n\r\n\"Typical\" web vulnerabilities are generally considered in-scope. This includes, but is not limited to:\r\n* Remote Code Execution (RCE)\r\n* Cross Site Scripting (XSS)\r\n* Cross Site Request Forgery (CSRF)\r\n* Privilege Escalation\r\n* Session Hijacking\r\n* Leaking of sensitive customer data (especially anything in the scope of PCI)\r\n\r\n## Scope Exclusions\r\n\r\nOnly software-based issues are eligible for reward, things such as physical attacks against our offices or data centers do not qualify, nor do social engineering attacks. Protocols or standards not developed by WePay are similarly excluded, as are \"non-optimal\" protocol settings (e.g., RC4, SSLv3) unless said settings are _directly exploitable_. If in doubt please report it :)\r\n\r\n**Out-of-scope domains include, but are not limited to:**\r\n* e.wepay.com ([Marketo](https://www.marketo.com/))\r\n* status.wepay.com ([StatusPage.io](https://www.statuspage.io/security))\r\n* support.wepay.com ([Zendesk](https://www.zendesk.com/company/responsible-disclosure-policy/))\r\n* t.wepay.com ([ThreatMetrix](https://www.threatmetrix.com/))\r\n* visit.wepay.com ([Marketo](https://www.marketo.com/))\r\n* blog.wepay.com\r\n* doyouplatform.com\r\n\r\n**Out of scope vulnerabilities include but are not limited to:**\r\n* Issues related to software not under WePay's control \r\n* Reports from automated web vulnerability scanners that are not validated.\r\n* Issues that need social engineering for successful exploitation.\r\n* Any physical attempts against WePay property or data centers\r\n* Social engineering attacks against WePay employees\r\n* Missing autocomplete attributes.\r\n* Missing security flags on non-security-sensitive cookies.\r\n* Username or Email enumeration.\r\n* Missing Best practices.\r\n* Spamming\r\n* Issues that require physical access to a victim\u2019s computer for successful exploitation.\r\n* Open ports without an accompanying proof-of-concept demonstrating vulnerability.\r\n* XSS issues that affect only outdated browsers.\r\n* Tab nabbing and window.opener-related issues.\r\n* Issues related to absence of CAA DNS record.\r\n* Discrepancy related to permissions for owner and moderator role. \r\n* Phishing using Open Redirection. Exceptions: Open redirection that leads to leakage of OAuth Access Token, bypass of Content Security Policy,etc.\r\n* [Content Injection](https://www.owasp.org/index.php/Content_Spoofing) issues\r\n* CSV Injection. Please see this [article](https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection)\r\n* Banner grabbing issues (Finding info like webserver name, etc.)\r\n* Cross-site Request Forgery (CSRF) with minimal security implications like Logout CSRF\r\n* Issues related to SPF,DKIM, and DMARC\r\n* Reflected File Download\r\n* Error Stack Trace or 401/403/500 Server error without an accompanying evidence of vulnerability\r\n* Self-XSS including cases where user himself pastes javascript code into the browser.\r\n* Issues without clearly identified security impact, such as clickjacking on a static website, descriptive error messages, HTTP OPTIONS method enabled, etc.\r\n* Issues related to Payment Fraud.\r\n\r\nOur SDKs are also ineligible for reward, as is other software open-sourced by WePay (such as that found on <https://github.com/wepay>). \r\n\r\n**Too many duplicates have been filed and we will reject all new reports out-of-hand as N/A**\r\n* Clickjacking (we're actively working on this)\r\n* Brute Force protection on login page\r\n\r\n## Rewards\r\n\r\nOnly security vulnerabilities qualify for rewards, which start at $100 and will increase based on severity and scope. _Reports of non-security issues are appreciated, but will not qualify for a reward and will be marked informative._ WePay's security team reserves final judgment regarding rewards.\r\n\r\nWhile we certainly appreciate *reports* of a possible issue, the lack of a functioning exploit against the possible vulnerability means that _most_ of these reports _will not be eligible_ for a bounty. If we determine that your report is exceptional and is bounty-worthy, it will be paid-out from the bottom-end of the reward scale.\r\n\r\n## Automated Scanning\r\n\r\nIf you employ automated scanning tools, their requests **must** be rate limited to not exceed 3 requests per second without prior approval. Failure to do so may be considered a DoS attack and will result in disqualification from the program.\r\n\r\nAutomated vulnerability scanners commonly have low priority issues and/or false positives. Before submitting the results from a scanner, please take a moment to confirm that the reported issues are actually valid and exploitable. Please submit an issue only if you have exploited a real vulnerability.\r\n\r\n## Eligibility and Responsible Disclosure\r\n\r\nYou will qualify for bounty eligibility only if you are the first person to responsibly disclose an unknown issue. We intend to respond and resolve reported issues as quickly as possible, but please allow up to 14 days for a response and 90\u2013120 days for a resolution (if we expect resolution to take longer, we will be upfront about this).\r\n\r\nIssues not disclosed through HackerOne or by directly emailing <security@wepay.com> are ineligible and may result in removal from the program.\r\n\r\n## Tools\r\n\r\nZero members of our staff use Microsoft Windows, so videos which use Windows-specific tools are not helpful for reproducing issues. Videos should contain steps that can be reproduced without leveraging features that are specific to a single tool that is only available for Microsoft Windows.\r\n\r\nWe use Linux or OS X for everything. If your functioning exploit leverages a command-line tool, it should be a tool which works on OS X (Darwin), RedHat-based Linuxes (e.g., RHEL, CentOS) or Debian-based Linuxes (e.g., Debian, Ubuntu). If your functioning exploit leverages a GUI tool, it should be a tool which works on OS X.\r\n\r\n\r\n## Videos\r\n\r\nPlease use **modern** codecs and containers when submitting videos.\r\n\r\n* **H.264** video + **AAC** audio + **MP4** container is overwhelmingly preferred.\r\n* Non-Standardized codecs and containers (e.g., VP8, VP9, MKV, WebM, Ogg) are not preferred, but still acceptable.\r\n* Outdated codecs and containers (e.g., Microsoft Video 1, VC-1, AVI, WMV, FLV, H.263, Theora, VP6, VP7) is discouraged.\r\n\r\n", 
    "can_view_hacktivity": true, 
    "base_bounty": 100, 
    "has_cover_photo": false, 
    "total_bounties_paid": null, 
    "policy_markdown": "<h1 id=\"wepay-bug-bounty-program-rules\">WePay Bug Bounty Program Rules</h1>\n\n<p>WePay asks that tests are performed against <code>stage-go.wepay.com</code>, <code>stage.wepay.com</code> and <code>stage.wepayapi.com</code>.  Our public staging server runs the same code as production. Create as many test accounts there as you feel necessary; <strong>actual customer data is strongly discouraged</strong> for exploits \u2014 a reproduce case will suffice. One report to cover both domains is sufficient; please perform testing against <code>stage.wepay.com</code> to prevent service interruption to our customers.</p>\n\n<p>Vulnerabilities that may be specific to server configs (SSL settings,SSH settings, etc) may also be tested on <code>go.wepay.com</code>, <code>www.wepay.com</code> ,<code>home.wepay.com</code> and <code>wepayapi.com</code>, as the environments may be configured differently than their corresponding staging environments viz.;  stage-go.wepay.com, stage.wepay.com, stage-home.wepay.com, and stage.wepayapi.com respectively.</p>\n\n<h2 id=\"attributes-of-a-good-report\">Attributes of a good report:</h2>\n\n<ol>\n<li>Only one issue per report.</li>\n<li>Summarize the Security issue in a single sentence</li>\n<li>Describe detailed steps for reproducing the bug. If possible, please include video or screenshots, links you clicked on, pages visited, etc.</li>\n<li>Elaborate Security implications of the issue. How will the problem affect WePay, our users or our partners? What&#39;s the worst thing that could happen if an attacker takes advantage of this security flaw.</li>\n</ol>\n\n<blockquote>\n<p><strong>Functioning exploits are worth more money than reports that are copy-pasted from other security-related websites.</strong> A screenshot is much less useful than a video, and a functioning exploit will <em>always</em> have real code. <em>Showing</em> that there&#39;s a potential issue is less valuable than <em>exploiting</em> a real issue.</p>\n</blockquote>\n\n<h2 id=\"with-regard-to-duplicates\">With Regard to Duplicates</h2>\n\n<p>If we have already received a report of a similar issue, which we believe would be resolved by the same fix that would resolve your issue, then we will mark your issue as a <u>duplicate</u> because the <u>root-cause</u> is the same.</p>\n\n<h2 id=\"with-regard-to-reputation\">With Regard to Reputation</h2>\n\n<p>If you make an effort to file a legitimate issue, and it is not necessarily a valid issue, we will generally close it as <em>Informational</em> (+0) \u2014 UNLESS it is clear that you made no effort to read these Guidelines, in which case we may choose to close as <em>Not Applicable</em> (-5) if the case is particularly egregious.</p>\n\n<h3 id=\"following-categories-of-issues-will-be-marked-n-a\">Following categories of issues will be marked N/A:</h3>\n\n<ul>\n<li>Copy-pasting reports from another site or submitting reports, without providing any evidence that the vulnerability actually exists.</li>\n<li>Issues for domains listed in Out-of-scope domains section</li>\n<li>Issues mentioned under out-of-scope vulnerabilities.</li>\n</ul>\n\n<h2 id=\"scope\">Scope</h2>\n\n<p>&quot;Typical&quot; web vulnerabilities are generally considered in-scope. This includes, but is not limited to:</p>\n\n<ul>\n<li>Remote Code Execution (RCE)</li>\n<li>Cross Site Scripting (XSS)</li>\n<li>Cross Site Request Forgery (CSRF)</li>\n<li>Privilege Escalation</li>\n<li>Session Hijacking</li>\n<li>Leaking of sensitive customer data (especially anything in the scope of PCI)</li>\n</ul>\n\n<h2 id=\"scope-exclusions\">Scope Exclusions</h2>\n\n<p>Only software-based issues are eligible for reward, things such as physical attacks against our offices or data centers do not qualify, nor do social engineering attacks. Protocols or standards not developed by WePay are similarly excluded, as are &quot;non-optimal&quot; protocol settings (e.g., RC4, SSLv3) unless said settings are <u>directly exploitable</u>. If in doubt please report it :)</p>\n\n<p><strong>Out-of-scope domains include, but are not limited to:</strong></p>\n\n<ul>\n<li>e.wepay.com (<a href=\"https://www.marketo.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Marketo</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>status.wepay.com (<a href=\"https://www.statuspage.io/security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>StatusPage.io</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>support.wepay.com (<a href=\"https://www.zendesk.com/company/responsible-disclosure-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Zendesk</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>t.wepay.com (<a href=\"https://www.threatmetrix.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>ThreatMetrix</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>visit.wepay.com (<a href=\"https://www.marketo.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Marketo</span><i class=\"icon-external-link\"></i></a>)</li>\n<li>blog.wepay.com</li>\n<li>doyouplatform.com</li>\n</ul>\n\n<p><strong>Out of scope vulnerabilities include but are not limited to:</strong></p>\n\n<ul>\n<li>Issues related to software not under WePay&#39;s control </li>\n<li>Reports from automated web vulnerability scanners that are not validated.</li>\n<li>Issues that need social engineering for successful exploitation.</li>\n<li>Any physical attempts against WePay property or data centers</li>\n<li>Social engineering attacks against WePay employees</li>\n<li>Missing autocomplete attributes.</li>\n<li>Missing security flags on non-security-sensitive cookies.</li>\n<li>Username or Email enumeration.</li>\n<li>Missing Best practices.</li>\n<li>Spamming</li>\n<li>Issues that require physical access to a victim\u2019s computer for successful exploitation.</li>\n<li>Open ports without an accompanying proof-of-concept demonstrating vulnerability.</li>\n<li>XSS issues that affect only outdated browsers.</li>\n<li>Tab nabbing and window.opener-related issues.</li>\n<li>Issues related to absence of CAA DNS record.</li>\n<li>Discrepancy related to permissions for owner and moderator role. </li>\n<li>Phishing using Open Redirection. Exceptions: Open redirection that leads to leakage of OAuth Access Token, bypass of Content Security Policy,etc.</li>\n<li>\n<a href=\"https://www.owasp.org/index.php/Content_Spoofing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Content Injection</span><i class=\"icon-external-link\"></i></a> issues</li>\n<li>CSV Injection. Please see this <a href=\"https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>article</span><i class=\"icon-external-link\"></i></a>\n</li>\n<li>Banner grabbing issues (Finding info like webserver name, etc.)</li>\n<li>Cross-site Request Forgery (CSRF) with minimal security implications like Logout CSRF</li>\n<li>Issues related to SPF,DKIM, and DMARC</li>\n<li>Reflected File Download</li>\n<li>Error Stack Trace or 401/403/500 Server error without an accompanying evidence of vulnerability</li>\n<li>Self-XSS including cases where user himself pastes javascript code into the browser.</li>\n<li>Issues without clearly identified security impact, such as clickjacking on a static website, descriptive error messages, HTTP OPTIONS method enabled, etc.</li>\n<li>Issues related to Payment Fraud.</li>\n</ul>\n\n<p>Our SDKs are also ineligible for reward, as is other software open-sourced by WePay (such as that found on <a title=\"https://github.com/wepay\" href=\"https://github.com/wepay\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://github.com/wepay</span><i class=\"icon-external-link\"></i></a>). </p>\n\n<p><strong>Too many duplicates have been filed and we will reject all new reports out-of-hand as N/A</strong></p>\n\n<ul>\n<li>Clickjacking (we&#39;re actively working on this)</li>\n<li>Brute Force protection on login page</li>\n</ul>\n\n<h2 id=\"rewards\">Rewards</h2>\n\n<p>Only security vulnerabilities qualify for rewards, which start at $100 and will increase based on severity and scope. <u>Reports of non-security issues are appreciated, but will not qualify for a reward and will be marked informative.</u> WePay&#39;s security team reserves final judgment regarding rewards.</p>\n\n<p>While we certainly appreciate <em>reports</em> of a possible issue, the lack of a functioning exploit against the possible vulnerability means that <u>most</u> of these reports <u>will not be eligible</u> for a bounty. If we determine that your report is exceptional and is bounty-worthy, it will be paid-out from the bottom-end of the reward scale.</p>\n\n<h2 id=\"automated-scanning\">Automated Scanning</h2>\n\n<p>If you employ automated scanning tools, their requests <strong>must</strong> be rate limited to not exceed 3 requests per second without prior approval. Failure to do so may be considered a DoS attack and will result in disqualification from the program.</p>\n\n<p>Automated vulnerability scanners commonly have low priority issues and/or false positives. Before submitting the results from a scanner, please take a moment to confirm that the reported issues are actually valid and exploitable. Please submit an issue only if you have exploited a real vulnerability.</p>\n\n<h2 id=\"eligibility-and-responsible-disclosure\">Eligibility and Responsible Disclosure</h2>\n\n<p>You will qualify for bounty eligibility only if you are the first person to responsibly disclose an unknown issue. We intend to respond and resolve reported issues as quickly as possible, but please allow up to 14 days for a response and 90\u2013120 days for a resolution (if we expect resolution to take longer, we will be upfront about this).</p>\n\n<p>Issues not disclosed through HackerOne or by directly emailing <a title=\"security@wepay.com\" href=\"mailto:security@wepay.com\" rel=\"nofollow noopener noreferrer\">security@wepay.com</a> are ineligible and may result in removal from the program.</p>\n\n<h2 id=\"tools\">Tools</h2>\n\n<p>Zero members of our staff use Microsoft Windows, so videos which use Windows-specific tools are not helpful for reproducing issues. Videos should contain steps that can be reproduced without leveraging features that are specific to a single tool that is only available for Microsoft Windows.</p>\n\n<p>We use Linux or OS X for everything. If your functioning exploit leverages a command-line tool, it should be a tool which works on OS X (Darwin), RedHat-based Linuxes (e.g., RHEL, CentOS) or Debian-based Linuxes (e.g., Debian, Ubuntu). If your functioning exploit leverages a GUI tool, it should be a tool which works on OS X.</p>\n\n<h2 id=\"videos\">Videos</h2>\n\n<p>Please use <strong>modern</strong> codecs and containers when submitting videos.</p>\n\n<ul>\n<li>\n<strong>H.264</strong> video + <strong>AAC</strong> audio + <strong>MP4</strong> container is overwhelmingly preferred.</li>\n<li>Non-Standardized codecs and containers (e.g., VP8, VP9, MKV, WebM, Ogg) are not preferred, but still acceptable.</li>\n<li>Outdated codecs and containers (e.g., Microsoft Video 1, VC-1, AVI, WMV, FLV, H.263, Theora, VP6, VP7) is discouraged.</li>\n</ul>\n", 
    "show_mean_first_response_time": false, 
    "show_total_bounties_paid": false, 
    "can_invite_team_member": false, 
    "researcher_count": 223, 
    "can_view_insights": true, 
    "show_mean_report_triage_time": false, 
    "number_of_updates": 0, 
    "name": "WePay", 
    "submission_state": "open", 
    "url": "https://hackerone.com/wepay", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "missed", 
    "mean_time_to_triage": null, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}