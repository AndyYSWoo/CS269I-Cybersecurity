{
    "twitter_handle": "mariadbfdn", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": true, 
    "policy_html": "<h2 id=\"overview\">Overview</h2>\n\n<p>MariaDB Server is one of the most popular <strong>open source</strong> database servers in the world. It is developed and maintained by the original developers of MySQL and guaranteed to stay open source.</p>\n\n<p>The <strong>MariaDB Foundation</strong> supports continuity and open collaboration in the MariaDB ecosystem. The Foundation guarantees that there is a global contact point for collaboration and that the community can always rely upon MariaDB Server.</p>\n\n<p>The Foundation is committed to working with security experts to stay up to date with the latest security techniques and towards the security of your database deployments. Feel free to inspect, analyze and fuzz our <a href=\"https://github.com/mariadb/\" rel=\"nofollow noopener noreferrer\"><span>source code</span><i class=\"icon-external-link\"></i></a> as you wish. If you discovered a security issue in either research or production that you believe we should know about, please let us know via responsible disclosure and we&#39;ll make every effort to quickly correct the issue following a vulnerability handling process that is respectful and considerate to you, all users, partners, companies and forks of MariaDB. If you&#39;d like to bring additional attention to a report or feel we can improve with our report handling please let us know at <a title=\"security@mariadb.org\" href=\"mailto:security@mariadb.org\" rel=\"nofollow noopener noreferrer\">security@mariadb.org</a>.</p>\n\n<h2 id=\"disclosure-policy\">Disclosure Policy</h2>\n\n<p>A note on upstream MySQL and third party storage engines,</p>\n\n<p>MySQL, which is the base of MariaDB, is a product and trademark of Oracle Corporation, Inc. MariaDB is a fork of MySQL and the Foundation is committed to keeping MariaDB on par and go beyond feature, security, performance and reliability wise, as well as keep <a href=\"https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/\" rel=\"nofollow noopener noreferrer\"><span>drop-in</span><i class=\"icon-external-link\"></i></a> compatibility to the best of our efforts for certain branches. This implies that some security issues could originate in the upstream source code before the initial fork, or be introduced later via a subsequent merge, in which case our biggest priority is to resolve the issue for MariaDB users as quickly and responsibly as possible and at the same time report upstream if applicable. We can report the vulnerability to Oracle on your behalf, unless you prefer to do it yourself. However, if you report it only to Oracle, we will never know about it and might never fix it.</p>\n\n<p>Also, MariaDB, in the default source offering, incorporates various third party open source modules, for example, <a href=\"https://mariadb.com/kb/en/library/choosing-the-right-storage-engine/\" rel=\"nofollow noopener noreferrer\"><span>Storage Engines</span><i class=\"icon-external-link\"></i></a> that provide different backend store facilities with focus on performance, efficiency, or scaling. Examples include TokuDB, XtraDB from Percona, and MyRocks originally from Facebook. If your report specifically targets one of those third party modules that is part of the original MariaDB source offering, we encourage you to report it to us, in which case, our biggest priority is to resolve the issue for MariaDB users quickly and responsibly and at the same time notify and collaborate with the original upstream source to mitigate risk and develop a resolution that has the widest outreach possible.</p>\n\n<p>If you are unsure of the scope of your vulnerability report, don&#39;t worry too much about it, just make sure you are following the responsible disclosure guidelines and we will get in touch with you about the classification and scope specifics upon verification and validation of the report. In either case, you will be kept in the loop for the entire life-time of the disclosure and handling process.</p>\n\n<h2 id=\"disclosure-rules\">Disclosure Rules</h2>\n\n<p>MariaDB is a server product used in both public and private environments, with a wide reach ranging from being the default database system on Debian flavored distributions and availability in most other Linux and BSD package repositories, to corporate, enterprise and governmental deployments, to supplying database needs for many internet sites and services, and ultimately to being the go-to choice for many personal individuals all around the globe. To that end we strongly encourage you to follow the <a href=\"https://en.wikipedia.org/wiki/Responsible_disclosure\" rel=\"nofollow noopener noreferrer\"><span>responsible disclosure</span><i class=\"icon-external-link\"></i></a> philosophy and <a href=\"https://www.hackerone.com/disclosure-guidelines\" rel=\"nofollow noopener noreferrer\"><span>guidelines</span><i class=\"icon-external-link\"></i></a> when stumbling across vulnerabilities in critical infrastructure software, MariaDB included.</p>\n\n<p>A quick summary of the rules defining responsible disclosure:</p>\n\n<h3 id=\"rules-for-you\">Rules For You</h3>\n\n<ul>\n<li>You must be the first reporter of the vulnerability to be eligible for recognition. Please check our <a href=\"https://jira.mariadb.org/\" rel=\"nofollow noopener noreferrer\"><span>bug database</span><i class=\"icon-external-link\"></i></a> prior to classifying it as a new issue.</li>\n<li>The vulnerability must demonstrate security impact, either implicitly or explicitly. You must be available for further clarification, detail requests from our security team and developers. See <strong>Report Eligibility</strong> section.</li>\n<li>You must not publicly disclose the vulnerability, nor privately to another third party, prior to the report being resolved in a reasonable manner, in compliance with the process described in the <a href=\"https://www.hackerone.com/disclosure-guidelines\" rel=\"nofollow noopener noreferrer\"><span>HackerOne Vulnerability Disclosure Guidelines</span><i class=\"icon-external-link\"></i></a> and terms in this document. As an exception to this rule, you may disclose it to Oracle and Percona security contacts.  If you prefer not to do it and we discover that other MySQL variants are affected, we will notify them on your behalf.</li>\n<li>Share the security issue with us in detail; See <strong>Bug Report</strong> section.</li>\n<li>You agree with the public disclosure of any valid security issue reported to us pending resolution.</li>\n<li>Submitter must not be the author of the vulnerable code nor otherwise involved in its contribution to the MariaDB project (such as by providing code/PR/merge reviews). Employees of the Foundation and its subsidiaries, affiliate companies are ineligible.</li>\n<li>Act in good faith to avoid privacy violations, destruction of data, and interruption or degradation of services (including denial of service) for us and our users at large and comply with all applicable laws.</li>\n<li>You must agree and comply to our stated Policy and implicit HackerOne program rules.</li>\n</ul>\n\n<h3 id=\"rules-for-us\">Rules For Us</h3>\n\n<ul>\n<li>We will respond as quickly as possible to your initial submission.</li>\n<li>Pending our ability to reproduce your findings, we will evaluate the severity of the report, affected products and releases and get back to you with our dissemination.</li>\n<li>We will coordinate together towards fashioning a reasonable vulnerability fix timeline that is knowledgeable and respectful of all parties affected by the issue.</li>\n<li>We will notify other MySQL variants on your behalf if we determine that they are also affected by the vulnerability.</li>\n<li>We will draft a security advisory, public announcement, and urge users to upgrade accordingly. At this stage you will also receive public recognition (at your discretion).</li>\n<li>We will commit to post-resolution future-proofing mitigation activities, such as identification of the original cause of the defect that made this possible in the first place, creating test suites and pro-actively looking for further similar class vulnerabilities that we can readily identify via our Continuous Integration and Testing platform.</li>\n<li>We will keep you updated as we work throughout this entire process. You can be part of this at all stages.</li>\n</ul>\n\n<h2 id=\"bug-report\">Bug Report</h2>\n\n<p>A good vulnerability bug report should include at least the following information:</p>\n\n<ul>\n<li>The environment (operating system, hardware and MariaDB version, including plugins and storage engines).</li>\n<li>Code affected, along with your explanation of the faulty behavior.</li>\n<li>Configuration, SQL tables, queries, network actions required to reproduce the behavior.</li>\n<li>Core dumps, stack-traces, error logs, data dumps, failed test cases or network packets required to diagnose or reproduce the attack.</li>\n<li>Proof of Concept (PoC) code that successfully triggers/exploits the vulnerability in at least one given scenario.</li>\n</ul>\n\n<p>In gist, vulnerability reports need to be documented in a way that they can be reproduced, easily understood and classified by our developers without duplicating everything you did already from scratch. The more details you send in, the easier it is for our developers to rely on the effort already put in by you and act faster. Send screen-shots, code, video; whatever helps to understand the flaw as quickly as possible.</p>\n\n<p>For details on how to submit a comprehensive bug report that&#39;s specifically tailored to MariaDB see <a href=\"https://mariadb.com/kb/en/library/mariadb-community-bug-reporting/\" rel=\"nofollow noopener noreferrer\"><span>Bug Reporting</span><i class=\"icon-external-link\"></i></a> in our Knowledge Base.</p>\n\n<h2 id=\"report-eligibility\">Report Eligibility</h2>\n\n<p>Due to the nature of our client-server protocol, replication technologies, plugin system, and overall architecture of MariaDB sever and deployment specifics, there are a variety of forms that a security vulnerability can take, so in order to simplify our classification of reports for eligibility, we try and base our evaluations on a combination of risk, impact, exposure and common sense to evaluate severity for a particular vulnerability report and the threat posed to users. It is considered a good practice to assess any particular vulnerability using the Common Vulnerability Scoring System <a href=\"https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System\" rel=\"nofollow noopener noreferrer\"><span>CVSS3</span><i class=\"icon-external-link\"></i></a> standard in order to easily come up with a metric that can be easily understood and shared by many in the industry.</p>\n\n<p>Unless otherwise stated by the MariaDB security team, pending completion of report evaluation and analysis, we currently consider this classification for qualifying vulnerabilities:</p>\n\n<h3 id=\"in-scope\">In Scope</h3>\n\n<p>Security vulnerabilities in active development branches and released versions that are still in the <a href=\"https://mariadb.org/about/maintenance-policy/\" rel=\"nofollow noopener noreferrer\"><span>supported timeline</span><i class=\"icon-external-link\"></i></a>, such as:</p>\n\n<ul>\n<li>Gaining unauthorized remote code execution on the server, slave or client machine (i.e. RCE).</li>\n<li>Database authentication bypass, privilege escalation and other access control bypass attacks.</li>\n<li>Data corruption attacks that affect the integrity of the database without authentication or privileges to do that normally.</li>\n<li>Data exfiltration attacks that affect the confidentiality of the database without authorization to do that normally.</li>\n<li>Denial of Service (DoS) attacks that permanently corrupt the server state or configuration, preventing the user from easily restarting the service, thus resulting in total loss of availability.</li>\n<li>Vulnerabilities in clients or connectors (only those, available from <a title=\"https://downloads.mariadb.org/\" href=\"https://downloads.mariadb.org/\" rel=\"nofollow noopener noreferrer\"><span>https://downloads.mariadb.org/</span><i class=\"icon-external-link\"></i></a>).</li>\n</ul>\n\n<h3 id=\"limited-scope\">Limited Scope</h3>\n\n<p>Vulnerabilities that don&#39;t lead to a severe compromise of the server, data and information leakage or privilege escalation, but do affect normal operation, up-time and service reliability are considered of limited scope:</p>\n\n<ul>\n<li>Denial of Service (DoS) attacks that crash the server, without inflicting a permanent damage.</li>\n</ul>\n\n<p>In addition to the main product offerings of MariaDB, we are also considering critical security issues in our website, support, development, testing and release infrastructure that could potentially affect end users of MariaDB server as part of this policy and in limited scope. Examples could be server side attacls that lead to binary release distribution integrity corruption or web attacks that could lead to serious compromise of our infrastructure, such as:</p>\n\n<ul>\n<li>Cross Site Scripting (XSS)</li>\n<li>Cross Site Request Forgery (CSRF)</li>\n<li>Server Side Request Forgery (SSRF)</li>\n<li>Remote Code Execution (RCE)</li>\n<li>SQL Injection (SQLi)</li>\n</ul>\n\n<p>Please, note, MariaDB Foundation is a non-profit organization with limited resources and while we do our best to keep everything up to date and secure, there&#39;s still the chance that some underused service, daemon or forgotten installation might gradually slide down the path of irrelevance and obsoleteness and thus, potentially expose use to attacks. If you happen to find such problems in our infrastructure, please notify us first. We will be grateful and acknowledge you with thanks on HackerOne at least.</p>\n\n<p>Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder or the Foundation. Engaging in a full-blown penetration test of our infrastructure and live systems without a prior agreement from the Foundation is especially prohibited. If you&#39;re planning to look for vulnerabilities in our infrastructure, we&#39;d like to ask you to refrain from: </p>\n\n<ul>\n<li>Denial of service </li>\n<li>Spamming </li>\n<li>Social engineering (including phishing) of MariaDB staff or contractors </li>\n<li>Any physical attempts against MariaDB property or data centers </li>\n<li>Automated scans and evaluations that can impair the functionality of our services </li>\n</ul>\n\n<h3 id=\"out-of-scope\">Out of Scope</h3>\n\n<ul>\n<li>Vulnerabilities in old, unmaintained versions of MariaDB.</li>\n<li>Vulnerabilities that have already been submitted by another user and/or that we are already aware of.</li>\n<li>Vulnerabilities in third-party modules, connectors, and clients that are not available from <a title=\"https://downloads.mariadb.org/\" href=\"https://downloads.mariadb.org/\" rel=\"nofollow noopener noreferrer\"><span>https://downloads.mariadb.org/</span><i class=\"icon-external-link\"></i></a>.</li>\n<li>Note that this Hacker One program is run the MariaDB Foundation. <strong>Any issues related to the MariaDB Corporation (mariadb.com) are out of scope.</strong>\n</li>\n</ul>\n\n<p>If you&#39;re in doubt, feel free to report it anyway or e-mail us at <a title=\"security@mariadb.org\" href=\"mailto:security@mariadb.org\" rel=\"nofollow noopener noreferrer\">security@mariadb.org</a>.</p>\n\n<h3 id=\"severity\">Severity</h3>\n\n<p>The MariaDB Server developers classify all security vulnerabilities according to their threat level and thus handle them with the appropriate consideration. The threat level can be one of:</p>\n\n<ul>\n<li>\n<strong>CRITICAL</strong>: an exploitable vulnerability that causes arbitrary code execution or allows an unauthenticated user to crash the server or get access to the data.</li>\n<li>\n<strong>MEDIUM</strong>: everything else.</li>\n</ul>\n\n<p>We promise to fix any CRITICAL security vulnerability immediately, usually within hours, and release fixed MariaDB binaries as soon as possible, usually the next day.</p>\n\n<p>We will fix MEDIUM security vulnerability as soon as possible, but we will not change our planned release schedule to get the fix out earlier.</p>\n\n<h3 id=\"see-also\">See also</h3>\n\n<p>The MariaDB Foundation security policy at <a title=\"https://mariadb.org/about/security-policy/\" href=\"https://mariadb.org/about/security-policy/\" rel=\"nofollow noopener noreferrer\"><span>https://mariadb.org/about/security-policy/</span><i class=\"icon-external-link\"></i></a></p>\n\n<h4 id=\"thank-you-for-helping-keep-mariadb-and-our-users-safe\">Thank you for helping keep MariaDB and our users safe!</h4>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": null, 
    "top_bounty_lower_range": null, 
    "anc_enabled": false, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-10-29T10:16:16.199Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2018-08-09T22:33:32.264Z", 
    "bug_count": 6, 
    "mean_time_to_bounty": null, 
    "offers_swag": false, 
    "offers_bounties": false, 
    "id": 8724, 
    "mean_time_to_resolution": 3866400, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/008/724/d7da352d13446a5b4f97ff0739876d09e8d4d568_small.?1453703867", 
        "large": "https://profile-photos.hackerone-user-content.com/000/008/724/58bd26e5bafb88f922a2231a782449d76a0008fc_large.?1453703867", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/008/724/02fc283cf7bb69867cb109e3da6be202e5e90138_xtralarge.?1453703867"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "number_of_updates": 0, 
    "target_signal": 0, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://mariadb.org", 
        "about": "MariaDB is a high performance, open source database that helps the world's busiest websites deliver more content, faster.", 
        "twitter_handle": "mariadbfdn", 
        "name": "MariaDB"
    }, 
    "scopes": [
        "mariadb.org"
    ], 
    "handle": "mariadb", 
    "cover_color": "#354067", 
    "mean_time_to_first_response": 28800, 
    "average_bounty_lower_range": null, 
    "response_efficiency_percentage": 100, 
    "policy": "## Overview\r\n\r\nMariaDB Server is one of the most popular **open source** database servers in the world. It is developed and maintained by the original developers of MySQL and guaranteed to stay open source.\r\n\r\nThe **MariaDB Foundation** supports continuity and open collaboration in the MariaDB ecosystem. The Foundation guarantees that there is a global contact point for collaboration and that the community can always rely upon MariaDB Server.\r\n\r\nThe Foundation is committed to working with security experts to stay up to date with the latest security techniques and towards the security of your database deployments. Feel free to inspect, analyze and fuzz our [source code](https://github.com/mariadb/) as you wish. If you discovered a security issue in either research or production that you believe we should know about, please let us know via responsible disclosure and we'll make every effort to quickly correct the issue following a vulnerability handling process that is respectful and considerate to you, all users, partners, companies and forks of MariaDB. If you'd like to bring additional attention to a report or feel we can improve with our report handling please let us know at security@mariadb.org.\r\n\r\n## Disclosure Policy\r\n\r\nA note on upstream MySQL and third party storage engines,\r\n\r\nMySQL, which is the base of MariaDB, is a product and trademark of Oracle Corporation, Inc. MariaDB is a fork of MySQL and the Foundation is committed to keeping MariaDB on par and go beyond feature, security, performance and reliability wise, as well as keep [drop-in](https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/) compatibility to the best of our efforts for certain branches. This implies that some security issues could originate in the upstream source code before the initial fork, or be introduced later via a subsequent merge, in which case our biggest priority is to resolve the issue for MariaDB users as quickly and responsibly as possible and at the same time report upstream if applicable. We can report the vulnerability to Oracle on your behalf, unless you prefer to do it yourself. However, if you report it only to Oracle, we will never know about it and might never fix it.\r\n\r\nAlso, MariaDB, in the default source offering, incorporates various third party open source modules, for example, [Storage Engines](https://mariadb.com/kb/en/library/choosing-the-right-storage-engine/) that provide different backend store facilities with focus on performance, efficiency, or scaling. Examples include TokuDB, XtraDB from Percona, and MyRocks originally from Facebook. If your report specifically targets one of those third party modules that is part of the original MariaDB source offering, we encourage you to report it to us, in which case, our biggest priority is to resolve the issue for MariaDB users quickly and responsibly and at the same time notify and collaborate with the original upstream source to mitigate risk and develop a resolution that has the widest outreach possible.\r\n\r\nIf you are unsure of the scope of your vulnerability report, don't worry too much about it, just make sure you are following the responsible disclosure guidelines and we will get in touch with you about the classification and scope specifics upon verification and validation of the report. In either case, you will be kept in the loop for the entire life-time of the disclosure and handling process.\r\n\r\n## Disclosure Rules\r\n\r\nMariaDB is a server product used in both public and private environments, with a wide reach ranging from being the default database system on Debian flavored distributions and availability in most other Linux and BSD package repositories, to corporate, enterprise and governmental deployments, to supplying database needs for many internet sites and services, and ultimately to being the go-to choice for many personal individuals all around the globe. To that end we strongly encourage you to follow the [responsible disclosure](https://en.wikipedia.org/wiki/Responsible_disclosure) philosophy and [guidelines](https://www.hackerone.com/disclosure-guidelines) when stumbling across vulnerabilities in critical infrastructure software, MariaDB included.\r\n\r\nA quick summary of the rules defining responsible disclosure:\r\n\r\n### Rules For You\r\n\r\n* You must be the first reporter of the vulnerability to be eligible for recognition. Please check our [bug database](https://jira.mariadb.org/) prior to classifying it as a new issue.\r\n* The vulnerability must demonstrate security impact, either implicitly or explicitly. You must be available for further clarification, detail requests from our security team and developers. See **Report Eligibility** section.\r\n* You must not publicly disclose the vulnerability, nor privately to another third party, prior to the report being resolved in a reasonable manner, in compliance with the process described in the [HackerOne Vulnerability Disclosure Guidelines](https://www.hackerone.com/disclosure-guidelines) and terms in this document. As an exception to this rule, you may disclose it to Oracle and Percona security contacts.  If you prefer not to do it and we discover that other MySQL variants are affected, we will notify them on your behalf.\r\n* Share the security issue with us in detail; See **Bug Report** section.\r\n* You agree with the public disclosure of any valid security issue reported to us pending resolution.\r\n* Submitter must not be the author of the vulnerable code nor otherwise involved in its contribution to the MariaDB project (such as by providing code/PR/merge reviews). Employees of the Foundation and its subsidiaries, affiliate companies are ineligible.\r\n* Act in good faith to avoid privacy violations, destruction of data, and interruption or degradation of services (including denial of service) for us and our users at large and comply with all applicable laws.\r\n* You must agree and comply to our stated Policy and implicit HackerOne program rules.\r\n\r\n### Rules For Us\r\n\r\n* We will respond as quickly as possible to your initial submission.\r\n* Pending our ability to reproduce your findings, we will evaluate the severity of the report, affected products and releases and get back to you with our dissemination.\r\n* We will coordinate together towards fashioning a reasonable vulnerability fix timeline that is knowledgeable and respectful of all parties affected by the issue.\r\n* We will notify other MySQL variants on your behalf if we determine that they are also affected by the vulnerability.\r\n* We will draft a security advisory, public announcement, and urge users to upgrade accordingly. At this stage you will also receive public recognition (at your discretion).\r\n* We will commit to post-resolution future-proofing mitigation activities, such as identification of the original cause of the defect that made this possible in the first place, creating test suites and pro-actively looking for further similar class vulnerabilities that we can readily identify via our Continuous Integration and Testing platform.\r\n* We will keep you updated as we work throughout this entire process. You can be part of this at all stages.\r\n\r\n## Bug Report\r\n\r\nA good vulnerability bug report should include at least the following information:\r\n* The environment (operating system, hardware and MariaDB version, including plugins and storage engines).\r\n* Code affected, along with your explanation of the faulty behavior.\r\n* Configuration, SQL tables, queries, network actions required to reproduce the behavior.\r\n* Core dumps, stack-traces, error logs, data dumps, failed test cases or network packets required to diagnose or reproduce the attack.\r\n* Proof of Concept (PoC) code that successfully triggers/exploits the vulnerability in at least one given scenario.\r\n\r\nIn gist, vulnerability reports need to be documented in a way that they can be reproduced, easily understood and classified by our developers without duplicating everything you did already from scratch. The more details you send in, the easier it is for our developers to rely on the effort already put in by you and act faster. Send screen-shots, code, video; whatever helps to understand the flaw as quickly as possible.\r\n\r\nFor details on how to submit a comprehensive bug report that's specifically tailored to MariaDB see [Bug Reporting](https://mariadb.com/kb/en/library/mariadb-community-bug-reporting/) in our Knowledge Base.\r\n\r\n## Report Eligibility\r\n\r\nDue to the nature of our client-server protocol, replication technologies, plugin system, and overall architecture of MariaDB sever and deployment specifics, there are a variety of forms that a security vulnerability can take, so in order to simplify our classification of reports for eligibility, we try and base our evaluations on a combination of risk, impact, exposure and common sense to evaluate severity for a particular vulnerability report and the threat posed to users. It is considered a good practice to assess any particular vulnerability using the Common Vulnerability Scoring System [CVSS3](https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System) standard in order to easily come up with a metric that can be easily understood and shared by many in the industry.\r\n\r\nUnless otherwise stated by the MariaDB security team, pending completion of report evaluation and analysis, we currently consider this classification for qualifying vulnerabilities:\r\n\r\n### In Scope\r\n\r\nSecurity vulnerabilities in active development branches and released versions that are still in the [supported timeline](https://mariadb.org/about/maintenance-policy/), such as:\r\n\r\n* Gaining unauthorized remote code execution on the server, slave or client machine (i.e. RCE).\r\n* Database authentication bypass, privilege escalation and other access control bypass attacks.\r\n* Data corruption attacks that affect the integrity of the database without authentication or privileges to do that normally.\r\n* Data exfiltration attacks that affect the confidentiality of the database without authorization to do that normally.\r\n* Denial of Service (DoS) attacks that permanently corrupt the server state or configuration, preventing the user from easily restarting the service, thus resulting in total loss of availability.\r\n* Vulnerabilities in clients or connectors (only those, available from https://downloads.mariadb.org/).\r\n\r\n### Limited Scope\r\n\r\nVulnerabilities that don't lead to a severe compromise of the server, data and information leakage or privilege escalation, but do affect normal operation, up-time and service reliability are considered of limited scope:\r\n* Denial of Service (DoS) attacks that crash the server, without inflicting a permanent damage.\r\n\r\nIn addition to the main product offerings of MariaDB, we are also considering critical security issues in our website, support, development, testing and release infrastructure that could potentially affect end users of MariaDB server as part of this policy and in limited scope. Examples could be server side attacls that lead to binary release distribution integrity corruption or web attacks that could lead to serious compromise of our infrastructure, such as:\r\n\r\n* Cross Site Scripting (XSS)\r\n* Cross Site Request Forgery (CSRF)\r\n* Server Side Request Forgery (SSRF)\r\n* Remote Code Execution (RCE)\r\n* SQL Injection (SQLi)\r\n\r\nPlease, note, MariaDB Foundation is a non-profit organization with limited resources and while we do our best to keep everything up to date and secure, there's still the chance that some underused service, daemon or forgotten installation might gradually slide down the path of irrelevance and obsoleteness and thus, potentially expose use to attacks. If you happen to find such problems in our infrastructure, please notify us first. We will be grateful and acknowledge you with thanks on HackerOne at least.\r\n\r\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder or the Foundation. Engaging in a full-blown penetration test of our infrastructure and live systems without a prior agreement from the Foundation is especially prohibited. If you're planning to look for vulnerabilities in our infrastructure, we'd like to ask you to refrain from: \r\n\r\n* Denial of service \r\n* Spamming \r\n* Social engineering (including phishing) of MariaDB staff or contractors \r\n* Any physical attempts against MariaDB property or data centers \r\n* Automated scans and evaluations that can impair the functionality of our services \r\n\r\n### Out of Scope\r\n\r\n* Vulnerabilities in old, unmaintained versions of MariaDB.\r\n* Vulnerabilities that have already been submitted by another user and/or that we are already aware of.\r\n* Vulnerabilities in third-party modules, connectors, and clients that are not available from https://downloads.mariadb.org/.\r\n* Note that this Hacker One program is run the MariaDB Foundation. **Any issues related to the MariaDB Corporation (mariadb.com) are out of scope.**\r\n\r\nIf you're in doubt, feel free to report it anyway or e-mail us at security@mariadb.org.\r\n\r\n### Severity\r\n\r\nThe MariaDB Server developers classify all security vulnerabilities according to their threat level and thus handle them with the appropriate consideration. The threat level can be one of:\r\n\r\n* **CRITICAL**: an exploitable vulnerability that causes arbitrary code execution or allows an unauthenticated user to crash the server or get access to the data.\r\n* **MEDIUM**: everything else.\r\n\r\nWe promise to fix any CRITICAL security vulnerability immediately, usually within hours, and release fixed MariaDB binaries as soon as possible, usually the next day.\r\n\r\nWe will fix MEDIUM security vulnerability as soon as possible, but we will not change our planned release schedule to get the fix out earlier.\r\n\r\n### See also\r\n\r\nThe MariaDB Foundation security policy at https://mariadb.org/about/security-policy/\r\n\r\n####Thank you for helping keep MariaDB and our users safe!", 
    "can_view_hacktivity": true, 
    "has_cover_photo": false, 
    "total_bounties_paid": null, 
    "policy_markdown": "<h2 id=\"overview\">Overview</h2>\n\n<p>MariaDB Server is one of the most popular <strong>open source</strong> database servers in the world. It is developed and maintained by the original developers of MySQL and guaranteed to stay open source.</p>\n\n<p>The <strong>MariaDB Foundation</strong> supports continuity and open collaboration in the MariaDB ecosystem. The Foundation guarantees that there is a global contact point for collaboration and that the community can always rely upon MariaDB Server.</p>\n\n<p>The Foundation is committed to working with security experts to stay up to date with the latest security techniques and towards the security of your database deployments. Feel free to inspect, analyze and fuzz our <a href=\"https://github.com/mariadb/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>source code</span><i class=\"icon-external-link\"></i></a> as you wish. If you discovered a security issue in either research or production that you believe we should know about, please let us know via responsible disclosure and we&#39;ll make every effort to quickly correct the issue following a vulnerability handling process that is respectful and considerate to you, all users, partners, companies and forks of MariaDB. If you&#39;d like to bring additional attention to a report or feel we can improve with our report handling please let us know at <a title=\"security@mariadb.org\" href=\"mailto:security@mariadb.org\" rel=\"nofollow noopener noreferrer\">security@mariadb.org</a>.</p>\n\n<h2 id=\"disclosure-policy\">Disclosure Policy</h2>\n\n<p>A note on upstream MySQL and third party storage engines,</p>\n\n<p>MySQL, which is the base of MariaDB, is a product and trademark of Oracle Corporation, Inc. MariaDB is a fork of MySQL and the Foundation is committed to keeping MariaDB on par and go beyond feature, security, performance and reliability wise, as well as keep <a href=\"https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>drop-in</span><i class=\"icon-external-link\"></i></a> compatibility to the best of our efforts for certain branches. This implies that some security issues could originate in the upstream source code before the initial fork, or be introduced later via a subsequent merge, in which case our biggest priority is to resolve the issue for MariaDB users as quickly and responsibly as possible and at the same time report upstream if applicable. We can report the vulnerability to Oracle on your behalf, unless you prefer to do it yourself. However, if you report it only to Oracle, we will never know about it and might never fix it.</p>\n\n<p>Also, MariaDB, in the default source offering, incorporates various third party open source modules, for example, <a href=\"https://mariadb.com/kb/en/library/choosing-the-right-storage-engine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Storage Engines</span><i class=\"icon-external-link\"></i></a> that provide different backend store facilities with focus on performance, efficiency, or scaling. Examples include TokuDB, XtraDB from Percona, and MyRocks originally from Facebook. If your report specifically targets one of those third party modules that is part of the original MariaDB source offering, we encourage you to report it to us, in which case, our biggest priority is to resolve the issue for MariaDB users quickly and responsibly and at the same time notify and collaborate with the original upstream source to mitigate risk and develop a resolution that has the widest outreach possible.</p>\n\n<p>If you are unsure of the scope of your vulnerability report, don&#39;t worry too much about it, just make sure you are following the responsible disclosure guidelines and we will get in touch with you about the classification and scope specifics upon verification and validation of the report. In either case, you will be kept in the loop for the entire life-time of the disclosure and handling process.</p>\n\n<h2 id=\"disclosure-rules\">Disclosure Rules</h2>\n\n<p>MariaDB is a server product used in both public and private environments, with a wide reach ranging from being the default database system on Debian flavored distributions and availability in most other Linux and BSD package repositories, to corporate, enterprise and governmental deployments, to supplying database needs for many internet sites and services, and ultimately to being the go-to choice for many personal individuals all around the globe. To that end we strongly encourage you to follow the <a href=\"https://en.wikipedia.org/wiki/Responsible_disclosure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>responsible disclosure</span><i class=\"icon-external-link\"></i></a> philosophy and <a href=\"https://www.hackerone.com/disclosure-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>guidelines</span><i class=\"icon-external-link\"></i></a> when stumbling across vulnerabilities in critical infrastructure software, MariaDB included.</p>\n\n<p>A quick summary of the rules defining responsible disclosure:</p>\n\n<h3 id=\"rules-for-you\">Rules For You</h3>\n\n<ul>\n<li>You must be the first reporter of the vulnerability to be eligible for recognition. Please check our <a href=\"https://jira.mariadb.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>bug database</span><i class=\"icon-external-link\"></i></a> prior to classifying it as a new issue.</li>\n<li>The vulnerability must demonstrate security impact, either implicitly or explicitly. You must be available for further clarification, detail requests from our security team and developers. See <strong>Report Eligibility</strong> section.</li>\n<li>You must not publicly disclose the vulnerability, nor privately to another third party, prior to the report being resolved in a reasonable manner, in compliance with the process described in the <a href=\"https://www.hackerone.com/disclosure-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>HackerOne Vulnerability Disclosure Guidelines</span><i class=\"icon-external-link\"></i></a> and terms in this document. As an exception to this rule, you may disclose it to Oracle and Percona security contacts.  If you prefer not to do it and we discover that other MySQL variants are affected, we will notify them on your behalf.</li>\n<li>Share the security issue with us in detail; See <strong>Bug Report</strong> section.</li>\n<li>You agree with the public disclosure of any valid security issue reported to us pending resolution.</li>\n<li>Submitter must not be the author of the vulnerable code nor otherwise involved in its contribution to the MariaDB project (such as by providing code/PR/merge reviews). Employees of the Foundation and its subsidiaries, affiliate companies are ineligible.</li>\n<li>Act in good faith to avoid privacy violations, destruction of data, and interruption or degradation of services (including denial of service) for us and our users at large and comply with all applicable laws.</li>\n<li>You must agree and comply to our stated Policy and implicit HackerOne program rules.</li>\n</ul>\n\n<h3 id=\"rules-for-us\">Rules For Us</h3>\n\n<ul>\n<li>We will respond as quickly as possible to your initial submission.</li>\n<li>Pending our ability to reproduce your findings, we will evaluate the severity of the report, affected products and releases and get back to you with our dissemination.</li>\n<li>We will coordinate together towards fashioning a reasonable vulnerability fix timeline that is knowledgeable and respectful of all parties affected by the issue.</li>\n<li>We will notify other MySQL variants on your behalf if we determine that they are also affected by the vulnerability.</li>\n<li>We will draft a security advisory, public announcement, and urge users to upgrade accordingly. At this stage you will also receive public recognition (at your discretion).</li>\n<li>We will commit to post-resolution future-proofing mitigation activities, such as identification of the original cause of the defect that made this possible in the first place, creating test suites and pro-actively looking for further similar class vulnerabilities that we can readily identify via our Continuous Integration and Testing platform.</li>\n<li>We will keep you updated as we work throughout this entire process. You can be part of this at all stages.</li>\n</ul>\n\n<h2 id=\"bug-report\">Bug Report</h2>\n\n<p>A good vulnerability bug report should include at least the following information:</p>\n\n<ul>\n<li>The environment (operating system, hardware and MariaDB version, including plugins and storage engines).</li>\n<li>Code affected, along with your explanation of the faulty behavior.</li>\n<li>Configuration, SQL tables, queries, network actions required to reproduce the behavior.</li>\n<li>Core dumps, stack-traces, error logs, data dumps, failed test cases or network packets required to diagnose or reproduce the attack.</li>\n<li>Proof of Concept (PoC) code that successfully triggers/exploits the vulnerability in at least one given scenario.</li>\n</ul>\n\n<p>In gist, vulnerability reports need to be documented in a way that they can be reproduced, easily understood and classified by our developers without duplicating everything you did already from scratch. The more details you send in, the easier it is for our developers to rely on the effort already put in by you and act faster. Send screen-shots, code, video; whatever helps to understand the flaw as quickly as possible.</p>\n\n<p>For details on how to submit a comprehensive bug report that&#39;s specifically tailored to MariaDB see <a href=\"https://mariadb.com/kb/en/library/mariadb-community-bug-reporting/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Bug Reporting</span><i class=\"icon-external-link\"></i></a> in our Knowledge Base.</p>\n\n<h2 id=\"report-eligibility\">Report Eligibility</h2>\n\n<p>Due to the nature of our client-server protocol, replication technologies, plugin system, and overall architecture of MariaDB sever and deployment specifics, there are a variety of forms that a security vulnerability can take, so in order to simplify our classification of reports for eligibility, we try and base our evaluations on a combination of risk, impact, exposure and common sense to evaluate severity for a particular vulnerability report and the threat posed to users. It is considered a good practice to assess any particular vulnerability using the Common Vulnerability Scoring System <a href=\"https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>CVSS3</span><i class=\"icon-external-link\"></i></a> standard in order to easily come up with a metric that can be easily understood and shared by many in the industry.</p>\n\n<p>Unless otherwise stated by the MariaDB security team, pending completion of report evaluation and analysis, we currently consider this classification for qualifying vulnerabilities:</p>\n\n<h3 id=\"in-scope\">In Scope</h3>\n\n<p>Security vulnerabilities in active development branches and released versions that are still in the <a href=\"https://mariadb.org/about/maintenance-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>supported timeline</span><i class=\"icon-external-link\"></i></a>, such as:</p>\n\n<ul>\n<li>Gaining unauthorized remote code execution on the server, slave or client machine (i.e. RCE).</li>\n<li>Database authentication bypass, privilege escalation and other access control bypass attacks.</li>\n<li>Data corruption attacks that affect the integrity of the database without authentication or privileges to do that normally.</li>\n<li>Data exfiltration attacks that affect the confidentiality of the database without authorization to do that normally.</li>\n<li>Denial of Service (DoS) attacks that permanently corrupt the server state or configuration, preventing the user from easily restarting the service, thus resulting in total loss of availability.</li>\n<li>Vulnerabilities in clients or connectors (only those, available from <a title=\"https://downloads.mariadb.org/\" href=\"https://downloads.mariadb.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://downloads.mariadb.org/</span><i class=\"icon-external-link\"></i></a>).</li>\n</ul>\n\n<h3 id=\"limited-scope\">Limited Scope</h3>\n\n<p>Vulnerabilities that don&#39;t lead to a severe compromise of the server, data and information leakage or privilege escalation, but do affect normal operation, up-time and service reliability are considered of limited scope:</p>\n\n<ul>\n<li>Denial of Service (DoS) attacks that crash the server, without inflicting a permanent damage.</li>\n</ul>\n\n<p>In addition to the main product offerings of MariaDB, we are also considering critical security issues in our website, support, development, testing and release infrastructure that could potentially affect end users of MariaDB server as part of this policy and in limited scope. Examples could be server side attacls that lead to binary release distribution integrity corruption or web attacks that could lead to serious compromise of our infrastructure, such as:</p>\n\n<ul>\n<li>Cross Site Scripting (XSS)</li>\n<li>Cross Site Request Forgery (CSRF)</li>\n<li>Server Side Request Forgery (SSRF)</li>\n<li>Remote Code Execution (RCE)</li>\n<li>SQL Injection (SQLi)</li>\n</ul>\n\n<p>Please, note, MariaDB Foundation is a non-profit organization with limited resources and while we do our best to keep everything up to date and secure, there&#39;s still the chance that some underused service, daemon or forgotten installation might gradually slide down the path of irrelevance and obsoleteness and thus, potentially expose use to attacks. If you happen to find such problems in our infrastructure, please notify us first. We will be grateful and acknowledge you with thanks on HackerOne at least.</p>\n\n<p>Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder or the Foundation. Engaging in a full-blown penetration test of our infrastructure and live systems without a prior agreement from the Foundation is especially prohibited. If you&#39;re planning to look for vulnerabilities in our infrastructure, we&#39;d like to ask you to refrain from: </p>\n\n<ul>\n<li>Denial of service </li>\n<li>Spamming </li>\n<li>Social engineering (including phishing) of MariaDB staff or contractors </li>\n<li>Any physical attempts against MariaDB property or data centers </li>\n<li>Automated scans and evaluations that can impair the functionality of our services </li>\n</ul>\n\n<h3 id=\"out-of-scope\">Out of Scope</h3>\n\n<ul>\n<li>Vulnerabilities in old, unmaintained versions of MariaDB.</li>\n<li>Vulnerabilities that have already been submitted by another user and/or that we are already aware of.</li>\n<li>Vulnerabilities in third-party modules, connectors, and clients that are not available from <a title=\"https://downloads.mariadb.org/\" href=\"https://downloads.mariadb.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://downloads.mariadb.org/</span><i class=\"icon-external-link\"></i></a>.</li>\n<li>Note that this Hacker One program is run the MariaDB Foundation. <strong>Any issues related to the MariaDB Corporation (mariadb.com) are out of scope.</strong>\n</li>\n</ul>\n\n<p>If you&#39;re in doubt, feel free to report it anyway or e-mail us at <a title=\"security@mariadb.org\" href=\"mailto:security@mariadb.org\" rel=\"nofollow noopener noreferrer\">security@mariadb.org</a>.</p>\n\n<h3 id=\"severity\">Severity</h3>\n\n<p>The MariaDB Server developers classify all security vulnerabilities according to their threat level and thus handle them with the appropriate consideration. The threat level can be one of:</p>\n\n<ul>\n<li>\n<strong>CRITICAL</strong>: an exploitable vulnerability that causes arbitrary code execution or allows an unauthenticated user to crash the server or get access to the data.</li>\n<li>\n<strong>MEDIUM</strong>: everything else.</li>\n</ul>\n\n<p>We promise to fix any CRITICAL security vulnerability immediately, usually within hours, and release fixed MariaDB binaries as soon as possible, usually the next day.</p>\n\n<p>We will fix MEDIUM security vulnerability as soon as possible, but we will not change our planned release schedule to get the fix out earlier.</p>\n\n<h3 id=\"see-also\">See also</h3>\n\n<p>The MariaDB Foundation security policy at <a title=\"https://mariadb.org/about/security-policy/\" href=\"https://mariadb.org/about/security-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>https://mariadb.org/about/security-policy/</span><i class=\"icon-external-link\"></i></a></p>\n\n<h4 id=\"thank-you-for-helping-keep-mariadb-and-our-users-safe\">Thank you for helping keep MariaDB and our users safe!</h4>\n", 
    "show_mean_first_response_time": true, 
    "can_invite_team_member": false, 
    "researcher_count": 7, 
    "can_view_insights": true, 
    "show_mean_report_triage_time": true, 
    "top_bounty_upper_range": null, 
    "name": "MariaDB", 
    "submission_state": "open", 
    "url": "https://hackerone.com/mariadb", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": 54000, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}