{
    "twitter_handle": "grabsg", 
    "can_manage_team_member_groups": false, 
    "allowed_to_use_saml_in_sandbox": false, 
    "show_mean_resolution_time": false, 
    "policy_html": "<p>Security is a top priority at Grab. We believe that no technology is perfect and that working with skilled security researchers across the globe is crucial in identifying weaknesses in our technology. If you believe you&#39;ve found a security bug in our service, we are happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery. </p>\n\n<h1 id=\"coordinated-disclosure-rules\">Coordinated disclosure rules</h1>\n\n<hr>\n\n<p>Please let us know as soon as possible upon discovery of a potential security issue, and we\u2019ll make every effort to quickly correct the issue. Provide us a reasonable amount of time to fix the issue before publishing it elsewhere. </p>\n\n<p>Making a good faith effort to not leak, manipulate, or destroy any user data. Please only test against accounts you own yourself or with explicit permission of the account holder. Please refrain from automated/scripted account creation. </p>\n\n<h1 id=\"bounty-eligibility\">Bounty eligibility</h1>\n\n<hr>\n\n<p>GrabTaxi reserves the right to decide if the minimum severity threshold is met and whether it was previously reported. To qualify for a reward under this program, you should: </p>\n\n<ol>\n<li>Be the first to report a specific vulnerability. </li>\n<li>Send a clear textual description of the report along with steps to reproduce the vulnerability. Include attachments such as screenshots or proof of concept code as necessary. </li>\n<li>Disclose the vulnerability report directly and exclusively to us. Public disclosure or disclosure to other third parties -- including vulnerability brokers -- before we addressed your report will forfeit the reward. </li>\n</ol>\n\n<h1 id=\"rewards\">Rewards</h1>\n\n<hr>\n\n<p>Our rewards are impact-based. This means, for example, that we will issue a relatively high reward for a vulnerability that has the potential to leak sensitive user data, but that we will issue little to no reward for a vulnerability that allows an attacker to deface a microsite. When we have our reward meetings, we always ask one question: If a malicious attacker abuses this, how bad off are we? We assume the worst and pay out the bug accordingly. </p>\n\n<p>If we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue. We don&#39;t want to encourage people spamming us with vague issues in an attempt to be first. </p>\n\n<p>If a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability. For example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove the plugin, this will receive a single bounty, determined, as always, by impact. </p>\n\n<p>The payout ranges on this page are guidelines to express roughly how we think about the severity of classes of issues. They are not exact rules. There can be attributes of bugs that make them more or less severe, which will affect the payout. For example, if a vulnerability affects only a small population of users, it will likely receive a lower reward than a similar vulnerability that affects a larger population of users. </p>\n\n<p>At the end of the day, all reward amounts are at our discretion, but we aim to be fair. Some researchers won&#39;t agree with some of our decisions, but we&#39;re paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous. We will adapt as the program continues. </p>\n\n<h1 id=\"rewards-payout-range\">Rewards Payout Range</h1>\n\n<hr>\n\n<p>The amounts listed here are the maximum we can pay for issues based on these severities. Purpose of this is provide you an idea of how we think about rewarding issues, at the end it all comes down to the underlying impact but at our discretion </p>\n\n<ul>\n<li><p><strong>Critical Security Issues ($5,000 - $10,000):</strong> Command injection, deserialisation bugs, sandbox escapes, remote code execution on a production server. Exposure of personally identifiable information (PII) customer IC numbers, driver images, licence numbers, location information or payment card information (PCI) like credit card numbers, bank account numbers etc. Potential access to source code or server-side request forgery (SSRF) </p></li>\n<li><p><strong>High Security Issues ($1,000 - $2,000):</strong> Restricted or limited account takeover, vertical/horizontal privilege escalations, authorization checks allowing bypassing fraudulent transactions and/or leading to the exposure of personally Identifiable Information (PII) </p></li>\n<li><p><strong>Medium Security Issues ($200 - $1,000):</strong> Stored/DOM Cross-site Scripting (XSS), most Cross-site Request Forgery (CSRF) issues, access control issues which do not expose PII but affect other accounts, some account validation bypasses (being able to change driver picture, etc). Any vulnerability which allows the bulk lookup of user enumeration </p></li>\n</ul>\n\n<h1 id=\"in-scope-vulnerability-classes\">In-Scope Vulnerability Classes</h1>\n\n<hr>\n\n<ul>\n<li>Cross-site Scripting (XSS) </li>\n<li>Cross-site Request Forgery </li>\n<li>Server-Side Request Forgery (SSRF) </li>\n<li>SQL Injection </li>\n<li>Server-side Remote Code Execution (RCE) </li>\n<li>XML External Entity Attacks (XXE)</li>\n<li>Access Control Issues (Insecure Direct Object Reference issues, etc) </li>\n<li>Directory Traversal Issues </li>\n<li>Local File Disclosure (LFD) </li>\n<li>Authorization Issues </li>\n</ul>\n\n<h1 id=\"out-of-scope-vulnerabiltiies\">Out-of-Scope Vulnerabiltiies</h1>\n\n<hr>\n\n<p>This section contains issues that are not accepted under this program, because they are malicious and/or because they have low security impact and will be immediately marked as invalid. </p>\n\n<h3 id=\"the-following-findings-are-specifically-excluded-from-the-bounty\">The following findings are specifically excluded from the bounty:</h3>\n\n<ul>\n<li>Descriptive error messages (e.g. Stack Traces, application or server errors) </li>\n<li>Open redirects. 99% of open redirects have low security impact. For the rare cases where the impact is higher, e.g., stealing auth tokens, we do still want to hear about them </li>\n<li>Publicly accessible login panels without proof of exploitation. </li>\n<li>Reports that state that software is out of date/vulnerable without a proof of concept. </li>\n<li>Host header</li>\n<li>Broken Links</li>\n<li>HTTP codes/pages or other HTTP non- codes/pages. </li>\n<li>Fingerprinting / banner disclosure on common/public services. </li>\n<li>Disclosure of known public files or directories, (e.g. robots.txt). </li>\n<li>Clickjacking/Tapjacking and issues only exploitable through clickjacking/tapjacking. </li>\n<li>CSV injection. Please see <a href=\"https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection\" rel=\"nofollow noopener noreferrer\"><span>this article</span><i class=\"icon-external-link\"></i></a>. </li>\n<li>Issues that require physical access to a victim\u2019s computer. </li>\n<li>CSRF in forms that are available to anonymous users (e.g. the contact form). </li>\n<li>Login &amp; Logout CSRF </li>\n<li>Path Disclosure</li>\n<li>WordPress username enumeration</li>\n<li>Most issues dealing with HTTP transmission.</li>\n<li>Presence of application or web browser \u2018autocomplete\u2019 or \u2018save password\u2019 functionality. </li>\n<li>Lack of Secure/HTTPOnly flags on non-security-sensitive Cookies. </li>\n<li>Lack of Security Speed bump when leaving the site. </li>\n<li>Weak Captcha / Captcha Bypass </li>\n<li>Login or Forgot Password page brute force and account lockout not enforced. </li>\n<li>OPTIONS HTTP method enabled </li>\n<li>Content injection issues. </li>\n<li>HTTPS Mixed Content Scripts </li>\n<li>Content Spoofing without embedded links/html </li>\n<li>Self-XSS that can not be used to exploit other users (this includes having a user paste JavaScript into the browser console). </li>\n<li>Reflected File Download (RFD). </li>\n<li>XSS issues that affect only outdated browsers (like Internet Explorer)</li>\n<li>Flashed based XSS (XSF)</li>\n<li>Best practices concerns. </li>\n<li>HTML Injection</li>\n<li>window.opener-related issues. </li>\n<li>Highly speculative reports about theoretical damage. Be concrete. </li>\n<li>\n<a href=\"https://www.owasp.org/index.php/List_of_useful_HTTP_headers\" rel=\"nofollow noopener noreferrer\"><span>Missing HTTP security headers</span><i class=\"icon-external-link\"></i></a>, specifically, For e.g. </li>\n<li>Strict-Transport-Security </li>\n<li>X-Frame-Options </li>\n<li>X-XSS-Protection </li>\n<li>X-Content-Type-Options </li>\n<li>Content-Security-Policy, X-Content-Security-Policy, X-WebKit-CSP </li>\n<li>Content-Security-Policy-Report-Only </li>\n<li>Infrastructure vulnerabilities, including: </li>\n<li>Certificates/TLS/SSL related issues </li>\n<li>DNS issues (i.e. mx records, SPF records, etc.) </li>\n<li>Server configuration issues (i.e., open ports, TLS, etc.) </li>\n<li>Most vulnerabilities within our sandbox, uat, or staging environments. </li>\n<li>Outdated web browsers: vulnerabilities contingent upon outdated or unpatched browsers will not be honoured, including Internet Explorer all versions </li>\n<li>Vulnerabilities involving active content such as web browser add-ons </li>\n<li>Physical or social engineering attempts (this includes phishing attacks against Grab employees). </li>\n<li>Recently disclosed 0day vulnerabilities. We need time to patch our systems just like everyone else - please give us two weeks before reporting these types of issues. </li>\n<li>Microsites with little to no user data </li>\n<li>Issues requiring user-interaction </li>\n<li>Outdated wordpress instances </li>\n<li>Most brute forcing issues </li>\n<li>Denial of service </li>\n<li>Spamming </li>\n</ul>\n\n<h1 id=\"out-of-scope-bugs-for-android-apps\">Out of Scope bugs for Android apps</h1>\n\n<hr>\n\n<ul>\n<li>Any URIs leaked because a malicious app has permission to view URIs opened </li>\n<li>Absence of certificate pinning </li>\n<li>Sensitive data in URLs/request bodies when protected by TLS </li>\n<li>User data stored unencrypted on external storage </li>\n<li>Lack of obfuscation is out of scope </li>\n<li>OAuth &amp; App secret hard-coded/recoverable in APK </li>\n<li>Crashes due to malformed Intents sent to exported Activity/Service/BroadcastReceiver (exploiting these for sensitive data leakage is commonly in scope) </li>\n<li>Any kind of sensitive data stored in app private directory </li>\n<li>Lack of binary protection control in android app </li>\n<li>Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) </li>\n</ul>\n\n<h1 id=\"out-of-scope-bugs-for-ios-apps\">Out of Scope bugs for iOS apps</h1>\n\n<hr>\n\n<ul>\n<li>Lack of Exploit mitigations i.e., PIE, ARC, or Stack Canaries </li>\n<li>Absence of certificate pinning </li>\n<li>Path disclosure in the binary </li>\n<li>User data stored unencrypted on the file system </li>\n<li>Lack of obfuscation is out of scope </li>\n<li>Lack of jailbreak detection is out of scope </li>\n<li>OAuth &amp; app secret hard-coded/recoverable in IPA </li>\n<li>Crashes due to malformed URL Schemes </li>\n<li>Lack of binary protection (anti-debugging) controls </li>\n<li>Snapshot/Pasteboard leakage </li>\n<li>Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) </li>\n</ul>\n\n<h1 id=\"exclusions\">Exclusions</h1>\n\n<hr>\n\n<ul>\n<li>Issues related to software not under Grab\u2019s control are out of scope. If you have found a vulnerability in systems managed externally, we can\u2019t make any guarantees about when we can fix those issues. </li>\n<li>We don\u2019t need help running automated vulnerability scanners. We\u2019ve got those covered. We need your brainpower, not your processing power. </li>\n<li>Newly acquired sites are subject to a twelve-month blackout period. Bugs reported sooner are certainly appreciated but won&#39;t qualify for rewards.</li>\n</ul>\n", 
    "facebook_team": false, 
    "can_view_private_program_application_requirement": false, 
    "show_mean_bounty_time": true, 
    "total_bounties_paid_prefix": null, 
    "awards_miles": false, 
    "average_bounty_upper_range": 250.0, 
    "top_bounty_lower_range": 2000.0, 
    "anc_enabled": true, 
    "offers_thanks": true, 
    "default_currency": "usd", 
    "show_average_bounty": true, 
    "can_edit_name_and_handle": false, 
    "last_policy_change_at": "2018-02-09T17:16:06.009Z", 
    "can_view_scope_versions": true, 
    "only_cleared_hackers": false, 
    "launched_publicly_at": "2017-07-12T02:47:47.420Z", 
    "bug_count": 295, 
    "mean_time_to_bounty": 612000, 
    "offers_swag": false, 
    "offers_bounties": true, 
    "id": 1659, 
    "mean_time_to_resolution": null, 
    "has_cover_video": false, 
    "profile_picture_urls": {
        "small": "https://profile-photos.hackerone-user-content.com/000/001/659/cd49729b3f289284664dc1cd67448e0f494e27f1_small.png?1470108305", 
        "large": "https://profile-photos.hackerone-user-content.com/000/001/659/de5dcd6816fe9e9304ecb180b7fc7e8d81e74152_large.png?1470108305", 
        "xtralarge": "https://profile-photos.hackerone-user-content.com/000/001/659/2ee28bf47b4f940ec5e458468efa2d9f662f6c5f_xtralarge.png?1470108305"
    }, 
    "show_response_efficiency_percentage": true, 
    "is_external_program": false, 
    "allows_disclosure_assistance": true, 
    "show_top_bounties": true, 
    "target_signal": 1, 
    "cover_photo_url": "/cover_photos/default/missing.png", 
    "can_view_policy_versions": true, 
    "profile": {
        "website": "https://www.grab.com", 
        "about": "Taxi. Car. Hitch. All in one app.", 
        "twitter_handle": "grabsg", 
        "name": "Grabtaxi Holdings Pte Ltd"
    }, 
    "scopes": [
        "*.grabtaxi.com", 
        "*.myteksi.com", 
        "*.myteksi.net", 
        "*.grab.co", 
        "*.grab.com", 
        "hub.grab.com", 
        "signup.grab.com", 
        "gamma.grab.co", 
        "drive.grab.co", 
        "manage.grab.co", 
        "parcel.grab.com", 
        "www.graballstars.com", 
        "www.drivegrab.com", 
        "p.grabtaxi.com"
    ], 
    "handle": "grab", 
    "cover_color": "#009D3B", 
    "mean_time_to_first_response": 10800, 
    "average_bounty_lower_range": 200.0, 
    "response_efficiency_percentage": 100, 
    "policy": "\r\nSecurity is a top priority at Grab. We believe that no technology is perfect and that working with skilled security researchers across the globe is crucial in identifying weaknesses in our technology. If you believe you've found a security bug in our service, we are happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery. \r\n\r\n# Coordinated disclosure rules \r\n--------------------- \r\n\r\nPlease let us know as soon as possible upon discovery of a potential security issue, and we\u2019ll make every effort to quickly correct the issue. Provide us a reasonable amount of time to fix the issue before publishing it elsewhere. \r\n\r\nMaking a good faith effort to not leak, manipulate, or destroy any user data. Please only test against accounts you own yourself or with explicit permission of the account holder. Please refrain from automated/scripted account creation. \r\n\r\n# Bounty eligibility \r\n--------------------- \r\n\r\nGrabTaxi reserves the right to decide if the minimum severity threshold is met and whether it was previously reported. To qualify for a reward under this program, you should: \r\n\r\n1. Be the first to report a specific vulnerability. \r\n2. Send a clear textual description of the report along with steps to reproduce the vulnerability. Include attachments such as screenshots or proof of concept code as necessary. \r\n3. Disclose the vulnerability report directly and exclusively to us. Public disclosure or disclosure to other third parties -- including vulnerability brokers -- before we addressed your report will forfeit the reward. \r\n\r\n\r\n# Rewards \r\n--------------------- \r\n\r\nOur rewards are impact-based. This means, for example, that we will issue a relatively high reward for a vulnerability that has the potential to leak sensitive user data, but that we will issue little to no reward for a vulnerability that allows an attacker to deface a microsite. When we have our reward meetings, we always ask one question: If a malicious attacker abuses this, how bad off are we? We assume the worst and pay out the bug accordingly. \r\n\r\nIf we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue. We don't want to encourage people spamming us with vague issues in an attempt to be first. \r\n\r\nIf a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability. For example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove the plugin, this will receive a single bounty, determined, as always, by impact. \r\n\r\nThe payout ranges on this page are guidelines to express roughly how we think about the severity of classes of issues. They are not exact rules. There can be attributes of bugs that make them more or less severe, which will affect the payout. For example, if a vulnerability affects only a small population of users, it will likely receive a lower reward than a similar vulnerability that affects a larger population of users. \r\n\r\nAt the end of the day, all reward amounts are at our discretion, but we aim to be fair. Some researchers won't agree with some of our decisions, but we're paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous. We will adapt as the program continues. \r\n\r\n# Rewards Payout Range \r\n--------------------- \r\nThe amounts listed here are the maximum we can pay for issues based on these severities. Purpose of this is provide you an idea of how we think about rewarding issues, at the end it all comes down to the underlying impact but at our discretion \r\n\r\n- **Critical Security Issues ($5,000 - $10,000):** Command injection, deserialisation bugs, sandbox escapes, remote code execution on a production server. Exposure of personally identifiable information (PII) customer IC numbers, driver images, licence numbers, location information or payment card information (PCI) like credit card numbers, bank account numbers etc. Potential access to source code or server-side request forgery (SSRF) \r\n\r\n- **High Security Issues ($1,000 - $2,000):** Restricted or limited account takeover, vertical/horizontal privilege escalations, authorization checks allowing bypassing fraudulent transactions and/or leading to the exposure of personally Identifiable Information (PII) \r\n\r\n- **Medium Security Issues ($200 - $1,000):** Stored/DOM Cross-site Scripting (XSS), most Cross-site Request Forgery (CSRF) issues, access control issues which do not expose PII but affect other accounts, some account validation bypasses (being able to change driver picture, etc). Any vulnerability which allows the bulk lookup of user enumeration \r\n\r\n# In-Scope Vulnerability Classes\r\n--------------------- \r\n- Cross-site Scripting (XSS) \r\n- Cross-site Request Forgery \r\n- Server-Side Request Forgery (SSRF) \r\n- SQL Injection \r\n- Server-side Remote Code Execution (RCE) \r\n- XML External Entity Attacks (XXE)\r\n- Access Control Issues (Insecure Direct Object Reference issues, etc) \r\n- Directory Traversal Issues \r\n- Local File Disclosure (LFD) \r\n- Authorization Issues \r\n\r\n# Out-of-Scope Vulnerabiltiies\r\n--------------------- \r\nThis section contains issues that are not accepted under this program, because they are malicious and/or because they have low security impact and will be immediately marked as invalid. \r\n\r\n### The following findings are specifically excluded from the bounty: \r\n- Descriptive error messages (e.g. Stack Traces, application or server errors) \r\n- Open redirects. 99% of open redirects have low security impact. For the rare cases where the impact is higher, e.g., stealing auth tokens, we do still want to hear about them \r\n- Publicly accessible login panels without proof of exploitation. \r\n- Reports that state that software is out of date/vulnerable without a proof of concept. \r\n- Host header\r\n- Broken Links\r\n- HTTP codes/pages or other HTTP non- codes/pages. \r\n- Fingerprinting / banner disclosure on common/public services. \r\n- Disclosure of known public files or directories, (e.g. robots.txt). \r\n- Clickjacking/Tapjacking and issues only exploitable through clickjacking/tapjacking. \r\n- CSV injection. Please see [this article](https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection). \r\n- Issues that require physical access to a victim\u2019s computer. \r\n- CSRF in forms that are available to anonymous users (e.g. the contact form). \r\n- Login & Logout CSRF \r\n- Path Disclosure\r\n- WordPress username enumeration\r\n- Most issues dealing with HTTP transmission.\r\n- Presence of application or web browser \u2018autocomplete\u2019 or \u2018save password\u2019 functionality. \r\n- Lack of Secure/HTTPOnly flags on non-security-sensitive Cookies. \r\n- Lack of Security Speed bump when leaving the site. \r\n- Weak Captcha / Captcha Bypass \r\n- Login or Forgot Password page brute force and account lockout not enforced. \r\n- OPTIONS HTTP method enabled \r\n- Content injection issues. \r\n- HTTPS Mixed Content Scripts \r\n- Content Spoofing without embedded links/html \r\n- Self-XSS that can not be used to exploit other users (this includes having a user paste JavaScript into the browser console). \r\n- Reflected File Download (RFD). \r\n- XSS issues that affect only outdated browsers (like Internet Explorer)\r\n- Flashed based XSS (XSF)\r\n- Best practices concerns. \r\n- HTML Injection\r\n- window.opener-related issues. \r\n- Highly speculative reports about theoretical damage. Be concrete. \r\n- [Missing HTTP security headers](https://www.owasp.org/index.php/List_of_useful_HTTP_headers), specifically, For e.g. \r\n* Strict-Transport-Security \r\n* X-Frame-Options \r\n* X-XSS-Protection \r\n* X-Content-Type-Options \r\n* Content-Security-Policy, X-Content-Security-Policy, X-WebKit-CSP \r\n* Content-Security-Policy-Report-Only \r\n- Infrastructure vulnerabilities, including: \r\n* Certificates/TLS/SSL related issues \r\n* DNS issues (i.e. mx records, SPF records, etc.) \r\n* Server configuration issues (i.e., open ports, TLS, etc.) \r\n- Most vulnerabilities within our sandbox, uat, or staging environments. \r\n- Outdated web browsers: vulnerabilities contingent upon outdated or unpatched browsers will not be honoured, including Internet Explorer all versions \r\n- Vulnerabilities involving active content such as web browser add-ons \r\n- Physical or social engineering attempts (this includes phishing attacks against Grab employees). \r\n- Recently disclosed 0day vulnerabilities. We need time to patch our systems just like everyone else - please give us two weeks before reporting these types of issues. \r\n- Microsites with little to no user data \r\n- Issues requiring user-interaction \r\n- Outdated wordpress instances \r\n- Most brute forcing issues \r\n- Denial of service \r\n- Spamming \r\n\r\n\r\n# Out of Scope bugs for Android apps\r\n--------------------- \r\n- Any URIs leaked because a malicious app has permission to view URIs opened \r\n- Absence of certificate pinning \r\n- Sensitive data in URLs/request bodies when protected by TLS \r\n- User data stored unencrypted on external storage \r\n- Lack of obfuscation is out of scope \r\n- OAuth & App secret hard-coded/recoverable in APK \r\n- Crashes due to malformed Intents sent to exported Activity/Service/BroadcastReceiver (exploiting these for sensitive data leakage is commonly in scope) \r\n- Any kind of sensitive data stored in app private directory \r\n- Lack of binary protection control in android app \r\n- Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) \r\n\r\n# Out of Scope bugs for iOS apps\r\n--------------------- \r\n- Lack of Exploit mitigations i.e., PIE, ARC, or Stack Canaries \r\n- Absence of certificate pinning \r\n- Path disclosure in the binary \r\n- User data stored unencrypted on the file system \r\n- Lack of obfuscation is out of scope \r\n- Lack of jailbreak detection is out of scope \r\n- OAuth & app secret hard-coded/recoverable in IPA \r\n- Crashes due to malformed URL Schemes \r\n- Lack of binary protection (anti-debugging) controls \r\n- Snapshot/Pasteboard leakage \r\n- Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) \r\n\r\n# Exclusions \r\n--------------------- \r\n- Issues related to software not under Grab\u2019s control are out of scope. If you have found a vulnerability in systems managed externally, we can\u2019t make any guarantees about when we can fix those issues. \r\n- We don\u2019t need help running automated vulnerability scanners. We\u2019ve got those covered. We need your brainpower, not your processing power. \r\n- Newly acquired sites are subject to a twelve-month blackout period. Bugs reported sooner are certainly appreciated but won't qualify for rewards.", 
    "can_view_hacktivity": true, 
    "base_bounty": 100, 
    "has_cover_photo": false, 
    "total_bounties_paid": 303276.0, 
    "policy_markdown": "<p>Security is a top priority at Grab. We believe that no technology is perfect and that working with skilled security researchers across the globe is crucial in identifying weaknesses in our technology. If you believe you&#39;ve found a security bug in our service, we are happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery. </p>\n\n<h1 id=\"coordinated-disclosure-rules\">Coordinated disclosure rules</h1>\n\n<hr>\n\n<p>Please let us know as soon as possible upon discovery of a potential security issue, and we\u2019ll make every effort to quickly correct the issue. Provide us a reasonable amount of time to fix the issue before publishing it elsewhere. </p>\n\n<p>Making a good faith effort to not leak, manipulate, or destroy any user data. Please only test against accounts you own yourself or with explicit permission of the account holder. Please refrain from automated/scripted account creation. </p>\n\n<h1 id=\"bounty-eligibility\">Bounty eligibility</h1>\n\n<hr>\n\n<p>GrabTaxi reserves the right to decide if the minimum severity threshold is met and whether it was previously reported. To qualify for a reward under this program, you should: </p>\n\n<ol>\n<li>Be the first to report a specific vulnerability. </li>\n<li>Send a clear textual description of the report along with steps to reproduce the vulnerability. Include attachments such as screenshots or proof of concept code as necessary. </li>\n<li>Disclose the vulnerability report directly and exclusively to us. Public disclosure or disclosure to other third parties -- including vulnerability brokers -- before we addressed your report will forfeit the reward. </li>\n</ol>\n\n<h1 id=\"rewards\">Rewards</h1>\n\n<hr>\n\n<p>Our rewards are impact-based. This means, for example, that we will issue a relatively high reward for a vulnerability that has the potential to leak sensitive user data, but that we will issue little to no reward for a vulnerability that allows an attacker to deface a microsite. When we have our reward meetings, we always ask one question: If a malicious attacker abuses this, how bad off are we? We assume the worst and pay out the bug accordingly. </p>\n\n<p>If we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue. We don&#39;t want to encourage people spamming us with vague issues in an attempt to be first. </p>\n\n<p>If a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability. For example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove the plugin, this will receive a single bounty, determined, as always, by impact. </p>\n\n<p>The payout ranges on this page are guidelines to express roughly how we think about the severity of classes of issues. They are not exact rules. There can be attributes of bugs that make them more or less severe, which will affect the payout. For example, if a vulnerability affects only a small population of users, it will likely receive a lower reward than a similar vulnerability that affects a larger population of users. </p>\n\n<p>At the end of the day, all reward amounts are at our discretion, but we aim to be fair. Some researchers won&#39;t agree with some of our decisions, but we&#39;re paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous. We will adapt as the program continues. </p>\n\n<h1 id=\"rewards-payout-range\">Rewards Payout Range</h1>\n\n<hr>\n\n<p>The amounts listed here are the maximum we can pay for issues based on these severities. Purpose of this is provide you an idea of how we think about rewarding issues, at the end it all comes down to the underlying impact but at our discretion </p>\n\n<ul>\n<li><p><strong>Critical Security Issues ($5,000 - $10,000):</strong> Command injection, deserialisation bugs, sandbox escapes, remote code execution on a production server. Exposure of personally identifiable information (PII) customer IC numbers, driver images, licence numbers, location information or payment card information (PCI) like credit card numbers, bank account numbers etc. Potential access to source code or server-side request forgery (SSRF) </p></li>\n<li><p><strong>High Security Issues ($1,000 - $2,000):</strong> Restricted or limited account takeover, vertical/horizontal privilege escalations, authorization checks allowing bypassing fraudulent transactions and/or leading to the exposure of personally Identifiable Information (PII) </p></li>\n<li><p><strong>Medium Security Issues ($200 - $1,000):</strong> Stored/DOM Cross-site Scripting (XSS), most Cross-site Request Forgery (CSRF) issues, access control issues which do not expose PII but affect other accounts, some account validation bypasses (being able to change driver picture, etc). Any vulnerability which allows the bulk lookup of user enumeration </p></li>\n</ul>\n\n<h1 id=\"in-scope-vulnerability-classes\">In-Scope Vulnerability Classes</h1>\n\n<hr>\n\n<ul>\n<li>Cross-site Scripting (XSS) </li>\n<li>Cross-site Request Forgery </li>\n<li>Server-Side Request Forgery (SSRF) </li>\n<li>SQL Injection </li>\n<li>Server-side Remote Code Execution (RCE) </li>\n<li>XML External Entity Attacks (XXE)</li>\n<li>Access Control Issues (Insecure Direct Object Reference issues, etc) </li>\n<li>Directory Traversal Issues </li>\n<li>Local File Disclosure (LFD) </li>\n<li>Authorization Issues </li>\n</ul>\n\n<h1 id=\"out-of-scope-vulnerabiltiies\">Out-of-Scope Vulnerabiltiies</h1>\n\n<hr>\n\n<p>This section contains issues that are not accepted under this program, because they are malicious and/or because they have low security impact and will be immediately marked as invalid. </p>\n\n<h3 id=\"the-following-findings-are-specifically-excluded-from-the-bounty\">The following findings are specifically excluded from the bounty:</h3>\n\n<ul>\n<li>Descriptive error messages (e.g. Stack Traces, application or server errors) </li>\n<li>Open redirects. 99% of open redirects have low security impact. For the rare cases where the impact is higher, e.g., stealing auth tokens, we do still want to hear about them </li>\n<li>Publicly accessible login panels without proof of exploitation. </li>\n<li>Reports that state that software is out of date/vulnerable without a proof of concept. </li>\n<li>Host header</li>\n<li>Broken Links</li>\n<li>HTTP codes/pages or other HTTP non- codes/pages. </li>\n<li>Fingerprinting / banner disclosure on common/public services. </li>\n<li>Disclosure of known public files or directories, (e.g. robots.txt). </li>\n<li>Clickjacking/Tapjacking and issues only exploitable through clickjacking/tapjacking. </li>\n<li>CSV injection. Please see <a href=\"https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>this article</span><i class=\"icon-external-link\"></i></a>. </li>\n<li>Issues that require physical access to a victim\u2019s computer. </li>\n<li>CSRF in forms that are available to anonymous users (e.g. the contact form). </li>\n<li>Login &amp; Logout CSRF </li>\n<li>Path Disclosure</li>\n<li>WordPress username enumeration</li>\n<li>Most issues dealing with HTTP transmission.</li>\n<li>Presence of application or web browser \u2018autocomplete\u2019 or \u2018save password\u2019 functionality. </li>\n<li>Lack of Secure/HTTPOnly flags on non-security-sensitive Cookies. </li>\n<li>Lack of Security Speed bump when leaving the site. </li>\n<li>Weak Captcha / Captcha Bypass </li>\n<li>Login or Forgot Password page brute force and account lockout not enforced. </li>\n<li>OPTIONS HTTP method enabled </li>\n<li>Content injection issues. </li>\n<li>HTTPS Mixed Content Scripts </li>\n<li>Content Spoofing without embedded links/html </li>\n<li>Self-XSS that can not be used to exploit other users (this includes having a user paste JavaScript into the browser console). </li>\n<li>Reflected File Download (RFD). </li>\n<li>XSS issues that affect only outdated browsers (like Internet Explorer)</li>\n<li>Flashed based XSS (XSF)</li>\n<li>Best practices concerns. </li>\n<li>HTML Injection</li>\n<li>window.opener-related issues. </li>\n<li>Highly speculative reports about theoretical damage. Be concrete. </li>\n<li>\n<a href=\"https://www.owasp.org/index.php/List_of_useful_HTTP_headers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span>Missing HTTP security headers</span><i class=\"icon-external-link\"></i></a>, specifically, For e.g. </li>\n<li>Strict-Transport-Security </li>\n<li>X-Frame-Options </li>\n<li>X-XSS-Protection </li>\n<li>X-Content-Type-Options </li>\n<li>Content-Security-Policy, X-Content-Security-Policy, X-WebKit-CSP </li>\n<li>Content-Security-Policy-Report-Only </li>\n<li>Infrastructure vulnerabilities, including: </li>\n<li>Certificates/TLS/SSL related issues </li>\n<li>DNS issues (i.e. mx records, SPF records, etc.) </li>\n<li>Server configuration issues (i.e., open ports, TLS, etc.) </li>\n<li>Most vulnerabilities within our sandbox, uat, or staging environments. </li>\n<li>Outdated web browsers: vulnerabilities contingent upon outdated or unpatched browsers will not be honoured, including Internet Explorer all versions </li>\n<li>Vulnerabilities involving active content such as web browser add-ons </li>\n<li>Physical or social engineering attempts (this includes phishing attacks against Grab employees). </li>\n<li>Recently disclosed 0day vulnerabilities. We need time to patch our systems just like everyone else - please give us two weeks before reporting these types of issues. </li>\n<li>Microsites with little to no user data </li>\n<li>Issues requiring user-interaction </li>\n<li>Outdated wordpress instances </li>\n<li>Most brute forcing issues </li>\n<li>Denial of service </li>\n<li>Spamming </li>\n</ul>\n\n<h1 id=\"out-of-scope-bugs-for-android-apps\">Out of Scope bugs for Android apps</h1>\n\n<hr>\n\n<ul>\n<li>Any URIs leaked because a malicious app has permission to view URIs opened </li>\n<li>Absence of certificate pinning </li>\n<li>Sensitive data in URLs/request bodies when protected by TLS </li>\n<li>User data stored unencrypted on external storage </li>\n<li>Lack of obfuscation is out of scope </li>\n<li>OAuth &amp; App secret hard-coded/recoverable in APK </li>\n<li>Crashes due to malformed Intents sent to exported Activity/Service/BroadcastReceiver (exploiting these for sensitive data leakage is commonly in scope) </li>\n<li>Any kind of sensitive data stored in app private directory </li>\n<li>Lack of binary protection control in android app </li>\n<li>Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) </li>\n</ul>\n\n<h1 id=\"out-of-scope-bugs-for-ios-apps\">Out of Scope bugs for iOS apps</h1>\n\n<hr>\n\n<ul>\n<li>Lack of Exploit mitigations i.e., PIE, ARC, or Stack Canaries </li>\n<li>Absence of certificate pinning </li>\n<li>Path disclosure in the binary </li>\n<li>User data stored unencrypted on the file system </li>\n<li>Lack of obfuscation is out of scope </li>\n<li>Lack of jailbreak detection is out of scope </li>\n<li>OAuth &amp; app secret hard-coded/recoverable in IPA </li>\n<li>Crashes due to malformed URL Schemes </li>\n<li>Lack of binary protection (anti-debugging) controls </li>\n<li>Snapshot/Pasteboard leakage </li>\n<li>Runtime hacking exploits using tools like but not limited to Frida/ Appmon (exploits only possible in a jailbroken environment) </li>\n</ul>\n\n<h1 id=\"exclusions\">Exclusions</h1>\n\n<hr>\n\n<ul>\n<li>Issues related to software not under Grab\u2019s control are out of scope. If you have found a vulnerability in systems managed externally, we can\u2019t make any guarantees about when we can fix those issues. </li>\n<li>We don\u2019t need help running automated vulnerability scanners. We\u2019ve got those covered. We need your brainpower, not your processing power. </li>\n<li>Newly acquired sites are subject to a twelve-month blackout period. Bugs reported sooner are certainly appreciated but won&#39;t qualify for rewards.</li>\n</ul>\n", 
    "show_mean_first_response_time": true, 
    "show_total_bounties_paid": true, 
    "can_invite_team_member": false, 
    "researcher_count": 171, 
    "number_of_updates": 1, 
    "show_mean_report_triage_time": true, 
    "top_bounty_upper_range": 10000.0, 
    "name": "Grabtaxi Holdings Pte Ltd", 
    "submission_state": "open", 
    "url": "https://hackerone.com/grab", 
    "ibb": false, 
    "rejecting_submissions": false, 
    "can_manage_credentials": false, 
    "can_subscribe_to_policy_changes": true, 
    "vpn_enabled": null, 
    "can_edit_profile": false, 
    "response_efficiency_indicator": "ok", 
    "mean_time_to_triage": 50400, 
    "show_challenge_policy": false, 
    "can_view_team_updates": true, 
    "external_url": null
}